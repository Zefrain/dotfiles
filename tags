!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
""Y	conf/vim/.vim/plugged/vim-operator-user/t/register-designations.vim	/^    normal! ""Y$/;"	m
"spacemacs-theme"	conf/emacs/.emacs.d/core/libs/spacemacs-theme/spacemacs-theme-pkg.el	/^(define-package "spacemacs-theme" "0.2" "Color theme with a dark and light versions" 'nil :url "https:\/\/github.com\/nashamri\/spacemacs-theme" :keywords '("color" "theme"))$/;"	f
$FZF_DEFAULT_COMMAND	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^    let $FZF_DEFAULT_COMMAND = command$/;"	v
$FZF_DEFAULT_COMMAND	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^    let $FZF_DEFAULT_COMMAND = prev_default_command$/;"	v
$GOPATH	conf/vim/.vim/plugged/vim-go/scripts/runtest.vim	/^  let $GOPATH = s:gopath$/;"	v
$NODE_CLIENT_LOG_FILE	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^    let $NODE_CLIENT_LOG_FILE = s:logfile$/;"	v
$NODE_CLIENT_LOG_LEVEL	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^  let $NODE_CLIENT_LOG_LEVEL = 'debug'$/;"	v
$RUNBENCH_SETTINGS	conf/vim/.vim/plugged/vim-go/scripts/runbench.vim	/^  let $RUNBENCH_SETTINGS = join(['array_whitespace_error', 'build_constraints',$/;"	v
-follow-imports	conf/vim/.vim/plugged/deoplete.nvim/Makefile	/^	mypy --ignore-missing-imports --follow-imports=skip --strict rplugin\/python3\/deoplete$/;"	m
1-window-frames-on	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-fns.el	/^(defun 1-window-frames-on (buffer)$/;"	f
1on1-minibuffer-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defvar 1on1-minibuffer-frame)          ; In `oneonone.el'$/;"	f
2G	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^  normal! 2G$/;"	m
<C-@><C-@>c	conf/vim/.vim/custom/cscope_maps.vim	/^    nmap <C-@><C-@>c :vert scs find c <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-@><C-@>d	conf/vim/.vim/custom/cscope_maps.vim	/^    nmap <C-@><C-@>d :vert scs find d <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-@><C-@>e	conf/vim/.vim/custom/cscope_maps.vim	/^    nmap <C-@><C-@>e :vert scs find e <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-@><C-@>f	conf/vim/.vim/custom/cscope_maps.vim	/^    nmap <C-@><C-@>f :vert scs find f <C-R>=expand("<cfile>")<CR><CR>	$/;"	m
<C-@><C-@>g	conf/vim/.vim/custom/cscope_maps.vim	/^    nmap <C-@><C-@>g :vert scs find g <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-@><C-@>i	conf/vim/.vim/custom/cscope_maps.vim	/^    nmap <C-@><C-@>i :vert scs find i ^<C-R>=expand("<cfile>")<CR>$<CR>	$/;"	m
<C-@><C-@>s	conf/vim/.vim/custom/cscope_maps.vim	/^    nmap <C-@><C-@>s :vert scs find s <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-@><C-@>t	conf/vim/.vim/custom/cscope_maps.vim	/^    nmap <C-@><C-@>t :vert scs find t <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-@>c	conf/vim/.vim/custom/cscope_maps.vim	/^    nmap <C-@>c :scs find c <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-@>d	conf/vim/.vim/custom/cscope_maps.vim	/^    nmap <C-@>d :scs find d <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-@>e	conf/vim/.vim/custom/cscope_maps.vim	/^    nmap <C-@>e :scs find e <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-@>f	conf/vim/.vim/custom/cscope_maps.vim	/^    nmap <C-@>f :scs find f <C-R>=expand("<cfile>")<CR><CR>	$/;"	m
<C-@>g	conf/vim/.vim/custom/cscope_maps.vim	/^    nmap <C-@>g :scs find g <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-@>i	conf/vim/.vim/custom/cscope_maps.vim	/^    nmap <C-@>i :scs find i ^<C-R>=expand("<cfile>")<CR>$<CR>	$/;"	m
<C-@>s	conf/vim/.vim/custom/cscope_maps.vim	/^    nmap <C-@>s :scs find s <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-@>t	conf/vim/.vim/custom/cscope_maps.vim	/^    nmap <C-@>t :scs find t <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-K>	conf/vim/.vim/custom/keymaps.vim	/^imap <C-K> <Plug>(operator-clang-format)$/;"	m
<C-K>	conf/vim/.vim/custom/keymaps.vim	/^map <C-K> <Plug>(operator-clang-format)$/;"	m
<C-LeftMouse>	conf/vim/.vim/plugged/vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-LeftMouse> <LeftMouse>:GoDef<cr>$/;"	m
<C-\>c	conf/vim/.vim/custom/cscope_maps.vim	/^    nmap <C-\\>c :cs find c <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-\>d	conf/vim/.vim/custom/cscope_maps.vim	/^    nmap <C-\\>d :cs find d <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-\>e	conf/vim/.vim/custom/cscope_maps.vim	/^    nmap <C-\\>e :cs find e <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-\>f	conf/vim/.vim/custom/cscope_maps.vim	/^    nmap <C-\\>f :cs find f <C-R>=expand("<cfile>")<CR><CR>	$/;"	m
<C-\>g	conf/vim/.vim/custom/cscope_maps.vim	/^    nmap <C-\\>g :cs find g <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-\>i	conf/vim/.vim/custom/cscope_maps.vim	/^    nmap <C-\\>i :cs find i ^<C-R>=expand("<cfile>")<CR>$<CR>$/;"	m
<C-\>s	conf/vim/.vim/custom/cscope_maps.vim	/^    nmap <C-\\>s :cs find s <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-\>t	conf/vim/.vim/custom/cscope_maps.vim	/^    nmap <C-\\>t :cs find t <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-]>	conf/vim/.vim/plugged/vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-]> :GoDef<cr>$/;"	m
<C-e>	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^  inoremap <silent><expr> <C-e> coc#pum#visible() ? coc#pum#cancel() : "\\<C-e>"$/;"	m
<C-f>	conf/vim/.vim/custom/keymaps.vim	/^nnoremap <C-f> :NERDTreeFind<CR>$/;"	m
<C-n>	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^  inoremap <silent><expr> <C-n> coc#pum#visible() ? coc#pum#next(1) : "\\<C-n>"$/;"	m
<C-p>	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^  inoremap <silent><expr> <C-p> coc#pum#visible() ? coc#pum#prev(1) : "\\<C-p>"$/;"	m
<C-s>	conf/vim/.vim/custom/coc.vim	/^nmap <silent> <C-s> <Plug>(coc-range-select)$/;"	m
<C-s>	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nmap <silent> <C-s> <Plug>(coc-range-select)$/;"	m
<C-t>	conf/vim/.vim/plugged/vim-go/ftplugin/go.vim	/^    nnoremap <buffer> <silent> <C-t> :<C-U>call go#def#StackPop(v:count1)<cr>$/;"	m
<C-w><C-]>	conf/vim/.vim/plugged/vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-w><C-]> :<C-u>call go#def#Jump("split", 0)<CR>$/;"	m
<C-w>]	conf/vim/.vim/plugged/vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> <C-w>] :<C-u>call go#def#Jump("split", 0)<CR>$/;"	m
<C-y>	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^  inoremap <silent><expr> <C-y> coc#pum#visible() ? coc#pum#confirm() : "\\<C-y>"$/;"	m
<CR>	conf/vim/.vim/custom/coc.vim	/^inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm()$/;"	m
<CR>	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm()$/;"	m
<Leader>C	conf/vim/.vim/custom/keymaps.vim	/^nmap <Leader>C :ClangFormatAutoToggle<CR>$/;"	m
<Leader>f	conf/vim/.vim/custom/coc.vim	/^nmap <Leader>f [fzf-p]$/;"	m
<PageDown>	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^  inoremap <silent><expr> <PageDown> coc#pum#visible() ? coc#pum#scroll(1) : "\\<PageDown>"$/;"	m
<PageUp>	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^  inoremap <silent><expr> <PageUp> coc#pum#visible() ? coc#pum#scroll(0) : "\\<PageUp>"$/;"	m
<Plug>(-fzf-complete-finish)	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^inoremap <silent> <Plug>(-fzf-complete-finish) <c-o>l$/;"	m
<Plug>(-fzf-complete-finish)	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <silent> <Plug>(-fzf-complete-finish) a$/;"	m
<Plug>(-fzf-complete-trigger)	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^inoremap <silent> <Plug>(-fzf-complete-trigger) <c-o>:call <sid>complete_trigger()<cr>$/;"	m
<Plug>(GitGutterNextHunk)	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>(GitGutterNextHunk) &diff ? ']c' : ":\\<C-U>execute v:count1 . 'GitGutterNextHunk'\\<CR>"$/;"	m
<Plug>(GitGutterPrevHunk)	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>(GitGutterPrevHunk) &diff ? '[c' : ":\\<C-U>execute v:count1 . 'GitGutterPrevHunk'\\<CR>"$/;"	m
<Plug>(GitGutterPreviewHunk)	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>(GitGutterPreviewHunk) :GitGutterPreviewHunk<CR>$/;"	m
<Plug>(GitGutterStageHunk)	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>(GitGutterStageHunk)   :GitGutterStageHunk<CR>$/;"	m
<Plug>(GitGutterTextObjectInnerPending)	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^onoremap <silent> <Plug>(GitGutterTextObjectInnerPending) :<C-U>call gitgutter#hunk#text_object(1)<CR>$/;"	m
<Plug>(GitGutterTextObjectOuterPending)	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^onoremap <silent> <Plug>(GitGutterTextObjectOuterPending) :<C-U>call gitgutter#hunk#text_object(0)<CR>$/;"	m
<Plug>(GitGutterUndoHunk)	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>(GitGutterUndoHunk)    :GitGutterUndoHunk<CR>$/;"	m
<Plug>(coc-classobj-a)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^onoremap <silent> <Plug>(coc-classobj-a)       :<C-U>call CocAction('selectSymbolRange', v:false, '', ['Interface', 'Struct', 'Class'])<CR>$/;"	m
<Plug>(coc-classobj-a)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-classobj-a)       :<C-U>call CocAction('selectSymbolRange', v:false, visualmode(), ['Interface', 'Struct', 'Class'])<CR>$/;"	m
<Plug>(coc-classobj-i)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^onoremap <silent> <Plug>(coc-classobj-i)       :<C-U>call CocAction('selectSymbolRange', v:true, '', ['Interface', 'Struct', 'Class'])<CR>$/;"	m
<Plug>(coc-classobj-i)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-classobj-i)       :<C-U>call CocAction('selectSymbolRange', v:true, visualmode(), ['Interface', 'Struct', 'Class'])<CR>$/;"	m
<Plug>(coc-codeaction)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction)                     :<C-u>call       CocActionAsync('codeAction', '')<CR>$/;"	m
<Plug>(coc-codeaction-cursor)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction-cursor)              :<C-u>call       CocActionAsync('codeAction', 'cursor')<CR>$/;"	m
<Plug>(coc-codeaction-line)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction-line)                :<C-u>call       CocActionAsync('codeAction', 'currline')<CR>$/;"	m
<Plug>(coc-codeaction-refactor)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction-refactor)            :<C-u>call       CocActionAsync('codeAction', 'cursor', ['refactor'], v:true)<CR>$/;"	m
<Plug>(coc-codeaction-refactor-selected)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction-refactor-selected)   :<C-u>set        operatorfunc=<SID>CodeActionRefactorFromSelected<CR>g@$/;"	m
<Plug>(coc-codeaction-refactor-selected)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <Plug>(coc-codeaction-refactor-selected)   :<C-u>call       CocActionAsync('codeAction', visualmode(), ['refactor'], v:true)<CR>$/;"	m
<Plug>(coc-codeaction-selected)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction-selected)            :<C-u>set        operatorfunc=<SID>CodeActionFromSelected<CR>g@$/;"	m
<Plug>(coc-codeaction-selected)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-codeaction-selected)   :<C-u>call       CocActionAsync('codeAction', visualmode())<CR>$/;"	m
<Plug>(coc-codeaction-source)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codeaction-source)              :<C-u>call       CocActionAsync('codeAction', '', ['source'], v:true)<CR>$/;"	m
<Plug>(coc-codelens-action)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-codelens-action)                :<C-u>call       CocActionAsync('codeLensAction')<CR>$/;"	m
<Plug>(coc-command-repeat)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-command-repeat)        :<C-u>call       CocAction('repeatCommand')<CR>$/;"	m
<Plug>(coc-cursors-operator)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-cursors-operator) :<C-u>set operatorfunc=<SID>CursorRangeFromSelected<CR>g@$/;"	m
<Plug>(coc-cursors-position)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-cursors-position) :<C-u>call CocAction('cursorsSelect', bufnr('%'), 'position', 'n')<CR>$/;"	m
<Plug>(coc-cursors-range)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-cursors-range)    :<C-u>call CocAction('cursorsSelect', bufnr('%'), 'range', visualmode())<CR>$/;"	m
<Plug>(coc-cursors-word)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-cursors-word)     :<C-u>call CocAction('cursorsSelect', bufnr('%'), 'word', 'n')<CR>$/;"	m
<Plug>(coc-declaration)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-declaration)           :<C-u>call       CocActionAsync('jumpDeclaration')<CR>$/;"	m
<Plug>(coc-definition)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-definition)            :<C-u>call       CocActionAsync('jumpDefinition')<CR>$/;"	m
<Plug>(coc-diagnostic-info)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-diagnostic-info)       :<C-u>call       CocActionAsync('diagnosticInfo')<CR>$/;"	m
<Plug>(coc-diagnostic-next)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-diagnostic-next)       :<C-u>call       CocActionAsync('diagnosticNext')<CR>$/;"	m
<Plug>(coc-diagnostic-next-error)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-diagnostic-next-error) :<C-u>call       CocActionAsync('diagnosticNext',     'error')<CR>$/;"	m
<Plug>(coc-diagnostic-prev)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-diagnostic-prev)       :<C-u>call       CocActionAsync('diagnosticPrevious')<CR>$/;"	m
<Plug>(coc-diagnostic-prev-error)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-diagnostic-prev-error) :<C-u>call       CocActionAsync('diagnosticPrevious', 'error')<CR>$/;"	m
<Plug>(coc-fix-current)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-fix-current)           :<C-u>call       CocActionAsync('doQuickfix')<CR>$/;"	m
<Plug>(coc-float-hide)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-float-hide)            :<C-u>call       coc#float#close_all()<CR>$/;"	m
<Plug>(coc-float-jump)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-float-jump)            :<c-u>call       coc#float#jump()<cr>$/;"	m
<Plug>(coc-format)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-format)                :<C-u>call       CocActionAsync('format')<CR>$/;"	m
<Plug>(coc-format-selected)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-format-selected)       :<C-u>set        operatorfunc=<SID>FormatFromSelected<CR>g@$/;"	m
<Plug>(coc-format-selected)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-format-selected)       :<C-u>call       CocActionAsync('formatSelected', visualmode())<CR>$/;"	m
<Plug>(coc-funcobj-a)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^onoremap <silent> <Plug>(coc-funcobj-a)        :<C-U>call CocAction('selectSymbolRange', v:false, '', ['Method', 'Function'])<CR>$/;"	m
<Plug>(coc-funcobj-a)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-funcobj-a)        :<C-U>call CocAction('selectSymbolRange', v:false, visualmode(), ['Method', 'Function'])<CR>$/;"	m
<Plug>(coc-funcobj-i)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^onoremap <silent> <Plug>(coc-funcobj-i)        :<C-U>call CocAction('selectSymbolRange', v:true, '', ['Method', 'Function'])<CR>$/;"	m
<Plug>(coc-funcobj-i)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-funcobj-i)        :<C-U>call CocAction('selectSymbolRange', v:true, visualmode(), ['Method', 'Function'])<CR>$/;"	m
<Plug>(coc-implementation)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-implementation)        :<C-u>call       CocActionAsync('jumpImplementation')<CR>$/;"	m
<Plug>(coc-openlink)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-openlink)              :<C-u>call       CocActionAsync('openLink')<CR>$/;"	m
<Plug>(coc-range-select)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <Plug>(coc-range-select)                   :<C-u>call       CocActionAsync('rangeSelect',     '', v:true)<CR>$/;"	m
<Plug>(coc-range-select)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-range-select)          :<C-u>call       CocActionAsync('rangeSelect',     visualmode(), v:true)<CR>$/;"	m
<Plug>(coc-range-select-backward)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^vnoremap <silent> <Plug>(coc-range-select-backward) :<C-u>call       CocActionAsync('rangeSelect',     visualmode(), v:false)<CR>$/;"	m
<Plug>(coc-refactor)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-refactor)              :<C-u>call       CocActionAsync('refactor')<CR>$/;"	m
<Plug>(coc-references)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-references)            :<C-u>call       CocActionAsync('jumpReferences')<CR>$/;"	m
<Plug>(coc-references-used)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-references-used)       :<C-u>call       CocActionAsync('jumpUsed')<CR>$/;"	m
<Plug>(coc-rename)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-rename)                :<C-u>call       CocActionAsync('rename')<CR>$/;"	m
<Plug>(coc-type-definition)	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^nnoremap <silent> <Plug>(coc-type-definition)       :<C-u>call       CocActionAsync('jumpTypeDefinition')<CR>$/;"	m
<Plug>(go-alternate-edit)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-alternate-edit) :<C-u>call go#alternate#Switch(0, "edit")<CR>$/;"	m
<Plug>(go-alternate-split)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-alternate-split) :<C-u>call go#alternate#Switch(0, "split")<CR>$/;"	m
<Plug>(go-alternate-vertical)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-alternate-vertical) :<C-u>call go#alternate#Switch(0, "vsplit")<CR>$/;"	m
<Plug>(go-build)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-build) :<C-u>call go#cmd#Build(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-coverage)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage) :<C-u>call go#coverage#Buffer(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-coverage-browser)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage-browser) :<C-u>call go#coverage#Browser(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-coverage-clear)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage-clear) :<C-u>call go#coverage#Clear()<CR>$/;"	m
<Plug>(go-coverage-toggle)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage-toggle) :<C-u>call go#coverage#BufferToggle(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-decls)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-decls) :<C-u>call go#decls#Decls(0, '')<CR>$/;"	m
<Plug>(go-decls-dir)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-decls-dir) :<C-u>call go#decls#Decls(1, '')<CR>$/;"	m
<Plug>(go-def)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def) :<C-u>call go#def#Jump('', 0)<CR>$/;"	m
<Plug>(go-def-pop)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-pop) :<C-u>call go#def#StackPop()<CR>$/;"	m
<Plug>(go-def-split)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-split) :<C-u>call go#def#Jump("split", 0)<CR>$/;"	m
<Plug>(go-def-stack)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-stack) :<C-u>call go#def#Stack()<CR>$/;"	m
<Plug>(go-def-stack-clear)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-stack-clear) :<C-u>call go#def#StackClear()<CR>$/;"	m
<Plug>(go-def-tab)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-tab) :<C-u>call go#def#Jump("tab", 0)<CR>$/;"	m
<Plug>(go-def-type)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-type) :<C-u>call go#def#Jump('', 1)<CR>$/;"	m
<Plug>(go-def-type-split)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-type-split) :<C-u>call go#def#Jump("split", 1)<CR>$/;"	m
<Plug>(go-def-type-tab)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-type-tab) :<C-u>call go#def#Jump("tab", 1)<CR>$/;"	m
<Plug>(go-def-type-vertical)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-type-vertical) :<C-u>call go#def#Jump("vsplit", 1)<CR>$/;"	m
<Plug>(go-def-vertical)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-vertical) :<C-u>call go#def#Jump("vsplit", 0)<CR>$/;"	m
<Plug>(go-deps)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-deps) :<C-u>call go#tool#Deps()<CR>$/;"	m
<Plug>(go-diagnostics)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-diagnostics) :<C-u>call go#lint#Diagnostics(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-doc)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc) :<C-u>call go#doc#Open("new", "split")<CR>$/;"	m
<Plug>(go-doc)	conf/vim/.vim/plugged/vim-go/ftplugin/godoc/mappings.vim	/^nnoremap <silent> <Plug>(go-doc) :<C-u>call go#doc#Open("new", "split")<CR>$/;"	m
<Plug>(go-doc-browser)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-browser) :<C-u>call go#doc#OpenBrowser()<CR>$/;"	m
<Plug>(go-doc-browser)	conf/vim/.vim/plugged/vim-go/ftplugin/godoc/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-browser) :<C-u>call go#doc#OpenBrowser()<CR>$/;"	m
<Plug>(go-doc-split)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-split) :<C-u>call go#doc#Open("new", "split")<CR>$/;"	m
<Plug>(go-doc-split)	conf/vim/.vim/plugged/vim-go/ftplugin/godoc/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-split) :<C-u>call go#doc#Open("new", "split")<CR>$/;"	m
<Plug>(go-doc-tab)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-tab) :<C-u>call go#doc#Open("tabnew", "tabe")<CR>$/;"	m
<Plug>(go-doc-tab)	conf/vim/.vim/plugged/vim-go/ftplugin/godoc/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-tab) :<C-u>call go#doc#Open("tabnew", "tabe")<CR>$/;"	m
<Plug>(go-doc-vertical)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-vertical) :<C-u>call go#doc#Open("vnew", "vsplit")<CR>$/;"	m
<Plug>(go-doc-vertical)	conf/vim/.vim/plugged/vim-go/ftplugin/godoc/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-vertical) :<C-u>call go#doc#Open("vnew", "vsplit")<CR>$/;"	m
<Plug>(go-files)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-files) :<C-u>call go#tool#Files()<CR>$/;"	m
<Plug>(go-fill-struct)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-fill-struct) :<C-u>call go#fillstruct#FillStruct()<CR>$/;"	m
<Plug>(go-fmt)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-fmt) :<C-u>call go#fmt#Format(0)<CR>$/;"	m
<Plug>(go-generate)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-generate) :<C-u>call go#cmd#Generate(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-if-err)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-if-err) :<C-u>call go#iferr#Generate()<CR>$/;"	m
<Plug>(go-iferr)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-iferr) :<C-u>call go#iferr#Generate()<CR>$/;"	m
<Plug>(go-implements)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-implements) :<C-u>call go#implements#Implements(-1)<CR>$/;"	m
<Plug>(go-import)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-import) :<C-u>call go#import#SwitchImport(1, '', expand('<cword>'), '')<CR>$/;"	m
<Plug>(go-imports)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-imports) :<C-u>call go#fmt#Format(1)<CR>$/;"	m
<Plug>(go-info)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-info) :<C-u>call go#tool#Info(1)<CR>$/;"	m
<Plug>(go-install)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-install) :<C-u>call go#cmd#Install(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-lint)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-lint) :<C-u>call go#lint#Golint(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-metalinter)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-metalinter) :<C-u>call go#lint#Gometa(!g:go_jump_to_error, 0)<CR>$/;"	m
<Plug>(go-mod-fmt)	conf/vim/.vim/plugged/vim-go/ftplugin/gomod/mappings.vim	/^nnoremap <silent> <Plug>(go-mod-fmt) :<C-u>call go#mod#Format()<CR>$/;"	m
<Plug>(go-referrers)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-referrers) :<C-u>call go#referrers#Referrers(-1)<CR>$/;"	m
<Plug>(go-rename)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-rename) :<C-u>call go#rename#Rename(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-run)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-run) :<C-u>call go#cmd#Run(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-run-split)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^  nnoremap <silent> <Plug>(go-run-split) :<C-u>call go#cmd#RunTerm(!g:go_jump_to_error, 'split', [])<CR>$/;"	m
<Plug>(go-run-tab)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^  nnoremap <silent> <Plug>(go-run-tab) :<C-u>call go#cmd#RunTerm(!g:go_jump_to_error, 'tabe', [])<CR>$/;"	m
<Plug>(go-run-vertical)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^  nnoremap <silent> <Plug>(go-run-vertical) :<C-u>call go#cmd#RunTerm(!g:go_jump_to_error, 'vsplit', [])<CR>$/;"	m
<Plug>(go-sameids)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-sameids) :<C-u>call go#sameids#SameIds(1)<CR>$/;"	m
<Plug>(go-sameids-toggle)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-sameids-toggle) :<C-u>call go#sameids#ToggleSameIds()<CR>$/;"	m
<Plug>(go-test)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-test) :<C-u>call go#test#Test(!g:go_jump_to_error, 0)<CR>$/;"	m
<Plug>(go-test-compile)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-test-compile) :<C-u>call go#test#Test(!g:go_jump_to_error, 1)<CR>$/;"	m
<Plug>(go-test-file)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-test-file) :<C-u>call go#test#File(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-test-func)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-test-func) :<C-u>call go#test#Func(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-vet)	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-vet) :<C-u>call go#lint#Vet(!g:go_jump_to_error)<CR>$/;"	m
<Plug>ChangeCommentary	conf/vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>ChangeCommentary c:<C-U>call <SID>textobject(1)<CR>$/;"	m
<Plug>Commentary	conf/vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^nnoremap <expr>   <Plug>Commentary     <SID>go()$/;"	m
<Plug>Commentary	conf/vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^onoremap <silent> <Plug>Commentary        :<C-U>call <SID>textobject(get(v:, 'operator', '') ==# 'c')<CR>$/;"	m
<Plug>CommentaryLine	conf/vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^nnoremap <expr>   <Plug>CommentaryLine <SID>go() . '_'$/;"	m
<Plug>CommentaryUndo	conf/vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^nmap <silent> <Plug>CommentaryUndo :echoerr "Change your <Plug>CommentaryUndo map to <Plug>Commentary<Plug>Commentary"<CR>$/;"	m
<Plug>GitGutterNextHunk	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterNextHunk   &diff ? ']c' : ":\\<C-U>call gitgutter#utility#warn('Please change your map \\<lt>Plug>GitGutterNextHunk to \\<lt>Plug>(GitGutterNextHunk)')\\<CR>"$/;"	m
<Plug>GitGutterPrevHunk	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterPrevHunk   &diff ? '[c' : ":\\<C-U>call gitgutter#utility#warn('Please change your map \\<lt>Plug>GitGutterPrevHunk to \\<lt>Plug>(GitGutterPrevHunk)')\\<CR>"$/;"	m
<Plug>GitGutterPreviewHunk	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterPreviewHunk   :call gitgutter#utility#warn('Please change your map <lt>Plug>GitGutterPreviewHunk to <lt>Plug>(GitGutterPreviewHunk)')<CR>$/;"	m
<Plug>GitGutterStageHunk	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterStageHunk     :call gitgutter#utility#warn('Please change your map <lt>Plug>GitGutterStageHunk to <lt>Plug>(GitGutterStageHunk)')<CR>$/;"	m
<Plug>GitGutterUndoHunk	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterUndoHunk      :call gitgutter#utility#warn('Please change your map <lt>Plug>GitGutterUndoHunk to <lt>Plug>(GitGutterUndoHunk)')<CR>$/;"	m
<Plug>Markdown_EditUrlUnderCursor	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^nnoremap <Plug>Markdown_EditUrlUnderCursor :call <sid>EditUrlUnderCursor()<cr>$/;"	m
<Plug>Markdown_OpenUrlUnderCursor	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^nnoremap <Plug>Markdown_OpenUrlUnderCursor :call <sid>OpenUrlUnderCursor()<cr>$/;"	m
<S-TAB>	conf/vim/.vim/custom/coc.vim	/^inoremap <expr><S-TAB> coc#pum#visible() ? coc#pum#prev(1) : "\\<C-h>"$/;"	m
<S-TAB>	conf/vim/.vim/custom/coc.vim	/^inoremap <expr><S-TAB> pumvisible() ? "\\<C-p>" : "\\<C-h>"$/;"	m
<S-TAB>	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^inoremap <expr><S-TAB> coc#pum#visible() ? coc#pum#prev(1) : "\\<C-h>"$/;"	m
<SID>(count)	conf/vim/.vim/plugged/vim-operator-user/autoload/operator/user.vim	/^nnoremap <expr> <SID>(count)  <SID>count()$/;"	m
<SID>(register)	conf/vim/.vim/plugged/vim-operator-user/autoload/operator/user.vim	/^nnoremap <expr> <SID>(register)  <SID>register()$/;"	m
<SID>(register)	conf/vim/.vim/plugged/vim-operator-user/autoload/operator/user.vim	/^vnoremap <expr> <SID>(register)  <SID>register()$/;"	m
<TAB>	conf/vim/.vim/custom/coc.vim	/^inoremap <silent><expr> <TAB>$/;"	m
<TAB>	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^inoremap <silent><expr> <TAB>$/;"	m
<Tab>	conf/vim/.vim/custom/coc.vim	/^inoremap <silent><expr> <Tab>$/;"	m
<c-@>	conf/vim/.vim/custom/coc.vim	/^  inoremap <silent><expr> <c-@> coc#refresh()$/;"	m
<c-@>	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^  inoremap <silent><expr> <c-@> coc#refresh()$/;"	m
<c-space>	conf/vim/.vim/custom/coc.vim	/^  inoremap <silent><expr> <c-space> coc#refresh()$/;"	m
<c-space>	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^  inoremap <silent><expr> <c-space> coc#refresh()$/;"	m
<down>	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^  inoremap <silent><expr> <down> coc#pum#visible() ? coc#pum#next(0) : "\\<down>"$/;"	m
<leader>a	conf/vim/.vim/custom/coc.vim	/^nmap <leader>a  <Plug>(coc-codeaction-selected)$/;"	m
<leader>a	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nmap <leader>a  <Plug>(coc-codeaction-selected)$/;"	m
<leader>ac	conf/vim/.vim/custom/coc.vim	/^nmap <leader>ac  <Plug>(coc-codeaction-cursor)$/;"	m
<leader>ac	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nmap <leader>ac  <Plug>(coc-codeaction-cursor)$/;"	m
<leader>as	conf/vim/.vim/custom/coc.vim	/^nmap <leader>as  <Plug>(coc-codeaction-source)$/;"	m
<leader>as	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nmap <leader>as  <Plug>(coc-codeaction-source)$/;"	m
<leader>cl	conf/vim/.vim/custom/coc.vim	/^nmap <leader>cl  <Plug>(coc-codelens-action)$/;"	m
<leader>cl	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nmap <leader>cl  <Plug>(coc-codelens-action)$/;"	m
<leader>f	conf/vim/.vim/custom/coc.vim	/^nmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>f	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>gd	conf/vim/.vim/custom/coc.vim	/^nmap <leader>gd <Plug>(coc-definition)$/;"	m
<leader>gi	conf/vim/.vim/custom/coc.vim	/^nmap <leader>gi <Plug>(coc-implementation)$/;"	m
<leader>gr	conf/vim/.vim/custom/coc.vim	/^nmap <leader>gr <Plug>(coc-references)$/;"	m
<leader>gy	conf/vim/.vim/custom/coc.vim	/^nmap <leader>gy <Plug>(coc-type-definition)$/;"	m
<leader>n	conf/vim/.vim/custom/keymaps.vim	/^nnoremap <leader>n :NERDTreeFocus<CR>$/;"	m
<leader>qf	conf/vim/.vim/custom/coc.vim	/^nmap <leader>qf  <Plug>(coc-fix-current)$/;"	m
<leader>qf	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nmap <leader>qf  <Plug>(coc-fix-current)$/;"	m
<leader>r	conf/vim/.vim/custom/coc.vim	/^nmap <silent> <leader>r  <Plug>(coc-codeaction-refactor-selected)$/;"	m
<leader>r	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nmap <silent> <leader>r  <Plug>(coc-codeaction-refactor-selected)$/;"	m
<leader>re	conf/vim/.vim/custom/coc.vim	/^nmap <silent> <leader>re <Plug>(coc-codeaction-refactor)$/;"	m
<leader>re	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nmap <silent> <leader>re <Plug>(coc-codeaction-refactor)$/;"	m
<leader>rg	conf/vim/.vim/custom/keymaps.vim	/^nnoremap <leader>rg :Rg \\b<c-r><c-w>\\b<CR>$/;"	m
<leader>rg	conf/vim/.vim/custom/keymaps.vim	/^vnoremap <leader>rg y:Rg \\b<C-R>"\\b<CR>$/;"	m
<leader>rn	conf/vim/.vim/custom/coc.vim	/^nmap <leader>rn <Plug>(coc-rename)$/;"	m
<leader>rn	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nmap <leader>rn <Plug>(coc-rename)$/;"	m
<leader>sw	conf/vim/.vim/custom/keymaps.vim	/^nmap <leader>sw :call CurtineIncSw()<CR>$/;"	m
<nowait>	conf/vim/.vim/custom/coc.vim	/^nnoremap <silent><nowait> <space>a  :<C-u>CocList diagnostics<cr>$/;"	m
<nowait>	conf/vim/.vim/custom/coc.vim	/^nnoremap <silent><nowait> <space>c  :<C-u>CocList commands<cr>$/;"	m
<nowait>	conf/vim/.vim/custom/coc.vim	/^nnoremap <silent><nowait> <space>cf :<C-u>CocList -I symbols<CR>\/function<CR>$/;"	m
<nowait>	conf/vim/.vim/custom/coc.vim	/^nnoremap <silent><nowait> <space>e  :<C-u>CocList extensions<cr>$/;"	m
<nowait>	conf/vim/.vim/custom/coc.vim	/^nnoremap <silent><nowait> <space>j  :<C-u>CocNext<CR>$/;"	m
<nowait>	conf/vim/.vim/custom/coc.vim	/^nnoremap <silent><nowait> <space>k  :<C-u>CocPrev<CR>$/;"	m
<nowait>	conf/vim/.vim/custom/coc.vim	/^nnoremap <silent><nowait> <space>o  :<C-u>CocList outline<cr>$/;"	m
<nowait>	conf/vim/.vim/custom/coc.vim	/^nnoremap <silent><nowait> <space>p  :<C-u>CocListResume<CR>$/;"	m
<nowait>	conf/vim/.vim/custom/coc.vim	/^nnoremap <silent><nowait> <space>s  :<C-u>CocList -I symbols<cr>$/;"	m
<nowait>	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nnoremap <silent><nowait> <space>a  :<C-u>CocList diagnostics<cr>$/;"	m
<nowait>	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nnoremap <silent><nowait> <space>c  :<C-u>CocList commands<cr>$/;"	m
<nowait>	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nnoremap <silent><nowait> <space>e  :<C-u>CocList extensions<cr>$/;"	m
<nowait>	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nnoremap <silent><nowait> <space>j  :<C-u>CocNext<CR>$/;"	m
<nowait>	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nnoremap <silent><nowait> <space>k  :<C-u>CocPrev<CR>$/;"	m
<nowait>	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nnoremap <silent><nowait> <space>o  :<C-u>CocList outline<cr>$/;"	m
<nowait>	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nnoremap <silent><nowait> <space>p  :<C-u>CocListResume<CR>$/;"	m
<nowait>	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nnoremap <silent><nowait> <space>s  :<C-u>CocList -I symbols<cr>$/;"	m
<nowait><expr>	conf/vim/.vim/custom/coc.vim	/^  inoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? "\\<c-r>=coc#float#scroll(0)\\<cr>" : "\\<Left>"$/;"	m
<nowait><expr>	conf/vim/.vim/custom/coc.vim	/^  inoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? "\\<c-r>=coc#float#scroll(1)\\<cr>" : "\\<Right>"$/;"	m
<nowait><expr>	conf/vim/.vim/custom/coc.vim	/^  nnoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : "\\<C-b>"$/;"	m
<nowait><expr>	conf/vim/.vim/custom/coc.vim	/^  nnoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : "\\<C-f>"$/;"	m
<nowait><expr>	conf/vim/.vim/custom/coc.vim	/^  vnoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : "\\<C-b>"$/;"	m
<nowait><expr>	conf/vim/.vim/custom/coc.vim	/^  vnoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : "\\<C-f>"$/;"	m
<nowait><expr>	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^inoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? "\\<c-r>=coc#float#scroll(0)\\<cr>" : "\\<Left>"$/;"	m
<nowait><expr>	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^inoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? "\\<c-r>=coc#float#scroll(1)\\<cr>" : "\\<Right>"$/;"	m
<nowait><expr>	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nnoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : "\\<C-b>"$/;"	m
<nowait><expr>	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nnoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : "\\<C-f>"$/;"	m
<nowait><expr>	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^vnoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : "\\<C-b>"$/;"	m
<nowait><expr>	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^vnoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : "\\<C-f>"$/;"	m
<plug>(-fzf-/)	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-\/) \/$/;"	m
<plug>(-fzf-:)	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-:) :$/;"	m
<plug>(-fzf-vim-do)	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-vim-do) :execute g:__fzf_command<cr>$/;"	m
<plug>(fzf-complete-buffer-line)	conf/vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-buffer-line) fzf#vim#complete#buffer_line()$/;"	m
<plug>(fzf-complete-file)	conf/vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path("find . -path '*\/\\.*' -prune -o -type f -print -o -type l -print \\| sed 's:^..::'")$/;"	m
<plug>(fzf-complete-file)	conf/vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path('dir \/s\/b\/a:-d')$/;"	m
<plug>(fzf-complete-file-ag)	conf/vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-file-ag)     fzf#vim#complete#path('ag -l -g ""')$/;"	m
<plug>(fzf-complete-line)	conf/vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-line)        fzf#vim#complete#line()$/;"	m
<plug>(fzf-complete-path)	conf/vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path("find . -path '*\/\\.*' -prune -o -print \\| sed '1d;s:^..::'")$/;"	m
<plug>(fzf-complete-path)	conf/vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path('dir \/s\/b')$/;"	m
<plug>(fzf-complete-word)	conf/vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-word)        fzf#vim#complete#word()$/;"	m
<plug>(fzf-maps-i)	conf/vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^inoremap <silent> <plug>(fzf-maps-i) <c-o>:call fzf#vim#maps('i', 0)<cr>$/;"	m
<plug>(fzf-maps-n)	conf/vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^nnoremap <silent> <plug>(fzf-maps-n) :<c-u>call fzf#vim#maps('n', 0)<cr>$/;"	m
<plug>(fzf-maps-o)	conf/vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^onoremap <silent> <plug>(fzf-maps-o) <c-c>:<c-u>call fzf#vim#maps('o', 0)<cr>$/;"	m
<up>	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^  inoremap <silent><expr> <up> coc#pum#visible() ? coc#pum#prev(0) : "\\<up>"$/;"	m
ADDONS	conf/vim/.vim/plugged/vim-markdown/Makefile	/^ADDONS=${VIMDIR}\/addons$/;"	m
ALWAYS	conf/vim/.vim/plugged/vim-snippets/pythonx/javascript_snippets.py	/^ALWAYS = 'always'$/;"	v
ARR_D	conf/vim/.vim/plugged/ultisnips/test/constant.py	/^ARR_D = "\\x1bOB"$/;"	v
ARR_L	conf/vim/.vim/plugged/ultisnips/test/constant.py	/^ARR_L = "\\x1bOD"$/;"	v
ARR_R	conf/vim/.vim/plugged/ultisnips/test/constant.py	/^ARR_R = "\\x1bOC"$/;"	v
ARR_U	conf/vim/.vim/plugged/ultisnips/test/constant.py	/^ARR_U = "\\x1bOA"$/;"	v
ASCII_REPLACEMENTS	workflows/Ariafred/src/workflow/workflow.py	/^ASCII_REPLACEMENTS = {$/;"	v
ASE_IMAGE	conf/vim/.vim/plugged/ultisnips/Makefile	/^	docker build -t ultisnips:repro --build-arg BASE_IMAGE=$< -f Dockerfile.repro .$/;"	m
ATTRIBUTES	conf/zsh/.oh-my-zsh/plugins/aliases/termcolor.py	/^ATTRIBUTES = dict($/;"	v
AcquisitionError	workflows/Ariafred/src/workflow/util.py	/^class AcquisitionError(Exception):$/;"	c
AddAnsiGroups	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:AddAnsiGroups() abort$/;"	f
AddFunc_Opt	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^class AddFunc_Opt(_AddFuncBase):$/;"	c
AddFunc_Simple	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^class AddFunc_Simple(_AddFuncBase):$/;"	c
AddNewSnippetSource	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^class AddNewSnippetSource(_VimTest):$/;"	c
AddTabularPattern	conf/vim/.vim/plugged/tabular/plugin/Tabular.vim	/^com! -nargs=+ -bang AddTabularPattern$/;"	c
AddTabularPattern	conf/vim/.vim/plugged/tabular/plugin/Tabular.vim	/^function! AddTabularPattern(command, force)$/;"	f
AddTabularPipeline	conf/vim/.vim/plugged/tabular/plugin/Tabular.vim	/^com! -nargs=+ -bang AddTabularPipeline$/;"	c
AddTabularPipeline	conf/vim/.vim/plugged/tabular/plugin/Tabular.vim	/^function! AddTabularPipeline(command, force)$/;"	f
AddedSnippetsSource	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/added.py	/^class AddedSnippetsSource(SnippetSource):$/;"	c
Align	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^function Align(left, right)$/;"	f
AlsoMissingDoc	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/lint/quux.go	/^func AlsoMissingDoc() {$/;"	f
Anon_NoTrigger_AfterSpace	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_AfterSpace(_AnonBase):$/;"	c
Anon_NoTrigger_BeginningOfLine	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_BeginningOfLine(_AnonBase):$/;"	c
Anon_NoTrigger_FirstCharOfLine	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_FirstCharOfLine(_AnonBase):$/;"	c
Anon_NoTrigger_Multi	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_Multi(_AnonBase):$/;"	c
Anon_NoTrigger_Simple	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_Simple(_AnonBase):$/;"	c
Anon_Trigger_Multi	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Multi(_AnonBase):$/;"	c
Anon_Trigger_Opts	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Opts(_AnonBase):$/;"	c
Anon_Trigger_Simple	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Simple(_AnonBase):$/;"	c
Anon_Trigger_Twice	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Twice(_AnonBase):$/;"	c
AppInfo	workflows/Ariafred/src/workflow/util.py	/^AppInfo = namedtuple('AppInfo', ['name', 'path', 'bundleid'])$/;"	v
AsmFmt	conf/vim/.vim/plugged/vim-go/ftplugin/asm.vim	/^command! -nargs=0 AsmFmt call go#asmfmt#Format()$/;"	c
AsyncParent	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^class AsyncParent(_Parent):$/;"	c
AsyncRequest	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:AsyncRequest(name, args) abort$/;"	f
Autocmd	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:Autocmd(...) abort$/;"	f
Autocommands	conf/vim/.vim/plugged/ultisnips/test/test_Autocommands.py	/^class Autocommands(_VimTest):$/;"	c
Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne(_VimTest):$/;"	c
Autotrigger_CanMatchContext	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanMatchContext(_VimTest):$/;"	c
Autotrigger_CanMatchPreviouslySelectedPlaceholder	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanMatchPreviouslySelectedPlaceholder(_VimTest):$/;"	c
Autotrigger_CanMatchSimpleTrigger	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanMatchSimpleTrigger(_VimTest):$/;"	c
Autotrigger_CanToggle	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanToggle(_VimTest):$/;"	c
Autotrigger_GlobalDisable	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_GlobalDisable(_VimTest):$/;"	c
Autotrigger_GlobalDisableThenToggle	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_GlobalDisableThenToggle(_VimTest):$/;"	c
BACKWARD	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    BACKWARD = 2$/;"	v	class:JumpDirection
BASEVERSION	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^BASEVERSION = re.compile($/;"	v
BASE_DIR	conf/vim/.vim/plugged/deoplete.nvim/test/conftest.py	/^BASE_DIR = Path(__file__).parent.parent$/;"	v
BOUNDARY_CHARS	workflows/Ariafred/src/workflow/web.py	/^BOUNDARY_CHARS = string.digits + string.ascii_letters$/;"	v
BRACES	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    BRACES = re.compile("([}{])")$/;"	v	class:VimInterfaceWindows
BS	conf/vim/.vim/plugged/ultisnips/test/constant.py	/^BS = "\\x7f"$/;"	v
BUILDER	conf/tmux/.tmux/plugins/tmux-themepack/Makefile	/^BUILDER := bin\/build-theme$/;"	m
Backspace_TabStop_NotZero	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^class Backspace_TabStop_NotZero(_VimTest):$/;"	c
Backspace_TabStop_Zero	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^class Backspace_TabStop_Zero(_VimTest):$/;"	c
Base	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/base/filter.py	/^class Base(LoggingMixin):$/;"	c
Base	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/base/source.py	/^class Base(LoggingMixin):$/;"	c
Base	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/base.py	/^class Base(_Base):$/;"	c
Base	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^class Base(_Base):$/;"	c
Bookmark.AddBookmark	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.CompareBookmarksByName	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CompareBookmarksByName(firstBookmark, secondBookmark)$/;"	f
Bookmark.Edit	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Edit()$/;"	f
Bookmark.GetNodeForName	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot, nerdtree)$/;"	f
Bookmark.GetSelected	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.SortBookmarksList	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.SortBookmarksList()$/;"	f
Bookmark.ToRoot	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name, nerdtree)$/;"	f
Bookmark.Write	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(nerdtree, ...)$/;"	f
Bookmark.delete	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(nerdtree, searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.open	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(nerdtree, ...)$/;"	f
Bookmark.openInNewTab	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot(nerdtree)$/;"	f
Bookmark.validate	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
Bug1251994	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^class Bug1251994(_VimTest):$/;"	c
C	conf/vim/.vim/plugged/vim-operator-user/t/count-designations.vim	/^map C  <Plug>(operator-align-right)$/;"	m
CHECK	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\$\\d+")$/;"	v	class:MirrorToken
CHECK	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\${VISUAL[:}\/]")$/;"	v	class:VisualToken
CHECK	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\${\\d+[:}]")$/;"	v	class:TabStopToken
CHECK	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\${\\d+\\\/")$/;"	v	class:TransformationToken
CHECK	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^\\${\\d+\\|")$/;"	v	class:ChoicesToken
CHECK	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^`!p\\s")$/;"	v	class:PythonCodeToken
CHECK	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    CHECK = re.compile(r"^`!v\\s")$/;"	v	class:VimLCodeToken
COLORS	conf/zsh/.oh-my-zsh/plugins/aliases/termcolor.py	/^COLORS = dict($/;"	v
COMPLETION_OPTIONS	conf/vim/.vim/plugged/ultisnips/test/test_Completion.py	/^COMPLETION_OPTIONS = "completion1\\ncompletion2\\n"$/;"	v
COMPL_ACCEPT	conf/vim/.vim/plugged/ultisnips/test/constant.py	/^COMPL_ACCEPT = chr(25)$/;"	v
COMPL_KW	conf/vim/.vim/plugged/ultisnips/test/constant.py	/^COMPL_KW = chr(24) + chr(14)$/;"	v
CPickleSerializer	workflows/Ariafred/src/workflow/workflow.py	/^class CPickleSerializer(object):$/;"	c
CTRL_V	conf/vim/.vim/plugged/ultisnips/test/constant.py	/^CTRL_V = chr(22)$/;"	v
Call	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! s:Call(method, args)$/;"	f
Candidate	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^Candidate = typing.Dict[str, typing.Any]$/;"	v
Candidates	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^Candidates = typing.List[typing.Dict[str, typing.Any]]$/;"	v
Candidates	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^Candidates = typing.Dict[str, typing.Any]$/;"	v
Candidates	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^Candidates = typing.List[Candidate]$/;"	v
CaseInsensitiveDictionary	workflows/Ariafred/src/workflow/web.py	/^class CaseInsensitiveDictionary(dict):$/;"	c
Center	conf/vim/.vim/plugged/tabular/autoload/tabular.vim	/^function! s:Center(string, fieldwidth)$/;"	f
CheckBackspace	conf/vim/.vim/custom/coc.vim	/^function! CheckBackspace() abort$/;"	f
CheckBackspace	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^function! CheckBackspace() abort$/;"	f
CheckBinaries	conf/vim/.vim/plugged/vim-go/plugin/go.vim	/^function! s:CheckBinaries()$/;"	f
Child	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^class Child(logger.LoggingMixin):$/;"	c
Choices	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^class Choices(TabStop):$/;"	c
ChoicesToken	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class ChoicesToken(Token):$/;"	c
Choices_AsNestedElement_CanBeTabbedInto	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^class Choices_AsNestedElement_CanBeTabbedInto(_VimTest):$/;"	c
Choices_AsNestedElement_CanBeTabbedThrough	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^class Choices_AsNestedElement_CanBeTabbedThrough(_VimTest):$/;"	c
Choices_AsNestedElement_ShallNotTakeActionIfParentInput	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^class Choices_AsNestedElement_ShallNotTakeActionIfParentInput(_VimTest):$/;"	c
Choices_AsNestedElement_ShouldOverwriteDefaultText	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^class Choices_AsNestedElement_ShouldOverwriteDefaultText(_VimTest):$/;"	c
Choices_CanEscapeCommaInsideChoiceItem	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^class Choices_CanEscapeCommaInsideChoiceItem(_VimTest):$/;"	c
Choices_CanTakeNonAsciiCharacters	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^class Choices_CanTakeNonAsciiCharacters(_VimTest):$/;"	c
Choices_EmptyChoiceWillBeDiscarded	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^class Choices_EmptyChoiceWillBeDiscarded(_VimTest):$/;"	c
Choices_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^class Choices_ExpectCorrectResult(_VimTest):$/;"	c
Choices_MoreThan9Candidates_ShouldTerminateWithSpace	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^class Choices_MoreThan9Candidates_ShouldTerminateWithSpace(_VimTest):$/;"	c
Choices_MoreThan9Candidates_ShouldWaitForInputs	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^class Choices_MoreThan9Candidates_ShouldWaitForInputs(_VimTest):$/;"	c
Choices_ShouldThrowErrorWithZeroTabstop	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^class Choices_ShouldThrowErrorWithZeroTabstop(_VimTest):$/;"	c
Choices_WilNotMessWithTabstopsAfterIt	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^class Choices_WilNotMessWithTabstopsAfterIt(_VimTest):$/;"	c
Choices_WillAbandonSelection_If_CharTyped	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^class Choices_WillAbandonSelection_If_CharTyped(_VimTest):$/;"	c
Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^class Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex(_VimTest):$/;"	c
Choices_WillBeExpandedToInlineSelection	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^class Choices_WillBeExpandedToInlineSelection(_VimTest):$/;"	c
Choices_WillNotExpand_If_ChoiceListIsEmpty	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^class Choices_WillNotExpand_If_ChoiceListIsEmpty(_VimTest):$/;"	c
Choices_With_Mirror	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^class Choices_With_Mirror(_VimTest):$/;"	c
Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^class Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone(_VimTest):$/;"	c
Chomp	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^function! Chomp(s) abort$/;"	f
ChompHead	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^function! ChompHead(s) abort$/;"	f
ChooseCommandMap	conf/vim/.vim/plugged/tabular/plugin/Tabular.vim	/^function! s:ChooseCommandMap(commandline)$/;"	f
ClangFormat	conf/vim/.vim/plugged/vim-clang-format/plugin/clang_format.vim	/^command! -range=% -nargs=0 ClangFormat call clang_format#replace(<line1>, <line2>)$/;"	c
ClangFormat	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^function! ClangFormat(line1, line2, ...) abort$/;"	f
ClangFormatAutoDisable	conf/vim/.vim/plugged/vim-clang-format/plugin/clang_format.vim	/^command! ClangFormatAutoDisable call clang_format#disable_auto_format()$/;"	c
ClangFormatAutoEnable	conf/vim/.vim/plugged/vim-clang-format/plugin/clang_format.vim	/^command! ClangFormatAutoEnable call clang_format#enable_auto_format()$/;"	c
ClangFormatAutoToggle	conf/vim/.vim/plugged/vim-clang-format/plugin/clang_format.vim	/^command! ClangFormatAutoToggle call clang_format#toggle_auto_format()$/;"	c
ClangFormatEchoFormattedCode	conf/vim/.vim/plugged/vim-clang-format/plugin/clang_format.vim	/^command! -range=% -nargs=0 ClangFormatEchoFormattedCode echo clang_format#format(<line1>, <line2>)$/;"	c
CocAction	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! CocAction(name, ...) abort$/;"	f
CocActionAsync	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! CocActionAsync(name, ...) abort$/;"	f
CocCommand	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=* -complete=custom,s:CommandList -range CocCommand :call coc#rpc#notify('runCommand', [<f-args>])$/;"	c
CocConfig	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocConfig       :call s:OpenConfig()$/;"	c
CocDiagnostics	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? CocDiagnostics  :call s:OpenDiagnostics(<f-args>)$/;"	c
CocDisable	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocDisable      :call s:Disable()$/;"	c
CocEnable	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocEnable       :call s:Enable(0)$/;"	c
CocFirst	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocFirst        :call coc#rpc#notify('listFirst', [<f-args>])$/;"	c
CocHasProvider	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! CocHasProvider(name, ...) abort$/;"	f
CocInfo	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocInfo         :call s:ShowInfo()$/;"	c
CocInstall	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=* -bar -complete=custom,s:InstallOptions CocInstall   :call coc#util#install_extension([<f-args>])$/;"	c
CocLast	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocLast         :call coc#rpc#notify('listLast', [<f-args>])$/;"	c
CocList	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=* -complete=custom,coc#list#options CocList      :call coc#rpc#notify('openList',  [<f-args>])$/;"	c
CocListCancel	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocListCancel   :call coc#rpc#notify('listCancel', [])$/;"	c
CocListResume	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocListResume   :call coc#rpc#notify('listResume', [<f-args>])$/;"	c
CocLocalConfig	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocLocalConfig  :call coc#rpc#notify('openLocalConfig', [])$/;"	c
CocLocations	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! CocLocations(id, method, ...) abort$/;"	f
CocLocationsAsync	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! CocLocationsAsync(id, method, ...) abort$/;"	f
CocNext	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocNext         :call coc#rpc#notify('listNext', [<f-args>])$/;"	c
CocNotify	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! CocNotify(...) abort$/;"	f
CocOpenLog	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocOpenLog      :call coc#rpc#notify('openLog',  [])$/;"	c
CocOutline	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocOutline      :call coc#rpc#notify('showOutline', [])$/;"	c
CocPopupCallback	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! CocPopupCallback(bufnr, arglist) abort$/;"	f
CocPrev	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=? -complete=custom,coc#list#names CocPrev         :call coc#rpc#notify('listPrev', [<f-args>])$/;"	c
CocPrintErrors	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocPrintErrors  :call coc#rpc#show_errors()$/;"	c
CocRegistNotification	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! CocRegistNotification(id, method, cb) abort$/;"	f
CocRegisterNotification	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! CocRegisterNotification(id, method, cb) abort$/;"	f
CocRequest	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! CocRequest(...) abort$/;"	f
CocRequestAsync	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! CocRequestAsync(...)$/;"	f
CocRestart	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocRestart      :call coc#rpc#restart()$/;"	c
CocSearch	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=+ -complete=custom,s:SearchOptions  CocSearch    :call coc#rpc#notify('search', [<f-args>])$/;"	c
CocStart	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocStart        :call coc#rpc#start_server()$/;"	c
CocTagFunc	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! CocTagFunc(pattern, flags, info) abort$/;"	f
CocUninstall	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=+ -complete=custom,s:ExtensionList  CocUninstall :call CocActionAsync('uninstallExtension', <f-args>)$/;"	c
CocUpdate	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 CocUpdate       :call coc#util#update_extensions(1)$/;"	c
CocUpdateSync	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=0 -bar CocUpdateSync   :call coc#util#update_extensions()$/;"	c
CocWatch	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^command! -nargs=1 -complete=custom,s:LoadedExtensions  CocWatch    :call coc#rpc#notify('watchExtension', [<f-args>])$/;"	c
CodeActionFromSelected	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:CodeActionFromSelected(type)$/;"	f
CodeActionRefactorFromSelected	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:CodeActionRefactorFromSelected(type)$/;"	f
CodeTimer	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^class CodeTimer:$/;"	c
CommandList	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:CommandList(...) abort$/;"	f
CommandRunner	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^class CommandRunner:$/;"	c
CommandSet	conf/zsh/.oh-my-zsh/plugins/shell-proxy/proxy.py	/^class CommandSet:$/;"	c
Commentary	conf/vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^command! -range -bar -bang Commentary call s:go(<line1>,<line2>,<bang>0)$/;"	c
CompilerSet	conf/vim/.vim/plugged/vim-go/compiler/go.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompleteTabularizeCommand	conf/vim/.vim/plugged/tabular/plugin/Tabular.vim	/^function! s:CompleteTabularizeCommand(argstart, cmdline, cursorpos)$/;"	f
Completion_BackwardsJumpWithoutCOMPL_ACCEPT	conf/vim/.vim/plugged/ultisnips/test/test_Completion.py	/^class Completion_BackwardsJumpWithoutCOMPL_ACCEPT(_VimTest):$/;"	c
Completion_ForwardsJumpWithoutCOMPL_ACCEPT	conf/vim/.vim/plugged/ultisnips/test/test_Completion.py	/^class Completion_ForwardsJumpWithoutCOMPL_ACCEPT(_VimTest):$/;"	c
Completion_SimpleExample_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Completion.py	/^class Completion_SimpleExample_ECR(_VimTest):$/;"	c
Context	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^Context = typing.Dict[str, typing.Any]$/;"	v
Context	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/context.py	/^class Context(object):$/;"	c
ContextSnippets_Before	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_Before(_VimTest):$/;"	c
ContextSnippets_ContextHasAccessToReMatch	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ContextHasAccessToReMatch(_VimTest):$/;"	c
ContextSnippets_ContextHasAccessToVisual	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ContextHasAccessToVisual(_VimTest):$/;"	c
ContextSnippets_ContextIsClearedBeforeExpand	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ContextIsClearedBeforeExpand(_VimTest):$/;"	c
ContextSnippets_CursorIsZeroBased	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_CursorIsZeroBased(_VimTest):$/;"	c
ContextSnippets_DoNotExpandOnFalse	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_DoNotExpandOnFalse(_VimTest):$/;"	c
ContextSnippets_ExpandOnTrue	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ExpandOnTrue(_VimTest):$/;"	c
ContextSnippets_Header_DoNotExpandOnFalse	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_Header_DoNotExpandOnFalse(_VimTest):$/;"	c
ContextSnippets_Header_ExpandOnTrue	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_Header_ExpandOnTrue(_VimTest):$/;"	c
ContextSnippets_PriorityKeyword	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_PriorityKeyword(_VimTest):$/;"	c
ContextSnippets_ReportError	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ReportError(_VimTest):$/;"	c
ContextSnippets_ReportErrorOnIndexOutOfRange	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ReportErrorOnIndexOutOfRange(_VimTest):$/;"	c
ContextSnippets_SimpleSnippet	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_SimpleSnippet(_VimTest):$/;"	c
ContextSnippets_SnippetPriority	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_SnippetPriority(_VimTest):$/;"	c
ContextSnippets_UseContext	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_UseContext(_VimTest):$/;"	c
CreateHighlight	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:CreateHighlight(group, fg, bg) abort$/;"	f
CreateTabTreeVCS	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/vcs.vim	/^function! s:CreateTabTreeVCS(name)$/;"	f
Creator.BufNamePrefix	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
Creator.CreateExploreTree	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateExploreTree(dir)$/;"	f
Creator.CreateMirror	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
Creator.CreateTabTree	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateTabTree(name)$/;"	f
Creator.CreateWindowTree	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateWindowTree(dir)$/;"	f
Creator.New	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
Creator.ToggleTabTree	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.ToggleTabTree(dir)$/;"	f
Creator._bindMappings	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
Creator._broadcastInitEvent	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
Creator._createNERDTree	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createNERDTree(path, type)$/;"	f
Creator._createTreeWin	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
Creator._isBufHidden	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._isBufHidden(nr)$/;"	f
Creator._nextBufferName	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName(...)$/;"	f
Creator._nextBufferNumber	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
Creator._pathForString	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
Creator._removeTreeBufForTab	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._removeTreeBufForTab()$/;"	f
Creator._setCommonBufOptions	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
Creator._setupStatusline	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
Creator._tabpagevar	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._tabpagevar(tabnr, var)$/;"	f
Creator._uniq	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._uniq(list)$/;"	f
Creator.createMirror	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
Creator.createTabTree	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createTabTree(name)$/;"	f
Creator.createWindowTree	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createWindowTree(dir)$/;"	f
Creator.toggleTabTree	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.toggleTabTree(dir)$/;"	f
CursorMovement_BS_InEditMode	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^class CursorMovement_BS_InEditMode(_VimTest):$/;"	c
CursorMovement_Multiline_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^class CursorMovement_Multiline_ECR(_VimTest):$/;"	c
CursorRangeFromSelected	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:CursorRangeFromSelected(type, ...) abort$/;"	f
CygwinPath	conf/vim/.vim/plugged/vim-go/autoload/go/path.vim	/^function! s:CygwinPath(path)$/;"	f
DECLS_SYNTAX_HIGHLIGHT	conf/vim/.vim/plugged/vim-go/rplugin/python3/denite/source/decls.py	/^DECLS_SYNTAX_HIGHLIGHT = [$/;"	v
DEFAULT_UPDATE_FREQUENCY	workflows/Ariafred/src/workflow/workflow.py	/^DEFAULT_UPDATE_FREQUENCY = 1$/;"	v
DEPS_YAML_FILE	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^DEPS_YAML_FILE = ".github\/dependencies.yml"$/;"	v
DOC_DIR	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/Makefile	/^DOC_DIR?=$(DESTDIR)$(PREFIX)\/share\/doc\/$(NAME)$/;"	m
DOC_DIR	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/Makefile	/^DOC_DIR?=$(DESTDIR)$(PREFIX)\/share\/doc\/$(NAME)$/;"	m
DOC_DIR	conf/zsh/.oh-my-zsh/plugins/zsh-navigation-tools/Makefile	/^DOC_DIR?=$(DESTDIR)$(PREFIX)\/share\/doc\/$(NAME)$/;"	m
DRY_RUN	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^DRY_RUN = os.environ.get("DRY_RUN", "0") == "1"$/;"	v
DUMB_PUNCTUATION	workflows/Ariafred/src/workflow/workflow.py	/^DUMB_PUNCTUATION = {$/;"	v
DUMP_FILENAME	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/debug.py	/^DUMP_FILENAME = ($/;"	v
Debug	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/fmt/src/imports/vendor/gh.com/gi/foo-logging/logger.go	/^func (l *TestLogger) Debug(msg string) {$/;"	f
DeleteCurrentTabStop1_JumpBack	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^class DeleteCurrentTabStop1_JumpBack(_VimTest):$/;"	c
DeleteCurrentTabStop2_JumpBack	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^class DeleteCurrentTabStop2_JumpBack(_VimTest):$/;"	c
DeleteCurrentTabStop3_JumpAround	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^class DeleteCurrentTabStop3_JumpAround(_VimTest):$/;"	c
DeleteLastTwoLinesInSnippet	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^class DeleteLastTwoLinesInSnippet(_VimTest):$/;"	c
DeleteSnippetInsertion0	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^class DeleteSnippetInsertion0(_VimTest):$/;"	c
DeleteSnippetInsertion1	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^class DeleteSnippetInsertion1(_VimTest):$/;"	c
Deoplete	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^class Deoplete(logger.LoggingMixin):$/;"	c
DeopleteHandlers	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    class DeopleteHandlers(object):$/;"	c
DeopleteLogFilter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^class DeopleteLogFilter(logging.Filter):$/;"	c
Dependency	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^class Dependency:$/;"	c
DependencyDict	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^class DependencyDict(TypedDict):$/;"	c
DependencyStore	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^class DependencyStore:$/;"	c
DependencyYAML	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^class DependencyYAML(TypedDict):$/;"	c
Disable	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:Disable() abort$/;"	f
Do	conf/vim/.vim/plugged/vim-operator-user/t/register-designations.vim	/^function! Do(normal_command)$/;"	f
DoFindNearestSourceFileInDb	conf/emacs/.emacs.d/layers/+lang/c-c++/global_conf.py	/^def DoFindNearestSourceFileInDb(database_path, database, directory, skip):$/;"	f
DoNotCrashOnUndoAndJumpInNestedSnippet	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^class DoNotCrashOnUndoAndJumpInNestedSnippet(_VimTest):$/;"	c
DoNotExpandAfterSpace_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^class DoNotExpandAfterSpace_ExpectCorrectResult(_SimpleExpands):$/;"	c
DoNotTrimSpacesAtEndOfLinesByDefault	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class DoNotTrimSpacesAtEndOfLinesByDefault(_VimTest):$/;"	c
EA	conf/vim/.vim/plugged/ultisnips/test/constant.py	/^EA = "#"  # Expand anonymous$/;"	v
EMACS_DIR	conf/emacs/.emacs.d/spacemacs.mk	/^EMACS_DIR = $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))$/;"	m
ESC	conf/vim/.vim/plugged/ultisnips/test/constant.py	/^ESC = "\\x1b"$/;"	v
EX	conf/vim/.vim/plugged/ultisnips/test/constant.py	/^EX = "\\t"  # EXPAND$/;"	v
EditUrlUnderCursor	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^    function s:EditUrlUnderCursor()$/;"	f
EditableTextObject	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^class EditableTextObject(TextObject):$/;"	c
Element	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^class Element(object):$/;"	c
Enable	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:Enable(initialize)$/;"	f
EndOfTextToken	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class EndOfTextToken(Token):$/;"	c
Error	conf/vim/.vim/plugged/vim-go/autoload/go/import.vim	/^function! s:Error(s) abort$/;"	f
EscapeCharToken	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class EscapeCharToken(Token):$/;"	c
EscapedChar	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/escaped_char.py	/^class EscapedChar(NoneditableTextObject):$/;"	c
Event.New	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/event.vim	/^function! s:Event.New(nerdtree, subject, action, params) abort$/;"	f
Example	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/complete/complete.go	/^func Example(s string) {$/;"	f
Example	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/config/buildtags/buildtags.go	/^func Example() {$/;"	f
ExampleHelloWorld	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/example/example_test.go	/^func ExampleHelloWorld() {$/;"	f
Exception	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^function Exception()$/;"	f
Exception	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^    class Exception(Exception):$/;"	c	class:CommandRunner
ExclusiveSelection_RealWorldCase_Test	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^class ExclusiveSelection_RealWorldCase_Test(_ES_Base):$/;"	c
ExclusiveSelection_SimpleTabstop_Test	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^class ExclusiveSelection_SimpleTabstop_Test(_ES_Base):$/;"	c
ExitSnippetModeAfterTabstopZero	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^class ExitSnippetModeAfterTabstopZero(_VimTest):$/;"	c
ExpandInTheMiddleOfLine_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^class ExpandInTheMiddleOfLine_ExpectCorrectResult(_SimpleExpands):$/;"	c
ExpandSnippet	conf/vim/.vim/plugged/vim-go/autoload/go/auto.vim	/^function! s:ExpandSnippet() abort$/;"	f
ExtensionList	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:ExtensionList(...) abort$/;"	f
FORMATS	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^FORMATS = {$/;"	v
FORWARD	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    FORWARD = 1$/;"	v	class:JumpDirection
FOSimple_Break_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^class FOSimple_Break_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOTextAfter_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^class FOTextAfter_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOTextBeforeAndAfter_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^class FOTextBeforeAndAfter_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOWrapOnLongWord_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^class FOWrapOnLongWord_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FUNC	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^FUNC = typing.Callable[..., typing.Any]$/;"	v
FUNC_TEST_FILES	conf/emacs/.emacs.d/tests/core/Makefile	/^FUNC_TEST_FILES = \\$/;"	m
FUNC_TEST_FILES	conf/emacs/.emacs.d/tests/doc/Makefile	/^FUNC_TEST_FILES = \\$/;"	m
FUNC_TEST_FILES	conf/emacs/.emacs.d/tests/layers/+distribution/spacemacs-base/Makefile	/^FUNC_TEST_FILES = \\$/;"	m
FUNC_TEST_FILES	conf/emacs/.emacs.d/tests/layers/+distribution/spacemacs/Makefile	/^FUNC_TEST_FILES =$/;"	m
Fail	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/play/mock/controller.go	/^func Fail(t *testing.T) {$/;"	f
Filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_delimiter.py	/^class Filter(Base):$/;"	c
Filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_paren.py	/^class Filter(Base):$/;"	c
Filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_case.py	/^class Filter(Base):$/;"	c
Filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^class Filter(Base):$/;"	c
Filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_paren.py	/^class Filter(Base):$/;"	c
Filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_reorder_attr.py	/^class Filter(Base):$/;"	c
Filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_abbr.py	/^class Filter(Base):$/;"	c
Filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_info.py	/^class Filter(Base):$/;"	c
Filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_kind.py	/^class Filter(Base):$/;"	c
Filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_menu.py	/^class Filter(Base):$/;"	c
Filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_word_abbr.py	/^class Filter(Base):$/;"	c
Filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^class Filter(Base):$/;"	c
Filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_full_fuzzy.py	/^class Filter(Base):$/;"	c
Filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_fuzzy.py	/^class Filter(Base):$/;"	c
Filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_head.py	/^class Filter(Base):$/;"	c
Filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_length.py	/^class Filter(Base):$/;"	c
Filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_matchfuzzy.py	/^class Filter(Base):$/;"	c
Filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^class Filter(Base):$/;"	c
Filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_word.py	/^class Filter(Base):$/;"	c
FilterString	conf/vim/.vim/plugged/tabular/autoload/tabular.vim	/^function! s:FilterString(lines, commandstring)$/;"	f
FindCornerOfSyntax	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:FindCornerOfSyntax(lnum, col, step)$/;"	f
FindCornersOfSyntax	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:FindCornersOfSyntax(lnum, col)$/;"	f
FindFileInDb	conf/emacs/.emacs.d/layers/+lang/c-c++/global_conf.py	/^def FindFileInDb(database, filename):$/;"	f
FindLeftOfSyntax	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:FindLeftOfSyntax(lnum, col)$/;"	f
FindNearest	conf/emacs/.emacs.d/layers/+lang/c-c++/global_conf.py	/^def FindNearest(path, target, filename, subdirs=[]):$/;"	f
FindNearestSourceFileInDb	conf/emacs/.emacs.d/layers/+lang/c-c++/global_conf.py	/^def FindNearestSourceFileInDb(database_path, database, srcfile):$/;"	f
FindNextSyntax	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:FindNextSyntax(lnum, col, name)$/;"	f
FindParentVCSRoot	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/vcs.vim	/^function! s:FindParentVCSRoot(path)$/;"	f
FindRightOfSyntax	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:FindRightOfSyntax(lnum, col)$/;"	f
FindSiblingFileForHeader	conf/emacs/.emacs.d/layers/+lang/c-c++/global_conf.py	/^def FindSiblingFileForHeader(database, filename):$/;"	f
FlagSet.New	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.New()$/;"	f
FlagSet._flagsForScope	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet._flagsForScope(scope)$/;"	f
FlagSet.addFlag	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.addFlag(scope, flag)$/;"	f
FlagSet.clearFlags	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.clearFlags(scope)$/;"	f
FlagSet.removeFlag	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.removeFlag(scope, flag)$/;"	f
FlagSet.renderToString	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.renderToString()$/;"	f
FlagsForFile	conf/emacs/.emacs.d/layers/+lang/c-c++/global_conf.py	/^def FlagsForFile(filename):$/;"	f
FlagsFromClangComplete	conf/emacs/.emacs.d/layers/+lang/c-c++/global_conf.py	/^def FlagsFromClangComplete(root, filename):$/;"	f
FlagsFromCompilationDatabase	conf/emacs/.emacs.d/layers/+lang/c-c++/global_conf.py	/^def FlagsFromCompilationDatabase(root, filename):$/;"	f
Fold	conf/vim/.vim/custom/coc.vim	/^command! -nargs=? Fold :call     CocAction('fold', <f-args>)$/;"	c
Fold	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^command! -nargs=? Fold :call     CocAction('fold', <f-args>)$/;"	c
FoldOverwrite_Simple_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Folding.py	/^class FoldOverwrite_Simple_ECR(_VimTest):$/;"	c
Fold_DeleteMiddleLine_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Folding.py	/^class Fold_DeleteMiddleLine_ECR(_VimTest):$/;"	c
Foldexpr_markdown	conf/vim/.vim/plugged/vim-markdown/after/ftplugin/markdown.vim	/^    function! Foldexpr_markdown(lnum)$/;"	f
FoldingEnabled_SnippetWithFold_ExpectNoFolding	conf/vim/.vim/plugged/ultisnips/test/test_Folding.py	/^class FoldingEnabled_SnippetWithFold_ExpectNoFolding(_VimTest):$/;"	c
Foldtext_markdown	conf/vim/.vim/plugged/vim-markdown/after/ftplugin/markdown.vim	/^    function! Foldtext_markdown()$/;"	f
Foo	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/fmt/src/imports/goimports.go	/^func Foo(log *logging.TestLogger) {$/;"	f
Foo	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/fmt/src/imports/goimports_golden.go	/^func Foo(log *logging.TestLogger) {$/;"	f
Format	conf/vim/.vim/custom/coc.vim	/^command! -nargs=0 Format :call CocActionAsync('format')$/;"	c
Format	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^command! -nargs=0 Format :call CocActionAsync('format')$/;"	c
FormatFromSelected	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:FormatFromSelected(type)$/;"	f
Frame-Commands	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defgroup Frame-Commands nil$/;"	f
FriendlyName	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^function FriendlyName(test_name)$/;"	f
GTabularize	conf/vim/.vim/plugged/tabular/plugin/Tabular.vim	/^   \\ GTabularize <line1>,<line2>$/;"	c
GenerateMarkdownTOC	conf/vim/.vim/custom/functions.vim	/^function! GenerateMarkdownTOC()$/;"	f
GetBuffer	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^function! GetBuffer() abort$/;"	f
GetFlagsForHeader	conf/emacs/.emacs.d/layers/+lang/c-c++/global_conf.py	/^def GetFlagsForHeader(database_path, database, filename):$/;"	f
GetFlagsForSourceFile	conf/emacs/.emacs.d/layers/+lang/c-c++/global_conf.py	/^def GetFlagsForSourceFile(database_path, database, filename):$/;"	f
GetGoHTMLTmplIndent	conf/vim/.vim/plugged/vim-go/indent/gohtmltmpl.vim	/^function! GetGoHTMLTmplIndent(lnum)$/;"	f
GetHeaderLevel	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:GetHeaderLevel(...)$/;"	f
GetHeaderLineNum	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:GetHeaderLineNum(...)$/;"	f
GetHeaderList	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:GetHeaderList()$/;"	f
GetLevelOfHeaderAtLine	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:GetLevelOfHeaderAtLine(linenum)$/;"	f
GetMarkdownIndent	conf/vim/.vim/plugged/vim-markdown/indent/markdown.vim	/^function GetMarkdownIndent()$/;"	f
GetNextHeaderLineNumberAtLevel	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:GetNextHeaderLineNumberAtLevel(level, ...)$/;"	f
GetParentHeaderLineNumber	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:GetParentHeaderLineNumber(...)$/;"	f
GetPreviousHeaderLineNumberAtLevel	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:GetPreviousHeaderLineNumberAtLevel(level, ...)$/;"	f
GetUserExtraFlags	conf/emacs/.emacs.d/layers/+lang/c-c++/global_conf.py	/^def GetUserExtraFlags(filename):$/;"	f
Git	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^class Git:$/;"	c
GitGutter	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutter    call gitgutter#process_buffer(bufnr(''), 1)$/;"	c
GitGutterAll	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterAll call gitgutter#all(1)$/;"	c
GitGutterBufferDisable	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterBufferDisable call gitgutter#buffer_disable()$/;"	c
GitGutterBufferEnable	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterBufferEnable  call gitgutter#buffer_enable()$/;"	c
GitGutterBufferToggle	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterBufferToggle  call gitgutter#buffer_toggle()$/;"	c
GitGutterDebug	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterDebug call gitgutter#debug#debug()$/;"	c
GitGutterDiffOrig	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterDiffOrig call gitgutter#difforig()$/;"	c
GitGutterDisable	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterDisable call gitgutter#disable()$/;"	c
GitGutterEnable	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterEnable  call gitgutter#enable()$/;"	c
GitGutterFold	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterFold call gitgutter#fold#toggle()$/;"	c
GitGutterGetHunkSummary	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunkSummary()$/;"	f
GitGutterGetHunks	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunks()$/;"	f
GitGutterLineHighlightsDisable	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsDisable call gitgutter#highlight#line_disable()$/;"	c
GitGutterLineHighlightsEnable	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsEnable  call gitgutter#highlight#line_enable()$/;"	c
GitGutterLineHighlightsToggle	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsToggle  call gitgutter#highlight#line_toggle()$/;"	c
GitGutterLineNrHighlightsDisable	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineNrHighlightsDisable call gitgutter#highlight#linenr_disable()$/;"	c
GitGutterLineNrHighlightsEnable	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineNrHighlightsEnable  call gitgutter#highlight#linenr_enable()$/;"	c
GitGutterLineNrHighlightsToggle	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineNrHighlightsToggle  call gitgutter#highlight#linenr_toggle()$/;"	c
GitGutterNextHunk	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar -count=1 GitGutterNextHunk call gitgutter#hunk#next_hunk(<count>)$/;"	c
GitGutterPrevHunk	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar -count=1 GitGutterPrevHunk call gitgutter#hunk#prev_hunk(<count>)$/;"	c
GitGutterPreviewHunk	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterPreviewHunk call gitgutter#hunk#preview()$/;"	c
GitGutterQuickFix	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterQuickFix call gitgutter#quickfix(0)$/;"	c
GitGutterQuickFixCurrentFile	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterQuickFixCurrentFile call gitgutter#quickfix(1)$/;"	c
GitGutterSignsDisable	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsDisable call gitgutter#sign#disable()$/;"	c
GitGutterSignsEnable	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsEnable  call gitgutter#sign#enable()$/;"	c
GitGutterSignsToggle	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsToggle  call gitgutter#sign#toggle()$/;"	c
GitGutterStageHunk	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar -range=% GitGutterStageHunk call gitgutter#hunk#stage(<line1>,<line2>)$/;"	c
GitGutterToggle	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterToggle  call gitgutter#toggle()$/;"	c
GitGutterUndoHunk	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterUndoHunk    call gitgutter#hunk#undo()$/;"	c
GitHub	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^class GitHub:$/;"	c
GlobalChange	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! s:GlobalChange(dict, key, val)$/;"	f
GoAddTags	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range GoAddTags call go#tags#Add(<line1>, <line2>, <count>, <f-args>)$/;"	c
GoAddWorkspace	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=+ -complete=dir GoAddWorkspace call go#lsp#AddWorkspaceDirectory(<f-args>)$/;"	c
GoAlternate	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -bang GoAlternate call go#alternate#Switch(<bang>0, '')$/;"	c
GoAsmFmtAutoSaveToggle	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoAsmFmtAutoSaveToggle call go#asmfmt#ToggleAsmFmtAutoSave()$/;"	c
GoAutoTypeInfoToggle	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoAutoTypeInfoToggle call go#complete#ToggleAutoTypeInfo()$/;"	c
GoBuild	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoBuild call go#cmd#Build(<bang>0,<f-args>)$/;"	c
GoBuildTags	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -bang GoBuildTags call go#cmd#BuildTags(<bang>0, <f-args>)$/;"	c
GoCallers	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoCallers call go#calls#Callers()$/;"	c
GoCoverage	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverage call go#coverage#Buffer(<bang>0, <f-args>)$/;"	c
GoCoverageBrowser	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverageBrowser call go#coverage#Browser(<bang>0, <f-args>)$/;"	c
GoCoverageClear	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverageClear call go#coverage#Clear()$/;"	c
GoCoverageOverlay	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=1 -complete=file GoCoverageOverlay call go#coverage#Overlay(<f-args>)$/;"	c
GoCoverageToggle	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverageToggle call go#coverage#BufferToggle(<bang>0, <f-args>)$/;"	c
GoDebugAttach	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^  command! -nargs=1 GoDebugAttach call go#debug#Start('attach', <f-args>)$/;"	c
GoDebugBreakpoint	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^  command! -nargs=? GoDebugBreakpoint call go#debug#Breakpoint(<f-args>)$/;"	c
GoDebugConnect	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^  command! -nargs=? GoDebugConnect call go#debug#Start('connect', <f-args>)$/;"	c
GoDebugStart	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^  command! -nargs=* -complete=customlist,go#package#Complete GoDebugStart call go#debug#Start('debug', <f-args>)$/;"	c
GoDebugTest	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^  command! -nargs=* -complete=customlist,go#package#Complete GoDebugTest  call go#debug#Start('test', <f-args>)$/;"	c
GoDebugTestFunc	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^  command! -nargs=* GoDebugTestFunc  call go#debug#TestFunc(<f-args>)$/;"	c
GoDecls	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -complete=file GoDecls call go#decls#Decls(0, <q-args>)$/;"	c
GoDeclsDir	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -complete=dir GoDeclsDir call go#decls#Decls(1, <q-args>)$/;"	c
GoDef	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range GoDef :call go#def#Jump('', 0)$/;"	c
GoDefPop	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoDefPop :call go#def#StackPop(<f-args>)$/;"	c
GoDefStack	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoDefStack :call go#def#Stack(<f-args>)$/;"	c
GoDefStackClear	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoDefStackClear :call go#def#StackClear(<f-args>)$/;"	c
GoDefType	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range GoDefType :call go#def#Jump('', 1)$/;"	c
GoDeps	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoDeps echo go#tool#Deps()$/;"	c
GoDiagnostics	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoDiagnostics call go#lint#Diagnostics(<bang>0, <f-args>)$/;"	c
GoDoc	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range -complete=customlist,go#package#Complete GoDoc call go#doc#Open('new', 'split', <f-args>)$/;"	c
GoDoc	conf/vim/.vim/plugged/vim-go/ftplugin/godoc/commands.vim	/^command! -nargs=* -range -complete=customlist,go#package#Complete GoDoc call go#doc#Open('new', 'split', <f-args>)$/;"	c
GoDocBrowser	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range -complete=customlist,go#package#Complete GoDocBrowser call go#doc#OpenBrowser(<f-args>)$/;"	c
GoDocBrowser	conf/vim/.vim/plugged/vim-go/ftplugin/godoc/commands.vim	/^command! -nargs=* -range -complete=customlist,go#package#Complete GoDocBrowser call go#doc#OpenBrowser(<f-args>)$/;"	c
GoDrop	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -complete=customlist,go#package#Complete GoDrop call go#import#SwitchImport(0, '', <f-args>, '')$/;"	c
GoErrCheck	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang -complete=customlist,go#package#Complete GoErrCheck call go#lint#Errcheck(<bang>0, <f-args>)$/;"	c
GoExtract	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -range GoExtract call go#extract#Extract(<line1>, <line2>)$/;"	c
GoFiles	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -complete=customlist,go#tool#ValidFiles GoFiles echo go#tool#Files(<f-args>)$/;"	c
GoFillStruct	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFillStruct call go#fillstruct#FillStruct()$/;"	c
GoFmt	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFmt call go#fmt#Format(0)$/;"	c
GoFmtAutoSaveToggle	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFmtAutoSaveToggle call go#fmt#ToggleFmtAutoSave()$/;"	c
GoGenerate	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoGenerate call go#cmd#Generate(<bang>0,<f-args>)$/;"	c
GoIfErr	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoIfErr call go#iferr#Generate()$/;"	c
GoImpl	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -complete=customlist,go#impl#Complete GoImpl call go#impl#Impl(<f-args>)$/;"	c
GoImplements	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoImplements call go#implements#Implements(<count>)$/;"	c
GoImport	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=1 -bang -complete=customlist,go#package#Complete GoImport call go#import#SwitchImport(1, '', <f-args>, '<bang>')$/;"	c
GoImportAs	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang -complete=customlist,go#package#Complete GoImportAs call go#import#SwitchImport(1, <f-args>, '<bang>')$/;"	c
GoImports	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoImports call go#fmt#Format(1)$/;"	c
GoIndent	conf/vim/.vim/plugged/vim-go/indent/go.vim	/^function! GoIndent(lnum) abort$/;"	f
GoInfo	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoInfo call go#tool#Info(1)$/;"	c
GoInstall	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoInstall call go#cmd#Install(<bang>0, <f-args>)$/;"	c
GoInstallBinaries	conf/vim/.vim/plugged/vim-go/plugin/go.vim	/^command! -nargs=* -complete=customlist,s:complete GoInstallBinaries call s:GoInstallBinaries(-1, <f-args>)$/;"	c
GoInstallBinaries	conf/vim/.vim/plugged/vim-go/plugin/go.vim	/^function! s:GoInstallBinaries(updateBinaries, ...)$/;"	f
GoLSPDebugBrowser	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoLSPDebugBrowser call go#lsp#DebugBrowser()$/;"	c
GoLint	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoLint call go#lint#Golint(<bang>0, <f-args>)$/;"	c
GoMetaLinter	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoMetaLinter call go#lint#Gometa(<bang>0, 0, <f-args>)$/;"	c
GoMetaLinterAutoSaveToggle	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoMetaLinterAutoSaveToggle call go#lint#ToggleMetaLinterAutoSave()$/;"	c
GoMinisnip	conf/vim/.vim/plugged/vim-go/ftplugin/go/snippets.vim	/^function! s:GoMinisnip() abort$/;"	f
GoModFmt	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 -range GoModFmt call go#mod#Format()$/;"	c
GoModFmt	conf/vim/.vim/plugged/vim-go/ftplugin/gomod/commands.vim	/^command! -nargs=0 -range GoModFmt call go#mod#Format()$/;"	c
GoModFmtAutoSaveToggle	conf/vim/.vim/plugged/vim-go/ftplugin/gomod/commands.vim	/^command! -nargs=0 GoModFmtAutoSaveToggle call go#mod#ToggleModFmtAutoSave()$/;"	c
GoModReload	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoModReload call go#lsp#ModReload()$/;"	c
GoNeosnippet	conf/vim/.vim/plugged/vim-go/ftplugin/go/snippets.vim	/^function! s:GoNeosnippet() abort$/;"	f
GoPath	conf/vim/.vim/plugged/vim-go/plugin/go.vim	/^command! -nargs=? -complete=dir GoPath call go#path#GoPath(<f-args>)$/;"	c
GoPlay	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 -range=% GoPlay call go#play#Share(<count>, <line1>, <line2>)$/;"	c
GoReferrers	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoReferrers call go#referrers#Referrers(<count>)$/;"	c
GoRemoveTags	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range GoRemoveTags call go#tags#Remove(<line1>, <line2>, <count>, <f-args>)$/;"	c
GoRename	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -complete=customlist,go#rename#Complete GoRename call go#rename#Rename(<bang>0, <f-args>)$/;"	c
GoReportGitHubIssue	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoReportGitHubIssue call go#issue#New()$/;"	c
GoRun	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang -complete=file GoRun call go#cmd#Run(<bang>0,<f-args>)$/;"	c
GoSameIds	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIds call go#sameids#SameIds(1)$/;"	c
GoSameIdsAutoToggle	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIdsAutoToggle call go#sameids#AutoToggleSameIds()$/;"	c
GoSameIdsClear	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIdsClear call go#sameids#ClearSameIds()$/;"	c
GoSameIdsToggle	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -range=0 GoSameIdsToggle call go#sameids#ToggleSameIds()$/;"	c
GoTemplateAutoCreateToggle	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoTemplateAutoCreateToggle call go#template#ToggleAutoCreate()$/;"	c
GoTest	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTest call go#test#Test(<bang>0, 0, <f-args>)$/;"	c
GoTestCompile	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTestCompile call go#test#Test(<bang>0, 1, <f-args>)$/;"	c
GoTestFile	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTestFile call go#test#File(<bang>0, <f-args>)$/;"	c
GoTestFunc	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTestFunc call go#test#Func(<bang>0, <f-args>)$/;"	c
GoToggleTermCloseOnExit	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! GoToggleTermCloseOnExit call go#term#ToggleCloseOnExit()$/;"	c
GoUltiSnips	conf/vim/.vim/plugged/vim-go/ftplugin/go/snippets.vim	/^function! s:GoUltiSnips() abort$/;"	f
GoUpdateBinaries	conf/vim/.vim/plugged/vim-go/plugin/go.vim	/^command! -nargs=* -complete=customlist,s:complete GoUpdateBinaries  call s:GoInstallBinaries(1, <f-args>)$/;"	c
GoVet	conf/vim/.vim/plugged/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoVet call go#lint#Vet(<bang>0, <f-args>)$/;"	c
GodocView	conf/vim/.vim/plugged/vim-go/autoload/go/doc.vim	/^function! s:GodocView(newposition, position, content, package) abort$/;"	f
H	conf/vim/.vim/plugged/vim-operator-user/t/example-b-advanced.vim	/^map H  <Plug>(operator-align-left)$/;"	m
H	conf/vim/.vim/plugged/vim-operator-user/t/example-c-ex-command.vim	/^map H  <Plug>(operator-align-left)$/;"	m
H2j	conf/vim/.vim/plugged/vim-operator-user/t/example-b-advanced.vim	/^    normal H2j$/;"	m
H2j	conf/vim/.vim/plugged/vim-operator-user/t/example-c-ex-command.vim	/^    normal H2j$/;"	m
HEADER_EXTENSIONS	conf/emacs/.emacs.d/layers/+lang/c-c++/global_conf.py	/^HEADER_EXTENSIONS = ['.h', '.hxx', '.hpp', '.hh'$/;"	v
HEADER_FILES	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/Makefile	/^HEADER_FILES := \\$/;"	m
HEADER_FILES	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/Makefile	/^HEADER_FILES := \\$/;"	m
HIGHLIGHTS	conf/zsh/.oh-my-zsh/plugins/aliases/termcolor.py	/^HIGHLIGHTS = dict($/;"	v
HandleCharInsert	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:HandleCharInsert(char, bufnr) abort$/;"	f
HandleInsertLeave	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:HandleInsertLeave(bufnr) abort$/;"	f
HandleTextChangedI	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:HandleTextChangedI(bufnr) abort$/;"	f
HandleWinClosed	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:HandleWinClosed(winid) abort$/;"	f
HandleWinScrolled	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:HandleWinScrolled(winid) abort$/;"	f
HasPath	conf/vim/.vim/plugged/vim-go/autoload/go/path.vim	/^function! s:HasPath(path) abort$/;"	f
HeaderDecrease	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^command! -buffer -range=% HeaderDecrease call s:HeaderDecrease(<line1>, <line2>)$/;"	c
HeaderDecrease	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:HeaderDecrease(line1, line2, ...)$/;"	f
HeaderIncrease	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^command! -buffer -range=% HeaderIncrease call s:HeaderDecrease(<line1>, <line2>, 1)$/;"	c
Highlight	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:Highlight() abort$/;"	f
HtmlHiLink	conf/vim/.vim/plugged/vim-markdown/syntax/markdown.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	conf/vim/.vim/plugged/vim-markdown/syntax/markdown.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
ICON_ACCOUNT	workflows/Ariafred/src/workflow/workflow.py	/^ICON_ACCOUNT = os.path.join(ICON_ROOT, 'Accounts.icns')$/;"	v
ICON_BURN	workflows/Ariafred/src/workflow/workflow.py	/^ICON_BURN = os.path.join(ICON_ROOT, 'BurningIcon.icns')$/;"	v
ICON_CLOCK	workflows/Ariafred/src/workflow/workflow.py	/^ICON_CLOCK = os.path.join(ICON_ROOT, 'Clock.icns')$/;"	v
ICON_COLOR	workflows/Ariafred/src/workflow/workflow.py	/^ICON_COLOR = os.path.join(ICON_ROOT, 'ProfileBackgroundColor.icns')$/;"	v
ICON_COLOUR	workflows/Ariafred/src/workflow/workflow.py	/^ICON_COLOUR = ICON_COLOR  # Queen's English, if you please$/;"	v
ICON_EJECT	workflows/Ariafred/src/workflow/workflow.py	/^ICON_EJECT = os.path.join(ICON_ROOT, 'EjectMediaIcon.icns')$/;"	v
ICON_ERROR	workflows/Ariafred/src/workflow/workflow.py	/^ICON_ERROR = os.path.join(ICON_ROOT, 'AlertStopIcon.icns')$/;"	v
ICON_FAVORITE	workflows/Ariafred/src/workflow/workflow.py	/^ICON_FAVORITE = os.path.join(ICON_ROOT, 'ToolbarFavoritesIcon.icns')$/;"	v
ICON_FAVOURITE	workflows/Ariafred/src/workflow/workflow.py	/^ICON_FAVOURITE = ICON_FAVORITE$/;"	v
ICON_GROUP	workflows/Ariafred/src/workflow/workflow.py	/^ICON_GROUP = os.path.join(ICON_ROOT, 'GroupIcon.icns')$/;"	v
ICON_HELP	workflows/Ariafred/src/workflow/workflow.py	/^ICON_HELP = os.path.join(ICON_ROOT, 'HelpIcon.icns')$/;"	v
ICON_HOME	workflows/Ariafred/src/workflow/workflow.py	/^ICON_HOME = os.path.join(ICON_ROOT, 'HomeFolderIcon.icns')$/;"	v
ICON_INFO	workflows/Ariafred/src/workflow/workflow.py	/^ICON_INFO = os.path.join(ICON_ROOT, 'ToolbarInfo.icns')$/;"	v
ICON_NETWORK	workflows/Ariafred/src/workflow/workflow.py	/^ICON_NETWORK = os.path.join(ICON_ROOT, 'GenericNetworkIcon.icns')$/;"	v
ICON_NOTE	workflows/Ariafred/src/workflow/workflow.py	/^ICON_NOTE = os.path.join(ICON_ROOT, 'AlertNoteIcon.icns')$/;"	v
ICON_ROOT	workflows/Ariafred/src/workflow/workflow.py	/^ICON_ROOT = '\/System\/Library\/CoreServices\/CoreTypes.bundle\/Contents\/Resources'$/;"	v
ICON_SETTINGS	workflows/Ariafred/src/workflow/workflow.py	/^ICON_SETTINGS = os.path.join(ICON_ROOT, 'ToolbarAdvanced.icns')$/;"	v
ICON_SWIRL	workflows/Ariafred/src/workflow/workflow.py	/^ICON_SWIRL = os.path.join(ICON_ROOT, 'ErasingIcon.icns')$/;"	v
ICON_SWITCH	workflows/Ariafred/src/workflow/workflow.py	/^ICON_SWITCH = os.path.join(ICON_ROOT, 'General.icns')$/;"	v
ICON_SYNC	workflows/Ariafred/src/workflow/workflow.py	/^ICON_SYNC = os.path.join(ICON_ROOT, 'Sync.icns')$/;"	v
ICON_TRASH	workflows/Ariafred/src/workflow/workflow.py	/^ICON_TRASH = os.path.join(ICON_ROOT, 'TrashIcon.icns')$/;"	v
ICON_USER	workflows/Ariafred/src/workflow/workflow.py	/^ICON_USER = os.path.join(ICON_ROOT, 'UserIcon.icns')$/;"	v
ICON_WARNING	workflows/Ariafred/src/workflow/workflow.py	/^ICON_WARNING = os.path.join(ICON_ROOT, 'AlertCautionIcon.icns')$/;"	v
ICON_WEB	workflows/Ariafred/src/workflow/workflow.py	/^ICON_WEB = os.path.join(ICON_ROOT, 'BookmarkIcon.icns')$/;"	v
IMMoving_AcceptInputWhenMoved_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^class IMMoving_AcceptInputWhenMoved_ECR(_VimTest):$/;"	c
IMMoving_CursorsKeys_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^class IMMoving_CursorsKeys_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideAbove_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideAbove_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideBelow_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideBelow_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideLeft_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideLeft_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideRight_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideRight_ECR(_VimTest):$/;"	c
IMMoving_NoExitingEventAtEnd_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^class IMMoving_NoExitingEventAtEnd_ECR(_VimTest):$/;"	c
IMMoving_NoExiting_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^class IMMoving_NoExiting_ECR(_VimTest):$/;"	c
IMMoving_NotExitingWhenBarelyOutsideLeft_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^class IMMoving_NotExitingWhenBarelyOutsideLeft_ECR(_VimTest):$/;"	c
INCLUDES	conf/tmux/.tmux/plugins/tmux-themepack/Makefile	/^INCLUDES := $(shell find src -name '*.tmuxsh')$/;"	m
INITIALS	workflows/Ariafred/src/workflow/workflow.py	/^INITIALS = string.ascii_uppercase + string.digits$/;"	v
INSTALL	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/Makefile	/^INSTALL?=install -c$/;"	m
INSTALL	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/Makefile	/^INSTALL?=install -c$/;"	m
INSTALL	conf/zsh/.oh-my-zsh/plugins/zsh-navigation-tools/Makefile	/^INSTALL?=install -c$/;"	m
IndentUtil	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^class IndentUtil:$/;"	c
IndexProcessor	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^class IndexProcessor(HTMLParser):$/;"	c
InsertNToc	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^command! -buffer -nargs=? InsertNToc call s:InsertToc('numbers', <args>)$/;"	c
InsertToc	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^command! -buffer -nargs=? InsertToc call s:InsertToc('bullets', <args>)$/;"	c
InsertToc	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:InsertToc(format, ...)$/;"	f
InstallOptions	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:InstallOptions(...)abort$/;"	f
IsBlankLine	conf/vim/.vim/plugged/vim-markdown/indent/markdown.vim	/^function! s:IsBlankLine(line)$/;"	f
IsHeaderLine	conf/vim/.vim/plugged/vim-markdown/indent/markdown.vim	/^function! s:IsHeaderLine(line)$/;"	f
IsHighlightSourcesEnabledForBuffer	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:IsHighlightSourcesEnabledForBuffer()$/;"	f
IsLiStart	conf/vim/.vim/plugged/vim-markdown/indent/markdown.vim	/^function! s:IsLiStart(line)$/;"	f
IsMkdCode	conf/vim/.vim/plugged/vim-markdown/indent/markdown.vim	/^function! s:IsMkdCode(lnum)$/;"	f
Item	workflows/Ariafred/src/workflow/workflow.py	/^class Item(object):$/;"	c
Item3	workflows/Ariafred/src/workflow/workflow3.py	/^class Item3(object):$/;"	c
JB	conf/vim/.vim/plugged/ultisnips/test/constant.py	/^JB = "+"  # Jump backwards$/;"	v
JF	conf/vim/.vim/plugged/ultisnips/test/constant.py	/^JF = "?"  # Jump forwards$/;"	v
JSONSerializer	workflows/Ariafred/src/workflow/workflow.py	/^class JSONSerializer(object):$/;"	c
JumpDirection	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/position.py	/^class JumpDirection(Enum):$/;"	c
JumpForward_DefSnippet	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^class JumpForward_DefSnippet(_VimTest):$/;"	c
K	conf/vim/.vim/custom/coc.vim	/^nnoremap <silent> K :call ShowDocumentation()<CR>$/;"	m
K	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nnoremap <silent> K :call ShowDocumentation()<CR>$/;"	m
K	conf/vim/.vim/plugged/vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> K :GoDoc<cr>$/;"	m
K	conf/vim/.vim/plugged/vim-go/ftplugin/godoc.vim	/^  nnoremap <buffer> <silent> K :GoDoc<cr>$/;"	m
KeyMap.Add	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
KeyMap.All	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Compare	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Compare(keyMap1, keyMap2)$/;"	f
KeyMap.Create	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.FindFor	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
KeyMap.Invoke	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
KeyMap.Remove	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
KeyMap.bind	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
KeyMap.invoke	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
KeychainError	workflows/Ariafred/src/workflow/workflow.py	/^class KeychainError(Exception):$/;"	c
L	conf/vim/.vim/plugged/vim-operator-user/t/example-a-basic.vim	/^map L  <Plug>(operator-align-right)$/;"	m
L	conf/vim/.vim/plugged/vim-operator-user/t/example-b-advanced.vim	/^map L  <Plug>(operator-align-right)$/;"	m
L	conf/vim/.vim/plugged/vim-operator-user/t/example-c-ex-command.vim	/^map L  <Plug>(operator-align-right)$/;"	m
L2j	conf/vim/.vim/plugged/vim-operator-user/t/example-a-basic.vim	/^    normal L2j$/;"	m
L2j	conf/vim/.vim/plugged/vim-operator-user/t/example-b-advanced.vim	/^    normal L2j$/;"	m
L2j	conf/vim/.vim/plugged/vim-operator-user/t/example-c-ex-command.vim	/^    normal L2j$/;"	m
LINES_MAX	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^LINES_MAX = 150$/;"	v
LOAD_FILES	conf/emacs/.emacs.d/tests/core/Makefile	/^LOAD_FILES = init.el core\/core-versions.el core\/core-load-paths.el$/;"	m
LOAD_FILES	conf/emacs/.emacs.d/tests/doc/Makefile	/^LOAD_FILES = init.el$/;"	m
LOAD_FILES	conf/emacs/.emacs.d/tests/layers/+distribution/spacemacs-base/Makefile	/^LOAD_FILES = init.el$/;"	m
LOAD_FILES	conf/emacs/.emacs.d/tests/layers/+distribution/spacemacs/Makefile	/^LOAD_FILES = init.el$/;"	m
LS	conf/vim/.vim/plugged/ultisnips/test/constant.py	/^LS = "@"  # List snippets$/;"	v
LeaveTrailingWhitespace	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class LeaveTrailingWhitespace(_VimTest):$/;"	c
Left	conf/vim/.vim/plugged/tabular/autoload/tabular.vim	/^function! s:Left(string, fieldwidth)$/;"	f
LineIterator	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text.py	/^class LineIterator:$/;"	c
ListAllAvailable_BraceInFront_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_BraceInFront_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_Disabled_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_Disabled_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_NonDefined_NoExpectionShouldBeRaised	conf/vim/.vim/plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_NonDefined_NoExpectionShouldBeRaised(_ListAllSnippets):$/;"	c
ListAllAvailable_NothingTyped_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_NothingTyped_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_SpaceInFront_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_SpaceInFront_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_testtyped_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_testtyped_ExpectCorrectResult(_ListAllSnippets):$/;"	c
LoadedExtensions	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:LoadedExtensions(...) abort$/;"	f
LockFile	workflows/Ariafred/src/workflow/util.py	/^class LockFile(object):$/;"	c
Log	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^function Log(msg)$/;"	f
LoggingMixin	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^class LoggingMixin(object):$/;"	c
LongestCommonIndent	conf/vim/.vim/plugged/tabular/autoload/tabular.vim	/^function! s:LongestCommonIndent(strings)$/;"	f
M	conf/vim/.vim/plugged/vim-operator-user/t/example-b-advanced.vim	/^map M  <Plug>(operator-align-center)$/;"	m
M	conf/vim/.vim/plugged/vim-operator-user/t/example-c-ex-command.vim	/^map M  <Plug>(operator-align-center)$/;"	m
M.getHighlights	conf/vim/.vim/plugged/coc.nvim/lua/coc/highlight.lua	/^function M.getHighlights(bufnr, key, s, e)$/;"	f
M.set	conf/vim/.vim/plugged/coc.nvim/lua/coc/highlight.lua	/^function M.set(bufnr, ns, highlights, priority)$/;"	f
M2j	conf/vim/.vim/plugged/vim-operator-user/t/example-b-advanced.vim	/^    normal M2j$/;"	m
M2j	conf/vim/.vim/plugged/vim-operator-user/t/example-c-ex-command.vim	/^    normal M2j$/;"	m
MAJOR_VERSION	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/makefile	/^MAJOR_VERSION = $(shell python --version 2>&1 | grep -o "Python [0-9]" | grep -o "[0-9]")$/;"	m
MAKEFILE_DIR	conf/vim/.vim/plugged/ultisnips/Makefile	/^MAKEFILE_DIR := $(dir ${MAKEFILE_PATH})$/;"	m
MAKEFILE_PATH	conf/vim/.vim/plugged/ultisnips/Makefile	/^MAKEFILE_PATH := $(abspath $(lastword $(MAKEFILE_LIST)))$/;"	m
MATCH_ALL	workflows/Ariafred/src/workflow/workflow.py	/^MATCH_ALL = 127$/;"	v
MATCH_ALLCHARS	workflows/Ariafred/src/workflow/workflow.py	/^MATCH_ALLCHARS = 64$/;"	v
MATCH_ATOM	workflows/Ariafred/src/workflow/workflow.py	/^MATCH_ATOM = 4$/;"	v
MATCH_CAPITALS	workflows/Ariafred/src/workflow/workflow.py	/^MATCH_CAPITALS = 2$/;"	v
MATCH_INITIALS	workflows/Ariafred/src/workflow/workflow.py	/^MATCH_INITIALS = 24$/;"	v
MATCH_INITIALS_CONTAIN	workflows/Ariafred/src/workflow/workflow.py	/^MATCH_INITIALS_CONTAIN = 16$/;"	v
MATCH_INITIALS_STARTSWITH	workflows/Ariafred/src/workflow/workflow.py	/^MATCH_INITIALS_STARTSWITH = 8$/;"	v
MATCH_STARTSWITH	workflows/Ariafred/src/workflow/workflow.py	/^MATCH_STARTSWITH = 1$/;"	v
MATCH_SUBSTRING	workflows/Ariafred/src/workflow/workflow.py	/^MATCH_SUBSTRING = 32$/;"	v
MakeRelativePathsInFlagsAbsolute	conf/emacs/.emacs.d/layers/+lang/c-c++/global_conf.py	/^def MakeRelativePathsInFlagsAbsolute(flags, working_directory):$/;"	f
MapNormVis	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:MapNormVis(rhs,lhs)$/;"	f
MapNotHasmapto	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:MapNotHasmapto(lhs, rhs)$/;"	f
MarkdownClearSyntaxVariables	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:MarkdownClearSyntaxVariables()$/;"	f
MarkdownHighlightSources	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:MarkdownHighlightSources(force)$/;"	f
MarkdownRefreshSyntax	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:MarkdownRefreshSyntax(force)$/;"	f
MarkdownSetupFoldLevel	conf/vim/.vim/plugged/vim-markdown/after/ftplugin/markdown.vim	/^function! s:MarkdownSetupFoldLevel()$/;"	f
MarkdownSetupFolding	conf/vim/.vim/plugged/vim-markdown/after/ftplugin/markdown.vim	/^function! s:MarkdownSetupFolding()$/;"	f
Markdown_GetUrlForPosition	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:Markdown_GetUrlForPosition(lnum, col)$/;"	f
MatchIsTooCheap	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class MatchIsTooCheap(_Base, unittest.TestCase):$/;"	c
MenuController.New	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.isMinimal	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.isMinimal()$/;"	f
MenuController.showMenu	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
Mirror	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/mirror.py	/^class Mirror(NoneditableTextObject):$/;"	c
MirrorBeforeTabstopLeave_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class MirrorBeforeTabstopLeave_ExpectCorrectResult(_VimTest):$/;"	c
MirrorBeforeTabstopOverwrite_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class MirrorBeforeTabstopOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
MirrorRealLifeExample_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class MirrorRealLifeExample_ExpectCorrectResult(_VimTest):$/;"	c
MirrorToken	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class MirrorToken(Token):$/;"	c
Mirror_TestKillTabstop_Kill	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKillTabstop_Kill(_VimTest):$/;"	c
Mirror_TestKill_InsertAfter_NoKill	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertAfter_NoKill(_VimTest):$/;"	c
Mirror_TestKill_InsertBefore_NoKill	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertBefore_NoKill(_VimTest):$/;"	c
Mirror_TestKill_InsertBeginning_Kill	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertBeginning_Kill(_VimTest):$/;"	c
Mirror_TestKill_InsertEnd_Kill	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertEnd_Kill(_VimTest):$/;"	c
MissingDoc	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/lint/lint.go	/^func MissingDoc() {$/;"	f
MissingFooDoc	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/foo/foo.go	/^func MissingFooDoc() {$/;"	f
Mkd	conf/vim/.vim/plugged/vim-markdown/after/ftplugin/markdown.vim	/^augroup Mkd$/;"	a
Mkd	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^augroup Mkd$/;"	a
Modifier	workflows/Ariafred/src/workflow/workflow3.py	/^class Modifier(object):$/;"	c
MovePosition_DelSameLine	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSameLine(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSameLine1	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSameLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSecondLine	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSecondLine(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSecondLine1	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSecondLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_InsSameLine1	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_InsSameLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_InsSameLine2	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_InsSameLine2(_MPBase, unittest.TestCase):$/;"	c
MoveToCurHeader	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:MoveToCurHeader()$/;"	f
MoveToNextHeader	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:MoveToNextHeader()$/;"	f
MoveToNextSiblingHeader	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:MoveToNextSiblingHeader()$/;"	f
MoveToParentHeader	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:MoveToParentHeader()$/;"	f
MoveToPreviousHeader	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:MoveToPreviousHeader()$/;"	f
MoveToPreviousSiblingHeader	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:MoveToPreviousSiblingHeader()$/;"	f
MultiLine	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class MultiLine(_Base, unittest.TestCase):$/;"	c
MultiLineDefault_BS	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class MultiLineDefault_BS(_MultiLineDefault):$/;"	c
MultiLineDefault_Jump	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class MultiLineDefault_Jump(_MultiLineDefault):$/;"	c
MultiLineDefault_Type	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class MultiLineDefault_Type(_MultiLineDefault):$/;"	c
MultiWordSnippet_Simple	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWordSnippet_Simple(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^):$/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^):$/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose(_VimTest):$/;"	c
MultilineExpandTestTyping_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^class MultilineExpandTestTyping_ExpectCorrectResult(_VimTest):$/;"	c
MultilineExpand_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^class MultilineExpand_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult(_VimTest):$/;"	c
Multiple_ManySnippetsOneTrigger_ECR	conf/vim/.vim/plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_ManySnippetsOneTrigger_ECR(_VimTest):$/;"	c
Multiple_SimpleCaseEscapeOut_ECR	conf/vim/.vim/plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseEscapeOut_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectFirst_ECR	conf/vim/.vim/plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectFirst_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectSecond_ECR	conf/vim/.vim/plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectSecond_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectTooHigh_ESelectLast	conf/vim/.vim/plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectTooHigh_ESelectLast(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectZero_EEscape	conf/vim/.vim/plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectZero_EEscape(_MultipleMatches):$/;"	c
NAME	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/Makefile	/^NAME=zsh-syntax-highlighting$/;"	m
NAME	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/Makefile	/^NAME=zsh-syntax-highlighting$/;"	m
NAME	conf/zsh/.oh-my-zsh/plugins/zsh-navigation-tools/Makefile	/^NAME=zsh-navigation-tools$/;"	m
NERDTree	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree.AddPathFilter	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.AddPathFilter(callback)$/;"	f
NERDTree.Close	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.Close()$/;"	f
NERDTree.CursorToBookmarkTable	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToBookmarkTable()$/;"	f
NERDTree.CursorToTreeWin	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToTreeWin(...)$/;"	f
NERDTree.ExistsForBuf	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForBuf()$/;"	f
NERDTree.ExistsForTab	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForTab()$/;"	f
NERDTree.ForCurrentBuf	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentBuf()$/;"	f
NERDTree.ForCurrentTab	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentTab()$/;"	f
NERDTree.GetWinNum	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.GetWinNum()$/;"	f
NERDTree.IsOpen	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.IsOpen()$/;"	f
NERDTree.MustBeOpen	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.MustBeOpen()$/;"	f
NERDTree.New	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.New(path, type)$/;"	f
NERDTree.PathFilters	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.PathFilters()$/;"	f
NERDTree.changeRoot	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.changeRoot(node)$/;"	f
NERDTree.getRoot	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.getRoot()$/;"	f
NERDTree.isTabTree	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isTabTree()$/;"	f
NERDTree.isWinTree	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isWinTree()$/;"	f
NERDTree.previousBuf	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.previousBuf()$/;"	f
NERDTree.render	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.render()$/;"	f
NERDTree.setPreviousBuf	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.setPreviousBuf(bnum)$/;"	f
NERDTreeAddKeyMap	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddPathFilter	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddPathFilter(callback)$/;"	f
NERDTreeAddSubmenu	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeChDirOnTabSwitch	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeChDirOnTabSwitch$/;"	a
NERDTreeChangePermissions	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeChangePermissions()$/;"	f
NERDTreeCopyNode	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeCopyPath	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyPath()$/;"	f
NERDTreeDeleteNode	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeExecuteFileLinux	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFileLinux()$/;"	f
NERDTreeExecuteFileWindows	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFileWindows()$/;"	f
NERDTreeFocus	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeHijackNetrw	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeListNode	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNode()$/;"	f
NERDTreeListNodeWin32	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNodeWin32()$/;"	f
NERDTreeMoveNode	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRender	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealFileLinux	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealFileLinux()$/;"	f
NERDTreeRevealInExplorer	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInExplorer()$/;"	f
NERDTreeRevealInFinder	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeSystemCommand	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeSystemCommand()$/;"	f
NERDTreeToggleVCS	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/vcs.vim	/^command! -n=? -complete=dir -bar NERDTreeToggleVCS :call <SID>ToggleTabTreeVCS('<args>')$/;"	c
NERDTreeVCS	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/vcs.vim	/^command! -n=? -complete=dir -bar NERDTreeVCS :call <SID>CreateTabTreeVCS('<args>')$/;"	c
NEVER	conf/vim/.vim/plugged/vim-snippets/pythonx/javascript_snippets.py	/^NEVER = 'never'$/;"	v
NULL_BYTE	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^NULL_BYTE = CTRL_V + "000"$/;"	v
NextCharIsPair	conf/vim/.vim/custom/coc.vim	/^function! NextCharIsPair() abort$/;"	f
NoRedirectHandler	workflows/Ariafred/src/workflow/web.py	/^class NoRedirectHandler(urllib2.HTTPRedirectHandler):$/;"	c
NoUmlautsBeforeTriggerAndCharsAfter	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class NoUmlautsBeforeTriggerAndCharsAfter(_UmlautsBase):$/;"	c
No_Tab_Expand_ET	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_Leading_Spaces	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_Leading_Spaces(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_SW	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_SW(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_SW_TS	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_SW_TS(_No_Tab_Expand):$/;"	c
No_Tab_Expand_Leading_Spaces	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_Leading_Spaces(_No_Tab_Expand):$/;"	c
No_Tab_Expand_Leading_Tabs	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_Leading_Tabs(_No_Tab_Expand):$/;"	c
No_Tab_Expand_No_TS	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_No_TS(_No_Tab_Expand):$/;"	c
No_Tab_Expand_RealWorld	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_RealWorld(_TabExpand_RealWorld, _VimTest):$/;"	c
No_Tab_Expand_Simple	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_Simple(_No_Tab_Expand):$/;"	c
NonUnicodeDataInUnnamedRegister	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^class NonUnicodeDataInUnnamedRegister(_VimTest):$/;"	c
NoneditableTextObject	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^class NoneditableTextObject(TextObject):$/;"	c
Notifier.AddListener	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.AddListener(event, funcname)$/;"	f
Notifier.GetListenersForEvent	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersForEvent(name)$/;"	f
Notifier.GetListenersMap	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersMap()$/;"	f
Notifier.NotifyListeners	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.NotifyListeners(event, path, nerdtree, params)$/;"	f
NullByte_ExpandAfter	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^class NullByte_ExpandAfter(_VimTest):$/;"	c
NullByte_ListSnippets	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^class NullByte_ListSnippets(_VimTest):$/;"	c
OR	conf/vim/.vim/custom/coc.vim	/^command! -nargs=0 OR   :call     CocActionAsync('runCommand', 'editor.action.organizeImport')$/;"	c
OR	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^command! -nargs=0 OR   :call     CocActionAsync('runCommand', 'editor.action.organizeImport')$/;"	c
OldSelection_RealWorldCase_Test	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^class OldSelection_RealWorldCase_Test(_OS_Base):$/;"	c
OldSelection_SimpleTabstop_Test	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^class OldSelection_SimpleTabstop_Test(_OS_Base):$/;"	c
Op_command	conf/vim/.vim/plugged/vim-operator-user/t/example-b-advanced.vim	/^function! Op_command(motion_wiseness)$/;"	f
Op_command_right	conf/vim/.vim/plugged/vim-operator-user/t/example-a-basic.vim	/^function! Op_command_right(motion_wiseness)$/;"	f
Op_count	conf/vim/.vim/plugged/vim-operator-user/t/count-designations.vim	/^function! Op_count(_)$/;"	f
OpenConfig	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:OpenConfig()$/;"	f
OpenDiagnostics	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:OpenDiagnostics(...) abort$/;"	f
OpenUrlUnderCursor	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:OpenUrlUnderCursor()$/;"	f
Opener.New	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
Opener._bufInWindows	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._bufInWindows(bnum)$/;"	f
Opener._checkToCloseTree	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
Opener._firstUsableWindow	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._firstUsableWindow()$/;"	f
Opener._gotoTargetWin	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
Opener._isWindowUsable	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._isWindowUsable(winnumber)$/;"	f
Opener._newSplit	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
Opener._newVSplit	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
Opener._openDirectory	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
Opener._openFile	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
Opener._previousWindow	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
Opener._restoreCursorPos	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
Opener._reuseWindow	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
Opener._saveCursorPos	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
Opener.open	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
OperatorMemorize	conf/vim/.vim/plugged/vim-operator-user/t/register-designations.vim	/^function! OperatorMemorize(motion_wise)$/;"	f
OperatorVoidDelete	conf/vim/.vim/plugged/vim-operator-user/t/example-d-motion-type.vim	/^function! OperatorVoidDelete(motion_wise)$/;"	f
PATH	conf/vim/.vim/plugged/deoplete.nvim/Makefile	/^PATH := .\/vim-themis\/bin:$(PATH)$/;"	m
PE	sh/PEG.py	/^PE = float(input("current PE: "))$/;"	v
PEG	sh/PEG.py	/^def PEG(PE, expectation, current):$/;"	f
PLUGIN_TARGET	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/Makefile	/^PLUGIN_TARGET := zsh-autosuggestions.zsh$/;"	m
PLUGIN_TARGET	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/Makefile	/^PLUGIN_TARGET := zsh-autosuggestions.zsh$/;"	m
PREFIX	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/Makefile	/^PREFIX?=\/usr\/local$/;"	m
PREFIX	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/Makefile	/^PREFIX?=\/usr\/local$/;"	m
PREFIX	conf/zsh/.oh-my-zsh/plugins/zsh-navigation-tools/Makefile	/^PREFIX?=\/usr\/local$/;"	m
Pairwise	conf/emacs/.emacs.d/layers/+lang/c-c++/global_conf.py	/^def Pairwise(iterable):$/;"	f
Parent	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^Parent = typing.Union[deoplete.parent.SyncParent, deoplete.parent.AsyncParent]$/;"	v
Parse	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func Parse(r io.Reader) (*Node, error) {$/;"	f
ParseFragment	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func ParseFragment(r io.Reader, context *Node) ([]*Node, error) {$/;"	f
ParsePattern	conf/vim/.vim/plugged/tabular/plugin/Tabular.vim	/^function! s:ParsePattern(string)$/;"	f
ParseSnippets_ClearAll	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ClearAll(_VimTest):$/;"	c
ParseSnippets_ClearOne	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ClearOne(_VimTest):$/;"	c
ParseSnippets_ClearTwo	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ClearTwo(_VimTest):$/;"	c
ParseSnippets_ExtendsWithoutFiletype	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ExtendsWithoutFiletype(_VimTest):$/;"	c
ParseSnippets_Global_Local_Python	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_Global_Local_Python(_VimTest):$/;"	c
ParseSnippets_Global_Python	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_Global_Python(_VimTest):$/;"	c
ParseSnippets_Global_Python_After	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_Global_Python_After(_VimTest):$/;"	c
ParseSnippets_InvalidPriorityLine	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_InvalidPriorityLine(_VimTest):$/;"	c
ParseSnippets_InvalidPriorityLine1	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_InvalidPriorityLine1(_VimTest):$/;"	c
ParseSnippets_MissingEndSnippet	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MissingEndSnippet(_VimTest):$/;"	c
ParseSnippets_MultiWord_Description	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Description(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_Description_Option	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Description_Option(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_NoContainer	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_NoContainer(_VimTest):$/;"	c
ParseSnippets_MultiWord_Quotes	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Quotes(_VimTest):$/;"	c
ParseSnippets_MultiWord_RE1	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE1(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_RE2	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE2(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_RE3	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE3(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_Simple	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Simple(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_UnmatchedContainer	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_UnmatchedContainer(_VimTest):$/;"	c
ParseSnippets_MultiWord_WithQuotes	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_WithQuotes(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippet	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippet(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetContext	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetContext(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetLocation	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetLocation(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetPostAction	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetPostAction(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetPreAction	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetPreAction(_VimTest):$/;"	c
ParseSnippets_PrintPythonStacktrace	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintPythonStacktrace(_VimTest):$/;"	c
ParseSnippets_PrintPythonStacktraceMultiline	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintPythonStacktraceMultiline(_VimTest):$/;"	c
ParseSnippets_SimpleSnippet	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_SimpleSnippet(_VimTest):$/;"	c
ParseSnippets_UnknownDirective	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_UnknownDirective(_VimTest):$/;"	c
PassThroughNonexecutedTrigger	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^class PassThroughNonexecutedTrigger(_VimTest):$/;"	c
PasswordExists	workflows/Ariafred/src/workflow/workflow.py	/^class PasswordExists(KeychainError):$/;"	c
PasswordNotFound	workflows/Ariafred/src/workflow/workflow.py	/^class PasswordNotFound(KeychainError):$/;"	c
Path.AbsolutePathFor	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(pathStr)$/;"	f
Path.CopyingSupported	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(pathStr)$/;"	f
Path.Resolve	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
Path.WinToUnixPath	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._escChars	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._escChars()$/;"	f
Path._ignorePatternMatches	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
Path._splitChunks	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._splitChunks(path)$/;"	f
Path._str	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
Path.addDelimiter	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.addDelimiter(line)$/;"	f
Path.bookmarkNames	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString() abort$/;"	f
Path.changeToDir	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
Path.copy	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.createParentDirectories	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.createParentDirectories(path)$/;"	f
Path.delete	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
Path.edit	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
Path.equals	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortKey	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortKey()$/;"	f
Path.getSortOrderIndex	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore(nerdtree)$/;"	f
Path.isAncestor	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isAncestor(child)$/;"	f
Path.isHiddenUnder	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isHiddenUnder(path)$/;"	f
Path.isUnder	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(parent)$/;"	f
Path.isUnixHiddenFile	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
Path.isUnixHiddenPath	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
Path.readInfoFromDisk	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh(nerdtree)$/;"	f
Path.refreshFlags	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refreshFlags(nerdtree)$/;"	f
Path.rename	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
Path.tabnr	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
Pdb	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^        class Pdb(pdb.Pdb):$/;"	c	function:RemotePDB.start_server
PebkacError	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/error.py	/^class PebkacError(RuntimeError):$/;"	c
PerlSyntaxFold	conf/vim/.vim/plugged/ultisnips/test/test_Folding.py	/^class PerlSyntaxFold(_VimTest):$/;"	c
PickleSerializer	workflows/Ariafred/src/workflow/workflow.py	/^class PickleSerializer(object):$/;"	c
Plugin_SuperTab_SimpleTest	conf/vim/.vim/plugged/ultisnips/test/test_Plugin.py	/^class Plugin_SuperTab_SimpleTest(_VimTest):$/;"	c
Position	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/position.py	/^class Position:$/;"	c
PrevNonBlank	conf/vim/.vim/plugged/vim-markdown/indent/markdown.vim	/^function! s:PrevNonBlank(lnum)$/;"	f
Process	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^class Process(asyncio.SubprocessProtocol):$/;"	c
ProperIndenting_AutoIndentAndNewline_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_AutoIndentAndNewline_ECR(_VimTest):$/;"	c
ProperIndenting_FirstLineInFileComplete_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_FirstLineInFileComplete_ECR(ProperIndenting_FirstLineInFile_ECR):$/;"	c
ProperIndenting_FirstLineInFile_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_FirstLineInFile_ECR(_VimTest):$/;"	c
ProperIndenting_SimpleCase_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_SimpleCase_ECR(_VimTest):$/;"	c
ProperIndenting_SingleLineNoReindenting_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_SingleLineNoReindenting_ECR(_VimTest):$/;"	c
PythonCode	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^class PythonCode(NoneditableTextObject):$/;"	c
PythonCodeOld_IndentedMultiline	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_IndentedMultiline(_VimTest):$/;"	c
PythonCodeOld_ReferencePlaceholderAfter	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_ReferencePlaceholderAfter(_VimTest):$/;"	c
PythonCodeOld_ReferencePlaceholderBefore	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_ReferencePlaceholderBefore(_VimTest):$/;"	c
PythonCodeOld_SimpleExample	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_SimpleExample(_VimTest):$/;"	c
PythonCodeOld_TransformedBeforeMultiLine	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_TransformedBeforeMultiLine(_VimTest):$/;"	c
PythonCodeToken	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class PythonCodeToken(Token):$/;"	c
PythonCode_AccessKilledTabstop_OverwriteFirst	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_AccessKilledTabstop_OverwriteFirst(_VimTest):$/;"	c
PythonCode_AccessKilledTabstop_OverwriteSecond	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_AccessKilledTabstop_OverwriteSecond(_VimTest):$/;"	c
PythonCode_CanOverwriteTabstop	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_CanOverwriteTabstop(_VimTest):$/;"	c
PythonCode_IndentEtSw	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentEtSw(_VimTest):$/;"	c
PythonCode_IndentEtSwOffset	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentEtSwOffset(_VimTest):$/;"	c
PythonCode_IndentNoetSwTs	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentNoetSwTs(_VimTest):$/;"	c
PythonCode_IndentProblem	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentProblem(_VimTest):$/;"	c
PythonCode_Locals	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_Locals(_VimTest):$/;"	c
PythonCode_LongerTextThanSource_Chars	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_LongerTextThanSource_Chars(_VimTest):$/;"	c
PythonCode_LongerTextThanSource_MultiLine	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_LongerTextThanSource_MultiLine(_VimTest):$/;"	c
PythonCode_MultiAppend	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppend(_VimTest):$/;"	c
PythonCode_MultiAppendShift	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppendShift(_VimTest):$/;"	c
PythonCode_MultiAppendShiftMethods	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppendShiftMethods(_VimTest):$/;"	c
PythonCode_MultiAppendSimpleIndent	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppendSimpleIndent(_VimTest):$/;"	c
PythonCode_MultilineIndented	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultilineIndented(_VimTest):$/;"	c
PythonCode_OptExists	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_OptExists(_VimTest):$/;"	c
PythonCode_OptNoExists	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_OptNoExists(_VimTest):$/;"	c
PythonCode_ReferencePlaceholder	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_ReferencePlaceholder(_VimTest):$/;"	c
PythonCode_ReferencePlaceholderBefore	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_ReferencePlaceholderBefore(_VimTest):$/;"	c
PythonCode_ResetIndent	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_ResetIndent(_VimTest):$/;"	c
PythonCode_SimpleAppend	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleAppend(_VimTest):$/;"	c
PythonCode_SimpleExample	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleExample(_VimTest):$/;"	c
PythonCode_SimpleExample_ReturnValueIsEmptyString	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleExample_ReturnValueIsEmptyString(_VimTest):$/;"	c
PythonCode_SimpleMkline	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleMkline(_VimTest):$/;"	c
PythonCode_TransformedBeforeMultiLine	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_TransformedBeforeMultiLine(_VimTest):$/;"	c
PythonCode_TrickyReferences	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_TrickyReferences(_VimTest):$/;"	c
PythonCode_UseNewOverOld	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_UseNewOverOld(_VimTest):$/;"	c
PythonVisual_HasAccessToSelectedPlaceholders	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_HasAccessToSelectedPlaceholders(_VimTest):$/;"	c
PythonVisual_HasAccessToZeroPlaceholders	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_HasAccessToZeroPlaceholders(_VimTest):$/;"	c
PythonVisual_LineSelect_Simple	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_LineSelect_Simple(_VimTest):$/;"	c
PythonVisual_NoVisualSelection_Ignore	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_NoVisualSelection_Ignore(_VimTest):$/;"	c
PythonVisual_SelectOneWord	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_SelectOneWord(_VimTest):$/;"	c
Python_SnipRvCanBeNonText	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class Python_SnipRvCanBeNonText(_VimTest):$/;"	c
QuickpickFilter	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^    function! s:QuickpickFilter(id, key) closure$/;"	f
REGISTRY	conf/vim/.vim/plugged/vim-markdown/Makefile	/^REGISTRY=${VIMDIR}\/registry$/;"	m
RELEASES_BASE	workflows/Ariafred/src/workflow/update.py	/^RELEASES_BASE = 'https:\/\/api.github.com\/repos\/{0}\/releases'$/;"	v
RESET	conf/zsh/.oh-my-zsh/plugins/aliases/termcolor.py	/^RESET = '\\033[0m'$/;"	v
RESPONSES	workflows/Ariafred/src/workflow/web.py	/^RESPONSES = {$/;"	v
RaisesException	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^function! RaisesException(cmd) abort$/;"	f
Random	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^function Random(min, max)$/;"	f
RecTabStopsWithExpandtab_SimpleExample_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^class RecTabStopsWithExpandtab_SimpleExample_ECR(_ExpandTabs):$/;"	c
RecTabStopsWithExpandtab_SpecialIndentProblem_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^class RecTabStopsWithExpandtab_SpecialIndentProblem_ECR(_ExpandTabs):$/;"	c
RecTabStops_BarelyNotLeavingInner_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_BarelyNotLeavingInner_ECR(_VimTest):$/;"	c
RecTabStops_ChildTriggerContainsParentTextObjects	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ChildTriggerContainsParentTextObjects(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTSSecondTime_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTSSecondTime_ECR(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTSTwice_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTSTwice_ECR(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTS_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineInTabstop_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineInTabstop_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_InNewlineManualIndentTextInFront_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineManualIndentTextInFront_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineManualIndent_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineManualIndent_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultilineWithIndent_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineMultilineWithIndent_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultilineWithNonZeroTS_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineMultilineWithNonZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultiline_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineMultiline_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStopTwiceDirectly_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InnerWOTabStopTwiceDirectly_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStopTwice_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InnerWOTabStopTwice_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStop_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InnerWOTabStop_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInnerInnerTwo_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_LeavingInnerInnerTwo_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInnerInner_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_LeavingInnerInner_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInner_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_LeavingInner_ECR(_VimTest):$/;"	c
RecTabStops_MirrorInnerSnippet_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_MirrorInnerSnippet_ECR(_VimTest):$/;"	c
RecTabStops_MirroredZeroTS_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_MirroredZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_OuterOnlyWithZeroTS_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_OuterOnlyWithZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_OuterOnlyWithZero_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_OuterOnlyWithZero_ECR(_VimTest):$/;"	c
RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_SimpleCase_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_SimpleCase_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_ZeroTSisNothingSpecial_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ZeroTSisNothingSpecial_ECR(_VimTest):$/;"	c
RecTabsStops_BackspaceZero_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabsStops_BackspaceZero_ECR(_VimTest):$/;"	c
RecTabsStops_TypeInZero2_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabsStops_TypeInZero2_ECR(_VimTest):$/;"	c
RecTabsStops_TypeInZero_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^class RecTabsStops_TypeInZero_ECR(_VimTest):$/;"	c
RedirectStream	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/_main.py	/^class RedirectStream(io.IOBase):$/;"	c
RemotePDB	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^class RemotePDB(object):$/;"	c
RemoveClosingSlash	conf/emacs/.emacs.d/layers/+lang/c-c++/global_conf.py	/^def RemoveClosingSlash(path):$/;"	f
RemoveTrailingWhitespace	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class RemoveTrailingWhitespace(_VimTest):$/;"	c
Response	workflows/Ariafred/src/workflow/web.py	/^class Response(object):$/;"	c
Result	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^Result = typing.Dict[str, typing.Any]$/;"	v
RetainsTheUnnamedRegister	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^class RetainsTheUnnamedRegister(_VimTest):$/;"	c
RetainsTheUnnamedRegister_ButOnlyOnce	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^class RetainsTheUnnamedRegister_ButOnlyOnce(_VimTest):$/;"	c
Right	conf/vim/.vim/plugged/tabular/autoload/tabular.vim	/^function! s:Right(string, fieldwidth)$/;"	f
RunTest	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^function RunTest(test)$/;"	f
SEQUENCES	conf/vim/.vim/plugged/ultisnips/test/constant.py	/^SEQUENCES = [ARR_L, ARR_R, ARR_U, ARR_D]$/;"	v
SHARE_DIR	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/Makefile	/^SHARE_DIR?=$(DESTDIR)$(PREFIX)\/share\/$(NAME)$/;"	m
SHARE_DIR	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/Makefile	/^SHARE_DIR?=$(DESTDIR)$(PREFIX)\/share\/$(NAME)$/;"	m
SHARE_DIR	conf/zsh/.oh-my-zsh/plugins/zsh-navigation-tools/Makefile	/^SHARE_DIR?=$(DESTDIR)$(PREFIX)\/share\/$(NAME)$/;"	m
SHELL	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/makefile	/^SHELL := \/bin\/sh$/;"	m
SID	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:SID() abort$/;"	f
SID_PREFIX	conf/vim/.vim/plugged/vim-operator-user/autoload/operator/user.vim	/^function! s:SID_PREFIX()$/;"	f
SNIPMATE_SNIPPET_PRIORITY	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    SNIPMATE_SNIPPET_PRIORITY = -1000$/;"	v	class:SnipMateSnippetDefinition
SOUNDS	workflows/Ariafred/src/workflow/notify.py	/^SOUNDS = ($/;"	v
SOURCE_EXTENSIONS	conf/emacs/.emacs.d/layers/+lang/c-c++/global_conf.py	/^SOURCE_EXTENSIONS = ['.cpp', '.cxx', '.cc', '.c', '.m', '.mm',$/;"	v
SRC_DIR	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/Makefile	/^SRC_DIR := .\/src$/;"	m
SRC_DIR	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/Makefile	/^SRC_DIR := .\/src$/;"	m
SRC_FILES	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/Makefile	/^SRC_FILES := \\$/;"	m
SRC_FILES	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/Makefile	/^SRC_FILES := \\$/;"	m
SUBDIRS	conf/emacs/.emacs.d/layers/+lang/c-c++/global_conf.py	/^SUBDIRS = ['build']$/;"	v
SearchForTranslationUnitWhichIncludesPath	conf/emacs/.emacs.d/layers/+lang/c-c++/global_conf.py	/^def SearchForTranslationUnitWhichIncludesPath(database_path, database, path, filename):$/;"	f
SearchOptions	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:SearchOptions(...) abort$/;"	f
SelectModeMappings_BufferLocalMappings_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_BufferLocalMappings_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_DisableRemoveBeforeSelecting_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_DisableRemoveBeforeSelecting_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings1_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings1_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings2_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings2_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_RemoveBeforeSelecting_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_RemoveBeforeSelecting_ECR(_SelectModeMappings):$/;"	c
SerializerManager	workflows/Ariafred/src/workflow/workflow.py	/^class SerializerManager(object):$/;"	c
Server	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/tags/add_all_golden.go	/^type Server struct {$/;"	t
Server	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/tags/add_all_golden_options.go	/^type Server struct {$/;"	t
Server	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/tags/add_all_input.go	/^type Server struct {$/;"	t
Server	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/tags/remove_all_golden.go	/^type Server struct {$/;"	t
Server	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/tags/remove_all_input.go	/^type Server struct {$/;"	t
SetLines	conf/vim/.vim/plugged/tabular/autoload/tabular.vim	/^function! s:SetLines(start, len, strings)$/;"	f
SetTagbar	conf/vim/.vim/plugged/vim-go/ftplugin/go/tagbar.vim	/^function! s:SetTagbar()$/;"	f
SetUp	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function SetUp()$/;"	f
Set_op_command	conf/vim/.vim/plugged/vim-operator-user/t/example-b-advanced.vim	/^function! Set_op_command(command)$/;"	f
SetexToAtx	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^command! -buffer -range=% SetexToAtx call s:SetexToAtx(<line1>, <line2>)$/;"	c
SetexToAtx	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:SetexToAtx(line1, line2)$/;"	f
Settings	workflows/Ariafred/src/workflow/workflow.py	/^class Settings(dict):$/;"	c
ShellCode	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^class ShellCode(NoneditableTextObject):$/;"	c
ShellCodeToken	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class ShellCodeToken(Token):$/;"	c
ShiftWidthZero	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^class ShiftWidthZero(_VimTest):$/;"	c
ShowDocumentation	conf/vim/.vim/custom/coc.vim	/^function! ShowDocumentation()$/;"	f
ShowDocumentation	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^function! ShowDocumentation()$/;"	f
ShowInfo	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:ShowInfo()$/;"	f
Shuffle	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^function Shuffle(list)$/;"	f
SimpleExpandEndingWithNewline_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandEndingWithNewline_ExpectCorrectResult(_VimTest):$/;"	c
SimpleExpandExpandOrJump_Ambiguity	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandExpandOrJump_Ambiguity(_VimTest):$/;"	c
SimpleExpandExpandOrJump_Expand	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandExpandOrJump_Expand(_VimTest):$/;"	c
SimpleExpandJumpOrExpand_Ambiguity	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandJumpOrExpand_Ambiguity(_VimTest):$/;"	c
SimpleExpandJumpOrExpand_Expand	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandJumpOrExpand_Expand(_VimTest):$/;"	c
SimpleExpandNewLineAndBackspae_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandNewLineAndBackspae_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTwice_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandTwice_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTypeAfterExpand_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandTypeAfterExpand_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTypeAndDelete_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandTypeAndDelete_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpand_DoNotClobberDefaultRegister	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^class SimpleExpand_DoNotClobberDefaultRegister(_VimTest):$/;"	c
SimpleExpand_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^class SimpleExpand_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpand_Issue1343	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^class SimpleExpand_Issue1343(_VimTest):$/;"	c
SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorDelete_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorDelete_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorMultilineMany_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorMultilineMany_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR(_VimTest):$/;"	c
SimpleMirrorSameLineBeforeTabDefVal_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineBeforeTabDefVal_ECR(_VimTest):$/;"	c
SimpleMirrorSameLineManyMultiline_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineManyMultiline_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineMany_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineMany_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineNoSpaceInsideOtherSpaceAfter_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineNoSpaceInsideOtherSpaceAfter_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineNoSpaceInsideOther_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineNoSpaceInsideOther_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineNoSpaceSpaceAfter_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineNoSpaceSpaceAfter_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineNoSpace_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineNoSpace_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLine_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLine_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLine_InText_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLine_InText_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultComplexType_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultComplexType_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult(_VimTest):$/;"	c
SnipMateFileSource	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^class SnipMateFileSource(SnippetFileSource):$/;"	c
SnipMateSnippetDefinition	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^class SnipMateSnippetDefinition(SnippetDefinition):$/;"	c
SnippetActions_CanEvenWrapSnippetInPreAction	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanEvenWrapSnippetInPreAction(_VimTest):$/;"	c
SnippetActions_CanExpandAnonOnPreExpand	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonOnPreExpand(_VimTest):$/;"	c
SnippetActions_CanExpandAnonSnippetInJumpAction	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetInJumpAction(_VimTest):$/;"	c
SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected(_VimTest):$/;"	c
SnippetActions_CanExpandAnonSnippetOnFirstJump	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetOnFirstJump(_VimTest):$/;"	c
SnippetActions_CanExpandSnippetInDifferentPlace	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandSnippetInDifferentPlace(_VimTest):$/;"	c
SnippetActions_CanMirrorTabStopsOutsideOfSnippet	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanMirrorTabStopsOutsideOfSnippet(_VimTest):$/;"	c
SnippetActions_CanModifyParentBody	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanModifyParentBody(_VimTest):$/;"	c
SnippetActions_CanUseContextFromContextMatch	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanUseContextFromContextMatch(_VimTest):$/;"	c
SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre(_VimTest):$/;"	c
SnippetActions_DoNotBreakCursorOnSingleLikeChange	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_DoNotBreakCursorOnSingleLikeChange(_VimTest):$/;"	c
SnippetActions_EnsureIndent	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_EnsureIndent(_VimTest):$/;"	c
SnippetActions_ErrorOnBufferModificationThroughCommand	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_ErrorOnBufferModificationThroughCommand(_VimTest):$/;"	c
SnippetActions_ErrorOnModificationSnippetLine	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_ErrorOnModificationSnippetLine(_VimTest):$/;"	c
SnippetActions_MoveParentSnippetFromChildInPreAction	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_MoveParentSnippetFromChildInPreAction(_VimTest):$/;"	c
SnippetActions_MoveVisual	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_MoveVisual(_VimTest):$/;"	c
SnippetActions_PostActionCanUseSnippetRange	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionCanUseSnippetRange(_VimTest):$/;"	c
SnippetActions_PostActionModifiesBuffer	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesBuffer(_VimTest):$/;"	c
SnippetActions_PostActionModifiesCharAfterSnippet	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesCharAfterSnippet(_VimTest):$/;"	c
SnippetActions_PostActionModifiesLineAfterSnippet	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesLineAfterSnippet(_VimTest):$/;"	c
SnippetActions_PreActionModifiesBuffer	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PreActionModifiesBuffer(_VimTest):$/;"	c
SnippetActions_UseCorrectJumpActions	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_UseCorrectJumpActions(_VimTest):$/;"	c
SnippetDefinition	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^class SnippetDefinition:$/;"	c
SnippetDictionary	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^class SnippetDictionary:$/;"	c
SnippetFileSource	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^class SnippetFileSource(SnippetSource):$/;"	c
SnippetInstance	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^class SnippetInstance(EditableTextObject):$/;"	c
SnippetManager	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^class SnippetManager:$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippets_ExpandSingle	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippets_ExpandSingle(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippets_SimpleExpand	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippets_SimpleExpand(_VimTest):$/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^):$/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix2	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^):$/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix3	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^):$/;"	c
SnippetOptions_ExpandWordSnippets_NoExpand	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandWordSnippets_NoExpand(_SnippetOptions_ExpandWordSnippets):$/;"	c
SnippetOptions_ExpandWordSnippets_NormalExpand	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_DontExpand	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_DontExpand(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_Expand	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_Expand(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_Expand2	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_Expand2(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose(_VimTest):$/;"	c
SnippetOptions_Regex_Expand	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Expand(_VimTest):$/;"	c
SnippetOptions_Regex_Multiple	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Multiple(_VimTest):$/;"	c
SnippetOptions_Regex_PythonBlockMatch	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_PythonBlockMatch(_VimTest):$/;"	c
SnippetOptions_Regex_PythonBlockNoMatch	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_PythonBlockNoMatch(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Long_End	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Long_End(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Long_Start	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Long_Start(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Simple	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Simple(_VimTest):$/;"	c
SnippetOptions_Regex_Self_Space	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_Space(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_Start	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_Start(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_TextAfter	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_TextAfter(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_TextBefore	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_TextBefore(_Regex_Self):$/;"	c
SnippetOptions_Regex_WithSpace	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_WithSpace(_VimTest):$/;"	c
SnippetPriorities_AddedHasHigherThanFile	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_AddedHasHigherThanFile(_VimTest):$/;"	c
SnippetPriorities_ClearedByChild	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_ClearedByChild(_VimTest):$/;"	c
SnippetPriorities_ClearedByParent	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_ClearedByParent(_VimTest):$/;"	c
SnippetPriorities_DoNotCareAboutNonMatchings	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_DoNotCareAboutNonMatchings(_VimTest):$/;"	c
SnippetPriorities_FileHasHigherThanAdded	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_FileHasHigherThanAdded(_VimTest):$/;"	c
SnippetPriorities_FileHasHigherThanAdded_neg_prio	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_FileHasHigherThanAdded_neg_prio(_VimTest):$/;"	c
SnippetPriorities_MultiWordTriggerOverwriteExisting	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_MultiWordTriggerOverwriteExisting(_VimTest):$/;"	c
SnippetPriorities_OverwriteExisting	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteExisting(_VimTest):$/;"	c
SnippetPriorities_OverwriteThenChoose_ECR	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteThenChoose_ECR(_VimTest):$/;"	c
SnippetPriorities_OverwriteTwice_ECR	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteTwice_ECR(_VimTest):$/;"	c
SnippetPriorities_SimpleClear	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_SimpleClear(_VimTest):$/;"	c
SnippetPriorities_SimpleClear2	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_SimpleClear2(_VimTest):$/;"	c
SnippetSource	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^class SnippetSource:$/;"	c
SnippetSyntaxError	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^class SnippetSyntaxError(PebkacError):$/;"	c
SnippetUtil	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^class SnippetUtil:$/;"	c
SnippetUtilForAction	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^class SnippetUtilForAction(dict):$/;"	c
Snippet_With_DoubleQuote	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_DoubleQuote(_VimTest):$/;"	c
Snippet_With_DoubleQuote_List	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_DoubleQuote_List(_VimTest):$/;"	c
Snippet_With_SingleQuote	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_SingleQuote(_VimTest):$/;"	c
Snippet_With_SingleQuote_List	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_SingleQuote_List(_VimTest):$/;"	c
Snippet_With_Umlauts	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_List	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_List(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_Mirrors	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_Mirrors(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteFirst	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteFirst(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteNone	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteNone(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteSecond	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteSecond(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_Python	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_Python(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_TypeOn	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_TypeOn(_UmlautsBase):$/;"	c
Source	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^class Source(Base):$/;"	c
Source	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^class Source(Base):$/;"	c
Source	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^class Source(Base):$/;"	c
Source	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^class Source(Base):$/;"	c
Source	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^class Source(Base):$/;"	c
Source	conf/vim/.vim/plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^class Source(Base):$/;"	c
Source	conf/vim/.vim/plugged/vim-go/rplugin/python3/denite/source/decls.py	/^class Source(Base):$/;"	c
SourceInitError	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/exceptions.py	/^class SourceInitError(Exception):$/;"	c
SplitCDeclarations	conf/vim/.vim/plugged/tabular/after/plugin/TabularMaps.vim	/^function! SplitCDeclarations(lines)$/;"	f
SplitCommands	conf/vim/.vim/plugged/tabular/plugin/Tabular.vim	/^function! s:SplitCommands(string)$/;"	f
SplitDelim	conf/vim/.vim/plugged/tabular/autoload/tabular.vim	/^function! s:SplitDelim(string, delim)$/;"	f
SplitDelimTest	conf/vim/.vim/plugged/tabular/autoload/tabular.vim	/^function! s:SplitDelimTest(string, delim, expected)$/;"	f
StaticHighlight	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:StaticHighlight() abort$/;"	f
StripLeadingSpaces	conf/vim/.vim/plugged/tabular/autoload/tabular.vim	/^function! s:StripLeadingSpaces(string)$/;"	f
StripTrailingSpaces	conf/vim/.vim/plugged/tabular/autoload/tabular.vim	/^function! s:StripTrailingSpaces(string)$/;"	f
Strlen	conf/vim/.vim/plugged/tabular/autoload/tabular.vim	/^  function! s:Strlen(string)$/;"	f
SyncAutocmd	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:SyncAutocmd(...)$/;"	f
SyncParent	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^class SyncParent(_Parent):$/;"	c
SyntaxInclude	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:SyntaxInclude(filetype)$/;"	f
T	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/complete/complete.go	/^type T struct {$/;"	t
TESTS	conf/tmux/.tmux/plugins/tmux-themepack/Makefile	/^TESTS := $(addsuffix .test,$(THEMES))$/;"	m
TEST_CPP_FOR_OPERATOR_CLANG_FORMAT_LONG_MACRO	conf/vim/.vim/plugged/vim-clang-format/test/t/test.cpp	3;"	d	file:
TEST_DIR	conf/emacs/.emacs.d/tests/core/Makefile	/^TEST_DIR := $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))$/;"	m
TEST_DIR	conf/emacs/.emacs.d/tests/doc/Makefile	/^TEST_DIR := $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))$/;"	m
TEST_DIR	conf/emacs/.emacs.d/tests/layers/+distribution/spacemacs-base/Makefile	/^TEST_DIR := $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))$/;"	m
TEST_DIR	conf/emacs/.emacs.d/tests/layers/+distribution/spacemacs/Makefile	/^TEST_DIR := $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))$/;"	m
TEST_FLAGS	conf/vim/.vim/plugged/vim-go/Makefile	/^TEST_FLAGS ?=$/;"	m
TEST_NAME	conf/emacs/.emacs.d/spacemacs.mk	/^TEST_NAME = `basename $(TEST_DIR) | tr a-z A-Z`$/;"	m
THEMES	conf/tmux/.tmux/plugins/tmux-themepack/Makefile	/^THEMES := $(patsubst src\/%,%,$(THEME_SRC))$/;"	m
THEME_SRC	conf/tmux/.tmux/plugins/tmux-themepack/Makefile	/^THEME_SRC := $(shell find src -name '*.tmuxtheme')$/;"	m
THEMIS_ARGS	conf/vim/.vim/plugged/deoplete.nvim/Makefile	/^export THEMIS_ARGS := -e -s --headless$/;"	m
THEMIS_HOME	conf/vim/.vim/plugged/deoplete.nvim/Makefile	/^export THEMIS_HOME := .\/vim-themis$/;"	m
THEMIS_VIM	conf/vim/.vim/plugged/deoplete.nvim/Makefile	/^export THEMIS_VIM  := nvim$/;"	m
TMP_DIR	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^TMP_DIR = os.path.join(os.environ.get("TMP_DIR", "\/tmp"), "ohmyzsh")$/;"	v
TabStop	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^class TabStop(EditableTextObject):$/;"	c
TabStopEscapingWhenSelectedNoCharTS_ECR	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStopEscapingWhenSelectedNoCharTS_ECR(_VimTest):$/;"	c
TabStopEscapingWhenSelectedSingleCharTS_ECR	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStopEscapingWhenSelectedSingleCharTS_ECR(_VimTest):$/;"	c
TabStopEscapingWhenSelected_ECR	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStopEscapingWhenSelected_ECR(_VimTest):$/;"	c
TabStopNavigatingInInsertModeSimple_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStopNavigatingInInsertModeSimple_ExpectCorrectResult(_VimTest):$/;"	c
TabStopNoReplace_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStopNoReplace_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceReversed_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceReversed_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceSurrounded1_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceSurrounded1_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceSurrounded_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceSurrounded_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplace_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplace_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestBackwardJumping2_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestBackwardJumping2_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestBackwardJumping_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestBackwardJumping_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumping2_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumping2_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumping_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumping_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestMultilineExpand_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestMultilineExpand_ExpectCorrectResult(_VimTest):$/;"	c
TabStopToken	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class TabStopToken(Token):$/;"	c
TabStopWithOneChar_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStopWithOneChar_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_AdjacentTabStopAddText_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_AdjacentTabStopAddText_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_CROnlyOnSelectedNear	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_CROnlyOnSelectedNear(_VimTest):$/;"	c
TabStop_EscapingCharsBackticks	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsBackticks(_VimTest):$/;"	c
TabStop_EscapingCharsDollars	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars(_VimTest):$/;"	c
TabStop_EscapingCharsDollars1	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars1(_VimTest):$/;"	c
TabStop_EscapingCharsDollars_BeginningOfDefinitionText	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars_BeginningOfDefinitionText(_VimTest):$/;"	c
TabStop_EscapingCharsDollars_BeginningOfLine	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars_BeginningOfLine(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash2	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash2(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash3	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash3(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash4	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash4(_VimTest):$/;"	c
TabStop_EscapingChars_RealLife	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_RealLife(_VimTest):$/;"	c
TabStop_Exit_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Exit_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet(_VimTest):$/;"	c
TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE(_VimTest):$/;"	c
TabStop_Multiline_DelFirstOverwriteSecond_Overwrite	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_DelFirstOverwriteSecond_Overwrite(_VimTest):$/;"	c
TabStop_Multiline_Leave	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_Leave(_VimTest):$/;"	c
TabStop_Multiline_MirrorInFront_Leave	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_MirrorInFront_Leave(_VimTest):$/;"	c
TabStop_Multiline_MirrorInFront_Overwrite	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_MirrorInFront_Overwrite(_VimTest):$/;"	c
TabStop_Multiline_Overwrite	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_Overwrite(_VimTest):$/;"	c
TabStop_Shell_InDefValue_Leave	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_InDefValue_Leave(_VimTest):$/;"	c
TabStop_Shell_InDefValue_Overwrite	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_InDefValue_Overwrite(_VimTest):$/;"	c
TabStop_Shell_ShebangPython	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_ShebangPython(_VimTest):$/;"	c
TabStop_Shell_SimpleExample	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_SimpleExample(_VimTest):$/;"	c
TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite(_VimTest):$/;"	c
TabStop_Shell_TestEscapedChars_Overwrite	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_TestEscapedChars_Overwrite(_VimTest):$/;"	c
TabStop_Shell_TextInNextLine	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_TextInNextLine(_VimTest):$/;"	c
TabStop_Shell_WithUmlauts	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_WithUmlauts(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpAround	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpAround(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpToThird	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpToThird(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_DeleteFirst	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_DeleteFirst(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecond	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^):$/;"	c
TabStop_TSInDefaultText_ZeroLengthZerothTabstop	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthZerothTabstop(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_DoNothing	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_DoNothing(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_Overwrite0	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_Overwrite0(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_Overwrite1	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_Overwrite1(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample(_VimTest):$/;"	c
TabStop_VimScriptInterpolation_SimpleExample	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_VimScriptInterpolation_SimpleExample(_VimTest):$/;"	c
TableFormat	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^command! -buffer -range TableFormat call s:TableFormat()$/;"	c
TableFormat	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:TableFormat()$/;"	f
TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoType_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoType_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorManyFromAll_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorManyFromAll_ExpectCorrectResult(_VimTest):$/;"	c
Tabularize	conf/vim/.vim/plugged/tabular/plugin/Tabular.vim	/^   \\ Tabularize <line1>,<line2>call Tabularize(<q-args>)$/;"	c
Tabularize	conf/vim/.vim/plugged/tabular/plugin/Tabular.vim	/^function! Tabularize(command, ...) range$/;"	f
TabularizeHasPattern	conf/vim/.vim/plugged/tabular/plugin/Tabular.vim	/^function! TabularizeHasPattern()$/;"	f
TearDown	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function TearDown()$/;"	f
TempFileManager	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^class TempFileManager:$/;"	c
TerminalSession	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/spec/terminal_session.rb	/^class TerminalSession$/;"	c
TerminalSession	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/spec/terminal_session.rb	/^class TerminalSession$/;"	c
TestAddTags	conf/vim/.vim/plugged/vim-go/autoload/go/tags_test.vim	/^func! TestAddTags() abort$/;"	f
TestAddTags_AddOptions	conf/vim/.vim/plugged/vim-go/autoload/go/tags_test.vim	/^func! TestAddTags_AddOptions() abort$/;"	f
TestAddTags_WithOptions	conf/vim/.vim/plugged/vim-go/autoload/go/tags_test.vim	/^func! TestAddTags_WithOptions() abort$/;"	f
TestAllMatch	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestAllMatch(_Base, unittest.TestCase):$/;"	c
TestBasicTheme	conf/tmux/.tmux/plugins/tmux-themepack/test/basic_test.go	/^func TestBasicTheme(t *testing.T) {$/;"	f
TestBasicThemeOverrides	conf/tmux/.tmux/plugins/tmux-themepack/test/basic_test.go	/^func TestBasicThemeOverrides(t *testing.T) {$/;"	f
TestBasicThemepackOverrides	conf/tmux/.tmux/plugins/tmux-themepack/test/basic_test.go	/^func TestBasicThemepackOverrides(t *testing.T) {$/;"	f
TestCheapDelete	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestCheapDelete(_Base, unittest.TestCase):$/;"	c
TestCommonCharacters	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestCommonCharacters(_Base, unittest.TestCase):$/;"	c
TestConcurrentPanic	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/play/play_test.go	/^func TestConcurrentPanic(t *testing.T) {$/;"	f
TestCrash	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestCrash(_Base, unittest.TestCase):$/;"	c
TestDefaultTheme	conf/tmux/.tmux/plugins/tmux-themepack/test/default_test.go	/^func TestDefaultTheme(t *testing.T) {$/;"	f
TestDefaultThemeOverrides	conf/tmux/.tmux/plugins/tmux-themepack/test/default_test.go	/^func TestDefaultThemeOverrides(t *testing.T) {$/;"	f
TestEmptyString	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestEmptyString(_Base, unittest.TestCase):$/;"	c
TestFoo	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/errcheck/errcheck_test.go	/^func TestFoo(t *testing.T) {$/;"	f
TestGuessing_BackspaceOneChar	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_BackspaceOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_DeleteOneChar	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_DeleteOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_InsertOneChar	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_InsertOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_InsertOneChar1	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_InsertOneChar1(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_Noop0	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_Noop0(_BaseGuessing, unittest.TestCase):$/;"	c
TestHelloWorld	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/showname/showname_test.go	/^func TestHelloWorld(t *testing.T) {$/;"	f
TestHelloWorld	conf/vim/.vim/plugged/vim-go/templates/hello_world_test.go	/^func TestHelloWorld(t *testing.T) {$/;"	f
TestLangmapWithUtf8_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^class TestLangmapWithUtf8_ExpectCorrectResult(_VimTest):$/;"	c
TestLogger	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/fmt/src/imports/vendor/gh.com/gi/foo-logging/logger.go	/^type TestLogger struct {$/;"	t
TestLotsaNewlines	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestLotsaNewlines(_Base, unittest.TestCase):$/;"	c
TestMocked	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/play/play_test.go	/^func TestMocked(t *testing.T) {$/;"	f
TestMultiline	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/play/play_test.go	/^func TestMultiline(t *testing.T) {$/;"	f
TestNoSubstring	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestNoSubstring(_Base, unittest.TestCase):$/;"	c
TestNonEmptyLangmapWithSemi_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^class TestNonEmptyLangmapWithSemi_ExpectCorrectResult(_VimTest):$/;"	c
TestNonEmptyLangmap_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^class TestNonEmptyLangmap_ExpectCorrectResult(_VimTest):$/;"	c
TestOK	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/play/play_test.go	/^func TestOK(t *testing.T) {$/;"	f
TestPanic	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/play/play_test.go	/^func TestPanic(t *testing.T) {$/;"	f
TestPowerlineBlockThemeOverrides	conf/tmux/.tmux/plugins/tmux-themepack/test/powerline_block_test.go	/^func TestPowerlineBlockThemeOverrides(t *testing.T) {$/;"	f
TestPowerlineBlockThemepackOverrides	conf/tmux/.tmux/plugins/tmux-themepack/test/powerline_block_test.go	/^func TestPowerlineBlockThemepackOverrides(t *testing.T) {$/;"	f
TestPowerlineBlockThemes	conf/tmux/.tmux/plugins/tmux-themepack/test/powerline_block_test.go	/^func TestPowerlineBlockThemes(t *testing.T) {$/;"	f
TestPowerlineDefaultThemeOverrides	conf/tmux/.tmux/plugins/tmux-themepack/test/powerline_default_test.go	/^func TestPowerlineDefaultThemeOverrides(t *testing.T) {$/;"	f
TestPowerlineDefaultThemepackOverrides	conf/tmux/.tmux/plugins/tmux-themepack/test/powerline_default_test.go	/^func TestPowerlineDefaultThemepackOverrides(t *testing.T) {$/;"	f
TestPowerlineDefaultThemes	conf/tmux/.tmux/plugins/tmux-themepack/test/powerline_default_test.go	/^func TestPowerlineDefaultThemes(t *testing.T) {$/;"	f
TestPowerlineDoubleThemeOverrides	conf/tmux/.tmux/plugins/tmux-themepack/test/powerline_double_test.go	/^func TestPowerlineDoubleThemeOverrides(t *testing.T) {$/;"	f
TestPowerlineDoubleThemepackOverrides	conf/tmux/.tmux/plugins/tmux-themepack/test/powerline_double_test.go	/^func TestPowerlineDoubleThemepackOverrides(t *testing.T) {$/;"	f
TestPowerlineDoubleThemes	conf/tmux/.tmux/plugins/tmux-themepack/test/powerline_double_test.go	/^func TestPowerlineDoubleThemes(t *testing.T) {$/;"	f
TestRealLife	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestRealLife(_Base, unittest.TestCase):$/;"	c
TestRealLife1	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestRealLife1(_Base, unittest.TestCase):$/;"	c
TestRunning	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/timeout/timeout_test.go	/^func TestRunning(t *testing.T) {$/;"	f
TestRunningAlso	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/timeout/timeout_test.go	/^func TestRunningAlso(t *testing.T) {$/;"	f
TestSleep	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/timeout/timeout_test.go	/^func TestSleep(t *testing.T) {$/;"	f
TestSomething	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/testcompilerror/testcompilerror_test.go	/^func TestSomething(t *testing.T) {$/;"	f
TestSub	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/play/play_test.go	/^func TestSub(t *testing.T) {$/;"	f
TestTmuxVersion	conf/tmux/.tmux/plugins/tmux-themepack/test/version_test.go	/^func TestTmuxVersion(t *testing.T) {$/;"	f
TestTopSubHelper	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/play/play_test.go	/^func TestTopSubHelper(t *testing.T) {$/;"	f
TestUltiSnipsProblem	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestUltiSnipsProblem(_Base, unittest.TestCase):$/;"	c
TestWithNewline	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestWithNewline(_Base, unittest.TestCase):$/;"	c
Test_Callers	conf/vim/.vim/plugged/vim-go/autoload/go/calls_test.vim	/^func! Test_Callers() abort$/;"	f
Test_Complete_GOPATH_baronly	conf/vim/.vim/plugged/vim-go/autoload/go/package_test.vim	/^func! Test_Complete_GOPATH_baronly() abort$/;"	f
Test_Complete_GOPATH_simple	conf/vim/.vim/plugged/vim-go/autoload/go/package_test.vim	/^func! Test_Complete_GOPATH_simple() abort$/;"	f
Test_Complete_GOPATH_subdirs	conf/vim/.vim/plugged/vim-go/autoload/go/package_test.vim	/^func! Test_Complete_GOPATH_subdirs() abort$/;"	f
Test_Complete_GOPATH_vendor	conf/vim/.vim/plugged/vim-go/autoload/go/package_test.vim	/^func! Test_Complete_GOPATH_vendor() abort$/;"	f
Test_Complete_Module_baronly	conf/vim/.vim/plugged/vim-go/autoload/go/package_test.vim	/^func! Test_Complete_Module_baronly() abort$/;"	f
Test_Complete_Module_simple	conf/vim/.vim/plugged/vim-go/autoload/go/package_test.vim	/^func! Test_Complete_Module_simple() abort$/;"	f
Test_Complete_Module_subdirs	conf/vim/.vim/plugged/vim-go/autoload/go/package_test.vim	/^func! Test_Complete_Module_subdirs() abort$/;"	f
Test_Complete_Module_vendor	conf/vim/.vim/plugged/vim-go/autoload/go/package_test.vim	/^func! Test_Complete_Module_vendor() abort$/;"	f
Test_Decode_multibyte	conf/vim/.vim/plugged/vim-go/autoload/go/uri_test.vim	/^func! Test_Decode_multibyte() abort$/;"	f
Test_Decode_simple	conf/vim/.vim/plugged/vim-go/autoload/go/uri_test.vim	/^func! Test_Decode_simple() abort$/;"	f
Test_DefJump_gopls_MultipleCodeUnit_first	conf/vim/.vim/plugged/vim-go/autoload/go/def_test.vim	/^func! Test_DefJump_gopls_MultipleCodeUnit_first() abort$/;"	f
Test_DefJump_gopls_MultipleCodeUnit_last	conf/vim/.vim/plugged/vim-go/autoload/go/def_test.vim	/^func! Test_DefJump_gopls_MultipleCodeUnit_last() abort$/;"	f
Test_DefJump_gopls_simple_first	conf/vim/.vim/plugged/vim-go/autoload/go/def_test.vim	/^func! Test_DefJump_gopls_simple_first() abort$/;"	f
Test_DefJump_gopls_simple_last	conf/vim/.vim/plugged/vim-go/autoload/go/def_test.vim	/^func! Test_DefJump_gopls_simple_last() abort$/;"	f
Test_EncodePath_multibyte	conf/vim/.vim/plugged/vim-go/autoload/go/uri_test.vim	/^func! Test_EncodePath_multibyte() abort$/;"	f
Test_EncodePath_simple	conf/vim/.vim/plugged/vim-go/autoload/go/uri_test.vim	/^func! Test_EncodePath_simple() abort$/;"	f
Test_Errcheck	conf/vim/.vim/plugged/vim-go/autoload/go/lint_test.vim	/^func! Test_Errcheck() abort$/;"	f
Test_Errcheck_compilererror	conf/vim/.vim/plugged/vim-go/autoload/go/lint_test.vim	/^func! Test_Errcheck_compilererror() abort$/;"	f
Test_Errcheck_options	conf/vim/.vim/plugged/vim-go/autoload/go/lint_test.vim	/^func! Test_Errcheck_options() abort$/;"	f
Test_ExecuteInDir	conf/vim/.vim/plugged/vim-go/autoload/go/tool_test.vim	/^func! Test_ExecuteInDir() abort$/;"	f
Test_ExecuteInDir_nodir	conf/vim/.vim/plugged/vim-go/autoload/go/tool_test.vim	/^func! Test_ExecuteInDir_nodir() abort$/;"	f
Test_Extract	conf/vim/.vim/plugged/vim-go/autoload/go/extract_test.vim	/^func! Test_Extract() abort$/;"	f
Test_Format	conf/vim/.vim/plugged/vim-go/autoload/go/lsp_test.vim	/^func! Test_Format() abort$/;"	f
Test_Format_Multibyte	conf/vim/.vim/plugged/vim-go/autoload/go/lsp_test.vim	/^func! Test_Format_Multibyte() abort$/;"	f
Test_Format_SingleNewline	conf/vim/.vim/plugged/vim-go/autoload/go/lsp_test.vim	/^func! Test_Format_SingleNewline() abort$/;"	f
Test_GetInfo_gopls	conf/vim/.vim/plugged/vim-go/autoload/go/complete_test.vim	/^func! Test_GetInfo_gopls()$/;"	f
Test_GetMultiByteTextPosition	conf/vim/.vim/plugged/vim-go/autoload/go/lsp_test.vim	/^function! Test_GetMultiByteTextPosition()$/;"	f
Test_GetMultipleCodeUnitTextPosition	conf/vim/.vim/plugged/vim-go/autoload/go/lsp_test.vim	/^function! Test_GetMultipleCodeUnitTextPosition()$/;"	f
Test_GetSimpleTextPosition	conf/vim/.vim/plugged/vim-go/autoload/go/lsp_test.vim	/^function! Test_GetSimpleTextPosition()$/;"	f
Test_GoBuildErrors	conf/vim/.vim/plugged/vim-go/autoload/go/cmd_test.vim	/^func! Test_GoBuildErrors()$/;"	f
Test_GoDebugModeRemapsAndRestoresKeys	conf/vim/.vim/plugged/vim-go/autoload/go/debug_test.vim	/^function! Test_GoDebugModeRemapsAndRestoresKeys() abort$/;"	f
Test_GoDebugStart_Empty	conf/vim/.vim/plugged/vim-go/autoload/go/debug_test.vim	/^function! Test_GoDebugStart_Empty() abort$/;"	f
Test_GoDebugStart_Errors	conf/vim/.vim/plugged/vim-go/autoload/go/debug_test.vim	/^function! Test_GoDebugStart_Errors() abort$/;"	f
Test_GoDebugStart_Package	conf/vim/.vim/plugged/vim-go/autoload/go/debug_test.vim	/^function! Test_GoDebugStart_Package() abort$/;"	f
Test_GoDebugStart_RelativePackage	conf/vim/.vim/plugged/vim-go/autoload/go/debug_test.vim	/^function! Test_GoDebugStart_RelativePackage() abort$/;"	f
Test_GoDebugStart_RelativePackage_NullModule	conf/vim/.vim/plugged/vim-go/autoload/go/debug_test.vim	/^function! Test_GoDebugStart_RelativePackage_NullModule() abort$/;"	f
Test_GoDebugStopRemovesPlugMappings	conf/vim/.vim/plugged/vim-go/autoload/go/debug_test.vim	/^function! Test_GoDebugStopRemovesPlugMappings() abort$/;"	f
Test_GoTermNewMode	conf/vim/.vim/plugged/vim-go/autoload/go/term_test.vim	/^func! Test_GoTermNewMode()$/;"	f
Test_GoTermNewMode_SplitRight	conf/vim/.vim/plugged/vim-go/autoload/go/term_test.vim	/^func! Test_GoTermNewMode_SplitRight()$/;"	f
Test_GoTermReuse	conf/vim/.vim/plugged/vim-go/autoload/go/term_test.vim	/^func! Test_GoTermReuse()$/;"	f
Test_GoTest	conf/vim/.vim/plugged/vim-go/autoload/go/test_test.vim	/^func! Test_GoTest() abort$/;"	f
Test_GoTestCompilerError	conf/vim/.vim/plugged/vim-go/autoload/go/test_test.vim	/^func! Test_GoTestCompilerError() abort$/;"	f
Test_GoTestConcurrentPanic	conf/vim/.vim/plugged/vim-go/autoload/go/test_test.vim	/^func! Test_GoTestConcurrentPanic()$/;"	f
Test_GoTestExample	conf/vim/.vim/plugged/vim-go/autoload/go/test_test.vim	/^func! Test_GoTestExample() abort$/;"	f
Test_GoTestShowName	conf/vim/.vim/plugged/vim-go/autoload/go/test_test.vim	/^func! Test_GoTestShowName() abort$/;"	f
Test_GoTestTestCompilerError	conf/vim/.vim/plugged/vim-go/autoload/go/test_test.vim	/^func! Test_GoTestTestCompilerError() abort$/;"	f
Test_GoTestTimeout	conf/vim/.vim/plugged/vim-go/autoload/go/test_test.vim	/^func! Test_GoTestTimeout() abort$/;"	f
Test_GoTestVerbose	conf/vim/.vim/plugged/vim-go/autoload/go/test_test.vim	/^func! Test_GoTestVerbose() abort$/;"	f
Test_GoTestVet	conf/vim/.vim/plugged/vim-go/autoload/go/test_test.vim	/^func! Test_GoTestVet() abort$/;"	f
Test_GoTypeHighlight	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! Test_GoTypeHighlight() abort$/;"	f
Test_GometaAutoSaveGolangciLint	conf/vim/.vim/plugged/vim-go/autoload/go/lint_test.vim	/^func! Test_GometaAutoSaveGolangciLint() abort$/;"	f
Test_GometaAutoSaveGolangciLintKeepsErrors	conf/vim/.vim/plugged/vim-go/autoload/go/lint_test.vim	/^func! Test_GometaAutoSaveGolangciLintKeepsErrors() abort$/;"	f
Test_GometaAutoSaveGopls	conf/vim/.vim/plugged/vim-go/autoload/go/lint_test.vim	/^func! Test_GometaAutoSaveGopls() abort$/;"	f
Test_GometaAutoSaveStaticcheck	conf/vim/.vim/plugged/vim-go/autoload/go/lint_test.vim	/^func! Test_GometaAutoSaveStaticcheck() abort$/;"	f
Test_GometaAutoSaveStaticcheckKeepsErrors	conf/vim/.vim/plugged/vim-go/autoload/go/lint_test.vim	/^func! Test_GometaAutoSaveStaticcheckKeepsErrors() abort$/;"	f
Test_GometaGolangciLint	conf/vim/.vim/plugged/vim-go/autoload/go/lint_test.vim	/^func! Test_GometaGolangciLint() abort$/;"	f
Test_GometaStaticcheck	conf/vim/.vim/plugged/vim-go/autoload/go/lint_test.vim	/^func! Test_GometaStaticcheck() abort$/;"	f
Test_GoplsEnabled_Clear	conf/vim/.vim/plugged/vim-go/autoload/go/config_test.vim	/^func! Test_GoplsEnabled_Clear() abort$/;"	f
Test_Imports	conf/vim/.vim/plugged/vim-go/autoload/go/lsp_test.vim	/^func! Test_Imports() abort$/;"	f
Test_JobDirWithSpaces	conf/vim/.vim/plugged/vim-go/autoload/go/job_test.vim	/^func! Test_JobDirWithSpaces()$/;"	f
Test_Jump_leaves_lists	conf/vim/.vim/plugged/vim-go/autoload/go/def_test.vim	/^func! Test_Jump_leaves_lists() abort$/;"	f
Test_Lint	conf/vim/.vim/plugged/vim-go/autoload/go/lint_test.vim	/^func! Test_Lint() abort$/;"	f
Test_PositionOf_End	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/lsp_test.vim	/^function! Test_PositionOf_End()$/;"	f
Test_PositionOf_MultiByte	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/lsp_test.vim	/^function! Test_PositionOf_MultiByte()$/;"	f
Test_PositionOf_MultipleCodeUnit	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/lsp_test.vim	/^function! Test_PositionOf_MultipleCodeUnit()$/;"	f
Test_PositionOf_Simple	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/lsp_test.vim	/^function! Test_PositionOf_Simple()$/;"	f
Test_PositionOf_Start	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/lsp_test.vim	/^function! Test_PositionOf_Start()$/;"	f
Test_PromiseAwait	conf/vim/.vim/plugged/vim-go/autoload/go/promise_test.vim	/^func! Test_PromiseAwait() abort$/;"	f
Test_PromiseAwait_Timeout	conf/vim/.vim/plugged/vim-go/autoload/go/promise_test.vim	/^func! Test_PromiseAwait_Timeout() abort$/;"	f
Test_PromiseNew	conf/vim/.vim/plugged/vim-go/autoload/go/promise_test.vim	/^func! Test_PromiseNew() abort$/;"	f
Test_Roundtrip_multibyte	conf/vim/.vim/plugged/vim-go/autoload/go/uri_test.vim	/^func! Test_Roundtrip_multibyte() abort$/;"	f
Test_Roundtrip_simple	conf/vim/.vim/plugged/vim-go/autoload/go/uri_test.vim	/^func! Test_Roundtrip_simple() abort$/;"	f
Test_SetBuildTags	conf/vim/.vim/plugged/vim-go/autoload/go/config_test.vim	/^func! Test_SetBuildTags() abort$/;"	f
Test_SwitchImportAddIgnoresCommented	conf/vim/.vim/plugged/vim-go/autoload/go/import_test.vim	/^func! Test_SwitchImportAddIgnoresCommented()$/;"	f
Test_TemplateCreate	conf/vim/.vim/plugged/vim-go/autoload/go/template_test.vim	/^func! Test_TemplateCreate() abort$/;"	f
Test_TemplateCreate_PackageExists	conf/vim/.vim/plugged/vim-go/autoload/go/template_test.vim	/^func! Test_TemplateCreate_PackageExists() abort$/;"	f
Test_TemplateCreate_UsePkg	conf/vim/.vim/plugged/vim-go/autoload/go/template_test.vim	/^func! Test_TemplateCreate_UsePkg() abort$/;"	f
Test_Vet	conf/vim/.vim/plugged/vim-go/autoload/go/lint_test.vim	/^func! Test_Vet() abort$/;"	f
Test_Vet_compilererror	conf/vim/.vim/plugged/vim-go/autoload/go/lint_test.vim	/^func! Test_Vet_compilererror() abort$/;"	f
Test_Vet_subdir	conf/vim/.vim/plugged/vim-go/autoload/go/lint_test.vim	/^func! Test_Vet_subdir() abort$/;"	f
Test_add_lines	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_add_lines()$/;"	f
Test_add_lines_fish	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_add_lines_fish()$/;"	f
Test_around_text_object	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_around_text_object()$/;"	f
Test_assume_unchanged	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_assume_unchanged()$/;"	f
Test_clean_smudge_filter	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_clean_smudge_filter()$/;"	f
Test_common_prefix	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_common_prefix()$/;"	f
Test_common_suffix	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_common_suffix()$/;"	f
Test_diagnostic_after_fmt	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! Test_diagnostic_after_fmt() abort$/;"	f
Test_diagnostic_after_fmt_change	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! Test_diagnostic_after_fmt_change() abort$/;"	f
Test_diagnostic_after_fmt_cleared	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! Test_diagnostic_after_fmt_cleared() abort$/;"	f
Test_diagnostic_after_reload	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! Test_diagnostic_after_reload() abort$/;"	f
Test_diff_highlight	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_diff_highlight()$/;"	f
Test_dos_noeol	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_dos_noeol()$/;"	f
Test_edit_file_with_same_name_as_a_branch	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_edit_file_with_same_name_as_a_branch()$/;"	f
Test_empty_file	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_empty_file()$/;"	f
Test_encoding	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_encoding()$/;"	f
Test_file_added_to_git	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_file_added_to_git()$/;"	f
Test_file_cmd	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_file_cmd()$/;"	f
Test_file_mv	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_file_mv()$/;"	f
Test_file_unknown_in_base	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_file_unknown_in_base()$/;"	f
Test_filename_leading_dash	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_leading_dash()$/;"	f
Test_filename_umlaut	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_umlaut()$/;"	f
Test_filename_with_colon	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_colon()$/;"	f
Test_filename_with_equals	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_equals()$/;"	f
Test_filename_with_space	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_space()$/;"	f
Test_filename_with_square_brackets	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_square_brackets()$/;"	f
Test_fillstruct	conf/vim/.vim/plugged/vim-go/autoload/go/fillstruct_test.vim	/^func! Test_fillstruct() abort$/;"	f
Test_fillstruct_line	conf/vim/.vim/plugged/vim-go/autoload/go/fillstruct_test.vim	/^func! Test_fillstruct_line() abort$/;"	f
Test_fillstruct_two_cursor	conf/vim/.vim/plugged/vim-go/autoload/go/fillstruct_test.vim	/^func! Test_fillstruct_two_cursor() abort$/;"	f
Test_fillstruct_two_line	conf/vim/.vim/plugged/vim-go/autoload/go/fillstruct_test.vim	/^func! Test_fillstruct_two_line() abort$/;"	f
Test_fix_file_references	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_fix_file_references()$/;"	f
Test_foldtext	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_foldtext()$/;"	f
Test_follow_symlink	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_follow_symlink()$/;"	f
Test_goFunction	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! Test_goFunction() abort$/;"	f
Test_goFunctionCall	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! Test_goFunctionCall() abort$/;"	f
Test_goImportStringHighlight	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! Test_goImportStringHighlight() abort$/;"	f
Test_goPackageComment_highlight	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! Test_goPackageComment_highlight() abort$/;"	f
Test_goReceiverHighlight	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! Test_goReceiverHighlight() abort$/;"	f
Test_goStringHighlight	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! Test_goStringHighlight() abort$/;"	f
Test_goimports	conf/vim/.vim/plugged/vim-go/autoload/go/fmt_test.vim	/^func! Test_goimports() abort$/;"	f
Test_gomodGoVersion	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! Test_gomodGoVersion() abort$/;"	f
Test_gomodToolchainVersion_highlight	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! Test_gomodToolchainVersion_highlight() abort$/;"	f
Test_gomodToolchainVersion_invalid_highlight	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! Test_gomodToolchainVersion_invalid_highlight() abort$/;"	f
Test_gomodVersion_highlight	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! Test_gomodVersion_highlight() abort$/;"	f
Test_gomodVersion_incompatible_highlight	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! Test_gomodVersion_incompatible_highlight() abort$/;"	f
Test_gopls_fillstruct	conf/vim/.vim/plugged/vim-go/autoload/go/fillstruct_test.vim	/^func! Test_gopls_fillstruct() abort$/;"	f
Test_gopls_fillstruct_two_cursor_first	conf/vim/.vim/plugged/vim-go/autoload/go/fillstruct_test.vim	/^func! Test_gopls_fillstruct_two_cursor_first() abort$/;"	f
Test_gopls_fillstruct_two_cursor_second	conf/vim/.vim/plugged/vim-go/autoload/go/fillstruct_test.vim	/^func! Test_gopls_fillstruct_two_cursor_second() abort$/;"	f
Test_hunk_outside_noop	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_outside_noop()$/;"	f
Test_hunk_stage	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage()$/;"	f
Test_hunk_stage_nearby_hunk	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_nearby_hunk()$/;"	f
Test_hunk_stage_partial_cmd_added	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_partial_cmd_added()$/;"	f
Test_hunk_stage_partial_preview_added	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_partial_preview_added()$/;"	f
Test_hunk_stage_partial_preview_added_removed	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_partial_preview_added_removed()$/;"	f
Test_hunk_stage_partial_visual_added	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_partial_visual_added()$/;"	f
Test_hunk_stage_preview_write	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_preview_write()$/;"	f
Test_hunk_undo	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_undo()$/;"	f
Test_hunk_undo_dos	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_undo_dos()$/;"	f
Test_impl	conf/vim/.vim/plugged/vim-go/autoload/go/impl_test.vim	/^func! Test_impl() abort$/;"	f
Test_impl_get	conf/vim/.vim/plugged/vim-go/autoload/go/impl_test.vim	/^func! Test_impl_get() abort$/;"	f
Test_indent_raw_string	conf/vim/.vim/plugged/vim-go/autoload/go/indent_test.vim	/^func! Test_indent_raw_string() abort$/;"	f
Test_inner_text_object	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_inner_text_object()$/;"	f
Test_jump_to_declaration_godef	conf/vim/.vim/plugged/vim-go/autoload/go/def_test.vim	/^func! Test_jump_to_declaration_godef() abort$/;"	f
Test_keep_alt	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_alt()$/;"	f
Test_keep_modified	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_modified()$/;"	f
Test_keep_op_marks	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_op_marks()$/;"	f
Test_lcs	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_lcs()$/;"	f
Test_modify_lines	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_modify_lines()$/;"	f
Test_no_modifications	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_no_modifications()$/;"	f
Test_numeric_literal_highlight	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! Test_numeric_literal_highlight() abort$/;"	f
Test_orphaned_signs	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_orphaned_signs()$/;"	f
Test_overlapping_hunk_op	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_overlapping_hunk_op()$/;"	f
Test_overlapping_hunks	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_overlapping_hunks()$/;"	f
Test_preview	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_preview()$/;"	f
Test_preview_dos	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_preview_dos()$/;"	f
Test_priority	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_priority()$/;"	f
Test_quickfix	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_quickfix()$/;"	f
Test_remove_first_lines	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_remove_first_lines()$/;"	f
Test_remove_lines	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_remove_lines()$/;"	f
Test_remove_tags	conf/vim/.vim/plugged/vim-go/autoload/go/tags_test.vim	/^func! Test_remove_tags() abort$/;"	f
Test_run_fmt	conf/vim/.vim/plugged/vim-go/autoload/go/fmt_test.vim	/^func! Test_run_fmt() abort$/;"	f
Test_saveas	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_saveas()$/;"	f
Test_split	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_split()$/;"	f
Test_undo_nearby_hunk	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_undo_nearby_hunk()$/;"	f
Test_untracked_file_outside_repo	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_outside_repo()$/;"	f
Test_untracked_file_square_brackets_within_repo	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_square_brackets_within_repo()$/;"	f
Test_untracked_file_within_repo	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_within_repo()$/;"	f
Test_update_file	conf/vim/.vim/plugged/vim-go/autoload/go/fmt_test.vim	/^func! Test_update_file() abort$/;"	f
Test_user_autocmd	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_user_autocmd()$/;"	f
Test_v_shell_error_not_clobbered	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_v_shell_error_not_clobbered()$/;"	f
Test_write_option	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_write_option()$/;"	f
Test_zero_as_index_element	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! Test_zero_as_index_element() abort$/;"	f
Test_zero_as_slice_index	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! Test_zero_as_slice_index() abort$/;"	f
Test_zero_as_start_slicing_slice	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! Test_zero_as_start_slicing_slice() abort$/;"	f
TextObject	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^class TextObject:$/;"	c
TextObjectTransformation	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^class TextObjectTransformation:$/;"	c
TextTabStopAfterMirror_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopAfterMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopAllSurrounded_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopAllSurrounded_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopSimpleMirrorMultilineMirrorInFront_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopSimpleMirrorMultilineMirrorInFront_ECR(_VimTest):$/;"	c
TextTabStopSimpleMirrorMultiline_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopSimpleMirrorMultiline_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopSurroundMirror_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopSurroundMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextAfterTab_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextAfterTab_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextBeforeMirror_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextBeforeMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextBeforeTab_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextBeforeTab_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextSurroundedTab_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextSurroundedTab_ExpectCorrectResult(_VimTest):$/;"	c
ToUseRegister	conf/vim/.vim/plugged/vim-operator-user/t/register-designations.vim	/^let ToUseRegister = {}$/;"	v
ToUseRegister.match	conf/vim/.vim/plugged/vim-operator-user/t/register-designations.vim	/^function! ToUseRegister.match(actual, expected)$/;"	f
Toc	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^command! -buffer Toc call s:Toc()$/;"	c
Toc	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:Toc(...)$/;"	f
Toch	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^command! -buffer Toch call s:Toc('horizontal')$/;"	c
Toct	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^command! -buffer Toct call s:Toc('tab')$/;"	c
Tocv	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^command! -buffer Tocv call s:Toc('vertical')$/;"	c
ToggleTabTreeVCS	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/vcs.vim	/^function! s:ToggleTabTreeVCS(name)$/;"	f
Token	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class Token:$/;"	c
TrailingNewline_TabStop_EndNL	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_EndNL(_VimTest):$/;"	c
TrailingNewline_TabStop_EndStartNL	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_EndStartNL(_VimTest):$/;"	c
TrailingNewline_TabStop_ExtraNL_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_ExtraNL_ECR(_VimTest):$/;"	c
TrailingNewline_TabStop_JustNL	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_JustNL(_VimTest):$/;"	c
TrailingNewline_TabStop_NLInsideStuffBehind	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_NLInsideStuffBehind(_VimTest):$/;"	c
TrailingNewline_TabStop_NotEndStartNL	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_NotEndStartNL(_VimTest):$/;"	c
TrailingNewline_TabStop_StartNL	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_StartNL(_VimTest):$/;"	c
Transformation	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^class Transformation(Mirror, TextObjectTransformation):$/;"	c
TransformationToken	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class TransformationToken(Token):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValue_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValue_ECR(_VimTest):$/;"	c
Transformation_BackreferenceTwice_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_BackreferenceTwice_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_Backreference_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_Backreference_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIBothDefinedNegative_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CIBothDefinedNegative_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIBothDefinedPositive_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CIBothDefinedPositive_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIEscapedParensinReplace_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CIEscapedParensinReplace_ECR(_VimTest):$/;"	c
Transformation_CINewlines_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CINewlines_ECR(_VimTest):$/;"	c
Transformation_CITabstop_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CITabstop_ECR(_VimTest):$/;"	c
Transformation_CleverTransformLongLower_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformLongLower_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformLongUpper_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformLongUpper_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformLowercaseChar_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformLowercaseChar_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformUpercaseChar_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformUpercaseChar_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_ConditionalInConditional_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalInConditional_ECR(_VimTest):$/;"	c
Transformation_ConditionalInsertRWEllipsis_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalInsertRWEllipsis_ECR(_VimTest):$/;"	c
Transformation_ConditionalInsertionSimple_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalInsertionSimple_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_ConditionalWithBackslashBeforeDelimiter	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalWithBackslashBeforeDelimiter(_VimTest):$/;"	c
Transformation_ConditionalWithBackslashBeforeDelimiter1	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalWithBackslashBeforeDelimiter1(_VimTest):$/;"	c
Transformation_ConditionalWithEscapedDelimiter	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalWithEscapedDelimiter(_VimTest):$/;"	c
Transformation_InsideTabLeaveAtDefault_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_InsideTabLeaveAtDefault_ECR(_VimTest):$/;"	c
Transformation_InsideTabOvertype_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_InsideTabOvertype_ECR(_VimTest):$/;"	c
Transformation_LowerCaseAsciiResult	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_LowerCaseAsciiResult(_VimTest):$/;"	c
Transformation_MultipleTransformations_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_MultipleTransformations_ECR(_VimTest):$/;"	c
Transformation_OptionIgnoreCase_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionIgnoreCase_ECR(_VimTest):$/;"	c
Transformation_OptionMultiline_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionMultiline_ECR(_VimTest):$/;"	c
Transformation_OptionReplaceGlobalMatchInReplace_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionReplaceGlobalMatchInReplace_ECR(_VimTest):$/;"	c
Transformation_OptionReplaceGlobal_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionReplaceGlobal_ECR(_VimTest):$/;"	c
Transformation_SimpleCaseAsciiResult	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseAsciiResult(_VimTest):$/;"	c
Transformation_SimpleCaseNoTransform_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseNoTransform_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_SimpleCaseTransformInFrontDefVal_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseTransformInFrontDefVal_ECR(_VimTest):$/;"	c
Transformation_SimpleCaseTransformInFront_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseTransformInFront_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_SimpleCase_ExpectCorrectResult	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCase_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_TabIsAtEndAndDeleted1_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndAndDeleted1_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndAndDeleted_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndAndDeleted_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndNoTextLeave_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndNoTextLeave_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndNoTextType_ECR	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndNoTextType_ECR(_VimTest):$/;"	c
Transformation_TestKill_InsertAfter_NoKill	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertAfter_NoKill(_VimTest):$/;"	c
Transformation_TestKill_InsertBefore_NoKill	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertBefore_NoKill(_VimTest):$/;"	c
Transformation_TestKill_InsertBeginning_Kill	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertBeginning_Kill(_VimTest):$/;"	c
Transformation_TestKill_InsertEnd_Kill	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertEnd_Kill(_VimTest):$/;"	c
TreeDirNode.AbsoluteTreeRoot	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path, nerdtree)$/;"	f
TreeDirNode._glob	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._glob(pattern, all)$/;"	f
TreeDirNode._initChildren	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openInNewTab	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
TreeDirNode.activate	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
TreeDirNode.addChild	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.displayString	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.displayString()$/;"	f
TreeDirNode.findNode	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getCascade	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascade()$/;"	f
TreeDirNode.getCascadeRoot	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascadeRoot()$/;"	f
TreeDirNode.getChild	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getDirChildren	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getDirChildren()$/;"	f
TreeDirNode.getVisibleChildCount	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.isCascadable	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.isCascadable()$/;"	f
TreeDirNode.open	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
TreeDirNode.openAlong	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
TreeDirNode.openExplorer	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.refreshDirFlags	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshDirFlags()$/;"	f
TreeDirNode.refreshFlags	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshFlags()$/;"	f
TreeDirNode.removeChild	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path, ...)$/;"	f
TreeDirNode.sortChildren	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
TreeDirNode.transplantChild	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetSelected	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path, nerdtree)$/;"	f
TreeFileNode._renderToString	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText)$/;"	f
TreeFileNode.activate	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
TreeFileNode.bookmark	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBookmarks	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
TreeFileNode.copy	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findSibling	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getNerdtree	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getNerdtree()$/;"	f
TreeFileNode.isRoot	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.open	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
TreeFileNode.openExplorer	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openExplorer()$/;"	f
TreeFileNode.openInNewTab	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.refreshFlags	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refreshFlags()$/;"	f
TreeFileNode.rename	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
TrimSpacesAtEndOfLines	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class TrimSpacesAtEndOfLines(_VimTest):$/;"	c
UI.IndentWid	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.IndentWid()$/;"	f
UI.MarkupReg	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.MarkupReg()$/;"	f
UI.New	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.New(nerdtree)$/;"	f
UI.UpDirLine	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.UpDirLine()$/;"	f
UI._dumpHelp	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._dumpHelp()$/;"	f
UI._indentLevelFor	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._indentLevelFor(line)$/;"	f
UI._renderBookmarks	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._renderBookmarks()$/;"	f
UI._stripMarkup	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._stripMarkup(line)$/;"	f
UI.centerView	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.centerView()$/;"	f
UI.getLineNum	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getLineNum(node)$/;"	f
UI.getPath	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getPath(ln)$/;"	f
UI.getRootLineNum	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getRootLineNum()$/;"	f
UI.getShowBookmarks	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowBookmarks()$/;"	f
UI.getShowFileLines	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowFileLines()$/;"	f
UI.getShowFiles	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowFiles()$/;"	f
UI.getShowHelp	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHelp()$/;"	f
UI.getShowHidden	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHidden()$/;"	f
UI.isIgnoreFilterEnabled	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isIgnoreFilterEnabled()$/;"	f
UI.isMinimal	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isMinimal()$/;"	f
UI.render	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.render()$/;"	f
UI.renderViewSavingPosition	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.renderViewSavingPosition()$/;"	f
UI.restoreScreenState	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.restoreScreenState()$/;"	f
UI.saveScreenState	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.saveScreenState()$/;"	f
UI.setShowBookmarks	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.setShowBookmarks(value)$/;"	f
UI.setShowHidden	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.setShowHidden(val)$/;"	f
UI.toggleHelp	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleHelp()$/;"	f
UI.toggleIgnoreFilter	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleIgnoreFilter()$/;"	f
UI.toggleShowBookmarks	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowBookmarks()$/;"	f
UI.toggleShowFileLines	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowFileLines()$/;"	f
UI.toggleShowFiles	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowFiles()$/;"	f
UI.toggleShowHidden	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowHidden()$/;"	f
UI.toggleZoom	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleZoom()$/;"	f
UNIDECODE_ALERT_RAISED	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^UNIDECODE_ALERT_RAISED = False$/;"	v
UNIDECODE_IMPORTED	conf/vim/.vim/plugged/ultisnips/test/util.py	/^    UNIDECODE_IMPORTED = False$/;"	v
UNIDECODE_IMPORTED	conf/vim/.vim/plugged/ultisnips/test/util.py	/^    UNIDECODE_IMPORTED = True$/;"	v
UNIT_TEST_FILES	conf/emacs/.emacs.d/tests/core/Makefile	/^UNIT_TEST_FILES = \\$/;"	m
UNIT_TEST_FILES	conf/emacs/.emacs.d/tests/doc/Makefile	/^UNIT_TEST_FILES =$/;"	m
UNIT_TEST_FILES	conf/emacs/.emacs.d/tests/layers/+distribution/spacemacs-base/Makefile	/^UNIT_TEST_FILES = \\$/;"	m
UNIT_TEST_FILES	conf/emacs/.emacs.d/tests/layers/+distribution/spacemacs/Makefile	/^UNIT_TEST_FILES =$/;"	m
UNSET	workflows/Ariafred/src/workflow/workflow.py	/^UNSET = object()$/;"	v
URL	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/makefile	/^	URL := ${URL2}$/;"	m
URL	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/makefile	/^URL := https:\/\/docs.python.org\/2\/archives\/${ZIP}$/;"	m
URL2	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/makefile	/^URL2:= https:\/\/docs.python.org\/3\/archives\/${ZIP}$/;"	m
USER_AGENT	workflows/Ariafred/src/workflow/web.py	/^USER_AGENT = u'Alfred-Workflow\/1.19 (+http:\/\/www.deanishe.net\/alfred-workflow)'$/;"	v
UltiSnippetTextObj	conf/vim/.vim/plugged/ultisnips/ftplugin/snippets.vim	/^fun! s:UltiSnippetTextObj(inner) abort$/;"	f
UltiSnips#AddFiletypes	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#AddFiletypes(filetypes) abort$/;"	f
UltiSnips#AddSnippetWithPriority	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#AddSnippetWithPriority(trigger, value, description, options, filetype, priority) abort$/;"	f
UltiSnips#Anon	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#Anon(value, ...) abort$/;"	f
UltiSnips#CanExpandSnippet	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#CanExpandSnippet() abort$/;"	f
UltiSnips#CanJumpBackwards	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#CanJumpBackwards() abort$/;"	f
UltiSnips#CanJumpForwards	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#CanJumpForwards() abort$/;"	f
UltiSnips#CheckFiletype	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#CheckFiletype() abort$/;"	f
UltiSnips#CursorMoved	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#CursorMoved() abort$/;"	f
UltiSnips#Edit	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#Edit(bang, ...) abort$/;"	f
UltiSnips#ExpandSnippet	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ExpandSnippet() abort$/;"	f
UltiSnips#ExpandSnippetOrJump	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ExpandSnippetOrJump() abort$/;"	f
UltiSnips#FileTypeComplete	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#FileTypeComplete(arglead, cmdline, cursorpos) abort$/;"	f
UltiSnips#JumpBackwards	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#JumpBackwards() abort$/;"	f
UltiSnips#JumpForwards	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#JumpForwards() abort$/;"	f
UltiSnips#JumpOrExpandSnippet	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#JumpOrExpandSnippet() abort$/;"	f
UltiSnips#LeavingBuffer	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#LeavingBuffer() abort$/;"	f
UltiSnips#LeavingInsertMode	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#LeavingInsertMode() abort$/;"	f
UltiSnips#ListSnippets	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ListSnippets() abort$/;"	f
UltiSnips#RefreshSnippets	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#RefreshSnippets() abort$/;"	f
UltiSnips#SaveLastVisualSelection	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#SaveLastVisualSelection() range abort$/;"	f
UltiSnips#SnippetsInCurrentScope	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#SnippetsInCurrentScope(...) abort$/;"	f
UltiSnips#ToggleAutoTrigger	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ToggleAutoTrigger() abort$/;"	f
UltiSnips#TrackChange	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#TrackChange() abort$/;"	f
UltiSnips#map_keys#MapKeys	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^function! UltiSnips#map_keys#MapKeys() abort$/;"	f
UltiSnipsAddFiletypes	conf/vim/.vim/plugged/ultisnips/plugin/UltiSnips.vim	/^command! -nargs=1 UltiSnipsAddFiletypes :call UltiSnips#AddFiletypes(<q-args>)$/;"	c
UltiSnipsEdit	conf/vim/.vim/plugged/ultisnips/plugin/UltiSnips.vim	/^command! -bang -nargs=? -complete=customlist,UltiSnips#FileTypeComplete UltiSnipsEdit$/;"	c
UltiSnipsFileSource	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^class UltiSnipsFileSource(SnippetFileSource):$/;"	c
UltiSnipsSnippetDefinition	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/ulti_snips.py	/^class UltiSnipsSnippetDefinition(SnippetDefinition):$/;"	c
UltiSnips_AutoTrigger	conf/vim/.vim/plugged/ultisnips/plugin/UltiSnips.vim	/^augroup UltiSnips_AutoTrigger$/;"	a
UltiSnips_Manager	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^UltiSnips_Manager = SnippetManager(  # pylint:disable=invalid-name$/;"	v
UmlautsBeforeTriggerAndCharsAfter	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class UmlautsBeforeTriggerAndCharsAfter(_UmlautsBase):$/;"	c
Undo_ChangesInPlaceholder	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^class Undo_ChangesInPlaceholder(_VimTest):$/;"	c
Undo_CompletelyUndoSnippet	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^class Undo_CompletelyUndoSnippet(_VimTest):$/;"	c
Undo_RemoveEditInTabstop	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveEditInTabstop(_VimTest):$/;"	c
Undo_RemoveMultilineSnippet	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveMultilineSnippet(_VimTest):$/;"	c
Undo_RemoveOneSnippetByTime	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveOneSnippetByTime(_VimTest):$/;"	c
Undo_RemoveOneSnippetByTime2	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveOneSnippetByTime2(_VimTest):$/;"	c
Undo_RemoveWholeSnippet	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveWholeSnippet(_VimTest):$/;"	c
UpdateModifiedSnippetWithoutCursorMove1	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^class UpdateModifiedSnippetWithoutCursorMove1(_VimTest):$/;"	c
UpdateModifiedSnippetWithoutCursorMove2	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^class UpdateModifiedSnippetWithoutCursorMove2(_VimTest):$/;"	c
UpdateStatusFalse	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^class UpdateStatusFalse(TypedDict):$/;"	c
UpdateStatusTrue	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^class UpdateStatusTrue(TypedDict):$/;"	c
UserContext	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^UserContext = typing.Dict[str, typing.Any]$/;"	v
UserContext	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/context.py	/^UserContext = typing.Dict[str, typing.Any]$/;"	v
UserContext	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^UserContext = typing.Dict[str, typing.Any]$/;"	v
UserContext	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^UserContext = typing.Dict[str, typing.Any]$/;"	v
UserContext	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^UserContext = typing.Dict[str, typing.Any]$/;"	v
VER	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/makefile	/^VER := $(shell python --version 2>&1 | grep -o "[0-9].[0-9].[0-9]*")$/;"	m
VERBOSE	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^    VERBOSE = opts.verbose$/;"	v
VERBOSE	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^VERBOSE = False$/;"	v
VERSION	conf/zsh/.oh-my-zsh/plugins/aliases/termcolor.py	/^VERSION = (1, 1, 0)$/;"	v
VIMDIR	conf/vim/.vim/plugged/vim-markdown/Makefile	/^VIMDIR=$(DESTDIR)\/usr\/share\/vim$/;"	m
VIMS	conf/vim/.vim/plugged/vim-go/Makefile	/^VIMS ?= vim-8.1 vim-8.2 nvim$/;"	m
V_	conf/vim/.vim/plugged/vim-operator-user/t/ex-command.vim	/^    normal V_$/;"	m
Variables	workflows/Ariafred/src/workflow/workflow3.py	/^class Variables(dict):$/;"	c
VerifyVimDict1	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^class VerifyVimDict1(_VimTest):$/;"	c
VerifyVimDict2	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^class VerifyVimDict2(_VimTest):$/;"	c
VerifyVimDict3	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^class VerifyVimDict3(_VimTest):$/;"	c
Version	workflows/Ariafred/src/workflow/update.py	/^class Version(object):$/;"	c
VersionAwareNetrwBrowseX	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:VersionAwareNetrwBrowseX(url)$/;"	f
VimBuffer	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^class VimBuffer:$/;"	c
VimBufferProxy	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^class VimBufferProxy(vim_helper.VimBuffer):$/;"	c
VimEnter	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:VimEnter() abort$/;"	f
VimInterface	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^class VimInterface(TempFileManager):$/;"	c
VimInterfaceTmux	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^class VimInterfaceTmux(VimInterface):$/;"	c
VimInterfaceTmuxNeovim	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^class VimInterfaceTmuxNeovim(VimInterfaceTmux):$/;"	c
VimInterfaceWindows	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^class VimInterfaceWindows(VimInterface):$/;"	c
VimLCode	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/viml_code.py	/^class VimLCode(NoneditableTextObject):$/;"	c
VimLCodeToken	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class VimLCodeToken(Token):$/;"	c
VimLeavePre	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:VimLeavePre() abort$/;"	f
VimPosition	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^class VimPosition(Position):$/;"	c
VimState	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^class VimState:$/;"	c
VimTestCase	conf/vim/.vim/plugged/ultisnips/test/vim_test_case.py	/^class VimTestCase(unittest.TestCase, TempFileManager):$/;"	c
VirtualEdit	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^class VirtualEdit(_VimTest):$/;"	c
VisMove	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^function! s:VisMove(f)$/;"	f
Visual	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^class Visual(NoneditableTextObject, TextObjectTransformation):$/;"	c
VisualContentPreserver	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^class VisualContentPreserver:$/;"	c
VisualToken	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class VisualToken(Token):$/;"	c
VisualTransformationWithDefault_ExpandWithVisual	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class VisualTransformationWithDefault_ExpandWithVisual(_VimTest):$/;"	c
VisualTransformationWithDefault_ExpandWithoutVisual	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class VisualTransformationWithDefault_ExpandWithoutVisual(_VimTest):$/;"	c
VisualTransformation_InDefaultText_LineSelect_NoOverwrite	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_InDefaultText_LineSelect_NoOverwrite(_VimTest):$/;"	c
VisualTransformation_InDefaultText_LineSelect_Overwrite	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_InDefaultText_LineSelect_Overwrite(_VimTest):$/;"	c
VisualTransformation_LineSelect_Simple	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_LineSelect_Simple(_VimTest):$/;"	c
VisualTransformation_SelectOneWord	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_SelectOneWord(_VimTest):$/;"	c
VisualWithDefaultWithSlashes_ExpandWithoutVisual	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class VisualWithDefaultWithSlashes_ExpandWithoutVisual(_VimTest):$/;"	c
VisualWithDefault_ExpandWithVisual	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class VisualWithDefault_ExpandWithVisual(_VimTest):$/;"	c
VisualWithDefault_ExpandWithoutVisual	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class VisualWithDefault_ExpandWithoutVisual(_VimTest):$/;"	c
Visual_CrossOneLine	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class Visual_CrossOneLine(_VimTest):$/;"	c
Visual_ExpandTwice	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class Visual_ExpandTwice(_VimTest):$/;"	c
Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_Overwrite	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_Overwrite(_VimTest):$/;"	c
Visual_InDefaultText_LineSelect_NoOverwrite	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_LineSelect_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_LineSelect_Overwrite	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_LineSelect_Overwrite(_VimTest):$/;"	c
Visual_InDefaultText_SelectOneWord	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_SelectOneWord(_VimTest):$/;"	c
Visual_InDefaultText_SelectOneWord_NoOverwrite	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_SelectOneWord_NoOverwrite(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentSimple	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_CheckIndentSimple(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentTwice	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_CheckIndentTwice(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentWithTS_NoOverwrite	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_CheckIndentWithTS_NoOverwrite(_VimTest):$/;"	c
Visual_LineSelect_DedentLine	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_DedentLine(_VimTest):$/;"	c
Visual_LineSelect_Simple	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_Simple(_VimTest):$/;"	c
Visual_LineSelect_WithTabStop	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_WithTabStop(_VimTest):$/;"	c
Visual_NoVisualSelection_Ignore	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class Visual_NoVisualSelection_Ignore(_VimTest):$/;"	c
Visual_SelectOneWord	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord(_VimTest):$/;"	c
Visual_SelectOneWordExclusive	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWordExclusive(_VimTest):$/;"	c
Visual_SelectOneWordInclusive	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWordInclusive(_VimTest):$/;"	c
Visual_SelectOneWordWithTabstop_TillEndOfLine	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWordWithTabstop_TillEndOfLine(_VimTest):$/;"	c
Visual_SelectOneWord_Inword	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_Inword(_VimTest):$/;"	c
Visual_SelectOneWord_ProblemAfterTab	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_ProblemAfterTab(_VimTest):$/;"	c
Visual_SelectOneWord_TillEndOfLine	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_TillEndOfLine(_VimTest):$/;"	c
Visual_SelectOneWord_TwiceVisual	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_TwiceVisual(_VimTest):$/;"	c
VjjV	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            normal! VjjV$/;"	m
WIN_ESCAPES	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    WIN_ESCAPES = ["+", "^", "%", "~", "[", "]", "<", ">", "(", ")"]$/;"	v	class:VimInterfaceWindows
WIN_REPLACES	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    WIN_REPLACES = [$/;"	v	class:VimInterfaceWindows
Workflow	workflows/Ariafred/src/workflow/workflow.py	/^class Workflow(object):$/;"	c
Workflow3	workflows/Ariafred/src/workflow/workflow3.py	/^class Workflow3(Workflow):$/;"	c
ZIP	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/makefile	/^ZIP := python-${VER}-docs-html.zip$/;"	m
ZSH	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/Makefile	/^ZSH?=zsh # zsh binary to run tests with$/;"	m
ZSH	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/Makefile	/^ZSH?=zsh # zsh binary to run tests with$/;"	m
[[	conf/vim/.vim/plugged/vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> [[ :<c-u>call go#textobj#FunctionJump('n', 'prev')<cr>$/;"	m
[[	conf/vim/.vim/plugged/vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> [[ :<c-u>call go#textobj#FunctionJump('o', 'prev')<cr>$/;"	m
[fzf-p]*	conf/vim/.vim/custom/coc.vim	/^nnoremap <silent> [fzf-p]*     :<C-u>CocCommand fzf-preview.Lines --add-fzf-arg=--no-sort --add-fzf-arg=--query="'<C-r>=expand('<cword>')<CR>"<CR>$/;"	m
[fzf-p]/	conf/vim/.vim/custom/coc.vim	/^nnoremap <silent> [fzf-p]\/     :<C-u>CocCommand fzf-preview.Lines --add-fzf-arg=--no-sort --add-fzf-arg=--query="'"<CR>$/;"	m
[fzf-p]<C-o>	conf/vim/.vim/custom/coc.vim	/^nnoremap <silent> [fzf-p]<C-o> :<C-u>CocCommand fzf-preview.Jumps<CR>$/;"	m
[fzf-p]B	conf/vim/.vim/custom/coc.vim	/^nnoremap <silent> [fzf-p]B     :<C-u>CocCommand fzf-preview.AllBuffers<CR>$/;"	m
[fzf-p]b	conf/vim/.vim/custom/coc.vim	/^nnoremap <silent> [fzf-p]b     :<C-u>CocCommand fzf-preview.Buffers<CR>$/;"	m
[fzf-p]g;	conf/vim/.vim/custom/coc.vim	/^nnoremap <silent> [fzf-p]g;    :<C-u>CocCommand fzf-preview.Changes<CR>$/;"	m
[fzf-p]ga	conf/vim/.vim/custom/coc.vim	/^nnoremap <silent> [fzf-p]ga    :<C-u>CocCommand fzf-preview.GitActions<CR>$/;"	m
[fzf-p]gr	conf/vim/.vim/custom/coc.vim	/^nnoremap          [fzf-p]gr    :<C-u>CocCommand fzf-preview.ProjectGrep<Space>$/;"	m
[fzf-p]gs	conf/vim/.vim/custom/coc.vim	/^nnoremap <silent> [fzf-p]gs    :<C-u>CocCommand fzf-preview.GitStatus<CR>$/;"	m
[fzf-p]l	conf/vim/.vim/custom/coc.vim	/^nnoremap <silent> [fzf-p]l     :<C-u>CocCommand fzf-preview.LocationList<CR>$/;"	m
[fzf-p]o	conf/vim/.vim/custom/coc.vim	/^nnoremap <silent> [fzf-p]o     :<C-u>CocCommand fzf-preview.FromResources buffer project_mru<CR>$/;"	m
[fzf-p]p	conf/vim/.vim/custom/coc.vim	/^nnoremap <silent> [fzf-p]p     :<C-u>CocCommand fzf-preview.FromResources project_mru git<CR>$/;"	m
[fzf-p]q	conf/vim/.vim/custom/coc.vim	/^nnoremap <silent> [fzf-p]q     :<C-u>CocCommand fzf-preview.QuickFix<CR>$/;"	m
[fzf-p]t	conf/vim/.vim/custom/coc.vim	/^nnoremap <silent> [fzf-p]t     :<C-u>CocCommand fzf-preview.BufferTags<CR>$/;"	m
[g	conf/vim/.vim/custom/coc.vim	/^nmap <silent> [g <Plug>(coc-diagnostic-prev)$/;"	m
[g	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nmap <silent> [g <Plug>(coc-diagnostic-prev)$/;"	m
]]	conf/vim/.vim/plugged/vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> ]] :<c-u>call go#textobj#FunctionJump('n', 'next')<cr>$/;"	m
]]	conf/vim/.vim/plugged/vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> ]] :<c-u>call go#textobj#FunctionJump('o', 'next')<cr>$/;"	m
]g	conf/vim/.vim/custom/coc.vim	/^nmap <silent> ]g <Plug>(coc-diagnostic-next)$/;"	m
]g	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nmap <silent> ]g <Plug>(coc-diagnostic-next)$/;"	m
_	conf/vim/.vim/plugged/vim-operator-user/t/ex-command.vim	/^    map <buffer> _  <Plug>(operator-substitute)$/;"	m
_	conf/vim/.vim/plugged/vim-operator-user/t/register-designations.vim	/^map _  <Plug>(operator-echo)$/;"	m
_AddFuncBase	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^class _AddFuncBase(_VimTest):$/;"	c
_AnonBase	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^class _AnonBase(_VimTest):$/;"	c
_Base	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class _Base:$/;"	c
_BaseGuessing	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class _BaseGuessing:$/;"	c
_CONDITIONAL	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^_CONDITIONAL = re.compile(r"\\(\\?(\\d+):", re.DOTALL)$/;"	v
_CleverReplace	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^class _CleverReplace:$/;"	c
_DOLLAR	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^_DOLLAR = re.compile(r"\\$(\\d+)", re.DOTALL)$/;"	v
_ES_Base	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^class _ES_Base(_VimTest):$/;"	c
_ExpandTabs	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^class _ExpandTabs(_VimTest):$/;"	c
_FormatoptionsBase	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^class _FormatoptionsBase(_VimTest):$/;"	c
_G.check_back_space	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.lua	/^function _G.check_back_space()$/;"	f
_G.show_docs	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.lua	/^function _G.show_docs()$/;"	f
_INDENT	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    _INDENT = re.compile(r"^[ \\t]*")$/;"	v	class:SnippetDefinition
_LONG_CASEFOLDINGS	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^_LONG_CASEFOLDINGS = re.compile(r"\\\\([UL].*?)\\\\E", re.DOTALL)$/;"	v
_ListAllSnippets	conf/vim/.vim/plugged/ultisnips/test/test_ListSnippets.py	/^class _ListAllSnippets(_VimTest):$/;"	c
_MPBase	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class _MPBase:$/;"	c
_MultiLineDefault	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class _MultiLineDefault(_VimTest):$/;"	c
_MultiWord_SnippetOptions_ExpandWordSnippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class _MultiWord_SnippetOptions_ExpandWordSnippets(_VimTest):$/;"	c
_MultipleMatches	conf/vim/.vim/plugged/ultisnips/test/test_MultipleMatches.py	/^class _MultipleMatches(_VimTest):$/;"	c
_No_Tab_Expand	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class _No_Tab_Expand(_VimTest):$/;"	c
_ONE_CHAR_CASE_SWITCH	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^_ONE_CHAR_CASE_SWITCH = re.compile(r"\\\\([ul].)", re.DOTALL)$/;"	v
_OS_Base	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^class _OS_Base(_VimTest):$/;"	c
_Parent	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^class _Parent(logger.LoggingMixin):$/;"	c
_ParseSnippets_MultiWord	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class _ParseSnippets_MultiWord(_VimTest):$/;"	c
_ParseSnippets_MultiWord_RE	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^class _ParseSnippets_MultiWord_RE(_VimTest):$/;"	c
_Placeholder	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^_Placeholder = namedtuple("_FrozenPlaceholder", ["current_text", "start", "end"])$/;"	v
_REPLACE_NON_WS	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^_REPLACE_NON_WS = re.compile(r"[^ \\t]")$/;"	v
_Regex_Self	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class _Regex_Self(_VimTest):$/;"	c
_SelectModeMappings	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^class _SelectModeMappings(_VimTest):$/;"	c
_SimpleExpands	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^class _SimpleExpands(_VimTest):$/;"	c
_SnippetOptions_ExpandWordSnippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class _SnippetOptions_ExpandWordSnippets(_VimTest):$/;"	c
_SnippetUtilCursor	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^class _SnippetUtilCursor:$/;"	c
_TABS	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    _TABS = re.compile(r"^\\t*")$/;"	v	class:SnippetDefinition
_TOKEN_TO_TEXTOBJECT	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^_TOKEN_TO_TEXTOBJECT = {$/;"	v
_TOKEN_TO_TEXTOBJECT	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^_TOKEN_TO_TEXTOBJECT = {$/;"	v
_TabExpand_RealWorld	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^class _TabExpand_RealWorld:$/;"	c
_Tabs	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^class _Tabs:$/;"	c
_TextIterator	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^class _TextIterator:$/;"	c
_UmlautsBase	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^class _UmlautsBase(_VimTest):$/;"	c
_VimCursor	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^class _VimCursor(NoneditableTextObject):$/;"	c
_VisualContent	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^_VisualContent = namedtuple("_VisualContent", ["mode", "text"])$/;"	v
__ALLOWED_TOKENS	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^__ALLOWED_TOKENS = [$/;"	v
__ALLOWED_TOKENS	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^__ALLOWED_TOKENS = [$/;"	v
__ALLOWED_TOKENS_IN_TABSTOPS	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^__ALLOWED_TOKENS_IN_TABSTOPS = [$/;"	v
__ALL__	conf/zsh/.oh-my-zsh/plugins/aliases/termcolor.py	/^__ALL__ = [ 'colored', 'cprint' ]$/;"	v
__WHITESPACE_SPLIT	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^__WHITESPACE_SPLIT = re.compile(r"\\s")$/;"	v
___git_complete	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^___git_complete ()$/;"	f
__add__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __add__(self, pos):$/;"	m	class:Position	file:
__add__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __add__(self, value):$/;"	m	class:SnippetUtil	file:
__all__	workflows/Ariafred/src/workflow/__init__.py	/^__all__ = [$/;"	v
__all__	workflows/Ariafred/src/workflow/background.py	/^__all__ = ['is_running', 'run_in_background']$/;"	v
__apply_upstream_changes	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^    def __apply_upstream_changes(self) -> None:$/;"	m	class:Dependency	file:
__author__	workflows/Ariafred/src/workflow/__init__.py	/^__author__ = 'Dean Jackson'$/;"	v
__call__	workflows/Ariafred/src/workflow/util.py	/^    def __call__(self, *args, **kwargs):$/;"	m	class:uninterruptible	file:
__contains__	workflows/Ariafred/src/workflow/web.py	/^    def __contains__(self, key):$/;"	m	class:CaseInsensitiveDictionary	file:
__copyright__	workflows/Ariafred/src/workflow/__init__.py	/^__copyright__ = 'Copyright 2014-2017 Dean Jackson'$/;"	v
__del__	workflows/Ariafred/src/workflow/util.py	/^    def __del__(self):$/;"	m	class:LockFile	file:
__delitem__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __delitem__(self, key):$/;"	m	class:VimBufferProxy	file:
__delitem__	workflows/Ariafred/src/workflow/workflow.py	/^    def __delitem__(self, key):$/;"	m	class:Settings	file:
__drush_ps1	conf/zsh/.oh-my-zsh/plugins/drush/drush.complete.sh	/^__drush_ps1() {$/;"	f
__enter__	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^    def __enter__(self):$/;"	m	class:CodeTimer	file:
__enter__	workflows/Ariafred/src/workflow/util.py	/^    def __enter__(self):$/;"	m	class:LockFile	file:
__eq__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __eq__(self, other):$/;"	m	class:Position	file:
__eq__	workflows/Ariafred/src/workflow/update.py	/^    def __eq__(self, other):$/;"	m	class:Version	file:
__exit__	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^    def __exit__(self, exc_type, exc_value, traceback):$/;"	m	class:CodeTimer	file:
__exit__	workflows/Ariafred/src/workflow/util.py	/^    def __exit__(self, typ, value, traceback):$/;"	m	class:LockFile	file:
__format__	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^    def __format__(self, format_spec):$/;"	m	class:Element	file:
__ge__	workflows/Ariafred/src/workflow/update.py	/^    def __ge__(self, other):$/;"	m	class:Version	file:
__get__	workflows/Ariafred/src/workflow/util.py	/^    def __get__(self, obj=None, klass=None):$/;"	m	class:uninterruptible	file:
__getitem__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __getitem__(self, key):$/;"	m	class:VimBufferProxy	file:
__getitem__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __getitem__(self, index):$/;"	m	class:Position	file:
__getitem__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __getitem__(self, index):$/;"	m	class:_SnippetUtilCursor	file:
__getitem__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __getitem__(self, no):$/;"	m	class:_Tabs	file:
__getitem__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def __getitem__(self, idx):$/;"	m	class:VimBuffer	file:
__getitem__	workflows/Ariafred/src/workflow/web.py	/^    def __getitem__(self, key):$/;"	m	class:CaseInsensitiveDictionary	file:
__getslice__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __getslice__(self, i, j):$/;"	m	class:VimBufferProxy	file:
__git	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git ()$/;"	f
__git_aliased_command	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_aliased_command ()$/;"	f
__git_branch_names	conf/zsh/.oh-my-zsh/plugins/git-flow-avh/git-flow-avh.plugin.zsh	/^__git_branch_names () {$/;"	f
__git_branch_names	conf/zsh/.oh-my-zsh/plugins/git-hubflow/git-hubflow.plugin.zsh	/^__git_branch_names () {$/;"	f
__git_checkout_default_dwim_mode	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_checkout_default_dwim_mode ()$/;"	f
__git_command_successful	conf/zsh/.oh-my-zsh/plugins/git-flow-avh/git-flow-avh.plugin.zsh	/^__git_command_successful () {$/;"	f
__git_command_successful	conf/zsh/.oh-my-zsh/plugins/git-hubflow/git-hubflow.plugin.zsh	/^__git_command_successful () {$/;"	f
__git_complete	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_complete ()$/;"	f
__git_complete_command	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_complete_command () {$/;"	f
__git_complete_common	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_complete_common () {$/;"	f
__git_complete_config_variable_name	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_complete_config_variable_name ()$/;"	f
__git_complete_config_variable_name_and_value	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_complete_config_variable_name_and_value ()$/;"	f
__git_complete_config_variable_value	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_complete_config_variable_value ()$/;"	f
__git_complete_fetch_refspecs	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_complete_fetch_refspecs ()$/;"	f
__git_complete_file	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_complete_file ()$/;"	f
__git_complete_force_with_lease	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_complete_force_with_lease ()$/;"	f
__git_complete_index_file	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_complete_index_file ()$/;"	f
__git_complete_refs	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_complete_refs ()$/;"	f
__git_complete_remote_or_refspec	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_complete_remote_or_refspec ()$/;"	f
__git_complete_revlist	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_complete_revlist ()$/;"	f
__git_complete_revlist_file	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_complete_revlist_file ()$/;"	f
__git_complete_strategy	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_complete_strategy ()$/;"	f
__git_complete_symbol	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_complete_symbol () {$/;"	f
__git_complete_worktree_paths	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_complete_worktree_paths ()$/;"	f
__git_compute_all_commands	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_compute_all_commands ()$/;"	f
__git_compute_config_sections	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_compute_config_sections ()$/;"	f
__git_compute_config_sections_old	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_compute_config_sections_old ()$/;"	f
__git_compute_config_vars	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_compute_config_vars ()$/;"	f
__git_compute_merge_strategies	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_compute_merge_strategies ()$/;"	f
__git_config_get_set_variables	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_config_get_set_variables ()$/;"	f
__git_count_arguments	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_count_arguments ()$/;"	f
__git_dequote	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_dequote ()$/;"	f
__git_dwim_remote_heads	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_dwim_remote_heads ()$/;"	f
__git_eread	conf/zsh/.oh-my-zsh/plugins/gitfast/git-prompt.sh	/^__git_eread ()$/;"	f
__git_find_last_on_cmdline	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_find_last_on_cmdline ()$/;"	f
__git_find_on_cmdline	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_find_on_cmdline ()$/;"	f
__git_find_repo_path	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_find_repo_path ()$/;"	f
__git_flow_bugfix_list	conf/zsh/.oh-my-zsh/plugins/git-flow-avh/git-flow-avh.plugin.zsh	/^__git_flow_bugfix_list ()$/;"	f
__git_flow_feature_list	conf/zsh/.oh-my-zsh/plugins/git-flow-avh/git-flow-avh.plugin.zsh	/^__git_flow_feature_list ()$/;"	f
__git_flow_hotfix_list	conf/zsh/.oh-my-zsh/plugins/git-flow-avh/git-flow-avh.plugin.zsh	/^__git_flow_hotfix_list ()$/;"	f
__git_flow_version_list	conf/zsh/.oh-my-zsh/plugins/git-flow-avh/git-flow-avh.plugin.zsh	/^__git_flow_version_list ()$/;"	f
__git_func_wrap	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_func_wrap ()$/;"	f
__git_get_comp_words_by_ref	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_get_comp_words_by_ref ()$/;"	f
__git_get_config_variables	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_get_config_variables ()$/;"	f
__git_get_option_value	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_get_option_value ()$/;"	f
__git_has_doubledash	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_has_doubledash ()$/;"	f
__git_have_func	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_have_func () {$/;"	f
__git_heads	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_heads ()$/;"	f
__git_hf_feature_list	conf/zsh/.oh-my-zsh/plugins/git-hubflow/git-hubflow.plugin.zsh	/^__git_hf_feature_list ()$/;"	f
__git_hf_hotfix_list	conf/zsh/.oh-my-zsh/plugins/git-hubflow/git-hubflow.plugin.zsh	/^__git_hf_hotfix_list ()$/;"	f
__git_hf_version_list	conf/zsh/.oh-my-zsh/plugins/git-hubflow/git-hubflow.plugin.zsh	/^__git_hf_version_list ()$/;"	f
__git_index_files	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_index_files ()$/;"	f
__git_is_configured_remote	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_is_configured_remote ()$/;"	f
__git_list_merge_strategies	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_list_merge_strategies ()$/;"	f
__git_ls_files_helper	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_ls_files_helper ()$/;"	f
__git_main	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_main ()$/;"	f
__git_match_ctag	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_match_ctag () {$/;"	f
__git_pretty_aliases	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_pretty_aliases ()$/;"	f
__git_prompt_git	conf/zsh/.oh-my-zsh/lib/git.zsh	/^function __git_prompt_git() {$/;"	f
__git_ps1	conf/zsh/.oh-my-zsh/plugins/gitfast/git-prompt.sh	/^__git_ps1 ()$/;"	f
__git_ps1_colorize_gitstring	conf/zsh/.oh-my-zsh/plugins/gitfast/git-prompt.sh	/^__git_ps1_colorize_gitstring ()$/;"	f
__git_ps1_show_upstream	conf/zsh/.oh-my-zsh/plugins/gitfast/git-prompt.sh	/^__git_ps1_show_upstream ()$/;"	f
__git_refs	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_refs ()$/;"	f
__git_refs2	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_refs2 ()$/;"	f
__git_refs_remotes	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_refs_remotes ()$/;"	f
__git_remote_heads	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_remote_heads ()$/;"	f
__git_remotes	conf/zsh/.oh-my-zsh/plugins/git-flow-avh/git-flow-avh.plugin.zsh	/^__git_remotes () {$/;"	f
__git_remotes	conf/zsh/.oh-my-zsh/plugins/git-hubflow/git-hubflow.plugin.zsh	/^__git_remotes () {$/;"	f
__git_remotes	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_remotes ()$/;"	f
__git_sequencer_status	conf/zsh/.oh-my-zsh/plugins/gitfast/git-prompt.sh	/^__git_sequencer_status ()$/;"	f
__git_support_parseopt_helper	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_support_parseopt_helper () {$/;"	f
__git_tags	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__git_tags ()$/;"	f
__gitcomp	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__gitcomp ()$/;"	f
__gitcomp_builtin	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__gitcomp_builtin ()$/;"	f
__gitcomp_direct	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__gitcomp_direct ()$/;"	f
__gitcomp_directories	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__gitcomp_directories ()$/;"	f
__gitcomp_file	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__gitcomp_file ()$/;"	f
__gitcomp_file_direct	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__gitcomp_file_direct ()$/;"	f
__gitcomp_nl	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__gitcomp_nl ()$/;"	f
__gitcomp_opts	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__gitcomp_opts ()$/;"	f
__gitcompadd	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__gitcompadd ()$/;"	f
__gitdir	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__gitdir ()$/;"	f
__gitex_author_names	conf/zsh/.oh-my-zsh/plugins/git-extras/git-extras.plugin.zsh	/^__gitex_author_names() {$/;"	f
__gitex_branch_names	conf/zsh/.oh-my-zsh/plugins/git-extras/git-extras.plugin.zsh	/^__gitex_branch_names() {$/;"	f
__gitex_command_successful	conf/zsh/.oh-my-zsh/plugins/git-extras/git-extras.plugin.zsh	/^__gitex_command_successful () {$/;"	f
__gitex_commits	conf/zsh/.oh-my-zsh/plugins/git-extras/git-extras.plugin.zsh	/^__gitex_commits() {$/;"	f
__gitex_feature_branch_names	conf/zsh/.oh-my-zsh/plugins/git-extras/git-extras.plugin.zsh	/^__gitex_feature_branch_names() {$/;"	f
__gitex_remote_names	conf/zsh/.oh-my-zsh/plugins/git-extras/git-extras.plugin.zsh	/^__gitex_remote_names() {$/;"	f
__gitex_specific_branch_names	conf/zsh/.oh-my-zsh/plugins/git-extras/git-extras.plugin.zsh	/^__gitex_specific_branch_names() {$/;"	f
__gitex_submodule_names	conf/zsh/.oh-my-zsh/plugins/git-extras/git-extras.plugin.zsh	/^__gitex_submodule_names() {$/;"	f
__gitex_tag_names	conf/zsh/.oh-my-zsh/plugins/git-extras/git-extras.plugin.zsh	/^__gitex_tag_names() {$/;"	f
__gitk_main	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^__gitk_main ()$/;"	f
__gnu_utils	conf/zsh/.oh-my-zsh/plugins/gnu-utils/gnu-utils.plugin.zsh	/^__gnu_utils() {$/;"	f
__gnu_utils_preexec	conf/zsh/.oh-my-zsh/plugins/gnu-utils/gnu-utils.plugin.zsh	/^__gnu_utils_preexec() {$/;"	f
__grunt	conf/zsh/.oh-my-zsh/plugins/grunt/grunt.plugin.zsh	/^function __grunt() {$/;"	f
__grunt_caching_policy	conf/zsh/.oh-my-zsh/plugins/grunt/grunt.plugin.zsh	/^function __grunt_caching_policy() {$/;"	f
__grunt_get_gruntfile	conf/zsh/.oh-my-zsh/plugins/grunt/grunt.plugin.zsh	/^function __grunt_get_gruntfile() {$/;"	f
__grunt_get_opts	conf/zsh/.oh-my-zsh/plugins/grunt/grunt.plugin.zsh	/^function __grunt_get_opts() {$/;"	f
__grunt_get_tasks	conf/zsh/.oh-my-zsh/plugins/grunt/grunt.plugin.zsh	/^function __grunt_get_tasks() {$/;"	f
__grunt_update_cache	conf/zsh/.oh-my-zsh/plugins/grunt/grunt.plugin.zsh	/^function __grunt_update_cache() {$/;"	f
__gt__	workflows/Ariafred/src/workflow/update.py	/^    def __gt__(self, other):$/;"	m	class:Version	file:
__init__	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^    def __init__(self, entry, desc, book, url):$/;"	m	class:Element
__init__	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^    def __init__(self, writer, dirn):$/;"	m	class:IndexProcessor
__init__	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/_main.py	/^    def __init__(self, handler):$/;"	m	class:RedirectStream
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def __init__(self, _vim: Nvim):$/;"	m	class:DeopleteHandlers
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/base/filter.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Base
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/base/source.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Base
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Child
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/context.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Context
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def __init__(self, vim: Nvim):$/;"	m	class:Deoplete
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/base.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Base
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_delimiter.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Filter
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_paren.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Filter
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_case.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Filter
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Filter
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_paren.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Filter
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_reorder_attr.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Filter
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_abbr.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Filter
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_info.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Filter
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_kind.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Filter
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_menu.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Filter
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_word_abbr.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Filter
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Filter
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_full_fuzzy.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Filter
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_fuzzy.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Filter
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_head.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Filter
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_length.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Filter
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_matchfuzzy.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Filter
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Filter
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_word.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Filter
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def __init__(self, vim: Nvim, name: str = ''):$/;"	m	class:DeopleteLogFilter
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:_Parent
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^    def __init__(self, plugin: typing.Any) -> None:$/;"	m	class:Process
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Source
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Base
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Source
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Source
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Source
__init__	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^    def __init__(self, vim: Nvim) -> None:$/;"	m	class:Source
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __init__(self, snippets_stack, vstate):$/;"	m	class:VimBufferProxy
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def __init__(self):$/;"	m	class:IndentUtil
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __init__(self, line, col):$/;"	m	class:Position
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^    def __init__(self, host, port):$/;"	m	class:RemotePDB
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __init__($/;"	m	class:SnippetDefinition
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __init__(self, cursor):$/;"	m	class:_SnippetUtilCursor
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    def __init__(self, trigger, value, description, location):$/;"	m	class:SnipMateSnippetDefinition
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __init__(self, gen, indent):$/;"	m	class:Token
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __init__(self, text, offset):$/;"	m	class:_TextIterator
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def __init__(self):$/;"	m	class:SnippetSource
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def __init__(self):$/;"	m	class:SnippetFileSource
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def __init__(self, filename, line_index, msg):$/;"	m	class:SnippetSyntaxError
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def __init__(self):$/;"	m	class:SnippetDictionary
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def __init__(self, expand_trigger, forward_trigger, backward_trigger):$/;"	m	class:SnippetManager
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def __init__(self, text):$/;"	m	class:LineIterator
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __init__($/;"	m	class:TextObject
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:EditableTextObject
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def __init__(self, parent, token: ChoicesToken):$/;"	m	class:Choices
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/mirror.py	/^    def __init__(self, parent, tabstop, token):$/;"	m	class:Mirror
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:SnippetUtilForAction
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __init__(self, initial_indent, vmode, vtext, context, parent):$/;"	m	class:SnippetUtil
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __init__(self, parent, token):$/;"	m	class:PythonCode
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __init__(self, to):$/;"	m	class:_Tabs
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^    def __init__(self, parent, token):$/;"	m	class:ShellCode
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def __init__($/;"	m	class:SnippetInstance
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def __init__(self, parent):$/;"	m	class:_VimCursor
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^    def __init__(self, parent, token, start=None, end=None):$/;"	m	class:TabStop
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def __init__(self, expression):$/;"	m	class:_CleverReplace
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def __init__(self, parent, ts, token):$/;"	m	class:Transformation
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def __init__(self, token):$/;"	m	class:TextObjectTransformation
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/viml_code.py	/^    def __init__(self, parent, token):$/;"	m	class:VimLCode
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^    def __init__(self, parent, token):$/;"	m	class:Visual
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VimPosition
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VimState
__init__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VisualContentPreserver
__init__	conf/vim/.vim/plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def __init__(self):$/;"	m	class:VimInterfaceWindows
__init__	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, name=""):$/;"	m	class:TempFileManager
__init__	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, vim_executable, name):$/;"	m	class:VimInterface
__init__	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, vim_executable, session):$/;"	m	class:VimInterfaceTmux
__init__	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, vim_executable, session):$/;"	m	class:VimInterfaceTmuxNeovim
__init__	conf/vim/.vim/plugged/ultisnips/test/vim_test_case.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:VimTestCase
__init__	conf/vim/.vim/plugged/vim-go/rplugin/python3/denite/source/decls.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^        def __init__(self, message, returncode, stage, stdout, stderr):$/;"	m	class:CommandRunner.Exception
__init__	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^    def __init__(self, name=None):$/;"	m	class:CodeTimer
__init__	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^    def __init__(self, path: str, values: DependencyDict):$/;"	m	class:Dependency
__init__	workflows/Ariafred/src/workflow/update.py	/^    def __init__(self, vstr):$/;"	m	class:Version
__init__	workflows/Ariafred/src/workflow/util.py	/^    def __init__(self, func, class_name=''):$/;"	m	class:uninterruptible
__init__	workflows/Ariafred/src/workflow/util.py	/^    def __init__(self, protected_path, timeout=0.0, delay=0.05):$/;"	m	class:LockFile
__init__	workflows/Ariafred/src/workflow/web.py	/^    def __init__(self, initval=None):$/;"	m	class:CaseInsensitiveDictionary
__init__	workflows/Ariafred/src/workflow/web.py	/^    def __init__(self, request, stream=False):$/;"	m	class:Response
__init__	workflows/Ariafred/src/workflow/workflow.py	/^    def __init__(self):$/;"	m	class:SerializerManager
__init__	workflows/Ariafred/src/workflow/workflow.py	/^    def __init__(self, default_settings=None, update_settings=None,$/;"	m	class:Workflow
__init__	workflows/Ariafred/src/workflow/workflow.py	/^    def __init__(self, filepath, defaults=None):$/;"	m	class:Settings
__init__	workflows/Ariafred/src/workflow/workflow.py	/^    def __init__(self, title, subtitle='', modifier_subtitles=None,$/;"	m	class:Item
__init__	workflows/Ariafred/src/workflow/workflow3.py	/^    def __init__(self, **kwargs):$/;"	m	class:Workflow3
__init__	workflows/Ariafred/src/workflow/workflow3.py	/^    def __init__(self, arg=None, **variables):$/;"	m	class:Variables
__init__	workflows/Ariafred/src/workflow/workflow3.py	/^    def __init__(self, key, subtitle=None, arg=None, valid=None, icon=None,$/;"	m	class:Modifier
__init__	workflows/Ariafred/src/workflow/workflow3.py	/^    def __init__(self, title, subtitle='', arg=None, autocomplete=None,$/;"	m	class:Item3
__iter__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __iter__(self):$/;"	m	class:_TextIterator	file:
__iter__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def __iter__(self):$/;"	m	class:SnippetDictionary	file:
__iter__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def __iter__(self):$/;"	m	class:LineIterator	file:
__le__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __le__(self, other):$/;"	m	class:Position	file:
__le__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __le__(self, other):$/;"	m	class:TextObject	file:
__le__	workflows/Ariafred/src/workflow/update.py	/^    def __le__(self, other):$/;"	m	class:Version	file:
__len__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __len__(self):$/;"	m	class:VimBufferProxy	file:
__len__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __len__(self):$/;"	m	class:_SnippetUtilCursor	file:
__len__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def __len__(self):$/;"	m	class:SnippetDictionary	file:
__len__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def __len__(self):$/;"	m	class:VimBuffer	file:
__licence__	workflows/Ariafred/src/workflow/__init__.py	/^__licence__ = 'MIT'$/;"	v
__lshift__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __lshift__(self, other):$/;"	m	class:SnippetUtil	file:
__lt__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __lt__(self, other):$/;"	m	class:Position	file:
__lt__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __lt__(self, other):$/;"	m	class:TextObject	file:
__lt__	workflows/Ariafred/src/workflow/update.py	/^    def __lt__(self, other):$/;"	m	class:Version	file:
__ne__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __ne__(self, other):$/;"	m	class:Position	file:
__ne__	workflows/Ariafred/src/workflow/update.py	/^    def __ne__(self, other):$/;"	m	class:Version	file:
__next__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __next__(self):$/;"	m	class:_TextIterator	file:
__next__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def __next__(self):$/;"	m	class:LineIterator	file:
__repr__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __repr__(self):$/;"	m	class:Position	file:
__repr__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __repr__(self):$/;"	m	class:SnippetDefinition	file:
__repr__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:ChoicesToken	file:
__repr__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:EndOfTextToken	file:
__repr__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:EscapeCharToken	file:
__repr__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:MirrorToken	file:
__repr__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:PythonCodeToken	file:
__repr__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:ShellCodeToken	file:
__repr__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:TabStopToken	file:
__repr__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:TransformationToken	file:
__repr__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:VimLCodeToken	file:
__repr__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def __repr__(self):$/;"	m	class:VisualToken	file:
__repr__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def __repr__(self):$/;"	m	class:TextObject	file:
__repr__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def __repr__(self):$/;"	m	class:Choices	file:
__repr__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^    def __repr__(self):$/;"	m	class:TabStop	file:
__repr__	workflows/Ariafred/src/workflow/update.py	/^    def __repr__(self):$/;"	m	class:Version	file:
__require_tool_fatal	conf/zsh/.oh-my-zsh/tools/require_tool.sh	/^__require_tool_fatal ()$/;"	f
__require_tool_version_compare	conf/zsh/.oh-my-zsh/tools/require_tool.sh	/^__require_tool_version_compare ()$/;"	f
__rshift__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __rshift__(self, other):$/;"	m	class:SnippetUtil	file:
__setitem__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __setitem__(self, key, value):$/;"	m	class:VimBufferProxy	file:
__setitem__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __setitem__(self, index, value):$/;"	m	class:_SnippetUtilCursor	file:
__setitem__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def __setitem__(self, no, value):$/;"	m	class:_Tabs	file:
__setitem__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def __setitem__(self, idx, text):$/;"	m	class:VimBuffer	file:
__setitem__	workflows/Ariafred/src/workflow/web.py	/^    def __setitem__(self, key, value):$/;"	m	class:CaseInsensitiveDictionary	file:
__setitem__	workflows/Ariafred/src/workflow/workflow.py	/^    def __setitem__(self, key, value):$/;"	m	class:Settings	file:
__setslice__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __setslice__(self, i, j, text):$/;"	m	class:VimBufferProxy	file:
__str__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def __str__(self):$/;"	m	class:_SnippetUtilCursor	file:
__str__	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^    def __str__(self):$/;"	m	class:Dependency	file:
__str__	workflows/Ariafred/src/workflow/update.py	/^    def __str__(self):$/;"	m	class:Version	file:
__str__	workflows/Ariafred/src/workflow/workflow3.py	/^    def __str__(self):$/;"	m	class:Variables	file:
__sub__	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __sub__(self, pos):$/;"	m	class:Position	file:
__timer_current_time	conf/zsh/.oh-my-zsh/plugins/timer/timer.plugin.zsh	/^__timer_current_time() {$/;"	f
__timer_display_timer_precmd	conf/zsh/.oh-my-zsh/plugins/timer/timer.plugin.zsh	/^__timer_display_timer_precmd() {$/;"	f
__timer_format_duration	conf/zsh/.oh-my-zsh/plugins/timer/timer.plugin.zsh	/^__timer_format_duration() {$/;"	f
__timer_save_time_preexec	conf/zsh/.oh-my-zsh/plugins/timer/timer.plugin.zsh	/^__timer_save_time_preexec() {$/;"	f
__title__	workflows/Ariafred/src/workflow/__init__.py	/^__title__ = 'Alfred-Workflow'$/;"	v
__unicode__	workflows/Ariafred/src/workflow/workflow3.py	/^    def __unicode__(self):$/;"	m	class:Variables	file:
__update_yaml	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^    def __update_yaml(self, new_version: str) -> None:$/;"	m	class:Dependency	file:
__version__	workflows/Ariafred/src/workflow/__init__.py	/^__version__ = open(os.path.join(os.path.dirname(__file__), 'version')).read()$/;"	v
__zic_fzf_bindings	conf/zsh/.oh-my-zsh/plugins/zsh-interactive-cd/zsh-interactive-cd.plugin.zsh	/^__zic_fzf_bindings() {$/;"	f
__zic_fzf_prog	conf/zsh/.oh-my-zsh/plugins/zsh-interactive-cd/zsh-interactive-cd.plugin.zsh	/^__zic_fzf_prog() {$/;"	f
__zic_matched_subdir_list	conf/zsh/.oh-my-zsh/plugins/zsh-interactive-cd/zsh-interactive-cd.plugin.zsh	/^__zic_matched_subdir_list() {$/;"	f
_action_context	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _action_context(self):$/;"	m	class:SnippetManager
_add_child	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _add_child(self, child):$/;"	m	class:EditableTextObject
_add_filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _add_filter(self, path: str) -> None:$/;"	m	class:Child
_add_identities	conf/zsh/.oh-my-zsh/plugins/ssh-agent/ssh-agent.plugin.zsh	/^function _add_identities() {$/;"	f
_add_parent	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _add_parent(self, parent_cls: typing.Callable[$/;"	m	class:Deoplete
_add_plugin_to_tmux_conf	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^_add_plugin_to_tmux_conf() {$/;"	f
_add_source	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _add_source(self, path: str) -> None:$/;"	m	class:Child
_alias_eza	conf/zsh/.oh-my-zsh/plugins/eza/eza.plugin.zsh	/^function _alias_eza() {$/;"	f
_apply_change	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _apply_change(self, change):$/;"	m	class:VimBufferProxy
_arg_cache	workflows/Ariafred/src/workflow/background.py	/^def _arg_cache(name):$/;"	f
_ask_snippets	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _ask_snippets(snippets):$/;"	f
_ask_user	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _ask_user(a, formatted):$/;"	f
_aws_clear_state	conf/zsh/.oh-my-zsh/plugins/aws/aws.plugin.zsh	/^function _aws_clear_state() {$/;"	f
_aws_profiles	conf/zsh/.oh-my-zsh/plugins/aws/aws.plugin.zsh	/^function _aws_profiles() {$/;"	f
_aws_regions	conf/zsh/.oh-my-zsh/plugins/aws/aws.plugin.zsh	/^function _aws_regions() {$/;"	f
_aws_update_state	conf/zsh/.oh-my-zsh/plugins/aws/aws.plugin.zsh	/^function _aws_update_state() {$/;"	f
_awscli	conf/zsh/.oh-my-zsh/plugins/aws/aws.plugin.zsh	/^  function _awscli-homebrew-installed() {$/;"	f
_az	conf/zsh/.oh-my-zsh/plugins/azure/azure.plugin.zsh	/^function _az-homebrew-installed() {$/;"	f
_az_subscriptions	conf/zsh/.oh-my-zsh/plugins/azure/azure.plugin.zsh	/^function _az_subscriptions() {$/;"	f
_background	workflows/Ariafred/src/workflow/background.py	/^def _background(pidfile, stdin='\/dev\/null', stdout='\/dev\/null',$/;"	f
_before_test	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    def _before_test(self):$/;"	m	class:NonUnicodeDataInUnnamedRegister
_before_test	conf/vim/.vim/plugged/ultisnips/test/test_Plugin.py	/^    def _before_test(self):$/;"	m	class:Plugin_SuperTab_SimpleTest
_before_test	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _before_test(self):$/;"	f
_before_test	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _before_test(self):$/;"	m	class:_AddFuncBase
_before_test	conf/vim/.vim/plugged/ultisnips/test/vim_test_case.py	/^    def _before_test(self):$/;"	m	class:VimTestCase
_bower	conf/zsh/.oh-my-zsh/plugins/bower/bower.plugin.zsh	/^_bower ()$/;"	f
_bower_installed_packages	conf/zsh/.oh-my-zsh/plugins/bower/bower.plugin.zsh	/^_bower_installed_packages () {$/;"	f
_bracketed_paste_begin	conf/zsh/.oh-my-zsh/plugins/safe-paste/safe-paste.plugin.zsh	/^_bracketed_paste_begin() {$/;"	f
_bracketed_paste_end	conf/zsh/.oh-my-zsh/plugins/safe-paste/safe-paste.plugin.zsh	/^_bracketed_paste_end() {$/;"	f
_bracketed_paste_enqueue	conf/zsh/.oh-my-zsh/plugins/safe-paste/safe-paste.plugin.zsh	/^_bracketed_paste_enqueue() {$/;"	f
_bracketed_paste_zle_finish	conf/zsh/.oh-my-zsh/plugins/safe-paste/safe-paste.plugin.zsh	/^_bracketed_paste_zle_finish() {$/;"	f
_bracketed_paste_zle_init	conf/zsh/.oh-my-zsh/plugins/safe-paste/safe-paste.plugin.zsh	/^_bracketed_paste_zle_init() {$/;"	f
_build_kubectl_out_alias	conf/zsh/.oh-my-zsh/plugins/kubectl/kubectl.plugin.zsh	/^function _build_kubectl_out_alias {$/;"	f
_build_tmux_alias	conf/zsh/.oh-my-zsh/plugins/tmux/tmux.plugin.zsh	/^function _build_tmux_alias {$/;"	f
_cab_commands	conf/zsh/.oh-my-zsh/plugins/cabal/cabal.plugin.zsh	/^function _cab_commands() {$/;"	f
_cabal_commands	conf/zsh/.oh-my-zsh/plugins/cabal/cabal.plugin.zsh	/^function _cabal_commands() {$/;"	f
_cache_context_filetype	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/context.py	/^    def _cache_context_filetype(self, text: str, filetype: str,$/;"	m	class:Context
_cake	conf/zsh/.oh-my-zsh/plugins/cake/cake.plugin.zsh	/^_cake () {$/;"	f
_cake_does_target_list_need_generating	conf/zsh/.oh-my-zsh/plugins/cake/cake.plugin.zsh	/^_cake_does_target_list_need_generating () {$/;"	f
_cake_get_target_list	conf/zsh/.oh-my-zsh/plugins/cake/cake.plugin.zsh	/^_cake_get_target_list () {$/;"	f
_cakephp3	conf/zsh/.oh-my-zsh/plugins/cakephp3/cakephp3.plugin.zsh	/^_cakephp3 () {$/;"	f
_cakephp3_get_3rd_argument	conf/zsh/.oh-my-zsh/plugins/cakephp3/cakephp3.plugin.zsh	/^_cakephp3_get_3rd_argument () {$/;"	f
_cakephp3_get_command_list	conf/zsh/.oh-my-zsh/plugins/cakephp3/cakephp3.plugin.zsh	/^_cakephp3_get_command_list () {$/;"	f
_cakephp3_get_sub_command_list	conf/zsh/.oh-my-zsh/plugins/cakephp3/cakephp3.plugin.zsh	/^_cakephp3_get_sub_command_list () {$/;"	f
_calc_end	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^def _calc_end(text, start):$/;"	f
_call_security	workflows/Ariafred/src/workflow/workflow.py	/^    def _call_security(self, action, service, account, *args):$/;"	m	class:Workflow
_can_expand	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _can_expand(self, autotrigger_only=False):$/;"	m	class:SnippetManager
_check_filetype	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _check_filetype(self, ft):$/;"	m	class:SnippetManager
_check_if_still_inside_snippet	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _check_if_still_inside_snippet(self):$/;"	m	class:SnippetManager
_check_recache	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _check_recache(self, context: UserContext) -> None:$/;"	m	class:Deoplete
_check_version	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def _check_version(self):$/;"	m	class:VimInterfaceTmux
_child_has_moved	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _child_has_moved(self, idx, pivot, diff):$/;"	m	class:EditableTextObject
_chomp	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^def _chomp(string):$/;"	f
_chruby	conf/zsh/.oh-my-zsh/plugins/chruby/chruby.plugin.zsh	/^_chruby() {$/;"	f
_cless	conf/zsh/.oh-my-zsh/plugins/colorize/colorize.plugin.zsh	/^    _cless() {$/;"	f
_clone_the_plugin	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^_clone_the_plugin() {$/;"	f
_complete	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/strategies/completion.zsh	/^	function _complete() {$/;"	f
_complete	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^	function _complete() {$/;"	f
_complete	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/strategies/completion.zsh	/^	function _complete() {$/;"	f
_complete	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^	function _complete() {$/;"	f
_completemarks	conf/zsh/.oh-my-zsh/plugins/jump/jump.plugin.zsh	/^_completemarks() {$/;"	f
_composer	conf/zsh/.oh-my-zsh/plugins/composer/composer.plugin.zsh	/^  _composer () {$/;"	f
_configure_eza	conf/zsh/.oh-my-zsh/plugins/eza/eza.plugin.zsh	/^function _configure_eza() {$/;"	f
_connect_stdin	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def _connect_stdin(self, stdin: int) -> msgpack.Unpacker:$/;"	m	class:AsyncParent
_context_match	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _context_match(self, visual_content, before):$/;"	m	class:SnippetDefinition
_create	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^    def _create(cls):$/;"	m	class:RemotePDB
_create	workflows/Ariafred/src/workflow/workflow.py	/^    def _create(self, dirpath):$/;"	m	class:Workflow
_create_file	conf/vim/.vim/plugged/ultisnips/test/vim_test_case.py	/^    def _create_file(self, file_path, content):$/;"	m	class:VimTestCase
_create_transformations	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^def _create_transformations(all_tokens, seen_ts):$/;"	f
_ctx	conf/vim/.vim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_matcher_fuzzy.py	/^def _ctx(complete_str, ignorecase=True, camelcase=True):$/;"	f
_current_snippet	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _current_snippet(self):$/;"	m	class:SnippetManager
_current_snippet_is_done	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _current_snippet_is_done(self):$/;"	m	class:SnippetManager
_cursor_moved	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _cursor_moved(self):$/;"	m	class:SnippetManager
_dash	conf/zsh/.oh-my-zsh/plugins/dash/dash.plugin.zsh	/^_dash() {$/;"	f
_default_cachedir	workflows/Ariafred/src/workflow/workflow.py	/^    def _default_cachedir(self):$/;"	m	class:Workflow
_default_cachedir	workflows/Ariafred/src/workflow/workflow3.py	/^    def _default_cachedir(self):$/;"	m	class:Workflow3
_default_datadir	workflows/Ariafred/src/workflow/workflow.py	/^    def _default_datadir(self):$/;"	m	class:Workflow
_default_datadir	workflows/Ariafred/src/workflow/workflow3.py	/^    def _default_datadir(self):$/;"	m	class:Workflow3
_defer_async_git_register	conf/zsh/.oh-my-zsh/lib/git.zsh	/^  function _defer_async_git_register() {$/;"	f
_del_child	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _del_child(self, child):$/;"	m	class:EditableTextObject
_delete_directory_contents	workflows/Ariafred/src/workflow/workflow.py	/^    def _delete_directory_contents(self, dirpath, filter_func):$/;"	m	class:Workflow
_direnv_hook	conf/zsh/.oh-my-zsh/plugins/direnv/direnv.plugin.zsh	/^_direnv_hook() {$/;"	f
_disable_edits	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _disable_edits(self):$/;"	m	class:VimBufferProxy
_do_edit	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _do_edit(self, cmd, ctab=None):$/;"	m	class:EditableTextObject
_do_edit	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def _do_edit(self, cmd, ctab=None):$/;"	m	class:Choices
_do_parse	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^    def _do_parse(parent, text, allowed_tokens):$/;"	f	function:tokenize_snippet_text
_do_print	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/debug.py	/^    def _do_print(text_object, indent=""):$/;"	f	function:echo_to_hierarchy
_do_snippet	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _do_snippet(self, snippet, before):$/;"	m	class:SnippetManager
_dotnet_completion	conf/zsh/.oh-my-zsh/plugins/dotnet/dotnet.plugin.zsh	/^_dotnet_completion() {$/;"	f
_drush_completion	conf/zsh/.oh-my-zsh/plugins/drush/drush.complete.sh	/^_drush_completion() {$/;"	f
_editable_children	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _editable_children(self):$/;"	m	class:EditableTextObject
_eecms	conf/zsh/.oh-my-zsh/plugins/eecms/eecms.plugin.zsh	/^_eecms () {$/;"	f
_eecms_console	conf/zsh/.oh-my-zsh/plugins/eecms/eecms.plugin.zsh	/^_eecms_console () {$/;"	f
_eecms_get_command_list	conf/zsh/.oh-my-zsh/plugins/eecms/eecms.plugin.zsh	/^_eecms_get_command_list () {$/;"	f
_enable_edits	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _enable_edits(self):$/;"	m	class:VimBufferProxy
_enable_logging	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _enable_logging(self) -> None:$/;"	m	class:Child
_enumerateGrailsScripts	conf/zsh/.oh-my-zsh/plugins/grails/grails.plugin.zsh	/^_enumerateGrailsScripts() {$/;"	f
_eval_code	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _eval_code(self, code, additional_locals={}, compiled_code=None):$/;"	m	class:SnippetDefinition
_execute_action	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _execute_action($/;"	m	class:SnippetDefinition
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_AnonBase
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Autocommands.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Autocommands
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Autotrigger_GlobalDisable
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Autotrigger_GlobalDisableThenToggle
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:SimpleExpandExpandOrJump_Ambiguity
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:SimpleExpandExpandOrJump_Expand
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:SimpleExpandJumpOrExpand_Ambiguity
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:SimpleExpandJumpOrExpand_Expand
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:SimpleExpand_DoNotClobberDefaultRegister
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:ShiftWidthZero
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:VirtualEdit
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Folding.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Folding.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PerlSyntaxFold
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:ProperIndenting_AutoIndentAndNewline_ECR
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_ExpandTabs
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_FormatoptionsBase
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentEtSw
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentEtSwOffset
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentNoetSwTs
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_OptExists
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_ListSnippets.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:ListAllAvailable_Disabled_ExpectCorrectResult
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:CursorMovement_BS_InEditMode
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Plugin.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Plugin_SuperTab_SimpleTest
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_ES_Base
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_OS_Base
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_SelectModeMappings
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    def _extra_vim_config(self, vim_config):$/;"	f
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_Leading_Spaces
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_SW
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_SW_TS
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_No_TS
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_RealWorld
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _extra_vim_config(self, vim_config):$/;"	f
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:AddNewSnippetSource
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Visual_SelectOneWordExclusive
_extra_vim_config	conf/vim/.vim/plugged/ultisnips/test/vim_test_case.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:VimTestCase
_fatal_error_abort	conf/tmux/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^_fatal_error_abort() {$/;"	f
_file_to_edit	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _file_to_edit(self, requested_ft, bang):$/;"	m	class:SnippetManager
_filter_item	workflows/Ariafred/src/workflow/workflow.py	/^    def _filter_item(self, value, query, match_on, fold_diacritics):$/;"	m	class:Workflow
_find_closing_brace	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^def _find_closing_brace(string, start_pos):$/;"	f
_find_recursive	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^        def _find_recursive(obj):$/;"	f	function:SnippetInstance.update_textobjects
_find_rplugins	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _find_rplugins(self, source: str) -> typing.List[Path]:$/;"	m	class:Deoplete
_fork_and_exit_parent	workflows/Ariafred/src/workflow/background.py	/^    def _fork_and_exit_parent(errmsg, wait=False, write=False):$/;"	f	function:_background
_fossil_prompt	conf/zsh/.oh-my-zsh/plugins/fossil/fossil.plugin.zsh	/^function _fossil_prompt () {$/;"	f
_freespace	conf/zsh/.oh-my-zsh/plugins/macos/macos.plugin.zsh	/^_freespace() {$/;"	f
_frontend_fallback	conf/zsh/.oh-my-zsh/plugins/frontend-search/frontend-search.plugin.zsh	/^function _frontend_fallback() {$/;"	f
_fzf_statusline	conf/vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^  augroup _fzf_statusline$/;"	a
_gather_async_results	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _gather_async_results(self, result: Result,$/;"	m	class:Child
_gather_results	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _gather_results(self, context: UserContext) -> typing.List[Result]:$/;"	m	class:Child
_get	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def _get(self, queue_id: str) -> typing.List[typing.Any]:$/;"	m	class:AsyncParent
_get_all_snippet_files_for	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:SnippetFileSource
_get_all_snippet_files_for	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:SnipMateFileSource
_get_all_snippet_files_for	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:UltiSnipsFileSource
_get_candidates	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _get_candidates(self, result: Result,$/;"	m	class:Child
_get_choices_placeholder	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def _get_choices_placeholder(self) -> str:$/;"	m	class:Choices
_get_complete_position	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^    def _get_complete_position(self, context: UserContext,$/;"	m	class:Source
_get_context_filetype	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/context.py	/^    def _get_context_filetype(self,$/;"	m	class:Context
_get_cpsm_result	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^    def _get_cpsm_result(self, candidates: Candidates,$/;"	m	class:Filter
_get_diff	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _get_diff(self, start, end, new_value):$/;"	m	class:VimBufferProxy
_get_encoding	workflows/Ariafred/src/workflow/web.py	/^    def _get_encoding(self):$/;"	m	class:Response
_get_existing_deep_extends	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def _get_existing_deep_extends(self, base_filetypes):$/;"	m	class:SnippetSource
_get_line_diff	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _get_line_diff(self, line_number, before, after):$/;"	m	class:VimBufferProxy
_get_next_tab	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _get_next_tab(self, number):$/;"	m	class:EditableTextObject
_get_pos	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def _get_pos(name):$/;"	f
_get_potential_snippet_filenames_to_edit	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _get_potential_snippet_filenames_to_edit($/;"	f
_get_prev_tab	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _get_prev_tab(self, number):$/;"	m	class:EditableTextObject
_get_python_executable	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def _get_python_executable(self) -> str:$/;"	m	class:AsyncParent
_get_result	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _get_result(self, context: UserContext,$/;"	m	class:Child
_get_results	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _get_results(self, context: UserContext) -> typing.List[typing.Any]:$/;"	m	class:Deoplete
_get_sources	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _get_sources(self) -> typing.Dict[str, typing.Any]:$/;"	m	class:Child
_get_tabstop	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _get_tabstop(self, requester, number):$/;"	m	class:EditableTextObject
_get_tabstop	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def _get_tabstop(self, requester, no):$/;"	m	class:SnippetInstance
_get_text	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/mirror.py	/^    def _get_text(self):$/;"	m	class:Mirror
_get_text	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def _get_text(self):$/;"	m	class:Transformation
_get_tmp	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^def _get_tmp():$/;"	f
_get_unescaped_choice_item	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _get_unescaped_choice_item(self, escaped_choice_item):$/;"	m	class:ChoicesToken
_get_user_tmux_conf	conf/tmux/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^_get_user_tmux_conf() {$/;"	f
_git	conf/zsh/.oh-my-zsh/plugins/git-auto-fetch/git-auto-fetch.plugin.zsh	/^    function _git-auto-fetch_zle-line-init() {$/;"	f
_git_add	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_add ()$/;"	f
_git_am	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_am ()$/;"	f
_git_apply	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_apply ()$/;"	f
_git_archive	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_archive ()$/;"	f
_git_bisect	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_bisect ()$/;"	f
_git_branch	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_branch ()$/;"	f
_git_bundle	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_bundle ()$/;"	f
_git_checkout	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_checkout ()$/;"	f
_git_cherry_pick	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_cherry_pick ()$/;"	f
_git_clean	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_clean ()$/;"	f
_git_clone	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_clone ()$/;"	f
_git_commit	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_commit ()$/;"	f
_git_config	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_config ()$/;"	f
_git_describe	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_describe ()$/;"	f
_git_diff	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_diff ()$/;"	f
_git_difftool	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_difftool ()$/;"	f
_git_fetch	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_fetch ()$/;"	f
_git_format_patch	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_format_patch ()$/;"	f
_git_fsck	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_fsck ()$/;"	f
_git_gitk	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_gitk ()$/;"	f
_git_grep	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_grep ()$/;"	f
_git_help	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_help ()$/;"	f
_git_init	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_init ()$/;"	f
_git_log	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_log ()$/;"	f
_git_log_prettily	conf/zsh/.oh-my-zsh/plugins/git/git.plugin.zsh	/^function _git_log_prettily(){$/;"	f
_git_ls_files	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_ls_files ()$/;"	f
_git_ls_remote	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_ls_remote ()$/;"	f
_git_ls_tree	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_ls_tree ()$/;"	f
_git_merge	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_merge ()$/;"	f
_git_merge_base	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_merge_base ()$/;"	f
_git_mergetool	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_mergetool ()$/;"	f
_git_mv	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_mv ()$/;"	f
_git_notes	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_notes ()$/;"	f
_git_pull	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_pull ()$/;"	f
_git_push	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_push ()$/;"	f
_git_range_diff	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_range_diff ()$/;"	f
_git_rebase	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_rebase ()$/;"	f
_git_reflog	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_reflog ()$/;"	f
_git_remote	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_remote ()$/;"	f
_git_replace	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_replace ()$/;"	f
_git_rerere	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_rerere ()$/;"	f
_git_reset	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_reset ()$/;"	f
_git_restore	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_restore ()$/;"	f
_git_revert	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_revert ()$/;"	f
_git_rm	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_rm ()$/;"	f
_git_send_email	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_send_email ()$/;"	f
_git_shortlog	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_shortlog ()$/;"	f
_git_show	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_show ()$/;"	f
_git_show_branch	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_show_branch ()$/;"	f
_git_sparse_checkout	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_sparse_checkout ()$/;"	f
_git_stage	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_stage ()$/;"	f
_git_stash	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_stash ()$/;"	f
_git_status	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_status ()$/;"	f
_git_submodule	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_submodule ()$/;"	f
_git_svn	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_svn ()$/;"	f
_git_switch	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_switch ()$/;"	f
_git_tag	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_tag ()$/;"	f
_git_whatchanged	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_whatchanged ()$/;"	f
_git_worktree	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^_git_worktree ()$/;"	f
_gitignoreio	conf/zsh/.oh-my-zsh/plugins/gitignore/gitignore.plugin.zsh	/^_gitignoreio () {$/;"	f
_gitignoreio_get_command_list	conf/zsh/.oh-my-zsh/plugins/gitignore/gitignore.plugin.zsh	/^_gitignoreio_get_command_list() {$/;"	f
_gpg	conf/zsh/.oh-my-zsh/plugins/gpg-agent/gpg-agent.plugin.zsh	/^function _gpg-agent_update-tty_preexec {$/;"	f
_grails	conf/zsh/.oh-my-zsh/plugins/grails/grails.plugin.zsh	/^_grails() {$/;"	f
_gulp_completion	conf/zsh/.oh-my-zsh/plugins/gulp/gulp.plugin.zsh	/^function _gulp_completion {$/;"	f
_handle_failure	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _handle_failure(self, trigger, pass_through=False):$/;"	m	class:SnippetManager
_handle_snippet_or_global	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def _handle_snippet_or_global($/;"	f
_handle_source_exception	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _handle_source_exception(self,$/;"	m	class:Child
_has_emacs_mode_keys	conf/tmux/.tmux/plugins/tpm/scripts/helpers/tmux_echo_functions.sh	/^_has_emacs_mode_keys() {$/;"	f
_history_substring_search_process_raw_matches	conf/zsh/.oh-my-zsh/plugins/history-substring-search/history-substring-search.zsh	/^_history_substring_search_process_raw_matches() {$/;"	f
_homestead	conf/zsh/.oh-my-zsh/plugins/homestead/homestead.plugin.zsh	/^_homestead () {$/;"	f
_homestead_get_command_list	conf/zsh/.oh-my-zsh/plugins/homestead/homestead.plugin.zsh	/^_homestead_get_command_list () {$/;"	f
_icon	workflows/Ariafred/src/workflow/workflow3.py	/^    def _icon(self):$/;"	m	class:Item3
_icon	workflows/Ariafred/src/workflow/workflow3.py	/^    def _icon(self):$/;"	m	class:Modifier
_init_cached	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/context.py	/^    def _init_cached(self) -> None:$/;"	m	class:Context
_init_cached_filetype	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/context.py	/^    def _init_cached_filetype(self, filetype: str) -> UserContext:$/;"	m	class:Context
_init_cpsm	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^    def _init_cpsm(self, context: UserContext) -> str:$/;"	m	class:Filter
_is_pos_zero	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def _is_pos_zero(pos):$/;"	f
_is_rails_app	conf/zsh/.oh-my-zsh/plugins/rake-fast/rake-fast.plugin.zsh	/^_is_rails_app () {$/;"	f
_is_session_file	workflows/Ariafred/src/workflow/workflow3.py	/^        def _is_session_file(filename):$/;"	f	function:Workflow3.clear_session_cache
_is_skip	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _is_skip(self, context: UserContext, source: typing.Any) -> bool:$/;"	m	class:Child
_iterm2_command	conf/zsh/.oh-my-zsh/plugins/iterm2/iterm2.plugin.zsh	/^  function _iterm2_command() {$/;"	f
_itersource	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _itersource(self, context: UserContext$/;"	m	class:Child
_jake	conf/zsh/.oh-my-zsh/plugins/jake-node/jake-node.plugin.zsh	/^function _jake () {$/;"	f
_jfrog	conf/zsh/.oh-my-zsh/plugins/jfrog/jfrog.plugin.zsh	/^_jfrog() {$/;"	f
_jira_query	conf/zsh/.oh-my-zsh/plugins/jira/jira.plugin.zsh	/^function _jira_query() {$/;"	f
_jira_rapid_board	conf/zsh/.oh-my-zsh/plugins/jira/jira.plugin.zsh	/^function _jira_rapid_board() {$/;"	f
_jira_url_help	conf/zsh/.oh-my-zsh/plugins/jira/jira.plugin.zsh	/^function _jira_url_help() {$/;"	f
_jira_usage	conf/zsh/.oh-my-zsh/plugins/jira/jira.plugin.zsh	/^function _jira_usage() {$/;"	f
_job_pid	workflows/Ariafred/src/workflow/background.py	/^def _job_pid(name):$/;"	f
_jump	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _jump(self, jump_direction: JumpDirection):$/;"	m	class:SnippetManager
_knife_ssh	conf/zsh/.oh-my-zsh/plugins/knife_ssh/knife_ssh.plugin.zsh	/^_knife_ssh() {$/;"	f
_kube_ps1_binary_check	conf/zsh/.oh-my-zsh/plugins/kube-ps1/kube-ps1.plugin.zsh	/^_kube_ps1_binary_check() {$/;"	f
_kube_ps1_color_bg	conf/zsh/.oh-my-zsh/plugins/kube-ps1/kube-ps1.plugin.zsh	/^_kube_ps1_color_bg() {$/;"	f
_kube_ps1_color_fg	conf/zsh/.oh-my-zsh/plugins/kube-ps1/kube-ps1.plugin.zsh	/^_kube_ps1_color_fg() {$/;"	f
_kube_ps1_file_newer_than	conf/zsh/.oh-my-zsh/plugins/kube-ps1/kube-ps1.plugin.zsh	/^_kube_ps1_file_newer_than() {$/;"	f
_kube_ps1_get_context	conf/zsh/.oh-my-zsh/plugins/kube-ps1/kube-ps1.plugin.zsh	/^_kube_ps1_get_context() {$/;"	f
_kube_ps1_get_context_ns	conf/zsh/.oh-my-zsh/plugins/kube-ps1/kube-ps1.plugin.zsh	/^_kube_ps1_get_context_ns() {$/;"	f
_kube_ps1_get_ns	conf/zsh/.oh-my-zsh/plugins/kube-ps1/kube-ps1.plugin.zsh	/^_kube_ps1_get_ns() {$/;"	f
_kube_ps1_init	conf/zsh/.oh-my-zsh/plugins/kube-ps1/kube-ps1.plugin.zsh	/^_kube_ps1_init() {$/;"	f
_kube_ps1_split	conf/zsh/.oh-my-zsh/plugins/kube-ps1/kube-ps1.plugin.zsh	/^_kube_ps1_split() {$/;"	f
_kube_ps1_symbol	conf/zsh/.oh-my-zsh/plugins/kube-ps1/kube-ps1.plugin.zsh	/^_kube_ps1_symbol() {$/;"	f
_kube_ps1_update_cache	conf/zsh/.oh-my-zsh/plugins/kube-ps1/kube-ps1.plugin.zsh	/^_kube_ps1_update_cache() {$/;"	f
_kubeoff_usage	conf/zsh/.oh-my-zsh/plugins/kube-ps1/kube-ps1.plugin.zsh	/^_kubeoff_usage() {$/;"	f
_kubeon_usage	conf/zsh/.oh-my-zsh/plugins/kube-ps1/kube-ps1.plugin.zsh	/^_kubeon_usage() {$/;"	f
_lando_file_exists	conf/zsh/.oh-my-zsh/plugins/lando/lando.plugin.zsh	/^_lando_file_exists() {$/;"	f
_laravel4	conf/zsh/.oh-my-zsh/plugins/laravel4/laravel4.plugin.zsh	/^_laravel4 () {$/;"	f
_laravel4_get_command_list	conf/zsh/.oh-my-zsh/plugins/laravel4/laravel4.plugin.zsh	/^_laravel4_get_command_list () {$/;"	f
_laravel5	conf/zsh/.oh-my-zsh/plugins/laravel5/laravel5.plugin.zsh	/^_laravel5 () {$/;"	f
_laravel5_get_command_list	conf/zsh/.oh-my-zsh/plugins/laravel5/laravel5.plugin.zsh	/^_laravel5_get_command_list () {$/;"	f
_leaving_buffer	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _leaving_buffer(self):$/;"	m	class:SnippetManager
_leaving_insert_mode	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _leaving_insert_mode(self):$/;"	m	class:SnippetManager
_link_file	conf/vim/.vim/plugged/ultisnips/test/vim_test_case.py	/^    def _link_file(self, source, relative_destination):$/;"	m	class:VimTestCase
_load	workflows/Ariafred/src/workflow/workflow.py	/^    def _load(self):$/;"	m	class:Settings
_load_filters	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _load_filters(self, context: UserContext) -> None:$/;"	m	class:Deoplete
_load_info_plist	workflows/Ariafred/src/workflow/workflow.py	/^    def _load_info_plist(self):$/;"	m	class:Workflow
_load_snippets_for	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _load_snippets_for(self, ft):$/;"	m	class:SnippetFileSource
_load_sources	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _load_sources(self, context: UserContext) -> None:$/;"	m	class:Deoplete
_log	workflows/Ariafred/src/workflow/background.py	/^def _log():$/;"	f
_log	workflows/Ariafred/src/workflow/notify.py	/^_log = None$/;"	v
_logger	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    _logger = None  # type: logging.Logger$/;"	v	class:LoggingMixin
_longest_path_that_exists	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def _longest_path_that_exists(self, context: UserContext,$/;"	m	class:Source
_lxc	conf/zsh/.oh-my-zsh/plugins/lxd/lxd.plugin.zsh	/^_lxc () {$/;"	f
_lxc_get_command_list	conf/zsh/.oh-my-zsh/plugins/lxd/lxd.plugin.zsh	/^_lxc_get_command_list () {$/;"	f
_lxc_get_subcommand_list	conf/zsh/.oh-my-zsh/plugins/lxd/lxd.plugin.zsh	/^_lxc_get_subcommand_list () {$/;"	f
_magic	conf/zsh/.oh-my-zsh/plugins/magic-enter/magic-enter.plugin.zsh	/^    function _magic-enter_accept-line() {$/;"	f
_make_cache	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^    def _make_cache(self, context: UserContext) -> None:$/;"	m	class:Source
_make_debug_exception	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _make_debug_exception(self, e, code=""):$/;"	m	class:SnippetDefinition
_manual_expansion	conf/tmux/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^_manual_expansion() {$/;"	f
_mark_expansion	conf/zsh/.oh-my-zsh/plugins/jump/jump.plugin.zsh	/^_mark_expansion() {$/;"	f
_merge_results	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _merge_results(self, context: UserContext,$/;"	m	class:Child
_merge_results	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _merge_results(self, context: UserContext) -> typing.Tuple[$/;"	m	class:Deoplete
_microk8s_cache_completion	conf/zsh/.oh-my-zsh/plugins/microk8s/microk8s.plugin.zsh	/^_microk8s_cache_completion() {$/;"	f
_microk8s_disable	conf/zsh/.oh-my-zsh/plugins/microk8s/microk8s.plugin.zsh	/^_microk8s_disable() {$/;"	f
_microk8s_disable_get_command_list	conf/zsh/.oh-my-zsh/plugins/microk8s/microk8s.plugin.zsh	/^_microk8s_disable_get_command_list() {$/;"	f
_microk8s_enable	conf/zsh/.oh-my-zsh/plugins/microk8s/microk8s.plugin.zsh	/^_microk8s_enable() {$/;"	f
_microk8s_enable_get_command_list	conf/zsh/.oh-my-zsh/plugins/microk8s/microk8s.plugin.zsh	/^_microk8s_enable_get_command_list() {$/;"	f
_microk8s_helm_completion	conf/zsh/.oh-my-zsh/plugins/microk8s/microk8s.plugin.zsh	/^_microk8s_helm_completion() {$/;"	f
_microk8s_kubectl_completion	conf/zsh/.oh-my-zsh/plugins/microk8s/microk8s.plugin.zsh	/^_microk8s_kubectl_completion() {$/;"	f
_mix	conf/zsh/.oh-my-zsh/plugins/mix-fast/mix-fast.plugin.zsh	/^_mix () {$/;"	f
_mix_does_task_list_need_generating	conf/zsh/.oh-my-zsh/plugins/mix-fast/mix-fast.plugin.zsh	/^_mix_does_task_list_need_generating () {$/;"	f
_mix_generate	conf/zsh/.oh-my-zsh/plugins/mix-fast/mix-fast.plugin.zsh	/^_mix_generate () {$/;"	f
_mix_refresh	conf/zsh/.oh-my-zsh/plugins/mix-fast/mix-fast.plugin.zsh	/^_mix_refresh () {$/;"	f
_mk_session_name	workflows/Ariafred/src/workflow/workflow3.py	/^    def _mk_session_name(self, name):$/;"	m	class:Workflow3
_modifiers	workflows/Ariafred/src/workflow/workflow3.py	/^    def _modifiers(self):$/;"	m	class:Item3
_move	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _move(self, pivot, diff):$/;"	m	class:EditableTextObject
_move	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _move(self, pivot, diff):$/;"	m	class:TextObject
_multi_char_case_change	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^        def _multi_char_case_change(match):$/;"	f	function:_CleverReplace.replace
_n98_magerun	conf/zsh/.oh-my-zsh/plugins/n98-magerun/n98-magerun.plugin.zsh	/^_n98_magerun () {$/;"	f
_n98_magerun_get_command_list	conf/zsh/.oh-my-zsh/plugins/n98-magerun/n98-magerun.plugin.zsh	/^_n98_magerun_get_command_list () {$/;"	f
_needs_update	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _needs_update(self, ft):$/;"	m	class:SnippetFileSource
_npm_completion	conf/zsh/.oh-my-zsh/plugins/npm/npm.plugin.zsh	/^  _npm_completion() {$/;"	f
_omz	conf/zsh/.oh-my-zsh/lib/cli.zsh	/^function _omz {$/;"	f
_omz	conf/zsh/.oh-my-zsh/lib/cli.zsh	/^function _omz::changelog {$/;"	f
_omz	conf/zsh/.oh-my-zsh/lib/cli.zsh	/^function _omz::confirm {$/;"	f
_omz	conf/zsh/.oh-my-zsh/lib/cli.zsh	/^function _omz::help {$/;"	f
_omz	conf/zsh/.oh-my-zsh/lib/cli.zsh	/^function _omz::log {$/;"	f
_omz	conf/zsh/.oh-my-zsh/lib/cli.zsh	/^function _omz::plugin {$/;"	f
_omz	conf/zsh/.oh-my-zsh/lib/cli.zsh	/^function _omz::plugin::disable {$/;"	f
_omz	conf/zsh/.oh-my-zsh/lib/cli.zsh	/^function _omz::plugin::enable {$/;"	f
_omz	conf/zsh/.oh-my-zsh/lib/cli.zsh	/^function _omz::plugin::info {$/;"	f
_omz	conf/zsh/.oh-my-zsh/lib/cli.zsh	/^function _omz::plugin::list {$/;"	f
_omz	conf/zsh/.oh-my-zsh/lib/cli.zsh	/^function _omz::plugin::load {$/;"	f
_omz	conf/zsh/.oh-my-zsh/lib/cli.zsh	/^function _omz::pr {$/;"	f
_omz	conf/zsh/.oh-my-zsh/lib/cli.zsh	/^function _omz::pr::clean {$/;"	f
_omz	conf/zsh/.oh-my-zsh/lib/cli.zsh	/^function _omz::pr::test {$/;"	f
_omz	conf/zsh/.oh-my-zsh/lib/cli.zsh	/^function _omz::reload {$/;"	f
_omz	conf/zsh/.oh-my-zsh/lib/cli.zsh	/^function _omz::theme {$/;"	f
_omz	conf/zsh/.oh-my-zsh/lib/cli.zsh	/^function _omz::theme::list {$/;"	f
_omz	conf/zsh/.oh-my-zsh/lib/cli.zsh	/^function _omz::theme::set {$/;"	f
_omz	conf/zsh/.oh-my-zsh/lib/cli.zsh	/^function _omz::theme::use {$/;"	f
_omz	conf/zsh/.oh-my-zsh/lib/cli.zsh	/^function _omz::update {$/;"	f
_omz	conf/zsh/.oh-my-zsh/lib/cli.zsh	/^function _omz::version {$/;"	f
_omz_async_callback	conf/zsh/.oh-my-zsh/lib/async_prompt.zsh	/^function _omz_async_callback() {$/;"	f
_omz_async_request	conf/zsh/.oh-my-zsh/lib/async_prompt.zsh	/^function _omz_async_request {$/;"	f
_omz_bg_update	conf/zsh/.oh-my-zsh/tools/check_for_upgrade.sh	/^    _omz_bg_update() {$/;"	f
_omz_bg_update_status	conf/zsh/.oh-my-zsh/tools/check_for_upgrade.sh	/^    _omz_bg_update_status() {$/;"	f
_omz_diag_dump_check_core_commands	conf/zsh/.oh-my-zsh/lib/diagnostics.zsh	/^function _omz_diag_dump_check_core_commands() {$/;"	f
_omz_diag_dump_echo_file_w_header	conf/zsh/.oh-my-zsh/lib/diagnostics.zsh	/^function _omz_diag_dump_echo_file_w_header() {$/;"	f
_omz_diag_dump_one_big_text	conf/zsh/.oh-my-zsh/lib/diagnostics.zsh	/^function _omz_diag_dump_one_big_text() {$/;"	f
_omz_diag_dump_os_specific_version	conf/zsh/.oh-my-zsh/lib/diagnostics.zsh	/^function _omz_diag_dump_os_specific_version() {$/;"	f
_omz_git_prompt_info	conf/zsh/.oh-my-zsh/lib/git.zsh	/^function _omz_git_prompt_info() {$/;"	f
_omz_git_prompt_status	conf/zsh/.oh-my-zsh/lib/git.zsh	/^function _omz_git_prompt_status() {$/;"	f
_omz_macos_get_frontmost_app	conf/zsh/.oh-my-zsh/plugins/macos/macos.plugin.zsh	/^function _omz_macos_get_frontmost_app() {$/;"	f
_omz_nvm_setup_autoload	conf/zsh/.oh-my-zsh/plugins/nvm/nvm.plugin.zsh	/^function _omz_nvm_setup_autoload {$/;"	f
_omz_nvm_setup_completion	conf/zsh/.oh-my-zsh/plugins/nvm/nvm.plugin.zsh	/^function _omz_nvm_setup_completion {$/;"	f
_omz_register_handler	conf/zsh/.oh-my-zsh/lib/async_prompt.zsh	/^function _omz_register_handler {$/;"	f
_omz_source	conf/zsh/.oh-my-zsh/oh-my-zsh.sh	/^_omz_source() {$/;"	f
_omz_xcode_list_versions	conf/zsh/.oh-my-zsh/plugins/xcode/xcode.plugin.zsh	/^function _omz_xcode_list_versions {$/;"	f
_omz_xcode_locate_versions	conf/zsh/.oh-my-zsh/plugins/xcode/xcode.plugin.zsh	/^function _omz_xcode_locate_versions {$/;"	f
_omz_xcode_parse_versioned_file	conf/zsh/.oh-my-zsh/plugins/xcode/xcode.plugin.zsh	/^function _omz_xcode_parse_versioned_file {$/;"	f
_omz_xcode_print_active_version	conf/zsh/.oh-my-zsh/plugins/xcode/xcode.plugin.zsh	/^function _omz_xcode_print_active_version {$/;"	f
_omz_xcode_print_xcselv_usage	conf/zsh/.oh-my-zsh/plugins/xcode/xcode.plugin.zsh	/^function _omz_xcode_print_xcselv_usage {$/;"	f
_on_event	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _on_event(self, context: UserContext) -> None:$/;"	m	class:Child
_one_char_case_change	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^        def _one_char_case_change(match):$/;"	f	function:_CleverReplace.replace
_parse	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:ChoicesToken
_parse	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:EscapeCharToken
_parse	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:MirrorToken
_parse	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:PythonCodeToken
_parse	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:ShellCodeToken
_parse	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:TabStopToken
_parse	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:Token
_parse	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:TransformationToken
_parse	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:VimLCodeToken
_parse	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:VisualToken
_parse	workflows/Ariafred/src/workflow/update.py	/^    def _parse(self, vstr):$/;"	m	class:Version
_parse_comments	conf/vim/.vim/plugged/vim-snippets/pythonx/vimsnippets.py	/^def _parse_comments(s):$/;"	f
_parse_dotted_string	workflows/Ariafred/src/workflow/update.py	/^    def _parse_dotted_string(self, s):$/;"	m	class:Version
_parse_number	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^def _parse_number(stream):$/;"	f
_parse_snippet	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippet(line, lines, filename):$/;"	f
_parse_snippet_file	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:SnippetFileSource
_parse_snippet_file	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:SnipMateFileSource
_parse_snippet_file	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippet_file(content, full_filename):$/;"	f
_parse_snippet_file	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:UltiSnipsFileSource
_parse_snippets	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def _parse_snippets(self, ft, filename):$/;"	m	class:SnippetFileSource
_parse_snippets_file	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippets_file(data, filename):$/;"	f
_parse_snippets_file	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def _parse_snippets_file(data, filename):$/;"	f
_parse_till_closing_brace	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^def _parse_till_closing_brace(stream):$/;"	f
_parse_till_unescaped_char	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^def _parse_till_unescaped_char(stream, chars):$/;"	f
_paver	conf/zsh/.oh-my-zsh/plugins/paver/paver.plugin.zsh	/^_paver () {$/;"	f
_paver_does_target_list_need_generating	conf/zsh/.oh-my-zsh/plugins/paver/paver.plugin.zsh	/^_paver_does_target_list_need_generating () {$/;"	f
_per	conf/zsh/.oh-my-zsh/plugins/per-directory-history/per-directory-history.plugin.zsh	/^function _per-directory-history-addhistory() {$/;"	f
_per	conf/zsh/.oh-my-zsh/plugins/per-directory-history/per-directory-history.plugin.zsh	/^function _per-directory-history-change-directory() {$/;"	f
_per	conf/zsh/.oh-my-zsh/plugins/per-directory-history/per-directory-history.plugin.zsh	/^function _per-directory-history-precmd() {$/;"	f
_per	conf/zsh/.oh-my-zsh/plugins/per-directory-history/per-directory-history.plugin.zsh	/^function _per-directory-history-set-directory-history() {$/;"	f
_per	conf/zsh/.oh-my-zsh/plugins/per-directory-history/per-directory-history.plugin.zsh	/^function _per-directory-history-set-global-history() {$/;"	f
_per	conf/zsh/.oh-my-zsh/plugins/per-directory-history/per-directory-history.zsh	/^function _per-directory-history-addhistory() {$/;"	f
_per	conf/zsh/.oh-my-zsh/plugins/per-directory-history/per-directory-history.zsh	/^function _per-directory-history-change-directory() {$/;"	f
_per	conf/zsh/.oh-my-zsh/plugins/per-directory-history/per-directory-history.zsh	/^function _per-directory-history-precmd() {$/;"	f
_per	conf/zsh/.oh-my-zsh/plugins/per-directory-history/per-directory-history.zsh	/^function _per-directory-history-set-directory-history() {$/;"	f
_per	conf/zsh/.oh-my-zsh/plugins/per-directory-history/per-directory-history.zsh	/^function _per-directory-history-set-global-history() {$/;"	f
_phing	conf/zsh/.oh-my-zsh/plugins/phing/phing.plugin.zsh	/^_phing () {$/;"	f
_pid_file	workflows/Ariafred/src/workflow/background.py	/^def _pid_file(name):$/;"	f
_pj	conf/zsh/.oh-my-zsh/plugins/pj/pj.plugin.zsh	/^_pj () {$/;"	f
_place_initial_text	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^        def _place_initial_text(obj):$/;"	f	function:SnippetInstance.replace_initial_text
_pm	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^    def _pm(self, tb):$/;"	m	class:RemotePDB
_precompile_globals	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _precompile_globals(self):$/;"	m	class:SnippetDefinition
_print_error	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def _print_error(self, message: str) -> None:$/;"	m	class:AsyncParent
_process_exists	workflows/Ariafred/src/workflow/background.py	/^def _process_exists(pid):$/;"	f
_process_filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _process_filter(self, f: typing.Any,$/;"	m	class:Child
_profile_end	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _profile_end(self, name: str) -> None:$/;"	m	class:Child
_profile_start	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _profile_start(self, context: UserContext, name: str) -> None:$/;"	m	class:Child
_proxy	conf/zsh/.oh-my-zsh/plugins/shell-proxy/shell-proxy.plugin.zsh	/^_proxy() {$/;"	f
_put	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def _put(self, name: str,$/;"	m	class:AsyncParent
_put	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def _put(self, name: str,$/;"	m	class:SyncParent
_put	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def _put(self, name: str,$/;"	m	class:_Parent
_qrcode_show_message	conf/zsh/.oh-my-zsh/plugins/qrcode/qrcode.plugin.zsh	/^_qrcode_show_message() {$/;"	f
_rails_command	conf/zsh/.oh-my-zsh/plugins/rails/rails.plugin.zsh	/^function _rails_command () {$/;"	f
_rake	conf/zsh/.oh-my-zsh/plugins/rake-fast/rake-fast.plugin.zsh	/^_rake () {$/;"	f
_rake_command	conf/zsh/.oh-my-zsh/plugins/rails/rails.plugin.zsh	/^function _rake_command () {$/;"	f
_rake_does_task_list_need_generating	conf/zsh/.oh-my-zsh/plugins/rake-fast/rake-fast.plugin.zsh	/^_rake_does_task_list_need_generating () {$/;"	f
_rake_generate	conf/zsh/.oh-my-zsh/plugins/rake-fast/rake-fast.plugin.zsh	/^_rake_generate () {$/;"	f
_rake_tasks_missing	conf/zsh/.oh-my-zsh/plugins/rake-fast/rake-fast.plugin.zsh	/^_rake_tasks_missing () {$/;"	f
_rake_tasks_version_changed	conf/zsh/.oh-my-zsh/plugins/rake-fast/rake-fast.plugin.zsh	/^_rake_tasks_version_changed () {$/;"	f
_rakefile_has_changes	conf/zsh/.oh-my-zsh/plugins/rake-fast/rake-fast.plugin.zsh	/^_rakefile_has_changes () {$/;"	f
_rbfu_rubies_print	conf/zsh/.oh-my-zsh/plugins/rbfu/rbfu.plugin.zsh	/^function _rbfu_rubies_print() {$/;"	f
_rbwpw	conf/zsh/.oh-my-zsh/plugins/rbw/rbw.plugin.zsh	/^function _rbwpw {$/;"	f
_re_match	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def _re_match(self, trigger):$/;"	m	class:SnippetDefinition
_read_text_file	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^def _read_text_file(filename):$/;"	f
_refresh_snippets	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _refresh_snippets(self):$/;"	m	class:SnippetManager
_register_default_magic	workflows/Ariafred/src/workflow/workflow.py	/^    def _register_default_magic(self):$/;"	m	class:Workflow
_reinit	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _reinit(self):$/;"	m	class:SnippetManager
_replace_conditional	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^def _replace_conditional(match, string):$/;"	f
_replace_text	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^def _replace_text(buf, start, end, text):$/;"	f
_report_exception	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^def _report_exception(self, msg, e):$/;"	f
_reset	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def _reset(self, cur):$/;"	m	class:SnippetUtil
_retry_clipboard_detection_or_fail	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^    function _retry_clipboard_detection_or_fail() {$/;"	f
_run_shell_command	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^def _run_shell_command(cmd, tmpdir):$/;"	f
_rv_changed	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def _rv_changed(self):$/;"	m	class:SnippetUtil
_save_last_visual_selection	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _save_last_visual_selection(self):$/;"	m	class:SnippetManager
_scd_Y19oug_abspath	conf/zsh/.oh-my-zsh/plugins/scd/scd	/^_scd_Y19oug_abspath() {$/;"	f
_scd_Y19oug_action	conf/zsh/.oh-my-zsh/plugins/scd/scd	/^_scd_Y19oug_action() {$/;"	f
_scd_Y19oug_compress	conf/zsh/.oh-my-zsh/plugins/scd/scd	/^_scd_Y19oug_compress() {$/;"	f
_scd_Y19oug_match	conf/zsh/.oh-my-zsh/plugins/scd/scd	/^_scd_Y19oug_match() {$/;"	f
_scd_Y19oug_record	conf/zsh/.oh-my-zsh/plugins/scd/scd	/^_scd_Y19oug_record() {$/;"	f
_scw	conf/zsh/.oh-my-zsh/plugins/scw/scw.plugin.zsh	/^_scw () {$/;"	f
_sdk	conf/zsh/.oh-my-zsh/plugins/sdk/sdk.plugin.zsh	/^_sdk() {$/;"	f
_search_for_query	workflows/Ariafred/src/workflow/workflow.py	/^    def _search_for_query(self, query):$/;"	m	class:Workflow
_select_and_create_file_to_edit	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _select_and_create_file_to_edit(potentials: Set[str]) -> str:$/;"	f
_send	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def _send(self, s):$/;"	m	class:VimInterfaceTmux
_session_prefix	workflows/Ariafred/src/workflow/workflow3.py	/^    def _session_prefix(self):$/;"	m	class:Workflow3
_set_context_case	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _set_context_case(self, source: typing.Any,$/;"	m	class:Child
_set_pos	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def _set_pos(name, pos):$/;"	f
_set_source_attributes	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _set_source_attributes(self, context: UserContext) -> None:$/;"	m	class:Child
_set_source_attributes	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _set_source_attributes(self, context: UserContext) -> None:$/;"	m	class:Deoplete
_setup_inner_state	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _setup_inner_state(self):$/;"	m	class:SnippetManager
_sf_console	conf/zsh/.oh-my-zsh/plugins/symfony6/symfony6.plugin.zsh	/^_sf_console() {$/;"	f
_show_user_warning	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _show_user_warning(msg):$/;"	f
_shutdown	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^    def _shutdown(self):$/;"	m	class:RemotePDB
_snip_quote	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^def _snip_quote(qt):$/;"	f
_snipmate_files_for	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _snipmate_files_for(ft):$/;"	f
_snips	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _snips(self, before, partial, autotrigger_only=False):$/;"	m	class:SnippetManager
_sourced_files	conf/tmux/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^_sourced_files() {$/;"	f
_split_conditional	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^def _split_conditional(string):$/;"	f
_splitall	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _splitall(path):$/;"	f
_start_agent	conf/zsh/.oh-my-zsh/plugins/ssh-agent/ssh-agent.plugin.zsh	/^function _start_agent() {$/;"	f
_start_process	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def _start_process(self) -> None:$/;"	m	class:AsyncParent
_start_process	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def _start_process(self) -> None:$/;"	m	class:SyncParent
_start_process	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def _start_process(self) -> None:$/;"	m	class:_Parent
_store	workflows/Ariafred/src/workflow/workflow.py	/^        def _store():$/;"	f	function:Workflow.store_data
_substitute_path	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def _substitute_path(self, context: UserContext,$/;"	m	class:Source
_symfony	conf/zsh/.oh-my-zsh/plugins/symfony/symfony.plugin.zsh	/^_symfony () {$/;"	f
_symfony2	conf/zsh/.oh-my-zsh/plugins/symfony2/symfony2.plugin.zsh	/^_symfony2 () {$/;"	f
_symfony2_get_command_list	conf/zsh/.oh-my-zsh/plugins/symfony2/symfony2.plugin.zsh	/^_symfony2_get_command_list () {$/;"	f
_symfony_console	conf/zsh/.oh-my-zsh/plugins/symfony2/symfony2.plugin.zsh	/^_symfony_console () {$/;"	f
_symfony_get_command_list	conf/zsh/.oh-my-zsh/plugins/symfony/symfony.plugin.zsh	/^_symfony_get_command_list () {$/;"	f
_tasks_changed	conf/zsh/.oh-my-zsh/plugins/rake-fast/rake-fast.plugin.zsh	/^_tasks_changed () {$/;"	f
_teardown_inner_state	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _teardown_inner_state(self):$/;"	m	class:SnippetManager
_term_list	conf/zsh/.oh-my-zsh/plugins/term_tab/term_tab.plugin.zsh	/^function _term_list(){$/;"	f
_text	workflows/Ariafred/src/workflow/workflow3.py	/^    def _text(self):$/;"	m	class:Item3
_theme	conf/zsh/.oh-my-zsh/plugins/themes/themes.plugin.zsh	/^function _theme {$/;"	f
_thread_run	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^        def _thread_run():$/;"	f	function:RemotePDB.pm
_tmux_conf_contents	conf/tmux/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^_tmux_conf_contents() {$/;"	f
_tmux_directory_session	conf/zsh/.oh-my-zsh/plugins/tmux/tmux.plugin.zsh	/^function _tmux_directory_session() {$/;"	f
_togglePipenvShell	conf/zsh/.oh-my-zsh/plugins/pipenv/pipenv.plugin.zsh	/^  _togglePipenvShell() {$/;"	f
_togglePoetryShell	conf/zsh/.oh-my-zsh/plugins/poetry-env/poetry-env.plugin.zsh	/^_togglePoetryShell() {$/;"	f
_toggle_autotrigger	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _toggle_autotrigger(self):$/;"	m	class:SnippetManager
_tpm_path	conf/tmux/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^_tpm_path() {$/;"	f
_track_change	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _track_change(self):$/;"	m	class:SnippetManager
_transform	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def _transform(self, text):$/;"	m	class:TextObjectTransformation
_try_expand	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _try_expand(self, autotrigger_only=False):$/;"	m	class:SnippetManager
_unmap_select_mode_mapping	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def _unmap_select_mode_mapping():$/;"	f
_update	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _update(self, done, buf):$/;"	m	class:EditableTextObject
_update	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _update(self, done, buf):$/;"	m	class:NoneditableTextObject
_update	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def _update(self, done, buf):$/;"	m	class:TextObject
_update	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/choices.py	/^    def _update(self, done, buf):$/;"	m	class:Choices
_update	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/mirror.py	/^    def _update(self, done, buf):$/;"	m	class:Mirror
_update	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def _update(self, done, buf):$/;"	m	class:PythonCode
_update	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/shell_code.py	/^    def _update(self, done, buf):$/;"	m	class:ShellCode
_update	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/viml_code.py	/^    def _update(self, done, buf):$/;"	m	class:VimLCode
_update	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/visual.py	/^    def _update(self, done, buf):$/;"	m	class:Visual
_usage	conf/vim/.vim/plugged/vim-go/scripts/test	/^_usage() {$/;"	f
_use_previous_result	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _use_previous_result(self, context: UserContext,$/;"	m	class:Child
_validate_release	workflows/Ariafred/src/workflow/update.py	/^def _validate_release(release):$/;"	f
_vi	conf/zsh/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh	/^function _vi-mode-set-cursor-shape-for-keymap() {$/;"	f
_vi	conf/zsh/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh	/^function _vi-mode-should-reset-prompt() {$/;"	f
_vim_dec	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^def _vim_dec(string):$/;"	f
_vim_enc	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^def _vim_enc(bytearray):$/;"	f
_visual	conf/zsh/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh	/^function _visual-mode {$/;"	f
_wd	conf/zsh/.oh-my-zsh/plugins/wd/_wd.sh	/^function _wd() {$/;"	f
_wf	workflows/Ariafred/src/workflow/background.py	/^_wf = None$/;"	v
_wf	workflows/Ariafred/src/workflow/notify.py	/^_wf = None$/;"	v
_wf	workflows/Ariafred/src/workflow/update.py	/^_wf = None$/;"	v
_words_for_line	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^def _words_for_line(trigger, before, num_words=None):$/;"	f
_wp_complete	conf/zsh/.oh-my-zsh/plugins/wp-cli/wp-cli.plugin.zsh	/^_wp_complete() {$/;"	f
_write	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _write(self, stdout: typing.Any, expr: typing.Any) -> None:$/;"	m	class:Child
_yii	conf/zsh/.oh-my-zsh/plugins/yii/yii.plugin.zsh	/^_yii () {$/;"	f
_yii2	conf/zsh/.oh-my-zsh/plugins/yii2/yii2.plugin.zsh	/^_yii2 () {$/;"	f
_yii2_format_command	conf/zsh/.oh-my-zsh/plugins/yii2/yii2.plugin.zsh	/^_yii2_format_command () {$/;"	f
_yii_get_command_list	conf/zsh/.oh-my-zsh/plugins/yii/yii.plugin.zsh	/^_yii_get_command_list () {$/;"	f
_zic_complete	conf/zsh/.oh-my-zsh/plugins/zsh-interactive-cd/zsh-interactive-cd.plugin.zsh	/^_zic_complete() {$/;"	f
_zic_list_generator	conf/zsh/.oh-my-zsh/plugins/zsh-interactive-cd/zsh-interactive-cd.plugin.zsh	/^_zic_list_generator() {$/;"	f
_zsh_autosuggest_accept	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_accept() {$/;"	f
_zsh_autosuggest_accept	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_accept() {$/;"	f
_zsh_autosuggest_accept	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_accept() {$/;"	f
_zsh_autosuggest_accept	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_accept() {$/;"	f
_zsh_autosuggest_async_request	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/async.zsh	/^_zsh_autosuggest_async_request() {$/;"	f
_zsh_autosuggest_async_request	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_async_request() {$/;"	f
_zsh_autosuggest_async_request	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/async.zsh	/^_zsh_autosuggest_async_request() {$/;"	f
_zsh_autosuggest_async_request	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_async_request() {$/;"	f
_zsh_autosuggest_async_response	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/async.zsh	/^_zsh_autosuggest_async_response() {$/;"	f
_zsh_autosuggest_async_response	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_async_response() {$/;"	f
_zsh_autosuggest_async_response	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/async.zsh	/^_zsh_autosuggest_async_response() {$/;"	f
_zsh_autosuggest_async_response	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_async_response() {$/;"	f
_zsh_autosuggest_bind_widget	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/bind.zsh	/^_zsh_autosuggest_bind_widget() {$/;"	f
_zsh_autosuggest_bind_widget	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_bind_widget() {$/;"	f
_zsh_autosuggest_bind_widget	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/bind.zsh	/^_zsh_autosuggest_bind_widget() {$/;"	f
_zsh_autosuggest_bind_widget	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_bind_widget() {$/;"	f
_zsh_autosuggest_bind_widgets	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/bind.zsh	/^_zsh_autosuggest_bind_widgets() {$/;"	f
_zsh_autosuggest_bind_widgets	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_bind_widgets() {$/;"	f
_zsh_autosuggest_bind_widgets	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/bind.zsh	/^_zsh_autosuggest_bind_widgets() {$/;"	f
_zsh_autosuggest_bind_widgets	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_bind_widgets() {$/;"	f
_zsh_autosuggest_capture_completion_async	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/strategies/completion.zsh	/^_zsh_autosuggest_capture_completion_async() {$/;"	f
_zsh_autosuggest_capture_completion_async	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_capture_completion_async() {$/;"	f
_zsh_autosuggest_capture_completion_async	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/strategies/completion.zsh	/^_zsh_autosuggest_capture_completion_async() {$/;"	f
_zsh_autosuggest_capture_completion_async	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_capture_completion_async() {$/;"	f
_zsh_autosuggest_capture_completion_sync	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/strategies/completion.zsh	/^_zsh_autosuggest_capture_completion_sync() {$/;"	f
_zsh_autosuggest_capture_completion_sync	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_capture_completion_sync() {$/;"	f
_zsh_autosuggest_capture_completion_sync	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/strategies/completion.zsh	/^_zsh_autosuggest_capture_completion_sync() {$/;"	f
_zsh_autosuggest_capture_completion_sync	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_capture_completion_sync() {$/;"	f
_zsh_autosuggest_capture_completion_widget	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/strategies/completion.zsh	/^_zsh_autosuggest_capture_completion_widget() {$/;"	f
_zsh_autosuggest_capture_completion_widget	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_capture_completion_widget() {$/;"	f
_zsh_autosuggest_capture_completion_widget	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/strategies/completion.zsh	/^_zsh_autosuggest_capture_completion_widget() {$/;"	f
_zsh_autosuggest_capture_completion_widget	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_capture_completion_widget() {$/;"	f
_zsh_autosuggest_capture_postcompletion	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/strategies/completion.zsh	/^_zsh_autosuggest_capture_postcompletion() {$/;"	f
_zsh_autosuggest_capture_postcompletion	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_capture_postcompletion() {$/;"	f
_zsh_autosuggest_capture_postcompletion	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/strategies/completion.zsh	/^_zsh_autosuggest_capture_postcompletion() {$/;"	f
_zsh_autosuggest_capture_postcompletion	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_capture_postcompletion() {$/;"	f
_zsh_autosuggest_capture_setup	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/strategies/completion.zsh	/^_zsh_autosuggest_capture_setup() {$/;"	f
_zsh_autosuggest_capture_setup	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_capture_setup() {$/;"	f
_zsh_autosuggest_capture_setup	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/strategies/completion.zsh	/^_zsh_autosuggest_capture_setup() {$/;"	f
_zsh_autosuggest_capture_setup	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_capture_setup() {$/;"	f
_zsh_autosuggest_clear	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_clear() {$/;"	f
_zsh_autosuggest_clear	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_clear() {$/;"	f
_zsh_autosuggest_clear	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_clear() {$/;"	f
_zsh_autosuggest_clear	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_clear() {$/;"	f
_zsh_autosuggest_disable	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_disable() {$/;"	f
_zsh_autosuggest_disable	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_disable() {$/;"	f
_zsh_autosuggest_disable	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_disable() {$/;"	f
_zsh_autosuggest_disable	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_disable() {$/;"	f
_zsh_autosuggest_enable	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_enable() {$/;"	f
_zsh_autosuggest_enable	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_enable() {$/;"	f
_zsh_autosuggest_enable	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_enable() {$/;"	f
_zsh_autosuggest_enable	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_enable() {$/;"	f
_zsh_autosuggest_escape_command	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/util.zsh	/^_zsh_autosuggest_escape_command() {$/;"	f
_zsh_autosuggest_escape_command	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_escape_command() {$/;"	f
_zsh_autosuggest_escape_command	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/util.zsh	/^_zsh_autosuggest_escape_command() {$/;"	f
_zsh_autosuggest_escape_command	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_escape_command() {$/;"	f
_zsh_autosuggest_execute	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_execute() {$/;"	f
_zsh_autosuggest_execute	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_execute() {$/;"	f
_zsh_autosuggest_execute	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_execute() {$/;"	f
_zsh_autosuggest_execute	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_execute() {$/;"	f
_zsh_autosuggest_fetch	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_fetch() {$/;"	f
_zsh_autosuggest_fetch	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_fetch() {$/;"	f
_zsh_autosuggest_fetch	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_fetch() {$/;"	f
_zsh_autosuggest_fetch	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_fetch() {$/;"	f
_zsh_autosuggest_fetch_suggestion	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/fetch.zsh	/^_zsh_autosuggest_fetch_suggestion() {$/;"	f
_zsh_autosuggest_fetch_suggestion	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_fetch_suggestion() {$/;"	f
_zsh_autosuggest_fetch_suggestion	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/fetch.zsh	/^_zsh_autosuggest_fetch_suggestion() {$/;"	f
_zsh_autosuggest_fetch_suggestion	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_fetch_suggestion() {$/;"	f
_zsh_autosuggest_highlight_apply	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/highlight.zsh	/^_zsh_autosuggest_highlight_apply() {$/;"	f
_zsh_autosuggest_highlight_apply	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_highlight_apply() {$/;"	f
_zsh_autosuggest_highlight_apply	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/highlight.zsh	/^_zsh_autosuggest_highlight_apply() {$/;"	f
_zsh_autosuggest_highlight_apply	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_highlight_apply() {$/;"	f
_zsh_autosuggest_highlight_reset	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/highlight.zsh	/^_zsh_autosuggest_highlight_reset() {$/;"	f
_zsh_autosuggest_highlight_reset	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_highlight_reset() {$/;"	f
_zsh_autosuggest_highlight_reset	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/highlight.zsh	/^_zsh_autosuggest_highlight_reset() {$/;"	f
_zsh_autosuggest_highlight_reset	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_highlight_reset() {$/;"	f
_zsh_autosuggest_incr_bind_count	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/bind.zsh	/^_zsh_autosuggest_incr_bind_count() {$/;"	f
_zsh_autosuggest_incr_bind_count	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_incr_bind_count() {$/;"	f
_zsh_autosuggest_incr_bind_count	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/bind.zsh	/^_zsh_autosuggest_incr_bind_count() {$/;"	f
_zsh_autosuggest_incr_bind_count	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_incr_bind_count() {$/;"	f
_zsh_autosuggest_invoke_original_widget	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/bind.zsh	/^_zsh_autosuggest_invoke_original_widget() {$/;"	f
_zsh_autosuggest_invoke_original_widget	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_invoke_original_widget() {$/;"	f
_zsh_autosuggest_invoke_original_widget	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/bind.zsh	/^_zsh_autosuggest_invoke_original_widget() {$/;"	f
_zsh_autosuggest_invoke_original_widget	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_invoke_original_widget() {$/;"	f
_zsh_autosuggest_modify	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_modify() {$/;"	f
_zsh_autosuggest_modify	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_modify() {$/;"	f
_zsh_autosuggest_modify	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_modify() {$/;"	f
_zsh_autosuggest_modify	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_modify() {$/;"	f
_zsh_autosuggest_partial_accept	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_partial_accept() {$/;"	f
_zsh_autosuggest_partial_accept	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_partial_accept() {$/;"	f
_zsh_autosuggest_partial_accept	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_partial_accept() {$/;"	f
_zsh_autosuggest_partial_accept	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_partial_accept() {$/;"	f
_zsh_autosuggest_start	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/start.zsh	/^_zsh_autosuggest_start() {$/;"	f
_zsh_autosuggest_start	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_start() {$/;"	f
_zsh_autosuggest_start	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/start.zsh	/^_zsh_autosuggest_start() {$/;"	f
_zsh_autosuggest_start	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_start() {$/;"	f
_zsh_autosuggest_strategy_completion	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/strategies/completion.zsh	/^_zsh_autosuggest_strategy_completion() {$/;"	f
_zsh_autosuggest_strategy_completion	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_strategy_completion() {$/;"	f
_zsh_autosuggest_strategy_completion	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/strategies/completion.zsh	/^_zsh_autosuggest_strategy_completion() {$/;"	f
_zsh_autosuggest_strategy_completion	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_strategy_completion() {$/;"	f
_zsh_autosuggest_strategy_history	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/strategies/history.zsh	/^_zsh_autosuggest_strategy_history() {$/;"	f
_zsh_autosuggest_strategy_history	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_strategy_history() {$/;"	f
_zsh_autosuggest_strategy_history	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/strategies/history.zsh	/^_zsh_autosuggest_strategy_history() {$/;"	f
_zsh_autosuggest_strategy_history	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_strategy_history() {$/;"	f
_zsh_autosuggest_strategy_match_prev_cmd	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/strategies/match_prev_cmd.zsh	/^_zsh_autosuggest_strategy_match_prev_cmd() {$/;"	f
_zsh_autosuggest_strategy_match_prev_cmd	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_strategy_match_prev_cmd() {$/;"	f
_zsh_autosuggest_strategy_match_prev_cmd	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/strategies/match_prev_cmd.zsh	/^_zsh_autosuggest_strategy_match_prev_cmd() {$/;"	f
_zsh_autosuggest_strategy_match_prev_cmd	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_strategy_match_prev_cmd() {$/;"	f
_zsh_autosuggest_suggest	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_suggest() {$/;"	f
_zsh_autosuggest_suggest	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_suggest() {$/;"	f
_zsh_autosuggest_suggest	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_suggest() {$/;"	f
_zsh_autosuggest_suggest	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_suggest() {$/;"	f
_zsh_autosuggest_toggle	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_toggle() {$/;"	f
_zsh_autosuggest_toggle	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_toggle() {$/;"	f
_zsh_autosuggest_toggle	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/widgets.zsh	/^_zsh_autosuggest_toggle() {$/;"	f
_zsh_autosuggest_toggle	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^_zsh_autosuggest_toggle() {$/;"	f
_zsh_highlight	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight()$/;"	f
_zsh_highlight	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight()$/;"	f
_zsh_highlight	conf/zsh/.oh-my-zsh/plugins/history-substring-search/history-substring-search.zsh	/^  _zsh_highlight() {$/;"	f
_zsh_highlight__function_callable_p	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight__function_callable_p() {$/;"	f
_zsh_highlight__function_callable_p	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight__function_callable_p() {$/;"	f
_zsh_highlight__function_is_autoload_stub_p	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight__function_is_autoload_stub_p() {$/;"	f
_zsh_highlight__function_is_autoload_stub_p	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight__function_is_autoload_stub_p() {$/;"	f
_zsh_highlight__is_function_p	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight__is_function_p() {$/;"	f
_zsh_highlight__is_function_p	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight__is_function_p() {$/;"	f
_zsh_highlight_add_highlight	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/test-data/inheritance.zsh	/^_zsh_highlight_add_highlight()$/;"	f
_zsh_highlight_add_highlight	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/tests/generate.zsh	/^_zsh_highlight_add_highlight()$/;"	f
_zsh_highlight_add_highlight	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/tests/test-highlighting.zsh	/^_zsh_highlight_add_highlight()$/;"	f
_zsh_highlight_add_highlight	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_add_highlight()$/;"	f
_zsh_highlight_add_highlight	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/test-data/inheritance.zsh	/^_zsh_highlight_add_highlight()$/;"	f
_zsh_highlight_add_highlight	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/tests/generate.zsh	/^_zsh_highlight_add_highlight()$/;"	f
_zsh_highlight_add_highlight	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/tests/test-highlighting.zsh	/^_zsh_highlight_add_highlight()$/;"	f
_zsh_highlight_add_highlight	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_add_highlight()$/;"	f
_zsh_highlight_apply_zle_highlight	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_apply_zle_highlight() {$/;"	f
_zsh_highlight_apply_zle_highlight	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_apply_zle_highlight() {$/;"	f
_zsh_highlight_bind_widgets	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^  _zsh_highlight_bind_widgets()$/;"	f
_zsh_highlight_bind_widgets	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^  _zsh_highlight_bind_widgets(){}$/;"	f
_zsh_highlight_bind_widgets	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^  _zsh_highlight_bind_widgets()$/;"	f
_zsh_highlight_bind_widgets	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^  _zsh_highlight_bind_widgets(){}$/;"	f
_zsh_highlight_bind_widgets	conf/zsh/.oh-my-zsh/plugins/history-substring-search/history-substring-search.zsh	/^    _zsh_highlight_bind_widgets()$/;"	f
_zsh_highlight_brackets_match	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/brackets/brackets-highlighter.zsh	/^_zsh_highlight_brackets_match()$/;"	f
_zsh_highlight_brackets_match	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/brackets/brackets-highlighter.zsh	/^_zsh_highlight_brackets_match()$/;"	f
_zsh_highlight_buffer_modified	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_buffer_modified()$/;"	f
_zsh_highlight_buffer_modified	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_buffer_modified()$/;"	f
_zsh_highlight_call_widget	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_call_widget()$/;"	f
_zsh_highlight_call_widget	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_call_widget()$/;"	f
_zsh_highlight_cursor_moved	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_cursor_moved()$/;"	f
_zsh_highlight_cursor_moved	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_cursor_moved()$/;"	f
_zsh_highlight_highlighter_brackets_paint	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/brackets/brackets-highlighter.zsh	/^_zsh_highlight_highlighter_brackets_paint()$/;"	f
_zsh_highlight_highlighter_brackets_paint	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/brackets/brackets-highlighter.zsh	/^_zsh_highlight_highlighter_brackets_paint()$/;"	f
_zsh_highlight_highlighter_brackets_predicate	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/brackets/brackets-highlighter.zsh	/^_zsh_highlight_highlighter_brackets_predicate()$/;"	f
_zsh_highlight_highlighter_brackets_predicate	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/brackets/brackets-highlighter.zsh	/^_zsh_highlight_highlighter_brackets_predicate()$/;"	f
_zsh_highlight_highlighter_cursor_paint	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/cursor/cursor-highlighter.zsh	/^_zsh_highlight_highlighter_cursor_paint()$/;"	f
_zsh_highlight_highlighter_cursor_paint	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/cursor/cursor-highlighter.zsh	/^_zsh_highlight_highlighter_cursor_paint()$/;"	f
_zsh_highlight_highlighter_cursor_predicate	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/cursor/cursor-highlighter.zsh	/^_zsh_highlight_highlighter_cursor_predicate()$/;"	f
_zsh_highlight_highlighter_cursor_predicate	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/cursor/cursor-highlighter.zsh	/^_zsh_highlight_highlighter_cursor_predicate()$/;"	f
_zsh_highlight_highlighter_line_paint	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/line/line-highlighter.zsh	/^_zsh_highlight_highlighter_line_paint()$/;"	f
_zsh_highlight_highlighter_line_paint	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/line/line-highlighter.zsh	/^_zsh_highlight_highlighter_line_paint()$/;"	f
_zsh_highlight_highlighter_line_predicate	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/line/line-highlighter.zsh	/^_zsh_highlight_highlighter_line_predicate()$/;"	f
_zsh_highlight_highlighter_line_predicate	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/line/line-highlighter.zsh	/^_zsh_highlight_highlighter_line_predicate()$/;"	f
_zsh_highlight_highlighter_main_paint	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_highlighter_main_paint()$/;"	f
_zsh_highlight_highlighter_main_paint	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_highlighter_main_paint()$/;"	f
_zsh_highlight_highlighter_main_predicate	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_highlighter_main_predicate()$/;"	f
_zsh_highlight_highlighter_main_predicate	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_highlighter_main_predicate()$/;"	f
_zsh_highlight_highlighter_pattern_paint	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/pattern/pattern-highlighter.zsh	/^_zsh_highlight_highlighter_pattern_paint()$/;"	f
_zsh_highlight_highlighter_pattern_paint	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/pattern/pattern-highlighter.zsh	/^_zsh_highlight_highlighter_pattern_paint()$/;"	f
_zsh_highlight_highlighter_pattern_predicate	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/pattern/pattern-highlighter.zsh	/^_zsh_highlight_highlighter_pattern_predicate()$/;"	f
_zsh_highlight_highlighter_pattern_predicate	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/pattern/pattern-highlighter.zsh	/^_zsh_highlight_highlighter_pattern_predicate()$/;"	f
_zsh_highlight_highlighter_regexp_paint	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/regexp/regexp-highlighter.zsh	/^_zsh_highlight_highlighter_regexp_paint()$/;"	f
_zsh_highlight_highlighter_regexp_paint	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/regexp/regexp-highlighter.zsh	/^_zsh_highlight_highlighter_regexp_paint()$/;"	f
_zsh_highlight_highlighter_regexp_predicate	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/regexp/regexp-highlighter.zsh	/^_zsh_highlight_highlighter_regexp_predicate()$/;"	f
_zsh_highlight_highlighter_regexp_predicate	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/regexp/regexp-highlighter.zsh	/^_zsh_highlight_highlighter_regexp_predicate()$/;"	f
_zsh_highlight_highlighter_root_paint	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/root/root-highlighter.zsh	/^_zsh_highlight_highlighter_root_paint()$/;"	f
_zsh_highlight_highlighter_root_paint	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/root/root-highlighter.zsh	/^_zsh_highlight_highlighter_root_paint()$/;"	f
_zsh_highlight_highlighter_root_predicate	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/root/root-highlighter.zsh	/^_zsh_highlight_highlighter_root_predicate()$/;"	f
_zsh_highlight_highlighter_root_predicate	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/root/root-highlighter.zsh	/^_zsh_highlight_highlighter_root_predicate()$/;"	f
_zsh_highlight_load_highlighters	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_load_highlighters()$/;"	f
_zsh_highlight_load_highlighters	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_load_highlighters()$/;"	f
_zsh_highlight_main__is_global_alias	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__is_global_alias() {$/;"	f
_zsh_highlight_main__is_global_alias	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__is_global_alias() {$/;"	f
_zsh_highlight_main__is_redirection	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__is_redirection() {$/;"	f
_zsh_highlight_main__is_redirection	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__is_redirection() {$/;"	f
_zsh_highlight_main__is_runnable	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__is_runnable() {$/;"	f
_zsh_highlight_main__is_runnable	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__is_runnable() {$/;"	f
_zsh_highlight_main__precmd_hook	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__precmd_hook() {$/;"	f
_zsh_highlight_main__precmd_hook	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__precmd_hook() {$/;"	f
_zsh_highlight_main__resolve_alias	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__resolve_alias() {$/;"	f
_zsh_highlight_main__resolve_alias	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__resolve_alias() {$/;"	f
_zsh_highlight_main__stack_pop	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__stack_pop() {$/;"	f
_zsh_highlight_main__stack_pop	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__stack_pop() {$/;"	f
_zsh_highlight_main__type	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__type() {$/;"	f
_zsh_highlight_main__type	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main__type() {$/;"	f
_zsh_highlight_main_add_many_region_highlights	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_add_many_region_highlights() {$/;"	f
_zsh_highlight_main_add_many_region_highlights	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_add_many_region_highlights() {$/;"	f
_zsh_highlight_main_add_region_highlight	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_add_region_highlight() {$/;"	f
_zsh_highlight_main_add_region_highlight	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_add_region_highlight() {$/;"	f
_zsh_highlight_main_calculate_fallback	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_calculate_fallback() {$/;"	f
_zsh_highlight_main_calculate_fallback	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_calculate_fallback() {$/;"	f
_zsh_highlight_main_highlighter__try_expand_parameter	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter__try_expand_parameter()$/;"	f
_zsh_highlight_main_highlighter__try_expand_parameter	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter__try_expand_parameter()$/;"	f
_zsh_highlight_main_highlighter_check_assign	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_check_assign()$/;"	f
_zsh_highlight_main_highlighter_check_assign	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_check_assign()$/;"	f
_zsh_highlight_main_highlighter_check_path	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_check_path()$/;"	f
_zsh_highlight_main_highlighter_check_path	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_check_path()$/;"	f
_zsh_highlight_main_highlighter_expand_path	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_expand_path()$/;"	f
_zsh_highlight_main_highlighter_expand_path	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_expand_path()$/;"	f
_zsh_highlight_main_highlighter_highlight_argument	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_argument()$/;"	f
_zsh_highlight_main_highlighter_highlight_argument	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_argument()$/;"	f
_zsh_highlight_main_highlighter_highlight_arithmetic	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_arithmetic()$/;"	f
_zsh_highlight_main_highlighter_highlight_arithmetic	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_arithmetic()$/;"	f
_zsh_highlight_main_highlighter_highlight_backtick	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_backtick()$/;"	f
_zsh_highlight_main_highlighter_highlight_backtick	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_backtick()$/;"	f
_zsh_highlight_main_highlighter_highlight_dollar_quote	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_dollar_quote()$/;"	f
_zsh_highlight_main_highlighter_highlight_dollar_quote	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_dollar_quote()$/;"	f
_zsh_highlight_main_highlighter_highlight_double_quote	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_double_quote()$/;"	f
_zsh_highlight_main_highlighter_highlight_double_quote	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_double_quote()$/;"	f
_zsh_highlight_main_highlighter_highlight_list	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_list()$/;"	f
_zsh_highlight_main_highlighter_highlight_list	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_list()$/;"	f
_zsh_highlight_main_highlighter_highlight_path_separators	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_path_separators()$/;"	f
_zsh_highlight_main_highlighter_highlight_path_separators	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_path_separators()$/;"	f
_zsh_highlight_main_highlighter_highlight_single_quote	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_single_quote()$/;"	f
_zsh_highlight_main_highlighter_highlight_single_quote	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^_zsh_highlight_main_highlighter_highlight_single_quote()$/;"	f
_zsh_highlight_pattern_highlighter_loop	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/pattern/pattern-highlighter.zsh	/^_zsh_highlight_pattern_highlighter_loop()$/;"	f
_zsh_highlight_pattern_highlighter_loop	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/pattern/pattern-highlighter.zsh	/^_zsh_highlight_pattern_highlighter_loop()$/;"	f
_zsh_highlight_preexec_hook	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_preexec_hook()$/;"	f
_zsh_highlight_preexec_hook	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh	/^_zsh_highlight_preexec_hook()$/;"	f
_zsh_highlight_regexp_highlighter_loop	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/regexp/regexp-highlighter.zsh	/^_zsh_highlight_regexp_highlighter_loop()$/;"	f
_zsh_highlight_regexp_highlighter_loop	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/regexp/regexp-highlighter.zsh	/^_zsh_highlight_regexp_highlighter_loop()$/;"	f
_zsh_tmux_plugin_run	conf/zsh/.oh-my-zsh/plugins/tmux/tmux.plugin.zsh	/^function _zsh_tmux_plugin_run() {$/;"	f
_zshz_add_or_remove_path	conf/zsh/.oh-my-zsh/plugins/z/z.plugin.zsh	/^  _zshz_add_or_remove_path() {$/;"	f
_zshz_chpwd	conf/zsh/.oh-my-zsh/plugins/z/z.plugin.zsh	/^_zshz_chpwd() {$/;"	f
_zshz_echo	conf/zsh/.oh-my-zsh/plugins/z/z.plugin.zsh	/^  _zshz_echo() {$/;"	f
_zshz_find_common_root	conf/zsh/.oh-my-zsh/plugins/z/z.plugin.zsh	/^  _zshz_find_common_root() {$/;"	f
_zshz_find_matches	conf/zsh/.oh-my-zsh/plugins/z/z.plugin.zsh	/^  _zshz_find_matches() {$/;"	f
_zshz_legacy_complete	conf/zsh/.oh-my-zsh/plugins/z/z.plugin.zsh	/^  _zshz_legacy_complete() {$/;"	f
_zshz_output	conf/zsh/.oh-my-zsh/plugins/z/z.plugin.zsh	/^  _zshz_output() {$/;"	f
_zshz_precmd	conf/zsh/.oh-my-zsh/plugins/z/z.plugin.zsh	/^_zshz_precmd() {$/;"	f
_zshz_printv	conf/zsh/.oh-my-zsh/plugins/z/z.plugin.zsh	/^  _zshz_printv() {$/;"	f
_zshz_update_datafile	conf/zsh/.oh-my-zsh/plugins/z/z.plugin.zsh	/^  _zshz_update_datafile() {$/;"	f
_zshz_usage	conf/zsh/.oh-my-zsh/plugins/z/z.plugin.zsh	/^_zshz_usage() {$/;"	f
a	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "First Line\\nSecond Line"$/;"	v	class:TestWithNewline
a	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "Vorne hallo Hinten"$/;"	v	class:TestCheapDelete
a	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "Vorne hallo Hinten"$/;"	v	class:TestRealLife1
a	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "hallo End Beginning"$/;"	v	class:TestRealLife
a	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "hi first line\\nsecond line first line\\nsecond line world"$/;"	v	class:MultiLine
a	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "stdin.h"$/;"	v	class:MatchIsTooCheap
a	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = "this is it this is it this is it"$/;"	v	class:TestUltiSnipsProblem
aS	conf/vim/.vim/plugged/ultisnips/ftplugin/snippets.vim	/^onoremap <silent><buffer> aS :<C-U>call <SID>UltiSnippetTextObj(0)<CR>$/;"	m
aar	conf/zsh/.oh-my-zsh/plugins/debian/debian.plugin.zsh	/^    function aar() {$/;"	f
aar	conf/zsh/.oh-my-zsh/plugins/ubuntu/ubuntu.plugin.zsh	/^function aar() {$/;"	f
abd	conf/zsh/.oh-my-zsh/plugins/debian/debian.plugin.zsh	/^    function abd() {$/;"	f
abs_p	conf/emacs/.emacs.d/.github/workflows/scripts/test	/^abs_p() {$/;"	f
abs_path	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:abs_path(bufnr, shellesc)$/;"	f
ac	conf/vim/.vim/custom/coc.vim	/^omap ac <Plug>(coc-classobj-a)$/;"	m
ac	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^omap ac <Plug>(coc-classobj-a)$/;"	m
ac	conf/vim/.vim/plugged/vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> ac :<c-u>call go#textobj#Comment('a')<cr>$/;"	m
accessip10	conf/zsh/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function accessip10() {$/;"	f
acknowledgeSelfClosingTag	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func (p *parser) acknowledgeSelfClosingTag() {$/;"	f
acp	conf/zsh/.oh-my-zsh/plugins/aws/aws.plugin.zsh	/^function acp() {$/;"	f
acquire	workflows/Ariafred/src/workflow/util.py	/^    def acquire(self, blocking=True):$/;"	m	class:LockFile
acss	conf/zsh/.oh-my-zsh/plugins/sfffe/sfffe.plugin.zsh	/^acss() {$/;"	f
action	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^        action="append",$/;"	v
action	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^        action="store_true",$/;"	v
action_for	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:action_for(key, ...)$/;"	f
activateAll	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateAll() abort$/;"	f
activateBookmark	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateBookmark(bm) abort$/;"	f
activateDirNode	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateDirNode(directoryNode, ...) abort$/;"	f
activateFileNode	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateFileNode(node) abort$/;"	f
actual	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let actual = GetBuffer()$/;"	v
addChild	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func (p *parser) addChild(n *Node) {$/;"	f
addElement	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func (p *parser) addElement() {$/;"	f
addFormattingElement	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func (p *parser) addFormattingElement() {$/;"	f
addHighlightTimer	conf/vim/.vim/plugged/coc.nvim/lua/coc/highlight.lua	/^local function addHighlightTimer(bufnr, ns, highlights, priority, maxCount)$/;"	f
addHighlights	conf/vim/.vim/plugged/coc.nvim/lua/coc/highlight.lua	/^local function addHighlights(bufnr, ns, highlights, priority)$/;"	f
addText	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func (p *parser) addText(text string) {$/;"	f
add_action_highlights	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^function! s:add_action_highlights(before, lnum, highlights, actions) abort$/;"	f
add_and_commit	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^    def add_and_commit(scope: str, version: str) -> bool:$/;"	m	class:Git
add_bt_task	workflows/Ariafred/src/aria_actions.py	/^def add_bt_task(filepath):$/;"	f
add_buffer_filetypes	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def add_buffer_filetypes(self, filetypes: str):$/;"	m	class:SnippetManager
add_files_to_gitignore	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/setup	/^add_files_to_gitignore() {$/;"	f
add_filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def add_filter(self, path: str) -> None:$/;"	m	class:_Parent
add_highlights	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:add_highlights(winid, config, create) abort$/;"	f
add_highlights	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! s:add_highlights(bufnr, ns, highlights, priority) abort$/;"	f
add_highlights_timer	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! s:add_highlights_timer(bufnr, ns, highlights, priority) abort$/;"	f
add_instance	sh/kcptun.sh	/^add_instance() {$/;"	f
add_item	workflows/Ariafred/src/workflow/workflow.py	/^    def add_item(self, title, subtitle='', modifier_subtitles=None, arg=None,$/;"	m	class:Workflow
add_item	workflows/Ariafred/src/workflow/workflow3.py	/^    def add_item(self, title, subtitle='', arg=None, autocomplete=None,$/;"	m	class:Workflow3
add_modifier	workflows/Ariafred/src/workflow/workflow3.py	/^    def add_modifier(self, key, subtitle=None, arg=None, valid=None, icon=None,$/;"	m	class:Item3
add_modifier_subs	workflows/Ariafred/src/aria.py	/^def add_modifier_subs(item, active=False, done=False, info=''):$/;"	f
add_snippet	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/added.py	/^    def add_snippet(self, ft, snippet):$/;"	m	class:AddedSnippetsSource
add_snippet	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def add_snippet(self, snippet):$/;"	m	class:SnippetDictionary
add_snippet	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def add_snippet($/;"	m	class:SnippetManager
add_source	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def add_source(self, path: str) -> None:$/;"	m	class:_Parent
add_task	workflows/Ariafred/src/aria_actions.py	/^def add_task(url):$/;"	f
adjust_header	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:adjust_header(bufnr, hunk_diff)$/;"	f
adjust_hunk_summary	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:adjust_hunk_summary(hunk_diff) abort$/;"	f
af	conf/vim/.vim/custom/coc.vim	/^omap af <Plug>(coc-funcobj-a)$/;"	m
af	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^omap af <Plug>(coc-funcobj-a)$/;"	m
af	conf/vim/.vim/plugged/vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> af :<c-u>call go#textobj#Function('a')<cr>$/;"	m
afterAfterBodyIM	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func afterAfterBodyIM(p *parser) bool {$/;"	f
afterAfterFramesetIM	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func afterAfterFramesetIM(p *parser) bool {$/;"	f
afterBodyIM	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func afterBodyIM(p *parser) bool {$/;"	f
afterFramesetIM	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func afterFramesetIM(p *parser) bool {$/;"	f
afterHeadIM	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func afterHeadIM(p *parser) bool {$/;"	f
ag_handler	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ag_handler(name, lines)$/;"	f
ag_to_qf	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ag_to_qf(line)$/;"	f
agda-mode-path	conf/emacs/.emacs.d/layers/+lang/agda/config.el	/^(defvar agda-mode-path 'use-helper$/;"	f
agda/init-agda	conf/emacs/.emacs.d/layers/+lang/agda/packages.el	/^(defun agda\/init-agda ()$/;"	f
agda/post-init-company	conf/emacs/.emacs.d/layers/+lang/agda/packages.el	/^(defun agda\/post-init-company ()$/;"	f
agda/pre-init-golden-ratio	conf/emacs/.emacs.d/layers/+lang/agda/packages.el	/^(defun agda\/pre-init-golden-ratio ()$/;"	f
agp	conf/zsh/.oh-my-zsh/plugins/aws/aws.plugin.zsh	/^function agp() {$/;"	f
agr	conf/zsh/.oh-my-zsh/plugins/aws/aws.plugin.zsh	/^function agr() {$/;"	f
ahead	conf/zsh/.oh-my-zsh/plugins/git-prompt/gitstatus.py	/^                        ahead = int(div[len('ahead '):].strip())$/;"	v
ai	conf/zsh/.oh-my-zsh/plugins/debian/debian.plugin.zsh	/^    function ai() {$/;"	f
ajs	conf/zsh/.oh-my-zsh/plugins/sfffe/sfffe.plugin.zsh	/^ajs() {$/;"	f
akey	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    akey = "'te{}stâ'".format('"')$/;"	v	class:VerifyVimDict2
akey	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    akey = '"te{}stâ"'.format("'")$/;"	v	class:VerifyVimDict3
alda/init-alda-mode	conf/emacs/.emacs.d/layers/+lang/alda/packages.el	/^(defun alda\/init-alda-mode ()$/;"	f
alfred_env	workflows/Ariafred/src/workflow/workflow.py	/^    def alfred_env(self):$/;"	m	class:Workflow
alfred_version	workflows/Ariafred/src/workflow/workflow.py	/^    def alfred_version(self):$/;"	m	class:Workflow
alias1	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/test-data/alias.zsh	/^function alias1() {} # to check that it's highlighted as an alias, not as a function$/;"	f
alias1	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/test-data/alias.zsh	/^function alias1() {} # to check that it's highlighted as an alias, not as a function$/;"	f
alias_value	conf/zsh/.oh-my-zsh/lib/functions.zsh	/^function alias_value() {$/;"	f
aliases	conf/zsh/.oh-my-zsh/plugins/shell-proxy/proxy.py	/^    aliases = {$/;"	v	class:CommandSet
aliases_map	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^aliases_map = {entry['emoji']: entry['aliases'] for entry in j}$/;"	v
align_lists	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:align_lists(lists)$/;"	f
align_pairs	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:align_pairs(list)$/;"	f
all_omz_names	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^all_omz_names = [emoji_data[3] for emoji_data in emoji_database]$/;"	v
all_test_files	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/tests/run_tests_in_isolation	/^all_test_files() {$/;"	f
als	conf/zsh/.oh-my-zsh/plugins/aliases/aliases.plugin.zsh	/^  function als(){$/;"	f
amen	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/holy-mode/holy-mode.el	/^(defun amen ()$/;"	f
animate	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^function! s:animate(winid, from, to, prev, ...) abort$/;"	f
ansi	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ansi(str, group, default, ...)$/;"	f
ansi-term-handle-close	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun ansi-term-handle-close ()$/;"	f
ansible	conf/zsh/.oh-my-zsh/plugins/ansible/ansible.plugin.zsh	/^function ansible-role-init(){$/;"	f
ansible	conf/zsh/.oh-my-zsh/plugins/ansible/ansible.plugin.zsh	/^function ansible-version(){$/;"	f
ansible-auto-encrypt-decrypt	conf/emacs/.emacs.d/layers/+tools/ansible/config.el	/^(defvar ansible-auto-encrypt-decrypt t$/;"	f
ansible/init-ansible	conf/emacs/.emacs.d/layers/+tools/ansible/packages.el	/^(defun ansible\/init-ansible ()$/;"	f
ansible/init-ansible-doc	conf/emacs/.emacs.d/layers/+tools/ansible/packages.el	/^(defun ansible\/init-ansible-doc ()$/;"	f
ansible/init-company-ansible	conf/emacs/.emacs.d/layers/+tools/ansible/packages.el	/^(defun ansible\/init-company-ansible ()$/;"	f
ansible/init-jinja2-mode	conf/emacs/.emacs.d/layers/+tools/ansible/packages.el	/^(defun ansible\/init-jinja2-mode ()$/;"	f
ansible/post-init-company	conf/emacs/.emacs.d/layers/+tools/ansible/packages.el	/^(defun ansible\/post-init-company ()$/;"	f
ansible/post-init-yaml-mode	conf/emacs/.emacs.d/layers/+tools/ansible/packages.el	/^(defun ansible\/post-init-yaml-mode ()$/;"	f
any_key_to_continue	sh/kcptun.sh	/^any_key_to_continue() {$/;"	f
ap	conf/zsh/.oh-my-zsh/plugins/debian/debian.plugin.zsh	/^    function ap() {$/;"	f
apache-packages	conf/emacs/.emacs.d/layers/+tools/apache/packages.el	/^(defconst apache-packages '(apache-mode))$/;"	f
apache/init-apache-mode	conf/emacs/.emacs.d/layers/+tools/apache/packages.el	/^(defun apache\/init-apache-mode()$/;"	f
append	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def append(self, line, line_number=-1):$/;"	m	class:VimBufferProxy
append_ul	conf/vim/.vim/autoload/plug.vim	/^function! s:append_ul(lnum, text)$/;"	f
appinfo	workflows/Ariafred/src/workflow/util.py	/^def appinfo(name):$/;"	f
applescriptify	workflows/Ariafred/src/workflow/util.py	/^def applescriptify(s):$/;"	f
applyDocumentChanges	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function s:applyDocumentChanges(changes)$/;"	f
applyTextEdits	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function s:applyTextEdits(bufnr, msg) abort$/;"	f
apply_filter	workflows/Ariafred/src/aria.py	/^def apply_filter(tasks, filters):$/;"	f
apt	conf/zsh/.oh-my-zsh/plugins/debian/debian.plugin.zsh	/^function apt-copy() {$/;"	f
apt	conf/zsh/.oh-my-zsh/plugins/debian/debian.plugin.zsh	/^function apt-history() {$/;"	f
apt	conf/zsh/.oh-my-zsh/plugins/debian/debian.plugin.zsh	/^function apt-list-packages() {$/;"	f
apt	conf/zsh/.oh-my-zsh/plugins/ubuntu/ubuntu.plugin.zsh	/^function apt-history() {$/;"	f
apt	conf/zsh/.oh-my-zsh/plugins/ubuntu/ubuntu.plugin.zsh	/^function apt-list-packages {$/;"	f
apt_pref_compdef	conf/zsh/.oh-my-zsh/plugins/debian/debian.plugin.zsh	/^function apt_pref_compdef() {$/;"	f
ardu	conf/zsh/.oh-my-zsh/plugins/arcanist/arcanist.plugin.zsh	/^ardu() {$/;"	f
arg0	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^      function arg0$/;"	f
arg0	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/main-highlighter.zsh	/^      function arg0$/;"	f
args	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = ""$/;"	v	class:_AnonBase
args	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple $1 expand $1 $0"'$/;"	v	class:Anon_NoTrigger_Multi
args	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple $1 expand $1 $0", "abc"'$/;"	v	class:Anon_Trigger_Multi
args	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand"'$/;"	v	class:Anon_NoTrigger_AfterSpace
args	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand"'$/;"	v	class:Anon_NoTrigger_Simple
args	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand", ".*abc", "desc", "r"'$/;"	v	class:Anon_Trigger_Opts
args	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand", "abc"'$/;"	v	class:Anon_Trigger_Simple
args	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand", "abc"'$/;"	v	class:Anon_Trigger_Twice
args	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = r"':latex:\\`$1\\`$0'"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
args	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = r"':latex:\\`$1\\`$0'"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
args	conf/vim/.vim/plugged/ultisnips/test/test_Autocommands.py	/^    args = ""$/;"	v	class:Autocommands
args	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    args = ""$/;"	v	class:_AddFuncBase
args	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    args = '".*test", "simple expand", "desc", "r", "all", 0'$/;"	v	class:AddFunc_Opt
args	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    args = '"test", "simple expand", "desc", "", "all", 0'$/;"	v	class:AddFunc_Simple
args	conf/zsh/.oh-my-zsh/plugins/aliases/cheatsheet.py	/^    args = parser.parse_args()$/;"	v
args	workflows/Ariafred/src/workflow/workflow.py	/^    def args(self):$/;"	m	class:Workflow
argv	conf/zsh/.oh-my-zsh/plugins/shell-proxy/ssh-agent.py	/^argv = [$/;"	v
argv	workflows/Ariafred/src/workflow/update.py	/^    argv = sys.argv[:]$/;"	v
arpa	conf/zsh/.oh-my-zsh/plugins/arcanist/arcanist.plugin.zsh	/^arpa() {$/;"	f
asciidoc/init-adoc-mode	conf/emacs/.emacs.d/layers/+lang/asciidoc/packages.el	/^(defun asciidoc\/init-adoc-mode ()$/;"	f
ask	conf/vim/.vim/autoload/plug.vim	/^function! s:ask(message, ...)$/;"	f
ask_no_interrupt	conf/vim/.vim/autoload/plug.vim	/^function! s:ask_no_interrupt(...)$/;"	f
asm-colon-check-space	conf/emacs/.emacs.d/layers/+lang/asm/funcs.el	/^(defun asm-colon-check-space ()$/;"	f
asm-colon-delete-spaces	conf/emacs/.emacs.d/layers/+lang/asm/funcs.el	/^(defun asm-colon-delete-spaces ()$/;"	f
asm-colon-has-space	conf/emacs/.emacs.d/layers/+lang/asm/funcs.el	/^(defvar asm-colon-has-space nil)$/;"	f
asm-electric-indent-local-mode-off	conf/emacs/.emacs.d/layers/+lang/asm/funcs.el	/^(defun asm-electric-indent-local-mode-off ()$/;"	f
asm-generic-setup	conf/emacs/.emacs.d/layers/+lang/asm/funcs.el	/^(defun asm-generic-setup ()$/;"	f
asm/init-asm-mode	conf/emacs/.emacs.d/layers/+lang/asm/packages.el	/^(defun asm\/init-asm-mode ()$/;"	f
asm/init-nasm-mode	conf/emacs/.emacs.d/layers/+lang/asm/packages.el	/^(defun asm\/init-nasm-mode ()$/;"	f
asm/init-x86-lookup	conf/emacs/.emacs.d/layers/+lang/asm/packages.el	/^(defun asm\/init-x86-lookup ()$/;"	f
asm/post-init-company	conf/emacs/.emacs.d/layers/+lang/asm/packages.el	/^(defun asm\/post-init-company ()$/;"	f
asm/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/asm/packages.el	/^(defun asm\/post-init-counsel-gtags nil)$/;"	f
asm/post-init-electric-indent-mode	conf/emacs/.emacs.d/layers/+lang/asm/packages.el	/^(defun asm\/post-init-electric-indent-mode ()$/;"	f
asm/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/asm/packages.el	/^(defun asm\/post-init-ggtags ()$/;"	f
asp	conf/zsh/.oh-my-zsh/plugins/aws/aws.plugin.zsh	/^function asp() {$/;"	f
asr	conf/zsh/.oh-my-zsh/plugins/aws/aws.plugin.zsh	/^function asr() {$/;"	f
assertHasPrefix	conf/tmux/.tmux/plugins/tmux-themepack/test/test_helpers.go	/^func assertHasPrefix(t *testing.T, s, prefix string) {$/;"	f
assertHasSuffix	conf/tmux/.tmux/plugins/tmux-themepack/test/test_helpers.go	/^func assertHasSuffix(t *testing.T, s, prefix string) {$/;"	f
assert_list_of_dicts	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:assert_list_of_dicts(expected, actual)$/;"	f
assert_signs	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:assert_signs(expected, filename)$/;"	f
assign_name	conf/vim/.vim/autoload/plug.vim	/^function! s:assign_name()$/;"	f
assoc	conf/vim/.vim/autoload/plug.vim	/^function! s:assoc(dict, key, val)$/;"	f
atomic_writer	workflows/Ariafred/src/workflow/util.py	/^def atomic_writer(fpath, mode):$/;"	f
attach!	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/spec/terminal_session.rb	/^  def attach!$/;"	f	class:TerminalSession
attach!	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/spec/terminal_session.rb	/^  def attach!$/;"	f	class:TerminalSession
attach_vim	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/_main.py	/^def attach_vim(serveraddr):$/;"	f
au	conf/vim/.vim/plugged/vim-operator-user/t/register-designations.vim	/^onoremap au  :<C-u>normal! v$<Return>$/;"	m
auownloc	conf/zsh/.oh-my-zsh/plugins/archlinux/archlinux.plugin.zsh	/^  function auownloc() { aura -Qi  $(aura -Qqo $@); }$/;"	f
auownls	conf/zsh/.oh-my-zsh/plugins/archlinux/archlinux.plugin.zsh	/^  function auownls () { aura -Qql $(aura -Qqo $@); }$/;"	f
auto-completion-complete-with-key-sequence	conf/emacs/.emacs.d/layers/+completion/auto-completion/config.el	/^(defvar auto-completion-complete-with-key-sequence nil$/;"	f
auto-completion-complete-with-key-sequence-delay	conf/emacs/.emacs.d/layers/+completion/auto-completion/config.el	/^(defvar auto-completion-complete-with-key-sequence-delay 0.1$/;"	f
auto-completion-enable-help-tooltip	conf/emacs/.emacs.d/layers/+completion/auto-completion/config.el	/^(defvar auto-completion-enable-help-tooltip nil$/;"	f
auto-completion-enable-snippets-in-popup	conf/emacs/.emacs.d/layers/+completion/auto-completion/config.el	/^(defvar auto-completion-enable-snippets-in-popup nil$/;"	f
auto-completion-enable-sort-by-usage	conf/emacs/.emacs.d/layers/+completion/auto-completion/config.el	/^(defvar auto-completion-enable-sort-by-usage nil$/;"	f
auto-completion-front-end	conf/emacs/.emacs.d/layers/+completion/auto-completion/config.el	/^(defvar-local auto-completion-front-end 'company$/;"	f
auto-completion-idle-delay	conf/emacs/.emacs.d/layers/+completion/auto-completion/config.el	/^(defvar auto-completion-idle-delay 0.2$/;"	f
auto-completion-minimum-prefix-length	conf/emacs/.emacs.d/layers/+completion/auto-completion/config.el	/^(defvar auto-completion-minimum-prefix-length 2$/;"	f
auto-completion-packages	conf/emacs/.emacs.d/layers/+completion/auto-completion/packages.el	/^(defconst auto-completion-packages$/;"	f
auto-completion-private-snippets-directory	conf/emacs/.emacs.d/layers/+completion/auto-completion/config.el	/^(defvar auto-completion-private-snippets-directory nil$/;"	f
auto-completion-return-key-behavior	conf/emacs/.emacs.d/layers/+completion/auto-completion/config.el	/^(defvar auto-completion-return-key-behavior 'complete$/;"	f
auto-completion-tab-key-behavior	conf/emacs/.emacs.d/layers/+completion/auto-completion/config.el	/^(defvar auto-completion-tab-key-behavior 'cycle$/;"	f
auto-completion-use-company-box	conf/emacs/.emacs.d/layers/+completion/auto-completion/config.el	/^(defvar auto-completion-use-company-box nil$/;"	f
auto-completion-use-company-posframe	conf/emacs/.emacs.d/layers/+completion/auto-completion/config.el	/^(defvar auto-completion-use-company-posframe nil$/;"	f
auto-completion/init-ac-ispell	conf/emacs/.emacs.d/layers/+completion/auto-completion/packages.el	/^(defun auto-completion\/init-ac-ispell ()$/;"	f
auto-completion/init-auto-complete	conf/emacs/.emacs.d/layers/+completion/auto-completion/packages.el	/^(defun auto-completion\/init-auto-complete ()$/;"	f
auto-completion/init-auto-yasnippet	conf/emacs/.emacs.d/layers/+completion/auto-completion/packages.el	/^(defun auto-completion\/init-auto-yasnippet ()$/;"	f
auto-completion/init-company	conf/emacs/.emacs.d/layers/+completion/auto-completion/packages.el	/^(defun auto-completion\/init-company ()$/;"	f
auto-completion/init-company-box	conf/emacs/.emacs.d/layers/+completion/auto-completion/packages.el	/^(defun auto-completion\/init-company-box ()$/;"	f
auto-completion/init-company-posframe	conf/emacs/.emacs.d/layers/+completion/auto-completion/packages.el	/^(defun auto-completion\/init-company-posframe ()$/;"	f
auto-completion/init-company-quickhelp	conf/emacs/.emacs.d/layers/+completion/auto-completion/packages.el	/^(defun auto-completion\/init-company-quickhelp ()$/;"	f
auto-completion/init-company-statistics	conf/emacs/.emacs.d/layers/+completion/auto-completion/packages.el	/^(defun auto-completion\/init-company-statistics ()$/;"	f
auto-completion/init-fuzzy	conf/emacs/.emacs.d/layers/+completion/auto-completion/packages.el	/^(defun auto-completion\/init-fuzzy ()$/;"	f
auto-completion/init-helm-c-yasnippet	conf/emacs/.emacs.d/layers/+completion/auto-completion/packages.el	/^(defun auto-completion\/init-helm-c-yasnippet ()$/;"	f
auto-completion/init-helm-company	conf/emacs/.emacs.d/layers/+completion/auto-completion/packages.el	/^(defun auto-completion\/init-helm-company ())$/;"	f
auto-completion/init-hippie-exp	conf/emacs/.emacs.d/layers/+completion/auto-completion/packages.el	/^(defun auto-completion\/init-hippie-exp ()$/;"	f
auto-completion/init-ivy-yasnippet	conf/emacs/.emacs.d/layers/+completion/auto-completion/packages.el	/^(defun auto-completion\/init-ivy-yasnippet ()$/;"	f
auto-completion/init-yasnippet	conf/emacs/.emacs.d/layers/+completion/auto-completion/packages.el	/^(defun auto-completion\/init-yasnippet ()$/;"	f
auto-completion/init-yasnippet-snippets	conf/emacs/.emacs.d/layers/+completion/auto-completion/packages.el	/^(defun auto-completion\/init-yasnippet-snippets ())$/;"	f
auto-completion/post-init-smartparens	conf/emacs/.emacs.d/layers/+completion/auto-completion/packages.el	/^(defun auto-completion\/post-init-smartparens ()$/;"	f
auto-completion/pre-init-counsel	conf/emacs/.emacs.d/layers/+completion/auto-completion/packages.el	/^(defun auto-completion\/pre-init-counsel ()$/;"	f
auto-completion/pre-init-helm-company	conf/emacs/.emacs.d/layers/+completion/auto-completion/packages.el	/^(defun auto-completion\/pre-init-helm-company ()$/;"	f
auto_completion_begin	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def auto_completion_begin(self, context: Context) -> None:$/;"	m	class:DeopleteHandlers
auto_formatted	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let auto_formatted = join(getline(1, line('$')), "\\n")$/;"	v
auto_vrun	conf/zsh/.oh-my-zsh/plugins/python/python.plugin.zsh	/^  function auto_vrun() {$/;"	f
autohotkey/init-ahk-mode	conf/emacs/.emacs.d/layers/+lang/autohotkey/packages.el	/^(defun autohotkey\/init-ahk-mode ()$/;"	f
autohotkey/post-init-company	conf/emacs/.emacs.d/layers/+lang/autohotkey/packages.el	/^(defun autohotkey\/post-init-company ()$/;"	f
available-screen-pixel-bounds	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defcustom available-screen-pixel-bounds nil$/;"	f
await	conf/vim/.vim/plugged/vim-go/autoload/go/promise.vim	/^function! s:await(timeout, default) dict$/;"	f
aws_change_access_key	conf/zsh/.oh-my-zsh/plugins/aws/aws.plugin.zsh	/^function aws_change_access_key() {$/;"	f
aws_profiles	conf/zsh/.oh-my-zsh/plugins/aws/aws.plugin.zsh	/^function aws_profiles() {$/;"	f
aws_prompt_info	conf/zsh/.oh-my-zsh/plugins/aws/aws.plugin.zsh	/^function aws_prompt_info() {$/;"	f
aws_regions	conf/zsh/.oh-my-zsh/plugins/aws/aws.plugin.zsh	/^function aws_regions() {$/;"	f
az_subscriptions	conf/zsh/.oh-my-zsh/plugins/azure/azure.plugin.zsh	/^function az_subscriptions() {$/;"	f
azgs	conf/zsh/.oh-my-zsh/plugins/azure/azure.plugin.zsh	/^function azgs() {$/;"	f
azure_prompt_info	conf/zsh/.oh-my-zsh/plugins/azure/azure.plugin.zsh	/^function azure_prompt_info() {$/;"	f
b	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "Vorne Hinten"$/;"	v	class:TestCheapDelete
b	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "Vorne hallo  Hinten"$/;"	v	class:TestRealLife1
b	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "hallo End t"$/;"	v	class:TestRealLife
b	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "hi first line\\nsecond line k world"$/;"	v	class:MultiLine
b	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "n"$/;"	v	class:TestWithNewline
b	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "s"$/;"	v	class:MatchIsTooCheap
b	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = "this is it a this is it"$/;"	v	class:TestUltiSnipsProblem
b	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/test-data/alias-loop.zsh	/^function b() {} # beware of ALIAS_FUNC_DEF$/;"	f
b	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/test-data/alias-loop.zsh	/^function b() {} # beware of ALIAS_FUNC_DEF$/;"	f
b:current_syntax	conf/vim/.vim/plugged/ultisnips/syntax/snippets.vim	/^let b:current_syntax = "snippets"$/;"	v
b:current_syntax	conf/vim/.vim/plugged/ultisnips/syntax/snippets_snipmate.vim	/^let b:current_syntax = "snippets"$/;"	v
b:current_syntax	conf/vim/.vim/plugged/vim-go/syntax/go.vim	/^let b:current_syntax = "go"$/;"	v
b:current_syntax	conf/vim/.vim/plugged/vim-go/syntax/godebugoutput.vim	/^let b:current_syntax = "godebugoutput"$/;"	v
b:current_syntax	conf/vim/.vim/plugged/vim-go/syntax/godebugstacktrace.vim	/^let b:current_syntax = "godebugoutput"$/;"	v
b:current_syntax	conf/vim/.vim/plugged/vim-go/syntax/godebugvariables.vim	/^let b:current_syntax = "godebugvariables"$/;"	v
b:current_syntax	conf/vim/.vim/plugged/vim-go/syntax/godefstack.vim	/^let b:current_syntax = "godefstack"$/;"	v
b:current_syntax	conf/vim/.vim/plugged/vim-go/syntax/gohtmltmpl.vim	/^let b:current_syntax = "gohtmltmpl"$/;"	v
b:current_syntax	conf/vim/.vim/plugged/vim-go/syntax/gomod.vim	/^let b:current_syntax = "gomod"$/;"	v
b:current_syntax	conf/vim/.vim/plugged/vim-go/syntax/gosum.vim	/^let b:current_syntax = "gomod"$/;"	v
b:current_syntax	conf/vim/.vim/plugged/vim-go/syntax/gotexttmpl.vim	/^let b:current_syntax = "gotexttmpl"$/;"	v
b:current_syntax	conf/vim/.vim/plugged/vim-go/syntax/gowork.vim	/^let b:current_syntax = "gowork"$/;"	v
b:current_syntax	conf/vim/.vim/plugged/vim-go/syntax/vimgo.vim	/^let b:current_syntax = "vimgo"$/;"	v
b:current_syntax	conf/vim/.vim/plugged/vim-markdown/syntax/markdown.vim	/^let b:current_syntax = 'mkd'$/;"	v
b:did_after_plugin_ultisnips_after	conf/vim/.vim/plugged/ultisnips/after/plugin/UltiSnips_after.vim	/^let b:did_after_plugin_ultisnips_after = 1$/;"	v
b:did_autoload_ultisnips	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^let b:did_autoload_ultisnips = 1$/;"	v
b:did_autoload_ultisnips_map_keys	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^let b:did_autoload_ultisnips_map_keys = 1$/;"	v
b:did_ftplugin	conf/vim/.vim/plugged/ultisnips/ftplugin/snippets.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	conf/vim/.vim/plugged/vim-go/ftplugin/asm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	conf/vim/.vim/plugged/vim-go/ftplugin/go.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	conf/vim/.vim/plugged/vim-go/ftplugin/godoc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	conf/vim/.vim/plugged/vim-go/ftplugin/gomod.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	conf/vim/.vim/plugged/vim-go/indent/go.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	conf/vim/.vim/plugged/vim-markdown/indent/markdown.vim	/^let b:did_indent = 1$/;"	v
b:done_vimsnippets	conf/vim/.vim/plugged/vim-snippets/plugin/vimsnippets.vim	/^let b:done_vimsnippets = 1$/;"	v
b:fenced_block	conf/vim/.vim/plugged/vim-markdown/after/ftplugin/markdown.vim	/^let b:fenced_block = 0$/;"	v
b:front_matter	conf/vim/.vim/plugged/vim-markdown/after/ftplugin/markdown.vim	/^let b:front_matter = 0$/;"	v
b:match_ignorecase	conf/vim/.vim/plugged/ultisnips/ftplugin/snippets.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_words	conf/vim/.vim/plugged/ultisnips/ftplugin/snippets.vim	/^  let b:match_words = s:set_match_words()$/;"	v
b:ultisnips_override_snipmate	conf/vim/.vim/plugged/ultisnips/syntax/snippets_snipmate.vim	/^let b:ultisnips_override_snipmate = 1$/;"	v
b:undo_ftplugin	conf/vim/.vim/plugged/ultisnips/ftplugin/snippets.vim	/^let b:undo_ftplugin = "$/;"	v
b:undo_ftplugin	conf/vim/.vim/plugged/vim-go/ftplugin/asm.vim	/^let b:undo_ftplugin = "setl fo< com< cms<$/;"	v
b:undo_ftplugin	conf/vim/.vim/plugged/vim-go/ftplugin/go.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	conf/vim/.vim/plugged/vim-go/ftplugin/gomod.vim	/^let b:undo_ftplugin = "setl fo< com< cms<$/;"	v
balloon	conf/vim/.vim/plugged/vim-go/autoload/go/tool.vim	/^function! s:balloon(msg)$/;"	f
bang	conf/vim/.vim/autoload/plug.vim	/^function! s:bang(cmd, ...)$/;"	f
banner	conf/zsh/.oh-my-zsh/tools/theme_chooser.sh	/^function banner() {$/;"	f
bar	conf/vim/.vim/autoload/plug.vim	/^function! s:bar()$/;"	f
bar	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/lint/golangci-lint/problems/importabs/ok.go	/^func bar() {}$/;"	f
bar	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/test-data/array-cmdsep1.zsh	/^bar(){}$/;"	f
bar	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/test-data/array-cmdsep1.zsh	/^bar(){}$/;"	f
basename	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def basename(self):  # pylint:disable=no-self-use$/;"	m	class:SnippetUtil
bash	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:bash()$/;"	f
batchfile	conf/vim/.vim/autoload/plug.vim	/^  function! s:batchfile(cmd)$/;"	f
battery_is_charging	conf/zsh/.oh-my-zsh/plugins/battery/battery.plugin.zsh	/^  function battery_is_charging { false }$/;"	f
battery_is_charging	conf/zsh/.oh-my-zsh/plugins/battery/battery.plugin.zsh	/^  function battery_is_charging() {$/;"	f
battery_level_gauge	conf/zsh/.oh-my-zsh/plugins/battery/battery.plugin.zsh	/^function battery_level_gauge() {$/;"	f
battery_pct	conf/zsh/.oh-my-zsh/plugins/battery/battery.plugin.zsh	/^  function battery_pct \\$/;"	f
battery_pct	conf/zsh/.oh-my-zsh/plugins/battery/battery.plugin.zsh	/^  function battery_pct() {$/;"	f
battery_pct_prompt	conf/zsh/.oh-my-zsh/plugins/battery/battery.plugin.zsh	/^  function battery_pct_prompt () {$/;"	f
battery_pct_prompt	conf/zsh/.oh-my-zsh/plugins/battery/battery.plugin.zsh	/^  function battery_pct_prompt() {$/;"	f
battery_pct_remaining	conf/zsh/.oh-my-zsh/plugins/battery/battery.plugin.zsh	/^  function battery_pct_remaining() {$/;"	f
battery_time_remaining	conf/zsh/.oh-my-zsh/plugins/battery/battery.plugin.zsh	/^  function battery_time_remaining() { } # Not available on android$/;"	f
battery_time_remaining	conf/zsh/.oh-my-zsh/plugins/battery/battery.plugin.zsh	/^  function battery_time_remaining() {$/;"	f
baz	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/lint/baz.go	/^func baz() {}$/;"	f
baz	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/lint/golangci-lint/problems/importabs/problems.go	/^func baz() {}$/;"	f
bb	conf/zsh/.oh-my-zsh/plugins/bbedit/bbedit.plugin.zsh	/^function bb() {$/;"	f
beforeHTMLIM	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func beforeHTMLIM(p *parser) bool {$/;"	f
beforeHeadIM	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func beforeHeadIM(p *parser) bool {$/;"	f
behind	conf/zsh/.oh-my-zsh/plugins/git-prompt/gitstatus.py	/^                        behind = int(div[len('behind '):].strip())$/;"	v
better-defaults-move-to-beginning-of-code-first	conf/emacs/.emacs.d/layers/+emacs/better-defaults/config.el	/^(defvar better-defaults-move-to-beginning-of-code-first t$/;"	f
better-defaults-move-to-end-of-code-first	conf/emacs/.emacs.d/layers/+emacs/better-defaults/config.el	/^(defvar better-defaults-move-to-end-of-code-first nil$/;"	f
better-defaults-packages	conf/emacs/.emacs.d/layers/+emacs/better-defaults/packages.el	/^(defconst better-defaults-packages$/;"	f
better-defaults/init-mwim	conf/emacs/.emacs.d/layers/+emacs/better-defaults/packages.el	/^(defun better-defaults\/init-mwim ()$/;"	f
better-defaults/init-unfill	conf/emacs/.emacs.d/layers/+emacs/better-defaults/packages.el	/^(defun better-defaults\/init-unfill ()$/;"	f
bgnotify	conf/zsh/.oh-my-zsh/plugins/bgnotify/bgnotify.plugin.zsh	/^function bgnotify {$/;"	f
bgnotify_appid	conf/zsh/.oh-my-zsh/plugins/bgnotify/bgnotify.plugin.zsh	/^function bgnotify_appid {$/;"	f
bgnotify_begin	conf/zsh/.oh-my-zsh/plugins/bgnotify/bgnotify.plugin.zsh	/^function bgnotify_begin {$/;"	f
bgnotify_end	conf/zsh/.oh-my-zsh/plugins/bgnotify/bgnotify.plugin.zsh	/^function bgnotify_end {$/;"	f
bgnotify_find_sway_appid	conf/zsh/.oh-my-zsh/plugins/bgnotify/bgnotify.plugin.zsh	/^function bgnotify_find_sway_appid {$/;"	f
bgnotify_formatted	conf/zsh/.oh-my-zsh/plugins/bgnotify/bgnotify.plugin.zsh	/^function bgnotify_formatted {$/;"	f
bgnotify_programid	conf/zsh/.oh-my-zsh/plugins/bgnotify/bgnotify.plugin.zsh	/^function bgnotify_programid {$/;"	f
bibtex-enable-ebib-support	conf/emacs/.emacs.d/layers/+lang/bibtex/config.el	/^(defvar bibtex-enable-ebib-support nil$/;"	f
bibtex-packages	conf/emacs/.emacs.d/layers/+lang/bibtex/packages.el	/^(defconst bibtex-packages$/;"	f
bibtex/init-biblio	conf/emacs/.emacs.d/layers/+lang/bibtex/packages.el	/^(defun bibtex\/init-biblio()$/;"	f
bibtex/init-ebib	conf/emacs/.emacs.d/layers/+lang/bibtex/packages.el	/^(defun bibtex\/init-ebib ()$/;"	f
bibtex/init-helm-bibtex	conf/emacs/.emacs.d/layers/+lang/bibtex/packages.el	/^(defun bibtex\/init-helm-bibtex ()$/;"	f
bibtex/init-ivy-bibtex	conf/emacs/.emacs.d/layers/+lang/bibtex/packages.el	/^(defun bibtex\/init-ivy-bibtex ()$/;"	f
bibtex/init-org-ref	conf/emacs/.emacs.d/layers/+lang/bibtex/packages.el	/^(defun bibtex\/init-org-ref ()$/;"	f
bibtex/post-init-auctex	conf/emacs/.emacs.d/layers/+lang/bibtex/packages.el	/^(defun bibtex\/post-init-auctex ()$/;"	f
bibtex/post-init-markdown-mode	conf/emacs/.emacs.d/layers/+lang/bibtex/packages.el	/^(defun bibtex\/post-init-markdown-mode ()$/;"	f
bibtex/post-init-org	conf/emacs/.emacs.d/layers/+lang/bibtex/packages.el	/^(defun bibtex\/post-init-org ()$/;"	f
binary_search_begin	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def binary_search_begin(li: typing.List[Candidates], prefix: str) -> int:$/;"	f
binary_search_end	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def binary_search_end(li: typing.List[Candidates], prefix: str) -> int:$/;"	f
bindeval	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def bindeval(text):$/;"	f
bm/init-bm	conf/emacs/.emacs.d/layers/+tools/bm/packages.el	/^(defun bm\/init-bm ()$/;"	f
branch	conf/zsh/.oh-my-zsh/plugins/git-prompt/gitstatus.py	/^            branch = get_tagname_or_hash()$/;"	v
branch	conf/zsh/.oh-my-zsh/plugins/git-prompt/gitstatus.py	/^            branch = st[2].split(' ')[-1]$/;"	v
branch	conf/zsh/.oh-my-zsh/plugins/git-prompt/gitstatus.py	/^            branch = st[2].strip()$/;"	v
branch_prompt_info	conf/zsh/.oh-my-zsh/plugins/branch/branch.plugin.zsh	/^function branch_prompt_info() {$/;"	f
breakpoint	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^    def breakpoint(cls, host=None, port=None):$/;"	m	class:RemotePDB
brews	conf/zsh/.oh-my-zsh/plugins/brew/brew.plugin.zsh	/^function brews() {$/;"	f
btags_sink	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:btags_sink(lines)$/;"	f
btags_source	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:btags_source(tag_cmds)$/;"	f
btrestart	conf/zsh/.oh-my-zsh/plugins/macos/macos.plugin.zsh	/^function btrestart() {$/;"	f
buf	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^buf = VimBuffer()  # pylint:disable=invalid-name$/;"	v
buf	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let buf = GetBuffer()$/;"	v
buf_execute	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:buf_execute(bufnr, cmds) abort$/;"	f
buf_line_count	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:buf_line_count(bufnr) abort$/;"	f
buffer	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def buffer(self):$/;"	m	class:SnippetUtil
buffer	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let buffer = GetBuffer()$/;"	v
buffer	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let buffer = GetBuffer()$/;"	v
buffer_line_handler	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buffer_line_handler(lines)$/;"	f
buffer_lines	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buffer_lines(query)$/;"	f
buffer_maps	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    buffer_maps = ("", "")$/;"	v	class:_SelectModeMappings
buffer_maps	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    buffer_maps = ("H", "blah")$/;"	v	class:SelectModeMappings_BufferLocalMappings_ECR
buflisted	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buflisted()$/;"	f
bufopen	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:bufopen(lines)$/;"	f
build_api_url	workflows/Ariafred/src/workflow/update.py	/^def build_api_url(slug):$/;"	f
build_book	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^def build_book(s, num):$/;"	f
build_command	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:build_command(cmd)$/;"	f
build_extra_options	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:build_extra_options() abort$/;"	f
bullet_for	conf/vim/.vim/autoload/plug.vim	/^function! s:bullet_for(job, ...)$/;"	f
bundle_install	conf/zsh/.oh-my-zsh/plugins/bundler/bundler.plugin.zsh	/^bundle_install() {$/;"	f
bundleid	workflows/Ariafred/src/workflow/workflow.py	/^    def bundleid(self):$/;"	m	class:Workflow
buttonScope	conf/vim/.vim/plugged/vim-go/test/parse.go	/^	buttonScope$/;"	c
by_clang_format_command	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let by_clang_format_command = ClangFormat(1, line('$'))$/;"	v
by_clang_format_command	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let by_clang_format_command = ClangFormat(1, line('$'), 'test.cpp')$/;"	v
by_clang_format_command	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let by_clang_format_command = ClangFormat(1, line('$'), 'test.js')$/;"	v
by_clang_format_command	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let by_clang_format_command = ClangFormat(11, 13)$/;"	v
by_clang_format_command	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let by_clang_format_command = ClangFormat(1, line('$'))$/;"	v
by_clang_format_command	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let by_clang_format_command = ClangFormat(11, 13)$/;"	v
byte2col	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^def byte2col(line, nbyte):$/;"	f
bytepos2charpos	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def bytepos2charpos(encoding: str, text: str, pos: int) -> int:$/;"	f
bzr_prompt_info	conf/zsh/.oh-my-zsh/lib/bzr.zsh	/^function bzr_prompt_info() {$/;"	f
c	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def c(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
c++-enable-organize-includes-on-save	conf/emacs/.emacs.d/layers/+lang/c-c++/config.el	/^(define-obsolete-variable-alias 'c++-enable-organize-includes-on-save 'c-c++-enable-organize-includes-on-save nil)$/;"	f
c-c++-adopt-subprojects	conf/emacs/.emacs.d/layers/+lang/c-c++/config.el	/^(defvar c-c++-adopt-subprojects nil$/;"	f
c-c++-backend	conf/emacs/.emacs.d/layers/+lang/c-c++/config.el	/^(defvar c-c++-backend (when (configuration-layer\/layer-used-p 'lsp) 'lsp-clangd)$/;"	f
c-c++-dap-adapters	conf/emacs/.emacs.d/layers/+lang/c-c++/config.el	/^(defvar c-c++-dap-adapters '(dap-cpptools)$/;"	f
c-c++-default-mode-for-headers	conf/emacs/.emacs.d/layers/+lang/c-c++/config.el	/^(defvar c-c++-default-mode-for-headers (unless (functionp 'c-or-c++-mode) 'c-mode)$/;"	f
c-c++-enable-auto-newline	conf/emacs/.emacs.d/layers/+lang/c-c++/config.el	/^(defvar c-c++-enable-auto-newline nil$/;"	f
c-c++-enable-clang-format-on-save	conf/emacs/.emacs.d/layers/+lang/c-c++/config.el	/^(defvar c-c++-enable-clang-format-on-save nil$/;"	f
c-c++-enable-google-newline	conf/emacs/.emacs.d/layers/+lang/c-c++/config.el	/^(defvar c-c++-enable-google-newline nil$/;"	f
c-c++-enable-google-style	conf/emacs/.emacs.d/layers/+lang/c-c++/config.el	/^(defvar c-c++-enable-google-style nil$/;"	f
c-c++-enable-organize-includes-on-save	conf/emacs/.emacs.d/layers/+lang/c-c++/config.el	/^(defvar c-c++-enable-organize-includes-on-save nil$/;"	f
c-c++-enable-rtags-completion	conf/emacs/.emacs.d/layers/+lang/c-c++/config.el	/^(defvar c-c++-enable-rtags-completion t$/;"	f
c-c++-lsp-enable-semantic-highlight	conf/emacs/.emacs.d/layers/+lang/c-c++/config.el	/^(defvar c-c++-lsp-enable-semantic-highlight nil$/;"	f
c-c++-lsp-semantic-highlight-method	conf/emacs/.emacs.d/layers/+lang/c-c++/config.el	/^(defvar c-c++-lsp-semantic-highlight-method 'font-lock$/;"	f
c-c++-mode-hooks	conf/emacs/.emacs.d/layers/+lang/c-c++/config.el	/^(defconst c-c++-mode-hooks '(c-mode-hook c++-mode-hook)$/;"	f
c-c++-modes	conf/emacs/.emacs.d/layers/+lang/c-c++/config.el	/^(defconst c-c++-modes '(c-mode c++-mode)$/;"	f
c-c++-packages	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defconst c-c++-packages$/;"	f
c-c++/init-cc-mode	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/init-cc-mode ()$/;"	f
c-c++/init-ccls	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/init-ccls ()$/;"	f
c-c++/init-clang-format	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/init-clang-format ()$/;"	f
c-c++/init-company-c-headers	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/init-company-c-headers ()$/;"	f
c-c++/init-company-rtags	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/init-company-rtags ()$/;"	f
c-c++/init-company-ycmd	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/init-company-ycmd ()$/;"	f
c-c++/init-cpp-auto-include	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/init-cpp-auto-include ()$/;"	f
c-c++/init-disaster	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/init-disaster ()$/;"	f
c-c++/init-flycheck-rtags	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/init-flycheck-rtags ()$/;"	f
c-c++/init-flycheck-ycmd	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/init-flycheck-ycmd ()$/;"	f
c-c++/init-gdb-mi	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/init-gdb-mi ()$/;"	f
c-c++/init-gendoxy	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/init-gendoxy ()$/;"	f
c-c++/init-google-c-style	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/init-google-c-style ()$/;"	f
c-c++/init-helm-rtags	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/init-helm-rtags ()$/;"	f
c-c++/init-ivy-rtags	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/init-ivy-rtags ()$/;"	f
c-c++/init-rtags	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/init-rtags ()$/;"	f
c-c++/init-ycmd	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/init-ycmd ()$/;"	f
c-c++/post-init-company	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/post-init-company ()$/;"	f
c-c++/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/post-init-counsel-gtags nil)$/;"	f
c-c++/post-init-eldoc	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/post-init-eldoc ()$/;"	f
c-c++/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/post-init-flycheck ()$/;"	f
c-c++/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/post-init-ggtags ()$/;"	f
c-c++/post-init-realgud	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/post-init-realgud ()$/;"	f
c-c++/post-init-semantic	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/post-init-semantic ()$/;"	f
c-c++/post-init-srefactor	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/post-init-srefactor ()$/;"	f
c-c++/pre-init-dap-mode	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/pre-init-dap-mode ()$/;"	f
c-c++/pre-init-helm-cscope	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/pre-init-helm-cscope ()$/;"	f
c-c++/pre-init-org	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/pre-init-org ()$/;"	f
c-c++/pre-init-projectile	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/pre-init-projectile ()$/;"	f
c-c++/pre-init-xcscope	conf/emacs/.emacs.d/layers/+lang/c-c++/packages.el	/^(defun c-c++\/pre-init-xcscope ()$/;"	f
c404	conf/zsh/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function c404() {$/;"	f
cabal_sandbox_info	conf/zsh/.oh-my-zsh/plugins/cabal/cabal.plugin.zsh	/^function cabal_sandbox_info() {$/;"	f
cache	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^def cache(db, out=sys.stdout):$/;"	f
cache_data	workflows/Ariafred/src/workflow/workflow.py	/^    def cache_data(self, name, data):$/;"	m	class:Workflow
cache_data	workflows/Ariafred/src/workflow/workflow3.py	/^    def cache_data(self, name, data, session=False):$/;"	m	class:Workflow3
cache_serializer	workflows/Ariafred/src/workflow/workflow.py	/^    def cache_serializer(self):$/;"	m	class:Workflow
cache_serializer	workflows/Ariafred/src/workflow/workflow.py	/^    def cache_serializer(self, serializer_name):$/;"	m	class:Workflow
cached_compile	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^def cached_compile(*args):$/;"	f
cached_data	workflows/Ariafred/src/workflow/workflow.py	/^    def cached_data(self, name, data_func=None, max_age=60):$/;"	m	class:Workflow
cached_data	workflows/Ariafred/src/workflow/workflow3.py	/^    def cached_data(self, name, data_func=None, max_age=60, session=False):$/;"	m	class:Workflow3
cached_data_age	workflows/Ariafred/src/workflow/workflow.py	/^    def cached_data_age(self, name):$/;"	m	class:Workflow
cached_data_fresh	workflows/Ariafred/src/workflow/workflow.py	/^    def cached_data_fresh(self, name, max_age):$/;"	m	class:Workflow
cachedir	workflows/Ariafred/src/workflow/workflow.py	/^    def cachedir(self):$/;"	m	class:Workflow
cachefile	workflows/Ariafred/src/workflow/workflow.py	/^    def cachefile(self, filename):$/;"	m	class:Workflow
callResult	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:callResult(res) abort$/;"	f
call_jsonrpc	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:call_jsonrpc(handle_result, method, ...) abort$/;"	f
callback	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^function! s:callback(chan, msg) dict$/;"	f
callback	workflows/Ariafred/src/workflow/workflow.py	/^        def callback(func, msg):$/;"	f	function:Workflow._register_default_magic
callback2on_stderr	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^function! s:callback2on_stderr(mode, ch, data, event) dict$/;"	f
callback2on_stdout	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^function! s:callback2on_stdout(mode, ch, data, event) dict$/;"	f
callvim	conf/zsh/.oh-my-zsh/plugins/vim-interaction/vim-interaction.plugin.zsh	/^function callvim {$/;"	f
can_expand	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def can_expand(self, autotrigger_only=False):$/;"	m	class:SnippetManager
can_jump	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def can_jump(self, direction):$/;"	m	class:SnippetManager
can_jump_backwards	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def can_jump_backwards(self):$/;"	m	class:SnippetManager
can_jump_forwards	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def can_jump_forwards(self):$/;"	m	class:SnippetManager
cancel	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^function! s:cancel(winid, ...) abort$/;"	f
candidates	conf/vim/.vim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_converter_reorder_attr.py	/^candidates = [$/;"	v
capit	conf/zsh/.oh-my-zsh/plugins/capistrano/capistrano.plugin.zsh	/^function capit() {$/;"	f
catimg	conf/zsh/.oh-my-zsh/plugins/catimg/catimg.plugin.zsh	/^function catimg() {$/;"	f
cbs	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^  let cbs._start = function('s:start', [''], state)$/;"	v
cbs	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^  let cbs.callback = function('s:callback', [], state)$/;"	v
cbs	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^  let cbs.close_cb = function('s:close_cb', [], state)$/;"	v
cbs	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^  let cbs.exit_cb = function('s:exit_cb', [], state)$/;"	v
cd	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/test-data/function.zsh	/^cd() {$/;"	f
cd	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/test-data/function.zsh	/^cd() {$/;"	f
cdf	conf/zsh/.oh-my-zsh/plugins/macos/macos.plugin.zsh	/^function cdf() {$/;"	f
cdx	conf/zsh/.oh-my-zsh/plugins/macos/macos.plugin.zsh	/^function cdx() {$/;"	f
centosversion	sh/shadowsocks-all.sh	/^centosversion() {$/;"	f
centosversion	sh/shadowsocks.sh	/^centosversion(){$/;"	f
cf	conf/zsh/.oh-my-zsh/plugins/coffee/coffee.plugin.zsh	/^cf () {$/;"	f
cfap	conf/zsh/.oh-my-zsh/plugins/cloudfoundry/cloudfoundry.plugin.zsh	/^function cfap() { cf app $1 }$/;"	f
cfc	conf/zsh/.oh-my-zsh/plugins/coffee/coffee.plugin.zsh	/^cfc () {$/;"	f
cfdel	conf/zsh/.oh-my-zsh/plugins/cloudfoundry/cloudfoundry.plugin.zsh	/^function cfdel() { cf delete $1 }$/;"	f
cfengine-packages	conf/emacs/.emacs.d/layers/+tools/cfengine/packages.el	/^(defconst cfengine-packages$/;"	f
cfengine/init-cfengine3-mode	conf/emacs/.emacs.d/layers/+tools/cfengine/packages.el	/^(defun cfengine\/init-cfengine3-mode ()$/;"	f
cfengine/init-mustache-mode	conf/emacs/.emacs.d/layers/+tools/cfengine/packages.el	/^(defun cfengine\/init-mustache-mode ()$/;"	f
cfengine/init-ob-cfengine3	conf/emacs/.emacs.d/layers/+tools/cfengine/packages.el	/^(defun cfengine\/init-ob-cfengine3 ()$/;"	f
cfengine/post-init-company	conf/emacs/.emacs.d/layers/+tools/cfengine/packages.el	/^(defun cfengine\/post-init-company ()$/;"	f
cfengine/post-init-eldoc	conf/emacs/.emacs.d/layers/+tools/cfengine/packages.el	/^(defun cfengine\/post-init-eldoc ()$/;"	f
cfengine/post-init-flycheck	conf/emacs/.emacs.d/layers/+tools/cfengine/packages.el	/^(defun cfengine\/post-init-flycheck ()$/;"	f
cfengine/pre-init-org	conf/emacs/.emacs.d/layers/+tools/cfengine/packages.el	/^(defun cfengine\/pre-init-org ()$/;"	f
cfgl-layer	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defclass cfgl-layer ()$/;"	f
cfgl-package	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defclass cfgl-package ()$/;"	f
cfh	conf/zsh/.oh-my-zsh/plugins/cloudfoundry/cloudfoundry.plugin.zsh	/^function cfh.() { export CF_HOME=$PWD\/.cf }$/;"	f
cfh	conf/zsh/.oh-my-zsh/plugins/cloudfoundry/cloudfoundry.plugin.zsh	/^function cfh~() { export CF_HOME=~\/.cf }$/;"	f
cfhu	conf/zsh/.oh-my-zsh/plugins/cloudfoundry/cloudfoundry.plugin.zsh	/^function cfhu() { unset CF_HOME }$/;"	f
cflr	conf/zsh/.oh-my-zsh/plugins/cloudfoundry/cloudfoundry.plugin.zsh	/^function cflr() { cf logs $1 --recent }$/;"	f
cfpm	conf/zsh/.oh-my-zsh/plugins/cloudfoundry/cloudfoundry.plugin.zsh	/^function cfpm() { cf push -f $1 }$/;"	f
cfsrt	conf/zsh/.oh-my-zsh/plugins/cloudfoundry/cloudfoundry.plugin.zsh	/^function cfsrt() { cf start $1 }$/;"	f
cfsrtall	conf/zsh/.oh-my-zsh/plugins/cloudfoundry/cloudfoundry.plugin.zsh	/^function cfsrtall() {cf apps | awk '\/stopped\/ { system("cf start " $1)}'}$/;"	f
cfstg	conf/zsh/.oh-my-zsh/plugins/cloudfoundry/cloudfoundry.plugin.zsh	/^function cfstg() { cf restage $1 }$/;"	f
cfstp	conf/zsh/.oh-my-zsh/plugins/cloudfoundry/cloudfoundry.plugin.zsh	/^function cfstp() { cf stop $1 }$/;"	f
cfstpall	conf/zsh/.oh-my-zsh/plugins/cloudfoundry/cloudfoundry.plugin.zsh	/^function cfstpall() {cf apps | awk '\/started\/ { system("cf stop " $1)}'}$/;"	f
chCwd	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chCwd(node) abort$/;"	f
chRoot	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chRoot(node) abort$/;"	f
change_file_encoing	sh/set_encoding.sh	/^function change_file_encoing(){$/;"	f
change_loading_buf	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! s:change_loading_buf(bufnr, idx) abort$/;"	f
changes_sink	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:changes_sink(lines)$/;"	f
character	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/lsp.vim	/^function! s:character(line, col) abort$/;"	f
charpos2bytepos	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def charpos2bytepos(encoding: str, text: str, pos: int) -> int:$/;"	f
charwidth	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def charwidth(c: str) -> int:$/;"	f
cheatsheet	conf/zsh/.oh-my-zsh/plugins/aliases/cheatsheet.py	/^def cheatsheet(lines):$/;"	f
check-in-list	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/local/vim-powerline/vim-powerline-theme.el	/^(defun check-in-list (list elems)$/;"	f
checkAutocmd	conf/vim/.vim/plugged/coc.nvim/autoload/health/coc.vim	/^function! s:checkAutocmd()$/;"	f
checkCommand	conf/vim/.vim/plugged/coc.nvim/autoload/health/coc.vim	/^function! s:checkCommand()$/;"	f
checkEnvironment	conf/vim/.vim/plugged/coc.nvim/autoload/health/coc.vim	/^function! s:checkEnvironment() abort$/;"	f
checkInitialize	conf/vim/.vim/plugged/coc.nvim/autoload/health/coc.vim	/^function! s:checkInitialize() abort$/;"	f
checkVersion	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:checkVersion() abort$/;"	f
checkVersion	conf/vim/.vim/plugged/vim-go/plugin/go.vim	/^function! s:checkVersion() abort$/;"	f
checkVim	conf/vim/.vim/plugged/coc.nvim/autoload/health/coc.vim	/^function! s:checkVim(test, name, patchlevel) abort$/;"	f
check_back_space	conf/vim/.vim/custom/coc.vim	/^function! s:check_back_space() abort$/;"	f
check_binding_defined	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^check_binding_defined() {$/;"	f
check_bufnr	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:check_bufnr(bufnr) abort$/;"	f
check_completion_info	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! s:check_completion_info(candidates) abort$/;"	f
check_ctermbg	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! s:check_ctermbg(id, cterm) abort$/;"	f
check_custom_option	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! s:check_custom_option(old_var, new_var) abort$/;"	f
check_custom_var	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! s:check_custom_var(source_name, old_var, new_var) abort$/;"	f
check_diagnostics	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! s:check_diagnostics(actual, expected, when)$/;"	f
check_dir_exists_helper	conf/tmux/.tmux/plugins/tpm/tests/helpers/tpm.sh	/^check_dir_exists_helper() {$/;"	f
check_errors	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:check_errors(resp_json) abort$/;"	f
check_input_method	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:check_input_method() abort$/;"	f
check_newer_tag	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^    def check_newer_tag(repo, current_tag) -> UpdateStatusFalse | UpdateStatusTrue:$/;"	m	class:GitHub
check_port	sh/kcptun.sh	/^check_port() {$/;"	f
check_required_msgpack	conf/vim/.vim/plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:check_required_msgpack() abort$/;"	f
check_required_python	conf/vim/.vim/plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:check_required_python() abort$/;"	f
check_requirements	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:check_requirements()$/;"	f
check_ruby	conf/vim/.vim/autoload/plug.vim	/^function! s:check_ruby()$/;"	f
check_sys	sh/shadowsocks-all.sh	/^check_sys() {$/;"	f
check_sys	sh/shadowsocks.sh	/^check_sys(){$/;"	f
check_t_list	conf/vim/.vim/plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:check_t_list() abort$/;"	f
check_timers	conf/vim/.vim/plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:check_timers() abort$/;"	f
check_tpm_path	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^check_tpm_path() {$/;"	f
check_update	sh/kcptun.sh	/^check_update() {$/;"	f
check_update	workflows/Ariafred/src/workflow/update.py	/^def check_update(github_slug, current_version, prereleases=False):$/;"	f
check_update	workflows/Ariafred/src/workflow/workflow.py	/^    def check_update(self, force=False):$/;"	m	class:Workflow
check_updates	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^    def check_updates(repo, branch, version) -> UpdateStatusFalse | UpdateStatusTrue:$/;"	m	class:GitHub
check_vim_enter	conf/vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! s:check_vim_enter() abort$/;"	f
check_winid	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:check_winid(winid) abort$/;"	f
checkout	conf/vim/.vim/autoload/plug.vim	/^function! s:checkout(spec)$/;"	f
checkout_command	conf/vim/.vim/autoload/plug.vim	/^function! s:checkout_command(spec)$/;"	f
checkout_or_create_branch	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^    def checkout_or_create_branch(branch_name: str):$/;"	m	class:Git
children	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def children(self):$/;"	m	class:EditableTextObject
chinese-default-input-method	conf/emacs/.emacs.d/layers/+intl/chinese/config.el	/^(defvar chinese-default-input-method 'pinyin$/;"	f
chinese-enable-avy-pinyin	conf/emacs/.emacs.d/layers/+intl/chinese/config.el	/^(defvar chinese-enable-avy-pinyin t$/;"	f
chinese-enable-fcitx	conf/emacs/.emacs.d/layers/+intl/chinese/config.el	/^(defvar chinese-enable-fcitx nil$/;"	f
chinese-enable-youdao-dict	conf/emacs/.emacs.d/layers/+intl/chinese/config.el	/^(defvar chinese-enable-youdao-dict nil$/;"	f
chinese-fcitx-use-dbus	conf/emacs/.emacs.d/layers/+intl/chinese/config.el	/^(defvar chinese-fcitx-use-dbus nil$/;"	f
chinese-use-fcitx5	conf/emacs/.emacs.d/layers/+intl/chinese/config.el	/^(defvar chinese-use-fcitx5 nil$/;"	f
chinese/init-ace-pinyin	conf/emacs/.emacs.d/layers/+intl/chinese/packages.el	/^(defun chinese\/init-ace-pinyin ()$/;"	f
chinese/init-chinese-conv	conf/emacs/.emacs.d/layers/+intl/chinese/packages.el	/^(defun chinese\/init-chinese-conv ()$/;"	f
chinese/init-fcitx	conf/emacs/.emacs.d/layers/+intl/chinese/packages.el	/^(defun chinese\/init-fcitx ()$/;"	f
chinese/init-find-by-pinyin-dired	conf/emacs/.emacs.d/layers/+intl/chinese/packages.el	/^(defun chinese\/init-find-by-pinyin-dired ()$/;"	f
chinese/init-pangu-spacing	conf/emacs/.emacs.d/layers/+intl/chinese/packages.el	/^(defun chinese\/init-pangu-spacing ()$/;"	f
chinese/init-pyim	conf/emacs/.emacs.d/layers/+intl/chinese/packages.el	/^(defun chinese\/init-pyim ()$/;"	f
chinese/init-pyim-basedict	conf/emacs/.emacs.d/layers/+intl/chinese/packages.el	/^(defun chinese\/init-pyim-basedict ()$/;"	f
chinese/init-pyim-wbdict	conf/emacs/.emacs.d/layers/+intl/chinese/packages.el	/^(defun chinese\/init-pyim-wbdict ()$/;"	f
chinese/init-youdao-dictionary	conf/emacs/.emacs.d/layers/+intl/chinese/packages.el	/^(defun chinese\/init-youdao-dictionary ()$/;"	f
chinese/post-init-org	conf/emacs/.emacs.d/layers/+intl/chinese/packages.el	/^(defun chinese\/post-init-org ()$/;"	f
choices	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^        choices=["Emacs", "Terminal"],$/;"	v
choices	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^        choices=['0', '1'],$/;"	v
chomp	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:chomp(str)$/;"	f
chpwd_dirhistory	conf/zsh/.oh-my-zsh/plugins/dirhistory/dirhistory.plugin.zsh	/^function chpwd_dirhistory() {$/;"	f
chpwd_dirpersist	conf/zsh/.oh-my-zsh/plugins/dirpersist/dirpersist.plugin.zsh	/^chpwd_dirpersist() {$/;"	f
chpwd_emacs	conf/zsh/.oh-my-zsh/plugins/emacs/emacs.plugin.zsh	/^  chpwd_emacs() { print -P "\\033AnSiTc %d"; }$/;"	f
chpwd_last_working_dir	conf/zsh/.oh-my-zsh/plugins/last-working-dir/last-working-dir.plugin.zsh	/^chpwd_last_working_dir() {$/;"	f
chpwd_scd	conf/zsh/.oh-my-zsh/plugins/scd/scd.plugin.zsh	/^    chpwd_scd() { scd --add $PWD }$/;"	f
chpwd_update_git_vars	conf/zsh/.oh-my-zsh/plugins/git-prompt/git-prompt.plugin.zsh	/^function chpwd_update_git_vars() {$/;"	f
chrome-exec-path	conf/emacs/.emacs.d/layers/+tools/chrome/config.el	/^(defvar chrome-exec-path nil$/;"	f
chrome/init-edit-server	conf/emacs/.emacs.d/layers/+tools/chrome/packages.el	/^(defun chrome\/init-edit-server ()$/;"	f
chrome/init-flymd	conf/emacs/.emacs.d/layers/+tools/chrome/packages.el	/^(defun chrome\/init-flymd ()$/;"	f
chrome/init-gmail-message-mode	conf/emacs/.emacs.d/layers/+tools/chrome/packages.el	/^(defun chrome\/init-gmail-message-mode ()$/;"	f
chrome/pre-init-markdown-mode	conf/emacs/.emacs.d/layers/+tools/chrome/packages.el	/^(defun chrome\/pre-init-markdown-mode ()$/;"	f
chruby_prompt_info	conf/zsh/.oh-my-zsh/lib/prompt_info_functions.zsh	/^function chruby_prompt_info \\$/;"	f
chruby_prompt_info	conf/zsh/.oh-my-zsh/plugins/chruby/chruby.plugin.zsh	/^function chruby_prompt_info() {$/;"	f
chsh	conf/vim/.vim/autoload/plug.vim	/^function! s:chsh(swap)$/;"	f
clang_format#disable_auto_format	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#disable_auto_format() abort$/;"	f
clang_format#do_auto_format	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#do_auto_format()$/;"	f
clang_format#do_auto_format_git_diff	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#do_auto_format_git_diff()$/;"	f
clang_format#enable_auto_format	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#enable_auto_format() abort$/;"	f
clang_format#enable_format_on_insert	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#enable_format_on_insert() abort$/;"	f
clang_format#format	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#format(line1, line2) abort$/;"	f
clang_format#format_ranges	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#format_ranges(ranges) abort$/;"	f
clang_format#get_git_diff	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#get_git_diff(cur_file)$/;"	f
clang_format#get_version	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#get_version() abort$/;"	f
clang_format#is_invalid	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#is_invalid() abort$/;"	f
clang_format#replace	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#replace(line1, line2, ...) abort$/;"	f
clang_format#replace_ranges	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#replace_ranges(ranges, ...) abort$/;"	f
clang_format#toggle_auto_format	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#toggle_auto_format() abort$/;"	f
clean	conf/vim/.vim/autoload/plug.vim	/^function! s:clean(force)$/;"	f
clean	conf/zsh/.oh-my-zsh/plugins/git-prompt/gitstatus.py	/^    clean = 0$/;"	v
clean	conf/zsh/.oh-my-zsh/plugins/git-prompt/gitstatus.py	/^    clean = 1$/;"	v
clean_plugins	conf/tmux/.tmux/plugins/tpm/scripts/clean_plugins.sh	/^clean_plugins() {$/;"	f
clean_repo	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^    def clean_repo():$/;"	m	class:Git
cleanup_symlinks	install.sh	/^cleanup_symlinks() {$/;"	f
clear	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:clear(bufnr)$/;"	f
clear	conf/vim/.vim/plugged/vim-go/autoload/go/statusline.vim	/^function! s:clear()$/;"	f
clearActiveFormattingElements	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func (p *parser) clearActiveFormattingElements() {$/;"	f
clearOptions	conf/vim/.vim/plugged/vim-go/scripts/runtest.vim	/^function! s:clearOptions() abort$/;"	f
clearStackToContext	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func (p *parser) clearStackToContext(s scope) {$/;"	f
clearState	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:clearState() abort$/;"	f
clear_cache	workflows/Ariafred/src/workflow/workflow.py	/^    def clear_cache(self, filter_func=lambda f: True):$/;"	m	class:Workflow
clear_data	workflows/Ariafred/src/workflow/workflow.py	/^    def clear_data(self, filter_func=lambda f: True):$/;"	m	class:Workflow
clear_group_from_matches	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! s:clear_group_from_matches(group) abort$/;"	f
clear_screen	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/spec/terminal_session.rb	/^  def clear_screen$/;"	f	class:TerminalSession
clear_screen	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/spec/terminal_session.rb	/^  def clear_screen$/;"	f	class:TerminalSession
clear_session_cache	workflows/Ariafred/src/workflow/workflow3.py	/^    def clear_session_cache(self, current=False):$/;"	m	class:Workflow3
clear_settings	workflows/Ariafred/src/workflow/workflow.py	/^    def clear_settings(self):$/;"	m	class:Workflow
clear_snippets	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def clear_snippets(self, priority, triggers):$/;"	m	class:SnippetDictionary
clear_stopped	workflows/Ariafred/src/aria_actions.py	/^def clear_stopped():$/;"	f
clear_temp	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def clear_temp(self):$/;"	m	class:TempFileManager
clear_virtual_text	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! s:clear_virtual_text() abort$/;"	f
clipcopy	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^    function clipcopy() { _retry_clipboard_detection_or_fail clipcopy "$@"; }$/;"	f
clipcopy	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^    function clipcopy() { cat "${1:-\/dev\/stdin}" > \/dev\/clipboard; }$/;"	f
clipcopy	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^    function clipcopy() { cat "${1:-\/dev\/stdin}" | clip.exe; }$/;"	f
clipcopy	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^    function clipcopy() { cat "${1:-\/dev\/stdin}" | doitclient wclip; }$/;"	f
clipcopy	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^    function clipcopy() { cat "${1:-\/dev\/stdin}" | lemonade copy; }$/;"	f
clipcopy	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^    function clipcopy() { cat "${1:-\/dev\/stdin}" | pbcopy; }$/;"	f
clipcopy	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^    function clipcopy() { cat "${1:-\/dev\/stdin}" | termux-clipboard-set; }$/;"	f
clipcopy	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^    function clipcopy() { cat "${1:-\/dev\/stdin}" | win32yank -i; }$/;"	f
clipcopy	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^    function clipcopy() { cat "${1:-\/dev\/stdin}" | wl-copy &>\/dev\/null &|; }$/;"	f
clipcopy	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^    function clipcopy() { cat "${1:-\/dev\/stdin}" | xclip -selection clipboard -in &>\/dev\/null &|; }$/;"	f
clipcopy	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^    function clipcopy() { cat "${1:-\/dev\/stdin}" | xsel --clipboard --input; }$/;"	f
clipcopy	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^    function clipcopy() { tmux load-buffer "${1:--}"; }$/;"	f
clipcopy	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^function clipcopy clippaste {$/;"	f
clippaste	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^    function clippaste() { _retry_clipboard_detection_or_fail clippaste "$@"; }$/;"	f
clippaste	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^    function clippaste() { cat \/dev\/clipboard; }$/;"	f
clippaste	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^    function clippaste() { doitclient wclip -r; }$/;"	f
clippaste	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^    function clippaste() { lemonade paste; }$/;"	f
clippaste	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^    function clippaste() { pbpaste; }$/;"	f
clippaste	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^    function clippaste() { powershell.exe -noprofile -command Get-Clipboard; }$/;"	f
clippaste	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^    function clippaste() { termux-clipboard-get; }$/;"	f
clippaste	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^    function clippaste() { tmux save-buffer -; }$/;"	f
clippaste	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^    function clippaste() { win32yank -o; }$/;"	f
clippaste	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^    function clippaste() { wl-paste --no-newline; }$/;"	f
clippaste	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^    function clippaste() { xclip -out -selection clipboard; }$/;"	f
clippaste	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^    function clippaste() { xsel --clipboard --output; }$/;"	f
clojure-backend	conf/emacs/.emacs.d/layers/+lang/clojure/config.el	/^(defvar clojure-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'cider)$/;"	f
clojure-enable-clj-refactor	conf/emacs/.emacs.d/layers/+lang/clojure/config.el	/^(defvar clojure-enable-clj-refactor nil$/;"	f
clojure-enable-fancify-symbols	conf/emacs/.emacs.d/layers/+lang/clojure/config.el	/^(defvar clojure-enable-fancify-symbols nil$/;"	f
clojure-enable-kaocha-runner	conf/emacs/.emacs.d/layers/+lang/clojure/config.el	/^(defvar clojure-enable-kaocha-runner nil$/;"	f
clojure-enable-linters	conf/emacs/.emacs.d/layers/+lang/clojure/config.el	/^(defvar clojure-enable-linters nil$/;"	f
clojure-enable-sayid	conf/emacs/.emacs.d/layers/+lang/clojure/config.el	/^(defvar clojure-enable-sayid nil$/;"	f
clojure-packages	conf/emacs/.emacs.d/layers/+lang/clojure/packages.el	/^(defconst clojure-packages$/;"	f
clojure/fancify-symbols	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun clojure\/fancify-symbols (mode)$/;"	f
clojure/init-cider	conf/emacs/.emacs.d/layers/+lang/clojure/packages.el	/^(defun clojure\/init-cider ()$/;"	f
clojure/init-cider-eval-sexp-fu	conf/emacs/.emacs.d/layers/+lang/clojure/packages.el	/^(defun clojure\/init-cider-eval-sexp-fu ()$/;"	f
clojure/init-clj-refactor	conf/emacs/.emacs.d/layers/+lang/clojure/packages.el	/^(defun clojure\/init-clj-refactor ()$/;"	f
clojure/init-clojure-mode	conf/emacs/.emacs.d/layers/+lang/clojure/packages.el	/^(defun clojure\/init-clojure-mode ()$/;"	f
clojure/init-clojure-snippets	conf/emacs/.emacs.d/layers/+lang/clojure/packages.el	/^(defun clojure\/init-clojure-snippets ()$/;"	f
clojure/init-flycheck-clj-kondo	conf/emacs/.emacs.d/layers/+lang/clojure/packages.el	/^(defun clojure\/init-flycheck-clj-kondo ()$/;"	f
clojure/init-flycheck-clojure	conf/emacs/.emacs.d/layers/+lang/clojure/packages.el	/^(defun clojure\/init-flycheck-clojure ()$/;"	f
clojure/init-flycheck-joker	conf/emacs/.emacs.d/layers/+lang/clojure/packages.el	/^(defun clojure\/init-flycheck-joker ()$/;"	f
clojure/init-helm-cider	conf/emacs/.emacs.d/layers/+lang/clojure/packages.el	/^(defun clojure\/init-helm-cider ()$/;"	f
clojure/init-kaocha-runner	conf/emacs/.emacs.d/layers/+lang/clojure/packages.el	/^(defun clojure\/init-kaocha-runner ()$/;"	f
clojure/init-sayid	conf/emacs/.emacs.d/layers/+lang/clojure/packages.el	/^(defun clojure\/init-sayid ()$/;"	f
clojure/post-init-company	conf/emacs/.emacs.d/layers/+lang/clojure/packages.el	/^(defun clojure\/post-init-company ()$/;"	f
clojure/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/clojure/packages.el	/^(defun clojure\/post-init-counsel-gtags nil)$/;"	f
clojure/post-init-eldoc	conf/emacs/.emacs.d/layers/+lang/clojure/packages.el	/^(defun clojure\/post-init-eldoc ()$/;"	f
clojure/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/clojure/packages.el	/^(defun clojure\/post-init-flycheck ()$/;"	f
clojure/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/clojure/packages.el	/^(defun clojure\/post-init-ggtags ()$/;"	f
clojure/post-init-smartparens	conf/emacs/.emacs.d/layers/+lang/clojure/packages.el	/^(defun clojure\/post-init-smartparens ()$/;"	f
clojure/post-init-subword	conf/emacs/.emacs.d/layers/+lang/clojure/packages.el	/^(defun clojure\/post-init-subword ()$/;"	f
clojure/pre-init-evil-cleverparens	conf/emacs/.emacs.d/layers/+lang/clojure/packages.el	/^(defun clojure\/pre-init-evil-cleverparens ()$/;"	f
clojure/pre-init-org	conf/emacs/.emacs.d/layers/+lang/clojure/packages.el	/^(defun clojure\/pre-init-org ()$/;"	f
clojure/pre-init-popwin	conf/emacs/.emacs.d/layers/+lang/clojure/packages.el	/^(defun clojure\/pre-init-popwin ()$/;"	f
clone	conf/tmux/.tmux/plugins/tpm/scripts/install_plugins.sh	/^clone() {$/;"	f
clone	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^    def clone(remote_url: str, branch: str, repo_dir: str, reclone=False):$/;"	m	class:Git
clone-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun clone-frame (&optional frame no-clone)$/;"	f
clone-frame-parameters	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defcustom clone-frame-parameters (cons 30 30)$/;"	f
clone-indirect-buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(define-advice clone-indirect-buffer (:around (f &rest args) spacemacs-deactivate-mark)$/;"	f
clone_plugin	conf/tmux/.tmux/plugins/tpm/scripts/install_plugins.sh	/^clone_plugin() {$/;"	f
clone_plugin	conf/vim/.vim/plugged/ultisnips/test_all.py	/^def clone_plugin(plugin):$/;"	f
close-window-with-terminal	conf/emacs/.emacs.d/layers/+tools/shell/config.el	/^(defvar close-window-with-terminal nil$/;"	f
closeChildren	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeChildren(node) abort$/;"	f
closeCurrentDir	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeCurrentDir(node) abort$/;"	f
closeTreeWindow	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeTreeWindow() abort$/;"	f
close_auto_hide_wins	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! s:close_auto_hide_wins(...) abort$/;"	f
close_cb	conf/vim/.vim/plugged/vim-go/autoload/go/def.vim	/^  function! s:close_cb(next, ch) dict$/;"	f
close_cb	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^function! s:close_cb(ch) dict$/;"	f
close_pane	conf/vim/.vim/autoload/plug.vim	/^function! s:close_pane()$/;"	f
close_popup_on_escape	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:close_popup_on_escape(winid, key)$/;"	f
close_pum	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! s:close_pum() abort$/;"	f
close_win	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:close_win(winid, noautocmd) abort$/;"	f
closeterm	conf/vim/.vim/plugged/vim-go/autoload/go/term.vim	/^function! s:closeterm()$/;"	f
clrz	conf/zsh/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function clrz() {$/;"	f
cmake-backend	conf/emacs/.emacs.d/layers/+tools/cmake/config.el	/^(defvar cmake-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'company-cmake)$/;"	f
cmake-enable-cmake-ide-support	conf/emacs/.emacs.d/layers/+tools/cmake/config.el	/^(defvar cmake-enable-cmake-ide-support nil$/;"	f
cmake-modes	conf/emacs/.emacs.d/layers/+tools/cmake/config.el	/^(defconst cmake-modes '(c-mode c++-mode cmake-mode)$/;"	f
cmake-packages	conf/emacs/.emacs.d/layers/+tools/cmake/packages.el	/^(defconst cmake-packages$/;"	f
cmake/init-cmake-ide	conf/emacs/.emacs.d/layers/+tools/cmake/packages.el	/^(defun cmake\/init-cmake-ide ()$/;"	f
cmake/init-cmake-mode	conf/emacs/.emacs.d/layers/+tools/cmake/packages.el	/^(defun cmake\/init-cmake-mode ()$/;"	f
cmake/init-helm-ctest	conf/emacs/.emacs.d/layers/+tools/cmake/packages.el	/^(defun cmake\/init-helm-ctest ()$/;"	f
cmake/post-init-company	conf/emacs/.emacs.d/layers/+tools/cmake/packages.el	/^(defun cmake\/post-init-company ()$/;"	f
cmd	conf/vim/.vim/plugged/coc.nvim/autoload/coc/terminal.vim	/^    let cmd = s:is_win ? join(a:cmd, ' ') : a:cmd$/;"	v
cmd	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^      let cmd = 'cmd.exe \/C "'.cmd.'"'$/;"	v
cmd_history_sink	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:cmd_history_sink(lines)$/;"	f
cmd_job	conf/vim/.vim/plugged/vim-go/autoload/go/cmd.vim	/^function! s:cmd_job(args) abort$/;"	f
cmdline	conf/zsh/.oh-my-zsh/plugins/shell-proxy/proxy.py	/^def cmdline(*items):$/;"	f
cnfonts-packages	conf/emacs/.spacemacs.d/layers/cnfonts/packages.el	/^(defconst cnfonts-packages$/;"	f
cnfonts/init-cnfonts	conf/emacs/.spacemacs.d/layers/cnfonts/packages.el	/^(defun cnfonts\/init-cnfonts ()$/;"	f
coc#_cancel	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_cancel(...)$/;"	f
coc#_do_complete	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_do_complete(name, opt, cb) abort$/;"	f
coc#_insert_key	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_insert_key(method, key, ...) abort$/;"	f
coc#_remote_fns	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_remote_fns(name)$/;"	f
coc#_select_confirm	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_select_confirm() abort$/;"	f
coc#_suggest_variables	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_suggest_variables() abort$/;"	f
coc#_unwatch	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_unwatch(key)$/;"	f
coc#_watch	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#_watch(key)$/;"	f
coc#add_command	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#add_command(id, cmd, ...)$/;"	f
coc#add_extension	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#add_extension(...)$/;"	f
coc#api#call	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! coc#api#call(method, args) abort$/;"	f
coc#api#create_type	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! coc#api#create_type(srcId, hlGroup, opts) abort$/;"	f
coc#api#exec	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! coc#api#exec(method, args) abort$/;"	f
coc#api#func_names	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! coc#api#func_names() abort$/;"	f
coc#api#get_id_types	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! coc#api#get_id_types() abort$/;"	f
coc#api#get_tabid	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! coc#api#get_tabid(nr) abort$/;"	f
coc#api#get_types	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! coc#api#get_types(srcId) abort$/;"	f
coc#api#notify	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! coc#api#notify(method, args) abort$/;"	f
coc#api#tabpage_ids	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! coc#api#tabpage_ids() abort$/;"	f
coc#client#check_version	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#check_version() abort$/;"	f
coc#client#create	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#create(name, command)$/;"	f
coc#client#get_channel	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#get_channel(client)$/;"	f
coc#client#get_client	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#get_client(name) abort$/;"	f
coc#client#is_running	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#is_running(name) abort$/;"	f
coc#client#kill	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#kill(name) abort$/;"	f
coc#client#notify	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#notify(name, method, args)$/;"	f
coc#client#on_response	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#on_response(name, id, resp, isErr)$/;"	f
coc#client#open_log	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#open_log()$/;"	f
coc#client#request	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#request(name, method, args)$/;"	f
coc#client#request_async	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#request_async(name, method, args, cb)$/;"	f
coc#client#restart	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#restart(name) abort$/;"	f
coc#client#restart_all	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#restart_all()$/;"	f
coc#client#stop	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! coc#client#stop(name) abort$/;"	f
coc#color#contrast	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^function! coc#color#contrast(rgb1, rgb2) abort$/;"	f
coc#color#darken	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^function! coc#color#darken(color, ...)$/;"	f
coc#color#hexToRgb	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^function! coc#color#hexToRgb(color)$/;"	f
coc#color#hex_contrast	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^function! coc#color#hex_contrast(hex1, hex2) abort$/;"	f
coc#color#lighten	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^function! coc#color#lighten(color, ...)$/;"	f
coc#color#luminance	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^function! coc#color#luminance(rgb) abort$/;"	f
coc#color#nameToHex	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^function! coc#color#nameToHex(name, term) abort$/;"	f
coc#color#pick_color	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^function! coc#color#pick_color(default_color)$/;"	f
coc#color#rgb2term	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^function! coc#color#rgb2term(rgb)$/;"	f
coc#color#rgbToHex	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^function! coc#color#rgbToHex(...)$/;"	f
coc#color#term2rgb	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^function! coc#color#term2rgb(term) abort$/;"	f
coc#compat#buf_add_keymap	conf/vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#buf_add_keymap(bufnr, mode, lhs, rhs, opts) abort$/;"	f
coc#compat#buf_del_keymap	conf/vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#buf_del_keymap(bufnr, mode, lhs) abort$/;"	f
coc#compat#buf_del_var	conf/vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#buf_del_var(bufnr, name) abort$/;"	f
coc#compat#buf_line_count	conf/vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#buf_line_count(bufnr) abort$/;"	f
coc#compat#buf_set_lines	conf/vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#buf_set_lines(bufnr, start, end, replacement) abort$/;"	f
coc#compat#buf_win_id	conf/vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#buf_win_id(bufnr) abort$/;"	f
coc#compat#clear_matches	conf/vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#clear_matches(winid) abort$/;"	f
coc#compat#del_var	conf/vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#del_var(name) abort$/;"	f
coc#compat#execute	conf/vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#execute(winid, command, ...) abort$/;"	f
coc#compat#matchaddgroups	conf/vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#matchaddgroups(winid, groups) abort$/;"	f
coc#compat#matchaddpos	conf/vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#matchaddpos(group, pos, priority, winid) abort$/;"	f
coc#compat#prepend_lines	conf/vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#prepend_lines(bufnr, replacement) abort$/;"	f
coc#compat#trim	conf/vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#trim(str)$/;"	f
coc#compat#win_is_valid	conf/vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^function! coc#compat#win_is_valid(winid) abort$/;"	f
coc#config	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#config(section, value)$/;"	f
coc#cursor#char_offset	conf/vim/.vim/plugged/coc.nvim/autoload/coc/cursor.vim	/^function! coc#cursor#char_offset() abort$/;"	f
coc#cursor#get_selection	conf/vim/.vim/plugged/coc.nvim/autoload/coc/cursor.vim	/^function! coc#cursor#get_selection(char) abort$/;"	f
coc#cursor#move_by_col	conf/vim/.vim/plugged/coc.nvim/autoload/coc/cursor.vim	/^function! coc#cursor#move_by_col(delta)$/;"	f
coc#cursor#move_to	conf/vim/.vim/plugged/coc.nvim/autoload/coc/cursor.vim	/^function! coc#cursor#move_to(line, character) abort$/;"	f
coc#cursor#position	conf/vim/.vim/plugged/coc.nvim/autoload/coc/cursor.vim	/^function! coc#cursor#position()$/;"	f
coc#cursor#screen_pos	conf/vim/.vim/plugged/coc.nvim/autoload/coc/cursor.vim	/^function! coc#cursor#screen_pos() abort$/;"	f
coc#dialog#_create_prompt_nvim	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! coc#dialog#_create_prompt_nvim(title, default, opts) abort$/;"	f
coc#dialog#_create_prompt_vim	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! coc#dialog#_create_prompt_vim(title, default, opts) abort$/;"	f
coc#dialog#change_border_hl	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! coc#dialog#change_border_hl(winid, hlgroup) abort$/;"	f
coc#dialog#change_input_value	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! coc#dialog#change_input_value(winid, bufnr, value) abort$/;"	f
coc#dialog#change_loading	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! coc#dialog#change_loading(winid, loading) abort$/;"	f
coc#dialog#change_title	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! coc#dialog#change_title(winid, title) abort$/;"	f
coc#dialog#check_scroll_vim	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! coc#dialog#check_scroll_vim(winid) abort$/;"	f
coc#dialog#create_cursor_float	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! coc#dialog#create_cursor_float(winid, bufnr, lines, config) abort$/;"	f
coc#dialog#create_dialog	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! coc#dialog#create_dialog(lines, config) abort$/;"	f
coc#dialog#create_list	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! coc#dialog#create_list(target, dimension, opts) abort$/;"	f
coc#dialog#create_menu	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! coc#dialog#create_menu(lines, config) abort$/;"	f
coc#dialog#create_prompt_win	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! coc#dialog#create_prompt_win(title, default, opts) abort$/;"	f
coc#dialog#create_pum_float	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! coc#dialog#create_pum_float(lines, config) abort$/;"	f
coc#dialog#get_config_cursor	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! coc#dialog#get_config_cursor(lines, config) abort$/;"	f
coc#dialog#get_config_editor	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! coc#dialog#get_config_editor(lines, config) abort$/;"	f
coc#dialog#get_prompt_win	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! coc#dialog#get_prompt_win() abort$/;"	f
coc#dialog#place_sign	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! coc#dialog#place_sign(bufnr, line) abort$/;"	f
coc#dialog#prompt_confirm	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! coc#dialog#prompt_confirm(title, cb) abort$/;"	f
coc#dialog#prompt_insert	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! coc#dialog#prompt_insert() abort$/;"	f
coc#dialog#set_cursor	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! coc#dialog#set_cursor(winid, bufnr, line) abort$/;"	f
coc#dialog#update_list	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! coc#dialog#update_list(winid, bufnr, lines, highlights) abort$/;"	f
coc#dict#equal	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dict.vim	/^function! coc#dict#equal(one, two) abort$/;"	f
coc#dict#omit	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dict.vim	/^function! coc#dict#omit(dict, keys) abort$/;"	f
coc#dict#pick	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dict.vim	/^function! coc#dict#pick(dict, keys) abort$/;"	f
coc#do_notify	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#do_notify(id, method, result)$/;"	f
coc#expandable	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#expandable() abort$/;"	f
coc#expandableOrJumpable	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#expandableOrJumpable() abort$/;"	f
coc#float#add_related	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#add_related(winid, target) abort$/;"	f
coc#float#change_height	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#change_height(winid, delta) abort$/;"	f
coc#float#check_related	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#check_related() abort$/;"	f
coc#float#close	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#close(winid, ...) abort$/;"	f
coc#float#close_all	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#close_all(...) abort$/;"	f
coc#float#close_related	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#close_related(winid, ...) abort$/;"	f
coc#float#content_height	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#content_height(bufnr, width, wrap) abort$/;"	f
coc#float#create_border_lines	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_border_lines(border, borderchars, title, width, height, hasbtn) abort$/;"	f
coc#float#create_buf	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_buf(bufnr, ...) abort$/;"	f
coc#float#create_float_win	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#create_float_win(winid, bufnr, config) abort$/;"	f
coc#float#get_float_by_kind	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#get_float_by_kind(kind) abort$/;"	f
coc#float#get_float_win_list	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#get_float_win_list(...) abort$/;"	f
coc#float#get_height	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#get_height(winid) abort$/;"	f
coc#float#get_options	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#get_options(winid) abort$/;"	f
coc#float#get_related	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#get_related(winid, kind, ...) abort$/;"	f
coc#float#get_row	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#get_row(winid) abort$/;"	f
coc#float#get_wininfo	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#get_wininfo(winid) abort$/;"	f
coc#float#getchar	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#getchar(winid, keys) abort$/;"	f
coc#float#has_float	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#has_float(...) abort$/;"	f
coc#float#has_scroll	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#has_scroll() abort$/;"	f
coc#float#jump	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#jump() abort$/;"	f
coc#float#nvim_border_win	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_border_win(config, borderchars, winid, border, title, hasbtn, hlgroup, shadow, related) abort$/;"	f
coc#float#nvim_buttons	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_buttons(config, winid, buttons, getchar, borderbottom, pad, borderhighlight, shadow, related) abort$/;"	f
coc#float#nvim_close_btn	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_close_btn(config, winid, border, hlgroup, related) abort$/;"	f
coc#float#nvim_create_related	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_create_related(winid, config, opts) abort$/;"	f
coc#float#nvim_float_click	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_float_click() abort$/;"	f
coc#float#nvim_refresh_scrollbar	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_refresh_scrollbar(winid) abort$/;"	f
coc#float#nvim_right_pad	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_right_pad(config, winid, shadow, related) abort$/;"	f
coc#float#nvim_scroll_adjust	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_scroll_adjust(winid) abort$/;"	f
coc#float#nvim_scrollbar	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_scrollbar(winid) abort$/;"	f
coc#float#nvim_set_winblend	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_set_winblend(winid, winblend) abort$/;"	f
coc#float#nvim_win_enter	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#nvim_win_enter(winid) abort$/;"	f
coc#float#on_close	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#on_close(winid) abort$/;"	f
coc#float#scroll	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#scroll(forward, ...)$/;"	f
coc#float#scroll_win	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#scroll_win(winid, forward, amount) abort$/;"	f
coc#float#scrollable	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#scrollable(winid) abort$/;"	f
coc#float#valid	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#valid(winid) abort$/;"	f
coc#float#vim_buttons	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#vim_buttons(winid, config) abort$/;"	f
coc#float#vim_filter	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! coc#float#vim_filter(winid, key, keys) abort$/;"	f
coc#helper#dict_omit	conf/vim/.vim/plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#dict_omit(dict, keys) abort$/;"	f
coc#helper#dict_pick	conf/vim/.vim/plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#dict_pick(dict, keys) abort$/;"	f
coc#helper#get_charactor	conf/vim/.vim/plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#get_charactor(line, col) abort$/;"	f
coc#helper#last_character	conf/vim/.vim/plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#last_character(line) abort$/;"	f
coc#helper#max	conf/vim/.vim/plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#max(first, ...) abort$/;"	f
coc#helper#min	conf/vim/.vim/plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#min(first, ...) abort$/;"	f
coc#helper#obj_equal	conf/vim/.vim/plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#obj_equal(one, two) abort$/;"	f
coc#helper#str_apply	conf/vim/.vim/plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#str_apply(content, diff) abort$/;"	f
coc#helper#str_compose	conf/vim/.vim/plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#str_compose(line, position, inserted) abort$/;"	f
coc#helper#str_diff	conf/vim/.vim/plugged/coc.nvim/autoload/coc/helper.vim	/^function! coc#helper#str_diff(curr, previous, col) abort$/;"	f
coc#highlight#add_highlight	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#add_highlight(bufnr, src_id, hl_group, line, col_start, col_end, ...) abort$/;"	f
coc#highlight#add_highlights	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#add_highlights(winid, codes, highlights) abort$/;"	f
coc#highlight#buffer_update	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#buffer_update(bufnr, key, highlights, ...) abort$/;"	f
coc#highlight#clear	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#clear(bufnr, key, lnums) abort$/;"	f
coc#highlight#clear_all	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#clear_all() abort$/;"	f
coc#highlight#clear_highlight	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#clear_highlight(bufnr, key, start_line, end_line) abort$/;"	f
coc#highlight#clear_match_group	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#clear_match_group(winid, match) abort$/;"	f
coc#highlight#clear_matches	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#clear_matches(winid, ids)$/;"	f
coc#highlight#compose	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#compose(fg, bg) abort$/;"	f
coc#highlight#compose_hlgroup	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#compose_hlgroup(fgGroup, bgGroup) abort$/;"	f
coc#highlight#create_bg_command	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#create_bg_command(group, amount) abort$/;"	f
coc#highlight#create_namespace	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#create_namespace(key) abort$/;"	f
coc#highlight#del_markers	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#del_markers(bufnr, key, ids) abort$/;"	f
coc#highlight#get_color	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#get_color(id, key, kind) abort$/;"	f
coc#highlight#get_contrast	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#get_contrast(group1, group2) abort$/;"	f
coc#highlight#get_hex_color	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#get_hex_color(id, kind, fallback) abort$/;"	f
coc#highlight#get_highlights	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#get_highlights(bufnr, key, ...) abort$/;"	f
coc#highlight#get_hl_command	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#get_hl_command(id, key, cterm, gui) abort$/;"	f
coc#highlight#get_syntax_name	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#get_syntax_name(lnum, col)$/;"	f
coc#highlight#highlight_lines	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#highlight_lines(winid, blocks) abort$/;"	f
coc#highlight#match_ranges	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#match_ranges(winid, bufnr, ranges, hlGroup, priority) abort$/;"	f
coc#highlight#ranges	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#ranges(bufnr, key, hlGroup, ranges, ...) abort$/;"	f
coc#highlight#reversed	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#reversed(id) abort$/;"	f
coc#highlight#set	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#set(bufnr, key, highlights, priority) abort$/;"	f
coc#highlight#update_highlights	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#update_highlights(bufnr, key, highlights, ...) abort$/;"	f
coc#highlight#valid	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! coc#highlight#valid(hlGroup) abort$/;"	f
coc#jumpable	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#jumpable() abort$/;"	f
coc#list#clean_up	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#clean_up() abort$/;"	f
coc#list#close	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#close(winid, position, target_win, saved_height) abort$/;"	f
coc#list#close_preview	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#close_preview(...) abort$/;"	f
coc#list#create	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#create(position, height, name, numberSelect)$/;"	f
coc#list#float_preview	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#float_preview(lines, config) abort$/;"	f
coc#list#get_preview	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#get_preview(...) abort$/;"	f
coc#list#getchar	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#getchar() abort$/;"	f
coc#list#has_preview	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#has_preview()$/;"	f
coc#list#names	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#names(...) abort$/;"	f
coc#list#options	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#options(...)$/;"	f
coc#list#preview	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#preview(lines, config) abort$/;"	f
coc#list#scroll_preview	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#scroll_preview(dir, floatPreview) abort$/;"	f
coc#list#select	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#select(bufnr, line) abort$/;"	f
coc#list#setlines	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#setlines(bufnr, lines, append)$/;"	f
coc#list#setup	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#setup(source)$/;"	f
coc#list#status	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! coc#list#status(name)$/;"	f
coc#math#min	conf/vim/.vim/plugged/coc.nvim/autoload/coc/math.vim	/^function! coc#math#min(first, ...) abort$/;"	f
coc#notify#close	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^function! coc#notify#close(winid) abort$/;"	f
coc#notify#close_all	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^function! coc#notify#close_all() abort$/;"	f
coc#notify#close_by_source	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^function! coc#notify#close_by_source(source) abort$/;"	f
coc#notify#copy	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^function! coc#notify#copy() abort$/;"	f
coc#notify#create	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^function! coc#notify#create(lines, config) abort$/;"	f
coc#notify#do_action	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^function! coc#notify#do_action(...) abort$/;"	f
coc#notify#get_top	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^function! coc#notify#get_top() abort$/;"	f
coc#notify#get_win_top	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^function! coc#notify#get_win_top(winid) abort$/;"	f
coc#notify#keep	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^function! coc#notify#keep() abort$/;"	f
coc#notify#nvim_click	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^function! coc#notify#nvim_click(winid) abort$/;"	f
coc#notify#on_close	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^function! coc#notify#on_close(winid) abort$/;"	f
coc#notify#reflow	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^function! coc#notify#reflow(...) abort$/;"	f
coc#notify#show_sources	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^function! coc#notify#show_sources() abort$/;"	f
coc#notify#win_list	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^function! coc#notify#win_list() abort$/;"	f
coc#on_enter	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#on_enter()$/;"	f
coc#on_notify	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#on_notify(id, method, Cb)$/;"	f
coc#prompt#activated	conf/vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! coc#prompt#activated() abort$/;"	f
coc#prompt#getc	conf/vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! coc#prompt#getc() abort$/;"	f
coc#prompt#getchar	conf/vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! coc#prompt#getchar() abort$/;"	f
coc#prompt#start_prompt	conf/vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! coc#prompt#start_prompt(session) abort$/;"	f
coc#prompt#stop_prompt	conf/vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! coc#prompt#stop_prompt(session)$/;"	f
coc#pum#_close	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! coc#pum#_close() abort$/;"	f
coc#pum#_insert	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! coc#pum#_insert() abort$/;"	f
coc#pum#_navigate	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! coc#pum#_navigate(next, insert) abort$/;"	f
coc#pum#_one_more	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! coc#pum#_one_more() abort$/;"	f
coc#pum#cancel	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! coc#pum#cancel() abort$/;"	f
coc#pum#close	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! coc#pum#close(...) abort$/;"	f
coc#pum#close_detail	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! coc#pum#close_detail() abort$/;"	f
coc#pum#confirm	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! coc#pum#confirm() abort$/;"	f
coc#pum#create	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! coc#pum#create(lines, opt, config) abort$/;"	f
coc#pum#has_item_selected	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! coc#pum#has_item_selected() abort$/;"	f
coc#pum#info	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! coc#pum#info() abort$/;"	f
coc#pum#insert	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! coc#pum#insert() abort$/;"	f
coc#pum#next	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! coc#pum#next(insert) abort$/;"	f
coc#pum#one_more	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! coc#pum#one_more() abort$/;"	f
coc#pum#prev	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! coc#pum#prev(insert) abort$/;"	f
coc#pum#replace	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! coc#pum#replace(col, insert, ...) abort$/;"	f
coc#pum#scroll	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! coc#pum#scroll(forward) abort$/;"	f
coc#pum#select	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! coc#pum#select(index, insert, confirm) abort$/;"	f
coc#pum#select_confirm	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! coc#pum#select_confirm() abort$/;"	f
coc#pum#stop	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! coc#pum#stop() abort$/;"	f
coc#pum#visible	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! coc#pum#visible() abort$/;"	f
coc#pum#winid	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! coc#pum#winid() abort$/;"	f
coc#refresh	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#refresh() abort$/;"	f
coc#rpc#async_request	conf/vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#async_request(id, method, args)$/;"	f
coc#rpc#async_response	conf/vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#async_response(id, resp, isErr) abort$/;"	f
coc#rpc#close_connection	conf/vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#close_connection() abort$/;"	f
coc#rpc#get_channel	conf/vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#get_channel() abort$/;"	f
coc#rpc#kill	conf/vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#kill()$/;"	f
coc#rpc#notify	conf/vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#notify(method, args) abort$/;"	f
coc#rpc#ready	conf/vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#ready()$/;"	f
coc#rpc#request	conf/vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#request(method, args) abort$/;"	f
coc#rpc#request_async	conf/vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#request_async(method, args, cb) abort$/;"	f
coc#rpc#restart	conf/vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#restart()$/;"	f
coc#rpc#set_channel	conf/vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#set_channel(chan_id) abort$/;"	f
coc#rpc#show_errors	conf/vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#show_errors()$/;"	f
coc#rpc#start_server	conf/vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#start_server()$/;"	f
coc#rpc#started	conf/vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#started() abort$/;"	f
coc#rpc#stop	conf/vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! coc#rpc#stop()$/;"	f
coc#snippet#_select_mappings	conf/vim/.vim/plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#_select_mappings()$/;"	f
coc#snippet#disable	conf/vim/.vim/plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#disable()$/;"	f
coc#snippet#enable	conf/vim/.vim/plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#enable(...)$/;"	f
coc#snippet#jump	conf/vim/.vim/plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#jump(direction, complete) abort$/;"	f
coc#snippet#move	conf/vim/.vim/plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#move(position) abort$/;"	f
coc#snippet#next	conf/vim/.vim/plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#next() abort$/;"	f
coc#snippet#prev	conf/vim/.vim/plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#prev() abort$/;"	f
coc#snippet#select	conf/vim/.vim/plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#select(start, end, text) abort$/;"	f
coc#snippet#show_choices	conf/vim/.vim/plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#show_choices(lnum, col, position, input) abort$/;"	f
coc#snippet#to_cursor	conf/vim/.vim/plugged/coc.nvim/autoload/coc/snippet.vim	/^function! coc#snippet#to_cursor(position) abort$/;"	f
coc#start	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#start(...)$/;"	f
coc#status	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^function! coc#status(...)$/;"	f
coc#string#apply	conf/vim/.vim/plugged/coc.nvim/autoload/coc/string.vim	/^function! coc#string#apply(content, diff) abort$/;"	f
coc#string#byte_index	conf/vim/.vim/plugged/coc.nvim/autoload/coc/string.vim	/^function! coc#string#byte_index(line, character) abort$/;"	f
coc#string#character_index	conf/vim/.vim/plugged/coc.nvim/autoload/coc/string.vim	/^function! coc#string#character_index(line, byteIdx) abort$/;"	f
coc#string#character_length	conf/vim/.vim/plugged/coc.nvim/autoload/coc/string.vim	/^function! coc#string#character_length(text) abort$/;"	f
coc#string#common_start	conf/vim/.vim/plugged/coc.nvim/autoload/coc/string.vim	/^function! coc#string#common_start(text, other) abort$/;"	f
coc#string#compose	conf/vim/.vim/plugged/coc.nvim/autoload/coc/string.vim	/^function! coc#string#compose(line, position, inserted) abort$/;"	f
coc#string#content_height	conf/vim/.vim/plugged/coc.nvim/autoload/coc/string.vim	/^function! coc#string#content_height(lines, width) abort$/;"	f
coc#string#diff	conf/vim/.vim/plugged/coc.nvim/autoload/coc/string.vim	/^function! coc#string#diff(curr, previous, col) abort$/;"	f
coc#string#get_char_count	conf/vim/.vim/plugged/coc.nvim/autoload/coc/string.vim	/^function! coc#string#get_char_count(text, start_col, end_col) abort$/;"	f
coc#string#last_character	conf/vim/.vim/plugged/coc.nvim/autoload/coc/string.vim	/^function! coc#string#last_character(line) abort$/;"	f
coc#string#reflow	conf/vim/.vim/plugged/coc.nvim/autoload/coc/string.vim	/^function! coc#string#reflow(lines, width) abort$/;"	f
coc#task#running	conf/vim/.vim/plugged/coc.nvim/autoload/coc/task.vim	/^function! coc#task#running(id)$/;"	f
coc#task#start	conf/vim/.vim/plugged/coc.nvim/autoload/coc/task.vim	/^function! coc#task#start(id, opts)$/;"	f
coc#task#stop	conf/vim/.vim/plugged/coc.nvim/autoload/coc/task.vim	/^function! coc#task#stop(id)$/;"	f
coc#terminal#close	conf/vim/.vim/plugged/coc.nvim/autoload/coc/terminal.vim	/^function! coc#terminal#close(bufnr) abort$/;"	f
coc#terminal#send	conf/vim/.vim/plugged/coc.nvim/autoload/coc/terminal.vim	/^function! coc#terminal#send(bufnr, text, add_new_line) abort$/;"	f
coc#terminal#start	conf/vim/.vim/plugged/coc.nvim/autoload/coc/terminal.vim	/^function! coc#terminal#start(cmd, cwd, env, strict) abort$/;"	f
coc#ui#change_lines	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! coc#ui#change_lines(bufnr, list) abort$/;"	f
coc#ui#check_pum_keymappings	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! coc#ui#check_pum_keymappings(trigger) abort$/;"	f
coc#ui#create_tree	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! coc#ui#create_tree(opts) abort$/;"	f
coc#ui#echo_hover	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! coc#ui#echo_hover(msg)$/;"	f
coc#ui#echo_lines	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! coc#ui#echo_lines(lines)$/;"	f
coc#ui#echo_messages	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! coc#ui#echo_messages(hl, msgs)$/;"	f
coc#ui#echo_signatures	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! coc#ui#echo_signatures(signatures) abort$/;"	f
coc#ui#get_mouse	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! coc#ui#get_mouse() abort$/;"	f
coc#ui#iterm_open	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! coc#ui#iterm_open(dir)$/;"	f
coc#ui#open_files	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! coc#ui#open_files(files)$/;"	f
coc#ui#open_terminal	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! coc#ui#open_terminal(opts) abort$/;"	f
coc#ui#open_url	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! coc#ui#open_url(url)$/;"	f
coc#ui#outline_close_preview	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! coc#ui#outline_close_preview() abort$/;"	f
coc#ui#outline_preview	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! coc#ui#outline_preview(config) abort$/;"	f
coc#ui#preview_info	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! coc#ui#preview_info(lines, filetype, ...) abort$/;"	f
coc#ui#quickpick	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! coc#ui#quickpick(title, items, cb) abort$/;"	f
coc#ui#rename_file	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! coc#ui#rename_file(oldPath, newPath, write) abort$/;"	f
coc#ui#run_terminal	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! coc#ui#run_terminal(opts, cb)$/;"	f
coc#ui#safe_open	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! coc#ui#safe_open(cmd, file) abort$/;"	f
coc#ui#safe_rename	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! coc#ui#safe_rename(bufnr, oldPath, newPath, write) abort$/;"	f
coc#ui#set_lines	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! coc#ui#set_lines(bufnr, changedtick, original, replacement, start, end, changes, cursor, col) abort$/;"	f
coc#ui#setloclist	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! coc#ui#setloclist(nr, items, action, title) abort$/;"	f
coc#ui#sign_unplace	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! coc#ui#sign_unplace() abort$/;"	f
coc#ui#update_signs	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! coc#ui#update_signs(bufnr, group, signs) abort$/;"	f
coc#util#all_state	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#all_state()$/;"	f
coc#util#api_version	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#api_version() abort$/;"	f
coc#util#bufsize	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#bufsize(bufnr) abort$/;"	f
coc#util#change_info	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#change_info() abort$/;"	f
coc#util#check_refresh	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#check_refresh(bufnr)$/;"	f
coc#util#cursor	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#cursor()$/;"	f
coc#util#diagnostic_info	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#diagnostic_info(bufnr, checkInsert) abort$/;"	f
coc#util#do_autocmd	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#do_autocmd(name) abort$/;"	f
coc#util#editor_infos	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#editor_infos() abort$/;"	f
coc#util#extension_root	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#extension_root() abort$/;"	f
coc#util#get_buf_lines	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_buf_lines(bufnr, changedtick)$/;"	f
coc#util#get_bufoptions	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_bufoptions(bufnr, max) abort$/;"	f
coc#util#get_changeinfo	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_changeinfo(bufnr)$/;"	f
coc#util#get_complete_option	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_complete_option()$/;"	f
coc#util#get_config	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_config(key) abort$/;"	f
coc#util#get_config_home	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_config_home()$/;"	f
coc#util#get_data_home	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_data_home()$/;"	f
coc#util#get_editoroption	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_editoroption(winid) abort$/;"	f
coc#util#get_format_opts	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_format_opts(bufnr) abort$/;"	f
coc#util#get_indentkeys	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_indentkeys() abort$/;"	f
coc#util#get_loaded_bufs	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#get_loaded_bufs() abort$/;"	f
coc#util#getpid	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#getpid()$/;"	f
coc#util#install	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#install() abort$/;"	f
coc#util#install_extension	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#install_extension(args) abort$/;"	f
coc#util#job_command	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#job_command()$/;"	f
coc#util#jump	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#jump(cmd, filepath, ...) abort$/;"	f
coc#util#jumpTo	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#jumpTo(line, character) abort$/;"	f
coc#util#merge_winhl	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#merge_winhl(curr, hls) abort$/;"	f
coc#util#open_file	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#open_file(cmd, file)$/;"	f
coc#util#open_terminal	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#open_terminal(opts) abort$/;"	f
coc#util#path_replace_patterns	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#path_replace_patterns() abort$/;"	f
coc#util#refactor_fold_text	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#refactor_fold_text(lnum) abort$/;"	f
coc#util#refactor_foldlevel	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#refactor_foldlevel(lnum) abort$/;"	f
coc#util#root_patterns	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#root_patterns() abort$/;"	f
coc#util#semantic_hlgroups	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#semantic_hlgroups() abort$/;"	f
coc#util#setline	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#setline(lnum, line)$/;"	f
coc#util#synname	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#synname() abort$/;"	f
coc#util#tabnr_id	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#tabnr_id(tabnr) abort$/;"	f
coc#util#tabpages	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#tabpages() abort$/;"	f
coc#util#timer	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#timer(method, args)$/;"	f
coc#util#unmap	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#unmap(bufnr, keys) abort$/;"	f
coc#util#update_extensions	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#update_extensions(...) abort$/;"	f
coc#util#valid_position	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#valid_position(line, character) abort$/;"	f
coc#util#variables	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#variables(bufnr) abort$/;"	f
coc#util#version	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#version()$/;"	f
coc#util#vim_info	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#vim_info()$/;"	f
coc#util#with_callback	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! coc#util#with_callback(method, args, cb)$/;"	f
coc#vtext#add	conf/vim/.vim/plugged/coc.nvim/autoload/coc/vtext.vim	/^function! coc#vtext#add(bufnr, src_id, line, blocks, opts) abort$/;"	f
coc#window#adjust_width	conf/vim/.vim/plugged/coc.nvim/autoload/coc/window.vim	/^function! coc#window#adjust_width(winid) abort$/;"	f
coc#window#bufnrs	conf/vim/.vim/plugged/coc.nvim/autoload/coc/window.vim	/^function! coc#window#bufnrs() abort$/;"	f
coc#window#close	conf/vim/.vim/plugged/coc.nvim/autoload/coc/window.vim	/^function! coc#window#close(winid) abort$/;"	f
coc#window#find	conf/vim/.vim/plugged/coc.nvim/autoload/coc/window.vim	/^function! coc#window#find(key, val) abort$/;"	f
coc#window#get_cursor	conf/vim/.vim/plugged/coc.nvim/autoload/coc/window.vim	/^function! coc#window#get_cursor(winid) abort$/;"	f
coc#window#get_var	conf/vim/.vim/plugged/coc.nvim/autoload/coc/window.vim	/^function! coc#window#get_var(winid, name, ...) abort$/;"	f
coc#window#is_float	conf/vim/.vim/plugged/coc.nvim/autoload/coc/window.vim	/^function! coc#window#is_float(winid) abort$/;"	f
coc#window#restview	conf/vim/.vim/plugged/coc.nvim/autoload/coc/window.vim	/^function! coc#window#restview(winid, lnum, topline) abort$/;"	f
coc#window#set_height	conf/vim/.vim/plugged/coc.nvim/autoload/coc/window.vim	/^function! coc#window#set_height(winid, height) abort$/;"	f
coc#window#set_var	conf/vim/.vim/plugged/coc.nvim/autoload/coc/window.vim	/^function! coc#window#set_var(winid, name, value) abort$/;"	f
coc#window#tabnr	conf/vim/.vim/plugged/coc.nvim/autoload/coc/window.vim	/^function! coc#window#tabnr(winid) abort$/;"	f
coc#window#visible	conf/vim/.vim/plugged/coc.nvim/autoload/coc/window.vim	/^function! coc#window#visible(winid) abort$/;"	f
coc#window#visible_range	conf/vim/.vim/plugged/coc.nvim/autoload/coc/window.vim	/^function! coc#window#visible_range() abort$/;"	f
coc#window#visible_ranges	conf/vim/.vim/plugged/coc.nvim/autoload/coc/window.vim	/^function! coc#window#visible_ranges(bufnr) abort$/;"	f
coc_dynamic_autocmd	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^augroup coc_dynamic_autocmd$/;"	a
coc_dynamic_content	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^augroup coc_dynamic_content$/;"	a
coc_dynamic_option	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^augroup coc_dynamic_option$/;"	a
code	conf/vim/.vim/plugged/vim-go/autoload/fzf/decls.vim	/^function! s:code(group, attr) abort$/;"	f
codeAction	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! s:codeAction(name, file) abort$/;"	f
code_to_omz	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^def code_to_omz(_code_points):$/;"	f
coerce	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^def coerce(version: str) -> Optional[Version]:$/;"	f
coffeescript/init-coffee-mode	conf/emacs/.emacs.d/layers/+lang/coffeescript/packages.el	/^(defun coffeescript\/init-coffee-mode ()$/;"	f
coffeescript/init-ob-coffeescript	conf/emacs/.emacs.d/layers/+lang/coffeescript/packages.el	/^(defun coffeescript\/init-ob-coffeescript ())$/;"	f
coffeescript/post-init-add-node-modules-path	conf/emacs/.emacs.d/layers/+lang/coffeescript/packages.el	/^(defun coffeescript\/post-init-add-node-modules-path ()$/;"	f
coffeescript/post-init-company	conf/emacs/.emacs.d/layers/+lang/coffeescript/packages.el	/^(defun coffeescript\/post-init-company ()$/;"	f
coffeescript/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/coffeescript/packages.el	/^(defun coffeescript\/post-init-flycheck ()$/;"	f
coffeescript/pre-init-ob-coffeescript	conf/emacs/.emacs.d/layers/+lang/coffeescript/packages.el	/^(defun coffeescript\/pre-init-ob-coffeescript ()$/;"	f
col2byte	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^def col2byte(line, col):$/;"	f
color	conf/vim/.vim/plugged/vim-go/autoload/fzf/decls.vim	/^function! s:color(str, group) abort$/;"	f
colored	conf/zsh/.oh-my-zsh/plugins/aliases/termcolor.py	/^def colored(text, color=None, on_color=None, attrs=None):$/;"	f
colored	conf/zsh/.oh-my-zsh/plugins/colored-man-pages/colored-man-pages.plugin.zsh	/^function colored() {$/;"	f
colorize_cat	conf/zsh/.oh-my-zsh/plugins/colorize/colorize.plugin.zsh	/^colorize_cat() {$/;"	f
colorize_check_requirements	conf/zsh/.oh-my-zsh/plugins/colorize/colorize.plugin.zsh	/^colorize_check_requirements() {$/;"	f
colorize_less	conf/zsh/.oh-my-zsh/plugins/colorize/colorize.plugin.zsh	/^colorize_less() {$/;"	f
colors-colorize-identifiers	conf/emacs/.emacs.d/layers/+themes/colors/config.el	/^(defvar colors-colorize-identifiers nil$/;"	f
colors-default-rainbow-identifiers-light	conf/emacs/.emacs.d/layers/+themes/colors/config.el	/^(defvar colors-default-rainbow-identifiers-light 65$/;"	f
colors-default-rainbow-identifiers-sat	conf/emacs/.emacs.d/layers/+themes/colors/config.el	/^(defvar colors-default-rainbow-identifiers-sat 50$/;"	f
colors-enable-nyan-cat-progress-bar	conf/emacs/.emacs.d/layers/+themes/colors/config.el	/^(defvar colors-enable-nyan-cat-progress-bar nil$/;"	f
colors-packages	conf/emacs/.emacs.d/layers/+themes/colors/packages.el	/^(defconst colors-packages$/;"	f
colors-theme-identifiers-sat&light	conf/emacs/.emacs.d/layers/+themes/colors/config.el	/^(defvar colors-theme-identifiers-sat&light$/;"	f
colors//change-color-component-func	conf/emacs/.emacs.d/layers/+themes/colors/funcs.el	/^(defun colors\/\/change-color-component-func$/;"	f
colors//change-color-mini-mode-doc	conf/emacs/.emacs.d/layers/+themes/colors/funcs.el	/^(defun colors\/\/change-color-mini-mode-doc (component)$/;"	f
colors//rainbow-identifiers-ignore-keywords	conf/emacs/.emacs.d/layers/+themes/colors/funcs.el	/^(defun colors\/\/rainbow-identifiers-ignore-keywords ()$/;"	f
colors//rainbow-identifiers-mode-maybe	conf/emacs/.emacs.d/layers/+themes/colors/funcs.el	/^(defun colors\/\/rainbow-identifiers-mode-maybe ()$/;"	f
colors//tweak-theme-colors	conf/emacs/.emacs.d/layers/+themes/colors/funcs.el	/^(defun colors\/\/tweak-theme-colors (theme)$/;"	f
colors/add-theme-sat&light	conf/emacs/.emacs.d/layers/+themes/colors/funcs.el	/^(defun colors\/add-theme-sat&light (theme-name sat-light)$/;"	f
colors/change-color-component-overlay-map	conf/emacs/.emacs.d/layers/+themes/colors/funcs.el	/^(defun colors\/change-color-component-overlay-map (component)$/;"	f
colors/change-color-lightness-down	conf/emacs/.emacs.d/layers/+themes/colors/funcs.el	/^(defun colors\/change-color-lightness-down ()$/;"	f
colors/change-color-lightness-reset	conf/emacs/.emacs.d/layers/+themes/colors/funcs.el	/^(defun colors\/change-color-lightness-reset ()$/;"	f
colors/change-color-lightness-up	conf/emacs/.emacs.d/layers/+themes/colors/funcs.el	/^(defun colors\/change-color-lightness-up ()$/;"	f
colors/change-color-saturation-down	conf/emacs/.emacs.d/layers/+themes/colors/funcs.el	/^(defun colors\/change-color-saturation-down ()$/;"	f
colors/change-color-saturation-reset	conf/emacs/.emacs.d/layers/+themes/colors/funcs.el	/^(defun colors\/change-color-saturation-reset ()$/;"	f
colors/change-color-saturation-up	conf/emacs/.emacs.d/layers/+themes/colors/funcs.el	/^(defun colors\/change-color-saturation-up ()$/;"	f
colors/init-color-identifiers-mode	conf/emacs/.emacs.d/layers/+themes/colors/packages.el	/^(defun colors\/init-color-identifiers-mode ()$/;"	f
colors/init-nyan-mode	conf/emacs/.emacs.d/layers/+themes/colors/packages.el	/^(defun colors\/init-nyan-mode ()$/;"	f
colors/init-rainbow-identifiers	conf/emacs/.emacs.d/layers/+themes/colors/packages.el	/^(defun colors\/init-rainbow-identifiers ()$/;"	f
colors/init-rainbow-mode	conf/emacs/.emacs.d/layers/+themes/colors/packages.el	/^(defun colors\/init-rainbow-mode ()$/;"	f
colors/refresh-theme-look	conf/emacs/.emacs.d/layers/+themes/colors/funcs.el	/^(defun colors\/refresh-theme-look ()$/;"	f
colors/start-change-color-lightness	conf/emacs/.emacs.d/layers/+themes/colors/funcs.el	/^(defun colors\/start-change-color-lightness ()$/;"	f
colors/start-change-color-saturation	conf/emacs/.emacs.d/layers/+themes/colors/funcs.el	/^(defun colors\/start-change-color-saturation ()$/;"	f
colors_exit	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:colors_exit(code)$/;"	f
colour	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:colour(r, g, b)$/;"	f
command	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^  let command = a:grep_command . suffix$/;"	v
command	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def command(cmd):$/;"	f
command-log-packages	conf/emacs/.emacs.d/layers/+tools/command-log/packages.el	/^(defconst command-log-packages$/;"	f
command-log/init-command-log-mode	conf/emacs/.emacs.d/layers/+tools/command-log/packages.el	/^(defun command-log\/init-command-log-mode ()$/;"	f
command-log/init-keycast	conf/emacs/.emacs.d/layers/+tools/command-log/packages.el	/^(defun command-log\/init-keycast ()$/;"	f
command_exists	conf/tmux/.tmux/plugins/tmux-sensible/sensible.tmux	/^command_exists() {$/;"	f
command_exists	conf/zsh/.oh-my-zsh/tools/install.sh	/^command_exists() {$/;"	f
command_exists	sh/kcptun.sh	/^command_exists() {$/;"	f
command_not_found_handler	conf/zsh/.oh-my-zsh/plugins/command-not-found/command-not-found.plugin.zsh	/^  command_not_found_handler() {$/;"	f
command_sink	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:command_sink(lines)$/;"	f
commit	conf/zsh/.oh-my-zsh/tools/changelog.sh	/^  function commit:is-breaking {$/;"	f
commit	conf/zsh/.oh-my-zsh/tools/changelog.sh	/^  function commit:is-revert {$/;"	f
commit	conf/zsh/.oh-my-zsh/tools/changelog.sh	/^  function commit:scope {$/;"	f
commit	conf/zsh/.oh-my-zsh/tools/changelog.sh	/^  function commit:subject {$/;"	f
commit	conf/zsh/.oh-my-zsh/tools/changelog.sh	/^  function commit:type {$/;"	f
commits	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:commits(range, buffer_local, args)$/;"	f
commits_sink	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:commits_sink(lines)$/;"	f
common-lisp-packages	conf/emacs/.emacs.d/layers/+lang/common-lisp/packages.el	/^(defconst common-lisp-packages$/;"	f
common-lisp/init-common-lisp-snippets	conf/emacs/.emacs.d/layers/+lang/common-lisp/packages.el	/^(defun common-lisp\/init-common-lisp-snippets ())$/;"	f
common-lisp/init-slime	conf/emacs/.emacs.d/layers/+lang/common-lisp/packages.el	/^(defun common-lisp\/init-slime ()$/;"	f
common-lisp/init-slime-company	conf/emacs/.emacs.d/layers/+lang/common-lisp/packages.el	/^(defun common-lisp\/init-slime-company ())$/;"	f
common-lisp/post-init-auto-highlight-symbol	conf/emacs/.emacs.d/layers/+lang/common-lisp/packages.el	/^(defun common-lisp\/post-init-auto-highlight-symbol ()$/;"	f
common-lisp/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/common-lisp/packages.el	/^(defun common-lisp\/post-init-counsel-gtags nil)$/;"	f
common-lisp/post-init-evil	conf/emacs/.emacs.d/layers/+lang/common-lisp/packages.el	/^(defun common-lisp\/post-init-evil ()$/;"	f
common-lisp/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/common-lisp/packages.el	/^(defun common-lisp\/post-init-ggtags ()$/;"	f
common-lisp/post-init-helm	conf/emacs/.emacs.d/layers/+lang/common-lisp/packages.el	/^(defun common-lisp\/post-init-helm ()$/;"	f
common-lisp/post-init-rainbow-identifiers	conf/emacs/.emacs.d/layers/+lang/common-lisp/packages.el	/^(defun common-lisp\/post-init-rainbow-identifiers ()$/;"	f
common-lisp/pre-init-evil-cleverparens	conf/emacs/.emacs.d/layers/+lang/common-lisp/packages.el	/^(defun common-lisp\/pre-init-evil-cleverparens ()$/;"	f
common-lisp/pre-init-evil-collection	conf/emacs/.emacs.d/layers/+lang/common-lisp/packages.el	/^(defun common-lisp\/pre-init-evil-collection ()$/;"	f
common-lisp/pre-init-org	conf/emacs/.emacs.d/layers/+lang/common-lisp/packages.el	/^(defun common-lisp\/pre-init-org ()$/;"	f
common-lisp/pre-init-slime-company	conf/emacs/.emacs.d/layers/+lang/common-lisp/packages.el	/^(defun common-lisp\/pre-init-slime-company ()$/;"	f
common_prefix	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! s:common_prefix(a, b)$/;"	f
common_suffix	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! s:common_suffix(a, b, start)$/;"	f
company-fci-mode-on-p	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defvar-local company-fci-mode-on-p nil)$/;"	f
company-maybe-turn-on-fci	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defun company-maybe-turn-on-fci (&rest ignore)$/;"	f
company-turn-off-fci	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defun company-turn-off-fci (&rest ignore)$/;"	f
compare	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^        def compare(x: Candidate) -> int:$/;"	f	function:Filter.filter
compareLocations	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:compareLocations(left, right) abort$/;"	f
compare_git_uri	conf/vim/.vim/autoload/plug.vim	/^function! s:compare_git_uri(a, b)$/;"	f
compensate_for_pum	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^function! s:compensate_for_pum() abort$/;"	f
compleseus--previous-preview-keys	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defvar compleseus--previous-preview-keys nil$/;"	f
compleseus--source-buffers-hidden	conf/emacs/.emacs.d/layers/+completion/compleseus/config.el	/^(defvar compleseus--source-buffers-hidden nil$/;"	f
compleseus--source-other-persp-modified-buffers	conf/emacs/.emacs.d/layers/+completion/compleseus/config.el	/^(defvar compleseus--source-other-persp-modified-buffers$/;"	f
compleseus--source-other-persp-project-buffers	conf/emacs/.emacs.d/layers/+completion/compleseus/config.el	/^(defvar compleseus--source-other-persp-project-buffers$/;"	f
compleseus--source-persp-buffers	conf/emacs/.emacs.d/layers/+completion/compleseus/config.el	/^(defvar compleseus--source-persp-buffers$/;"	f
compleseus--source-persp-modified-buffers	conf/emacs/.emacs.d/layers/+completion/compleseus/config.el	/^(defvar compleseus--source-persp-modified-buffers$/;"	f
compleseus--source-persp-project-buffers	conf/emacs/.emacs.d/layers/+completion/compleseus/config.el	/^(defvar compleseus--source-persp-project-buffers$/;"	f
compleseus--source-window-buffers	conf/emacs/.emacs.d/layers/+completion/compleseus/config.el	/^(defvar compleseus--source-window-buffers$/;"	f
compleseus--source-workspace-buffers	conf/emacs/.emacs.d/layers/+completion/compleseus/config.el	/^(defvar compleseus--source-workspace-buffers$/;"	f
compleseus-buffer-search-restrict-project	conf/emacs/.emacs.d/layers/+completion/compleseus/config.el	/^(defvar compleseus-buffer-search-restrict-project t$/;"	f
compleseus-consult-preview-keys	conf/emacs/.emacs.d/layers/+completion/compleseus/config.el	/^(defcustom compleseus-consult-preview-keys '("M-." "C-SPC" "C-M-j" "C-M-k")$/;"	f
compleseus-engine	conf/emacs/.emacs.d/layers/+completion/compleseus/config.el	/^(defvar compleseus-engine 'vertico$/;"	f
compleseus-packages	conf/emacs/.emacs.d/layers/+completion/compleseus/packages.el	/^(defconst compleseus-packages$/;"	f
compleseus-spacemacs--initialized	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defvar compleseus-spacemacs--initialized nil$/;"	f
compleseus-spacemacs-help	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help ()$/;"	f
compleseus-spacemacs-help-docs	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help-docs (arg)$/;"	f
compleseus-spacemacs-help-dotspacemacs	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help-dotspacemacs ()$/;"	f
compleseus-spacemacs-help-faq	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help-faq ()$/;"	f
compleseus-spacemacs-help-layers	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help-layers ()$/;"	f
compleseus-spacemacs-help-packages	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defalias 'compleseus-spacemacs-help-packages 'compleseus-spacemacs-help)$/;"	f
compleseus-spacemacs-help-toggles	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help-toggles ()$/;"	f
compleseus-spacemacs-help//documentation-action-open-file	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/documentation-action-open-file (candidate)$/;"	f
compleseus-spacemacs-help//documentation-candidates	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/documentation-candidates ()$/;"	f
compleseus-spacemacs-help//dotspacemacs-candidates	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/dotspacemacs-candidates ()$/;"	f
compleseus-spacemacs-help//go-to-dotfile-variable	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/go-to-dotfile-variable (candidate)$/;"	f
compleseus-spacemacs-help//help-action	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/help-action (args)$/;"	f
compleseus-spacemacs-help//help-action-add-layer	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/help-action-add-layer (args)$/;"	f
compleseus-spacemacs-help//help-action-describe-package	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/help-action-describe-package (args)$/;"	f
compleseus-spacemacs-help//help-action-open-config	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/help-action-open-config (args)$/;"	f
compleseus-spacemacs-help//help-action-open-dired	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/help-action-open-dired (args)$/;"	f
compleseus-spacemacs-help//help-action-open-packages	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/help-action-open-packages (args)$/;"	f
compleseus-spacemacs-help//help-action-open-readme	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/help-action-open-readme (args)$/;"	f
compleseus-spacemacs-help//help-action-open-readme-edit	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/help-action-open-readme-edit (args)$/;"	f
compleseus-spacemacs-help//help-candidates	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/help-candidates ()$/;"	f
compleseus-spacemacs-help//init	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/init (&optional arg)$/;"	f
compleseus-spacemacs-help//layer-action-add-layer	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/layer-action-add-layer (candidate)$/;"	f
compleseus-spacemacs-help//layer-action-get-directory	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/layer-action-get-directory (candidate)$/;"	f
compleseus-spacemacs-help//layer-action-open-config	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/layer-action-open-config (candidate)$/;"	f
compleseus-spacemacs-help//layer-action-open-dired	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/layer-action-open-dired (candidate)$/;"	f
compleseus-spacemacs-help//layer-action-open-file	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/layer-action-open-file (file candidate &optional edit)$/;"	f
compleseus-spacemacs-help//layer-action-open-funcs	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/layer-action-open-funcs (candidate)$/;"	f
compleseus-spacemacs-help//layer-action-open-layers	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/layer-action-open-layers (candidate)$/;"	f
compleseus-spacemacs-help//layer-action-open-packages	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/layer-action-open-packages (candidate)$/;"	f
compleseus-spacemacs-help//layer-action-open-readme	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/layer-action-open-readme (candidate)$/;"	f
compleseus-spacemacs-help//layer-action-open-readme-edit	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/layer-action-open-readme-edit (candidate)$/;"	f
compleseus-spacemacs-help//layer-candidates	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/layer-candidates ()$/;"	f
compleseus-spacemacs-help//toggle	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/toggle (candidate)$/;"	f
compleseus-spacemacs-help//toggle-candidates	conf/emacs/.emacs.d/layers/+completion/compleseus/local/compleseus-spacemacs-help/compleseus-spacemacs-help.el	/^(defun compleseus-spacemacs-help\/\/toggle-candidates ()$/;"	f
compleseus-switch-to-buffer-sources	conf/emacs/.emacs.d/layers/+completion/compleseus/config.el	/^(defcustom compleseus-switch-to-buffer-sources$/;"	f
compleseus-use-nerd-icons	conf/emacs/.emacs.d/layers/+completion/compleseus/config.el	/^(defvar compleseus-use-nerd-icons nil$/;"	f
compleseus-use-vertico-posframe	conf/emacs/.emacs.d/layers/+completion/compleseus/config.el	/^(defvar compleseus-use-vertico-posframe nil$/;"	f
compleseus//persp-contain-buffer-p	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun compleseus\/\/persp-contain-buffer-p (buf)$/;"	f
compleseus/init-compleseus-spacemacs-help	conf/emacs/.emacs.d/layers/+completion/compleseus/packages.el	/^(defun compleseus\/init-compleseus-spacemacs-help ()$/;"	f
compleseus/init-consult	conf/emacs/.emacs.d/layers/+completion/compleseus/packages.el	/^(defun compleseus\/init-consult ()$/;"	f
compleseus/init-consult-yasnippet	conf/emacs/.emacs.d/layers/+completion/compleseus/packages.el	/^(defun compleseus\/init-consult-yasnippet ()$/;"	f
compleseus/init-embark	conf/emacs/.emacs.d/layers/+completion/compleseus/packages.el	/^(defun compleseus\/init-embark ()$/;"	f
compleseus/init-embark-consult	conf/emacs/.emacs.d/layers/+completion/compleseus/packages.el	/^(defun compleseus\/init-embark-consult ()$/;"	f
compleseus/init-helm-make	conf/emacs/.emacs.d/layers/+completion/compleseus/packages.el	/^(defun compleseus\/init-helm-make ()$/;"	f
compleseus/init-marginalia	conf/emacs/.emacs.d/layers/+completion/compleseus/packages.el	/^(defun compleseus\/init-marginalia ()$/;"	f
compleseus/init-nerd-icons-completion	conf/emacs/.emacs.d/layers/+completion/compleseus/packages.el	/^(defun compleseus\/init-nerd-icons-completion ()$/;"	f
compleseus/init-orderless	conf/emacs/.emacs.d/layers/+completion/compleseus/packages.el	/^(defun compleseus\/init-orderless ()$/;"	f
compleseus/init-selectrum	conf/emacs/.emacs.d/layers/+completion/compleseus/packages.el	/^(defun compleseus\/init-selectrum ()$/;"	f
compleseus/init-vertico	conf/emacs/.emacs.d/layers/+completion/compleseus/packages.el	/^(defun compleseus\/init-vertico ()$/;"	f
compleseus/init-vertico-posframe	conf/emacs/.emacs.d/layers/+completion/compleseus/packages.el	/^(defun compleseus\/init-vertico-posframe ()$/;"	f
compleseus/post-init-imenu	conf/emacs/.emacs.d/layers/+completion/compleseus/packages.el	/^(defun compleseus\/post-init-imenu ()$/;"	f
compleseus/pre-init-auto-highlight-symbol	conf/emacs/.emacs.d/layers/+completion/compleseus/packages.el	/^(defun compleseus\/pre-init-auto-highlight-symbol ()$/;"	f
compleseus/pre-init-persp-mode	conf/emacs/.emacs.d/layers/+completion/compleseus/packages.el	/^(defun compleseus\/pre-init-persp-mode ()$/;"	f
complete	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:complete(job, exit_status, data) abort$/;"	f
complete	conf/vim/.vim/plugged/vim-go/autoload/go/job_test.vim	/^func! s:complete(job, exit_code, messages)$/;"	f
complete	conf/vim/.vim/plugged/vim-go/autoload/go/package_test.vim	/^func! s:complete(arglead, expected) abort$/;"	f
complete	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/complete/complete.go	/^package complete$/;"	p
complete	conf/vim/.vim/plugged/vim-go/plugin/go.vim	/^fun! s:complete(lead, cmdline, cursor)$/;"	f
complete	conf/vim/.vim/plugged/vim-snippets/pythonx/vimsnippets.py	/^def complete(tab, opts):$/;"	f
complete_insert	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:complete_insert(lines)$/;"	f
complete_trigger	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:complete_trigger()$/;"	f
completionErrorHandler	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:completionErrorHandler(next, error) abort dict$/;"	f
completionHandler	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:completionHandler(next, msg) abort dict$/;"	f
completion_begin	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def completion_begin(self, user_context: UserContext) -> None:$/;"	m	class:Deoplete
completion_timer_start	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:completion_timer_start(event) abort$/;"	f
completion_timer_stop	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:completion_timer_stop() abort$/;"	f
con80	conf/zsh/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function con80() {$/;"	f
conda/init-conda	conf/emacs/.emacs.d/layers/+tools/conda/packages.el	/^(defun conda\/init-conda ()$/;"	f
conda_prompt_info	conf/zsh/.oh-my-zsh/plugins/conda-env/conda-env.plugin.zsh	/^function conda_prompt_info(){$/;"	f
conf	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:conf(name, default)$/;"	f
conf	conf/vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^function! s:conf(name, default)$/;"	f
config	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/config/buildtags/buildtags.go	/^package config$/;"	p
config	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/config/buildtags/constrainedfoo.go	/^package config$/;"	p
config	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/config/buildtags/foo.go	/^package config$/;"	p
config_firewall	sh/kcptun.sh	/^config_firewall() {$/;"	f
config_firewall	sh/shadowsocks-all.sh	/^config_firewall() {$/;"	f
config_kcptun	sh/kcptun.sh	/^config_kcptun() {$/;"	f
config_shadowsocks	sh/shadowsocks-all.sh	/^config_shadowsocks() {$/;"	f
config_shadowsocks	sh/shadowsocks.sh	/^config_shadowsocks(){$/;"	f
config_win	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^function! s:config_win(winid, props) abort$/;"	f
configuration-layer--check-new-version-error-packages	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer--check-new-version-error-packages nil$/;"	f
configuration-layer--declared-layers-usedp	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer--declared-layers-usedp nil$/;"	f
configuration-layer--elpa-root-directory	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defconst configuration-layer--elpa-root-directory$/;"	f
configuration-layer--indexed-layers	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer--indexed-layers (make-hash-table :size 1024)$/;"	f
configuration-layer--indexed-packages	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer--indexed-packages (make-hash-table :size 2048)$/;"	f
configuration-layer--inhibit-errors	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer--inhibit-errors nil$/;"	f
configuration-layer--inhibit-warnings	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer--inhibit-warnings nil$/;"	f
configuration-layer--last-dotspacemacs-configuration-layers-file	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer--last-dotspacemacs-configuration-layers-file$/;"	f
configuration-layer--layers-dependencies	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer--layers-dependencies '()$/;"	f
configuration-layer--lazy-mode-alist	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer--lazy-mode-alist nil$/;"	f
configuration-layer--load-packages-files	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer--load-packages-files nil$/;"	f
configuration-layer--package-archives-refreshed	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer--package-archives-refreshed nil$/;"	f
configuration-layer--package-properties-read-onlyp	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer--package-properties-read-onlyp nil$/;"	f
configuration-layer--protected-packages	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer--protected-packages nil$/;"	f
configuration-layer--refresh-package-timeout	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer--refresh-package-timeout dotspacemacs-elpa-timeout$/;"	f
configuration-layer--rollback-root-directory	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defconst configuration-layer--rollback-root-directory$/;"	f
configuration-layer--spacemacs-startup-time	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer--spacemacs-startup-time nil$/;"	f
configuration-layer--stable-elpa-gpg-keyring	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defconst configuration-layer--stable-elpa-gpg-keyring$/;"	f
configuration-layer--stable-elpa-sig-directory	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defconst configuration-layer--stable-elpa-sig-directory$/;"	f
configuration-layer--stable-elpa-tarball-directory	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defconst configuration-layer--stable-elpa-tarball-directory$/;"	f
configuration-layer--stable-elpa-version-file	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defconst configuration-layer--stable-elpa-version-file$/;"	f
configuration-layer--used-layers	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer--used-layers '()$/;"	f
configuration-layer--used-packages	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer--used-packages '()$/;"	f
configuration-layer-categories	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer-categories '()$/;"	f
configuration-layer-directory	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defconst configuration-layer-directory$/;"	f
configuration-layer-elpa-archives	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer-elpa-archives nil$/;"	f
configuration-layer-elpa-subdirectory	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer-elpa-subdirectory ""$/;"	f
configuration-layer-error-count	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer-error-count nil$/;"	f
configuration-layer-exclude-all-layers	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer-exclude-all-layers nil$/;"	f
configuration-layer-force-distribution	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer-force-distribution nil$/;"	f
configuration-layer-lock-file	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defconst configuration-layer-lock-file$/;"	f
configuration-layer-post-load-hook	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer-post-load-hook nil$/;"	f
configuration-layer-pre-load-hook	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer-pre-load-hook nil$/;"	f
configuration-layer-private-layer-directory	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defconst configuration-layer-private-layer-directory$/;"	f
configuration-layer-rollback-directory	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer-rollback-directory$/;"	f
configuration-layer-rollback-info	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defconst configuration-layer-rollback-info "rollback-info"$/;"	f
configuration-layer-stable-elpa-archive	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defconst configuration-layer-stable-elpa-archive nil$/;"	f
configuration-layer-stable-elpa-directory	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defconst configuration-layer-stable-elpa-directory$/;"	f
configuration-layer-stable-elpa-name	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer-stable-elpa-name "spacelpa"$/;"	f
configuration-layer-stable-elpa-version	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar configuration-layer-stable-elpa-version spacemacs-version$/;"	f
configuration-layer-template-directory	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defconst configuration-layer-template-directory$/;"	f
configuration-layer//activate-package	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/activate-package (pkg)$/;"	f
configuration-layer//add-layer	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/add-layer (layer &optional usedp)$/;"	f
configuration-layer//add-package	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/add-package (pkg &optional usedp)$/;"	f
configuration-layer//auto-mode	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/auto-mode (layer-name mode)$/;"	f
configuration-layer//cleanup-rollback-directory	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/cleanup-rollback-directory ()$/;"	f
configuration-layer//configure-layers	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/configure-layers (layer-names)$/;"	f
configuration-layer//configure-package	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/configure-package (pkg)$/;"	f
configuration-layer//configure-packages	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/configure-packages (packages)$/;"	f
configuration-layer//configure-packages-2	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/configure-packages-2 (packages)$/;"	f
configuration-layer//configure-quelpa	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/configure-quelpa ()$/;"	f
configuration-layer//copy-template	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/copy-template (name template &optional layer-dir)$/;"	f
configuration-layer//create-archive-contents-item	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/create-archive-contents-item (pkg-name)$/;"	f
configuration-layer//declare-shadow-relation	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/declare-shadow-relation (lname rname)$/;"	f
configuration-layer//declare-used-layers	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/declare-used-layers (layers-specs)$/;"	f
configuration-layer//declare-used-packages	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/declare-used-packages (layers)$/;"	f
configuration-layer//directory-type	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/directory-type (path)$/;"	f
configuration-layer//download-elpa-file	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/download-elpa-file$/;"	f
configuration-layer//dump-emacs	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/dump-emacs ()$/;"	f
configuration-layer//error	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/error (msg &rest args)$/;"	f
configuration-layer//executable-not-found-error	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/executable-not-found-error (exec &optional msg)$/;"	f
configuration-layer//filter-distant-packages	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/filter-distant-packages$/;"	f
configuration-layer//filter-packages-with-deps	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/filter-packages-with-deps$/;"	f
configuration-layer//filter-packages-with-deps-recur	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/filter-packages-with-deps-recur$/;"	f
configuration-layer//gather-auto-mode-extensions	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/gather-auto-mode-extensions (mode)$/;"	f
configuration-layer//get-category-from-path	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/get-category-from-path (dirpath)$/;"	f
configuration-layer//get-implicit-packages-from-alist	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/get-implicit-packages-from-alist (packages)$/;"	f
configuration-layer//get-indexed-elpa-package-names	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/get-indexed-elpa-package-names ()$/;"	f
configuration-layer//get-latest-package-version	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/get-latest-package-version (pkg-name)$/;"	f
configuration-layer//get-latest-package-version-string	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/get-latest-package-version-string (pkg-name)$/;"	f
configuration-layer//get-layer-parent-category	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/get-layer-parent-category (layer-name)$/;"	f
configuration-layer//get-orphan-packages	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/get-orphan-packages$/;"	f
configuration-layer//get-package-deps-from-alist	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/get-package-deps-from-alist (pkg-name)$/;"	f
configuration-layer//get-package-deps-from-archive	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/get-package-deps-from-archive (pkg-name)$/;"	f
configuration-layer//get-package-directory	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/get-package-directory (pkg-name)$/;"	f
configuration-layer//get-package-recipe	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/get-package-recipe (pkg-name)$/;"	f
configuration-layer//get-package-version	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/get-package-version (pkg-name)$/;"	f
configuration-layer//get-package-version-string	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/get-package-version-string (pkg-name)$/;"	f
configuration-layer//get-packages-to-update	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/get-packages-to-update (pkg-names)$/;"	f
configuration-layer//get-packages-upstream-dependencies-from-alist	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/get-packages-upstream-dependencies-from-alist ()$/;"	f
configuration-layer//get-private-layer-dir	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/get-private-layer-dir (name)$/;"	f
configuration-layer//get-to-install-packages	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/get-to-install-packages (pkg-names)$/;"	f
configuration-layer//ido-candidate-rollback-slot	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/ido-candidate-rollback-slot ()$/;"	f
configuration-layer//increment-error-count	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/increment-error-count ()$/;"	f
configuration-layer//insert-lazy-install-form	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/insert-lazy-install-form (layer-name mode ext)$/;"	f
configuration-layer//install-from-elpa	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/install-from-elpa (pkg-name)$/;"	f
configuration-layer//install-from-recipe	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/install-from-recipe (pkg)$/;"	f
configuration-layer//install-package	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/install-package (pkg pkg-name installed-count not-inst-count)$/;"	f
configuration-layer//install-packages	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/install-packages (packages)$/;"	f
configuration-layer//is-package-orphan	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/is-package-orphan (pkg-name dist-pkgs dependencies)$/;"	f
configuration-layer//lazy-install-extensions-for-layer	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/lazy-install-extensions-for-layer (layer-name)$/;"	f
configuration-layer//lazy-install-p	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/lazy-install-p (layer-name)$/;"	f
configuration-layer//lazy-install-packages	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/lazy-install-packages (layer-name mode)$/;"	f
configuration-layer//load	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/load ()$/;"	f
configuration-layer//load-layer-files	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/load-layer-files (layer-name files)$/;"	f
configuration-layer//load-layers-files	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/load-layers-files (layer-names files)$/;"	f
configuration-layer//make-quelpa-recipe	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/make-quelpa-recipe (pkg)$/;"	f
configuration-layer//new-version-available-p	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/new-version-available-p (pkg-name)$/;"	f
configuration-layer//package-archive-absolute-path-p	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/package-archive-absolute-path-p (archive)$/;"	f
configuration-layer//package-archive-local-path-p	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/package-archive-local-path-p (archive)$/;"	f
configuration-layer//package-delete	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/package-delete (pkg-name)$/;"	f
configuration-layer//package-enabled-p	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/package-enabled-p (pkg layer)$/;"	f
configuration-layer//package-has-recipe-p	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/package-has-recipe-p (pkg-name)$/;"	f
configuration-layer//package-reqs-used-p	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/package-reqs-used-p (pkg)$/;"	f
configuration-layer//patch-package-descriptor	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/patch-package-descriptor (desc)$/;"	f
configuration-layer//post-configure-package	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/post-configure-package (pkg)$/;"	f
configuration-layer//pre-configure-package	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/pre-configure-package (pkg)$/;"	f
configuration-layer//resolve-package-archives	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/resolve-package-archives (archives)$/;"	f
configuration-layer//select-packages	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/select-packages (layer-specs packages)$/;"	f
configuration-layer//set-layer-variables	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/set-layer-variables (layer)$/;"	f
configuration-layer//set-layers-variables	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/set-layers-variables (layer-names)$/;"	f
configuration-layer//sort-packages	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/sort-packages (packages)$/;"	f
configuration-layer//stable-elpa-ask-to-continue	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/stable-elpa-ask-to-continue (reason)$/;"	f
configuration-layer//stable-elpa-delete-temporary-files	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/stable-elpa-delete-temporary-files ()$/;"	f
configuration-layer//stable-elpa-directory	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/stable-elpa-directory ()$/;"	f
configuration-layer//stable-elpa-disable-repository	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/stable-elpa-disable-repository ()$/;"	f
configuration-layer//stable-elpa-download-tarball	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/stable-elpa-download-tarball ()$/;"	f
configuration-layer//stable-elpa-tarball-distant-file	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/stable-elpa-tarball-distant-file ()$/;"	f
configuration-layer//stable-elpa-tarball-distant-sign-file	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/stable-elpa-tarball-distant-sign-file ()$/;"	f
configuration-layer//stable-elpa-tarball-local-file	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/stable-elpa-tarball-local-file ()$/;"	f
configuration-layer//stable-elpa-tarball-local-sign-file	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/stable-elpa-tarball-local-sign-file ()$/;"	f
configuration-layer//stable-elpa-untar-archive	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/stable-elpa-untar-archive ()$/;"	f
configuration-layer//stable-elpa-update-version-file	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/stable-elpa-update-version-file ()$/;"	f
configuration-layer//stable-elpa-verify-archive	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/stable-elpa-verify-archive ()$/;"	f
configuration-layer//sync-elpa-packages-files	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/sync-elpa-packages-files (packages output-dir)$/;"	f
configuration-layer//system-package-p	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/system-package-p (pkg-desc)$/;"	f
configuration-layer//warning	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/\/warning (msg &rest args)$/;"	f
configuration-layer/configured-packages-stats	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/configured-packages-stats (packages)$/;"	f
configuration-layer/create-elpa-repository	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/create-elpa-repository (name output-dir)$/;"	f
configuration-layer/create-layer	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/create-layer ()$/;"	f
configuration-layer/declare-layer	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/declare-layer (layer-specs &optional skip-layer-deps)$/;"	f
configuration-layer/declare-layer-dependencies	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/declare-layer-dependencies (layer-names)$/;"	f
configuration-layer/declare-layers	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/declare-layers (layers-specs &optional skip-layer-deps)$/;"	f
configuration-layer/declare-shadow-relation	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/declare-shadow-relation (layer-name &rest onames)$/;"	f
configuration-layer/delete-orphan-packages	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/delete-orphan-packages (packages)$/;"	f
configuration-layer/describe-package	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/describe-package (pkg-symbol$/;"	f
configuration-layer/discover-layers	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/discover-layers (&optional refresh-index)$/;"	f
configuration-layer/display-summary	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/display-summary (start-time)$/;"	f
configuration-layer/elpa-directory	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/elpa-directory (root)$/;"	f
configuration-layer/filter-objects	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/filter-objects (objects ffunc)$/;"	f
configuration-layer/get-elpa-package-install-directory	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/get-elpa-package-install-directory (pkg)$/;"	f
configuration-layer/get-layer	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/get-layer (layer-name)$/;"	f
configuration-layer/get-layer-local-dir	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/get-layer-local-dir (layer)$/;"	f
configuration-layer/get-layer-path	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/get-layer-path (layer)$/;"	f
configuration-layer/get-layers-list	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/get-layers-list ()$/;"	f
configuration-layer/get-location-directory	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/get-location-directory (pkg-name location owner)$/;"	f
configuration-layer/get-package	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/get-package (pkg-name)$/;"	f
configuration-layer/get-packages-list	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/get-packages-list ()$/;"	f
configuration-layer/initialize	conf/emacs/.emacs.d/core/aprilfool/zemacs.el	/^(define-advice configuration-layer\/initialize (:before (&rest _) zemacs\/initialize)$/;"	f
configuration-layer/initialize	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/initialize ()$/;"	f
configuration-layer/insert-lazy-install-configuration	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/insert-lazy-install-configuration ()$/;"	f
configuration-layer/layer-used-p	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/layer-used-p (layer-name)$/;"	f
configuration-layer/layer-usedp	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defalias 'configuration-layer\/layer-usedp$/;"	f
configuration-layer/lazy-install	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/lazy-install (layer-name &rest props)$/;"	f
configuration-layer/load	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/load ()$/;"	f
configuration-layer/load-auto-layer-file	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/load-auto-layer-file ()$/;"	f
configuration-layer/load-file	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/load-file (file &optional noerror)$/;"	f
configuration-layer/load-lock-file	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/load-lock-file ()$/;"	f
configuration-layer/make-all-packages	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/make-all-packages (&optional skip-layer-discovery skip-layer-deps)$/;"	f
configuration-layer/make-layer	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/make-layer (layer-specs &optional obj usedp dir)$/;"	f
configuration-layer/make-package	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/make-package (pkg-specs layer-name &optional obj)$/;"	f
configuration-layer/make-packages-from-dotfile	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/make-packages-from-dotfile (&optional usedp)$/;"	f
configuration-layer/make-packages-from-layers	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/make-packages-from-layers$/;"	f
configuration-layer/message	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/message (msg &rest args)$/;"	f
configuration-layer/package-lazy-install-p	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/package-lazy-install-p (name)$/;"	f
configuration-layer/package-used-p	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/package-used-p (name)$/;"	f
configuration-layer/package-usedp	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defalias 'configuration-layer\/package-usedp$/;"	f
configuration-layer/remove-layer	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/remove-layer (layer-name)$/;"	f
configuration-layer/remove-layers	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/remove-layers (layer-names)$/;"	f
configuration-layer/retrieve-package-archives	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/retrieve-package-archives (&optional quiet force)$/;"	f
configuration-layer/rollback	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/rollback (slot)$/;"	f
configuration-layer/stable-elpa-init	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/stable-elpa-init ()$/;"	f
configuration-layer/stable-elpa-version	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/stable-elpa-version ()$/;"	f
configuration-layer/update-packages	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defun configuration-layer\/update-packages (&optional no-confirmation)$/;"	f
configureMappings	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:configureMappings(...) abort$/;"	f
confluence/init-confluence	conf/emacs/.emacs.d/layers/+web-services/confluence/packages.el	/^(defun confluence\/init-confluence ()$/;"	f
confluence/init-ox-confluence	conf/emacs/.emacs.d/layers/+web-services/confluence/packages.el	/^(defun confluence\/init-ox-confluence ())$/;"	f
confluence/pre-init-ox-confluence	conf/emacs/.emacs.d/layers/+web-services/confluence/packages.el	/^(defun confluence\/pre-init-ox-confluence ()$/;"	f
connect	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:connect(addr) abort$/;"	f
connection_made	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^    def connection_made(self, transport: typing.Any) -> None:$/;"	m	class:Process
conserve	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def conserve(self):$/;"	m	class:VisualContentPreserver
conserve_placeholder	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def conserve_placeholder(self, placeholder):$/;"	m	class:VisualContentPreserver
conssec	conf/zsh/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function conssec() {$/;"	f
consult--source-modified-persp-buffers	conf/emacs/.emacs.d/layers/+completion/compleseus/config.el	/^(define-obsolete-variable-alias 'consult--source-modified-persp-buffers$/;"	f
consult--source-persp-buffers	conf/emacs/.emacs.d/layers/+completion/compleseus/config.el	/^(define-obsolete-variable-alias 'consult--source-persp-buffers$/;"	f
consume100	conf/zsh/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function consume100() {$/;"	f
content	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/spec/terminal_session.rb	/^  def content(esc_seqs: false)$/;"	f	class:TerminalSession
content	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/spec/terminal_session.rb	/^  def content(esc_seqs: false)$/;"	f	class:TerminalSession
content	workflows/Ariafred/src/workflow/web.py	/^    def content(self):$/;"	m	class:Response
context	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def context(self):$/;"	m	class:SnippetDefinition
context	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def context(self):$/;"	m	class:SnippetUtil
continue	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:continue()$/;"	f
conv	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def conv(obj):$/;"	f	function:escape
convert2candidates	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def convert2candidates(li: typing.Any) -> Candidates:$/;"	f
convert2list	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def convert2list(expr: typing.Any) -> typing.List[typing.Any]:$/;"	f
convert_config_nvim	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:convert_config_nvim(config, create) abort$/;"	f
convert_image	workflows/Ariafred/src/workflow/notify.py	/^def convert_image(inpath, outpath, size):$/;"	f
convert_keys	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def convert_keys(self, keys):$/;"	m	class:VimInterfaceWindows
copy-as-format-packages	conf/emacs/.emacs.d/layers/+misc/copy-as-format/packages.el	/^(defconst copy-as-format-packages '(copy-as-format))$/;"	f
copy-as-format/init-copy-as-format	conf/emacs/.emacs.d/layers/+misc/copy-as-format/packages.el	/^(defun copy-as-format\/init-copy-as-format ()$/;"	f
copyAttributes	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func copyAttributes(dst *Node, src Token) {$/;"	f
copy_travis_yml	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/setup	/^copy_travis_yml() {$/;"	f
copybuffer	conf/zsh/.oh-my-zsh/plugins/copybuffer/copybuffer.plugin.zsh	/^copybuffer () {$/;"	f
copyfile	conf/zsh/.oh-my-zsh/plugins/copyfile/copyfile.plugin.zsh	/^function copyfile {$/;"	f
copypath	conf/zsh/.oh-my-zsh/plugins/copypath/copypath.plugin.zsh	/^function copypath {$/;"	f
coq/init-company-coq	conf/emacs/.emacs.d/layers/+lang/coq/packages.el	/^(defun coq\/init-company-coq ()$/;"	f
coq/init-proof-general	conf/emacs/.emacs.d/layers/+lang/coq/packages.el	/^(defun coq\/init-proof-general ()$/;"	f
coq/post-init-smartparens	conf/emacs/.emacs.d/layers/+lang/coq/packages.el	/^(defun coq\/post-init-smartparens ()$/;"	f
coq/post-init-vi-tilde-fringe	conf/emacs/.emacs.d/layers/+lang/coq/packages.el	/^(defun coq\/post-init-vi-tilde-fringe ()$/;"	f
could_match	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def could_match(self, before):$/;"	m	class:SnippetDefinition
count	conf/vim/.vim/plugged/vim-operator-user/autoload/operator/user.vim	/^function! s:count()$/;"	f
count-region	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defalias 'count-region 'count-words-region)$/;"	f
coverage_browser_callback	conf/vim/.vim/plugged/vim-go/autoload/go/coverage.vim	/^function! s:coverage_browser_callback(coverfile, job, exit_status, data)$/;"	f
coverage_callback	conf/vim/.vim/plugged/vim-go/autoload/go/coverage.vim	/^function! s:coverage_callback(coverfile, job, exit_status, data)$/;"	f
coverage_job	conf/vim/.vim/plugged/vim-go/autoload/go/coverage.vim	/^function s:coverage_job(args)$/;"	f
cprint	conf/zsh/.oh-my-zsh/plugins/aliases/termcolor.py	/^def cprint(text, color=None, on_color=None, attrs=None, **kwargs):$/;"	f
cpv	conf/zsh/.oh-my-zsh/plugins/cp/cp.plugin.zsh	/^cpv() {$/;"	f
create-frame-tiled-horizontally	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun create-frame-tiled-horizontally ()$/;"	f
create-frame-tiled-vertically	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun create-frame-tiled-vertically ()$/;"	f
create-spacemacs-theme	conf/emacs/.emacs.d/core/libs/spacemacs-theme/spacemacs-theme.el	/^(defun create-spacemacs-theme (variant theme-name)$/;"	f
createSequences	conf/vim/.vim/plugged/coc.nvim/bin/prompt.js	/^function createSequences(str) {$/;"	f	function:function
create_arguments	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:create_arguments(opts) abort$/;"	f
create_btns_buffer	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:create_btns_buffer(bufnr, width, buttons, borderbottom) abort$/;"	f
create_cmd	conf/vim/.vim/plugged/vim-go/autoload/go/tags.vim	/^func s:create_cmd(args) abort$/;"	f
create_directory	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^def create_directory(dirname):$/;"	f
create_directory_for_tests	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/setup	/^create_directory_for_tests() {$/;"	f
create_issue	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^    def create_issue(title: str, body: str) -> None:$/;"	m	class:GitHub
create_keyvals	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:create_keyvals(key, val) abort$/;"	f
create_layout	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:create_layout() abort$/;"	f
create_loading_buf	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! s:create_loading_buf() abort$/;"	f
create_mode_prefix	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:create_mode_prefix(mode, opts) abort$/;"	f
create_popup	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:create_popup(bufnr) abort$/;"	f
create_pr	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^    def create_pr(branch: str, title: str, body: str) -> None:$/;"	m	class:GitHub
create_project	conf/zsh/.oh-my-zsh/plugins/sublime/sublime.plugin.zsh	/^function create_project() {$/;"	f
create_prompt_win	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! s:create_prompt_win(bufnr, title, default, opts) abort$/;"	f
create_symlinks	sh/spf13-vim.sh	/^create_symlinks() {$/;"	f
create_test_plugin_helper	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^create_test_plugin_helper() {$/;"	f
creategomod	conf/vim/.vim/plugged/vim-go/autoload/gotest.vim	/^func! s:creategomod(modname, dir) abort$/;"	f
critical	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def critical(self, msg: str,$/;"	m	class:LoggingMixin
crystal-backend	conf/emacs/.emacs.d/layers/+lang/crystal/config.el	/^(defvar crystal-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'company-crystal)$/;"	f
crystal-enable-auto-format	conf/emacs/.emacs.d/layers/+lang/crystal/config.el	/^(defvar crystal-enable-auto-format nil$/;"	f
crystal-packages	conf/emacs/.emacs.d/layers/+lang/crystal/packages.el	/^(defconst crystal-packages$/;"	f
crystal/init-ameba	conf/emacs/.emacs.d/layers/+lang/crystal/packages.el	/^(defun crystal\/init-ameba ()$/;"	f
crystal/init-crystal-mode	conf/emacs/.emacs.d/layers/+lang/crystal/packages.el	/^(defun crystal\/init-crystal-mode ()$/;"	f
crystal/init-flycheck-crystal	conf/emacs/.emacs.d/layers/+lang/crystal/packages.el	/^(defun crystal\/init-flycheck-crystal ()$/;"	f
crystal/init-inf-crystal	conf/emacs/.emacs.d/layers/+lang/crystal/packages.el	/^(defun crystal\/init-inf-crystal ()$/;"	f
crystal/init-ob-crystal	conf/emacs/.emacs.d/layers/+lang/crystal/packages.el	/^(defun crystal\/init-ob-crystal ())$/;"	f
crystal/init-play-crystal	conf/emacs/.emacs.d/layers/+lang/crystal/packages.el	/^(defun crystal\/init-play-crystal ()$/;"	f
crystal/post-init-company	conf/emacs/.emacs.d/layers/+lang/crystal/packages.el	/^(defun crystal\/post-init-company ()$/;"	f
crystal/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/crystal/packages.el	/^(defun crystal\/post-init-flycheck ()$/;"	f
crystal/pre-init-ob-crystal	conf/emacs/.emacs.d/layers/+lang/crystal/packages.el	/^(defun crystal\/pre-init-ob-crystal ()$/;"	f
cscope/init-helm-cscope	conf/emacs/.emacs.d/layers/+tags/cscope/packages.el	/^(defun cscope\/init-helm-cscope ()$/;"	f
cscope/init-xcscope	conf/emacs/.emacs.d/layers/+tags/cscope/packages.el	/^(defun cscope\/init-xcscope ()$/;"	f
csharp-backend	conf/emacs/.emacs.d/layers/+lang/csharp/config.el	/^(defvar csharp-backend 'omnisharp$/;"	f
csharp/init-csharp-mode	conf/emacs/.emacs.d/layers/+lang/csharp/packages.el	/^(defun csharp\/init-csharp-mode ()$/;"	f
csharp/init-omnisharp	conf/emacs/.emacs.d/layers/+lang/csharp/packages.el	/^(defun csharp\/init-omnisharp ()$/;"	f
csharp/post-init-company	conf/emacs/.emacs.d/layers/+lang/csharp/packages.el	/^(defun csharp\/post-init-company ()$/;"	f
csharp/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/csharp/packages.el	/^(defun csharp\/post-init-counsel-gtags nil)$/;"	f
csharp/post-init-evil-matchit	conf/emacs/.emacs.d/layers/+lang/csharp/packages.el	/^(defun csharp\/post-init-evil-matchit ()$/;"	f
csharp/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/csharp/packages.el	/^(defun csharp\/post-init-flycheck ()$/;"	f
csharp/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/csharp/packages.el	/^(defun csharp\/post-init-ggtags ()$/;"	f
csi	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:csi(color, fg)$/;"	f
css-enable-lsp	conf/emacs/.emacs.d/layers/+lang/html/config.el	/^(defvar css-enable-lsp nil$/;"	f
csv/init-csv-mode	conf/emacs/.emacs.d/layers/+lang/csv/packages.el	/^(defun csv\/init-csv-mode ()$/;"	f
ctrlp#decls#accept	conf/vim/.vim/plugged/vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#accept(mode, str) abort$/;"	f
ctrlp#decls#cmd	conf/vim/.vim/plugged/vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#cmd(mode, ...) abort$/;"	f
ctrlp#decls#enter	conf/vim/.vim/plugged/vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#enter() abort$/;"	f
ctrlp#decls#exit	conf/vim/.vim/plugged/vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#exit() abort$/;"	f
ctrlp#decls#init	conf/vim/.vim/plugged/vim-go/autoload/ctrlp/decls.vim	/^function! ctrlp#decls#init() abort$/;"	f
current	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let current = line('w0')$/;"	v
current	sh/PEG.py	/^current = float(input("current profit:"))$/;"	v
current_branch	conf/zsh/.oh-my-zsh/plugins/git/git.plugin.zsh	/^function current_branch() {$/;"	f
current_epoch	conf/zsh/.oh-my-zsh/tools/check_for_upgrade.sh	/^function current_epoch() {$/;"	f
current_gemset	conf/zsh/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh	/^  function current_gemset() { echo "not supported" }$/;"	f
current_gemset	conf/zsh/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh	/^  function current_gemset() {$/;"	f
current_hunk	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:current_hunk() abort$/;"	f
current_ruby	conf/zsh/.oh-my-zsh/plugins/chruby/chruby.plugin.zsh	/^function current_ruby() {$/;"	f
current_ruby	conf/zsh/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh	/^  function current_ruby() { echo "not supported" }$/;"	f
current_ruby	conf/zsh/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh	/^  function current_ruby() {$/;"	f
current_session	conf/vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! s:current_session() abort$/;"	f
current_text	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def current_text(self):$/;"	m	class:TextObject
cursor	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def cursor(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
cursor	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def cursor(self, pos):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
cursor	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/spec/terminal_session.rb	/^  def cursor$/;"	f	class:TerminalSession
cursor	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/spec/terminal_session.rb	/^  def cursor$/;"	f	class:TerminalSession
cursor_in_two_hunks	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:cursor_in_two_hunks()$/;"	f
customOpenBookmark	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenBookmark(node) abort$/;"	f
customOpenDir	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenDir(node) abort$/;"	f
customOpenFile	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenFile(node) abort$/;"	f
cwd	conf/zsh/.oh-my-zsh/plugins/shell-proxy/proxy.py	/^cwd = os.path.dirname(__file__)$/;"	v
d	conf/zsh/.oh-my-zsh/lib/directories.zsh	/^function d () {$/;"	f
d/init-company-dcd	conf/emacs/.emacs.d/layers/+lang/d/packages.el	/^(defun d\/init-company-dcd ()$/;"	f
d/init-d-mode	conf/emacs/.emacs.d/layers/+lang/d/packages.el	/^(defun d\/init-d-mode ()$/;"	f
d/init-flycheck-dmd-dub	conf/emacs/.emacs.d/layers/+lang/d/packages.el	/^(defun d\/init-flycheck-dmd-dub ()$/;"	f
d/post-init-company	conf/emacs/.emacs.d/layers/+lang/d/packages.el	/^(defun d\/post-init-company ()$/;"	f
d/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/d/packages.el	/^(defun d\/post-init-counsel-gtags nil)$/;"	f
d/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/d/packages.el	/^(defun d\/post-init-flycheck ()$/;"	f
d/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/d/packages.el	/^(defun d\/post-init-ggtags ()$/;"	f
d0	conf/zsh/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function d0() {$/;"	f
dap-enable-mouse-support	conf/emacs/.emacs.d/layers/+tools/dap/config.el	/^(defvar dap-enable-mouse-support t$/;"	f
dap-enable-ui-controls	conf/emacs/.emacs.d/layers/+tools/dap/config.el	/^(defvar dap-enable-ui-controls t$/;"	f
dap-packages	conf/emacs/.emacs.d/layers/+tools/dap/packages.el	/^(defconst dap-packages$/;"	f
dap/init-dap-mode	conf/emacs/.emacs.d/layers/+tools/dap/packages.el	/^(defun dap\/init-dap-mode ()$/;"	f
dart-backend	conf/emacs/.emacs.d/layers/+lang/dart/config.el	/^(defvar dart-backend 'lsp$/;"	f
dart-packages	conf/emacs/.emacs.d/layers/+lang/dart/packages.el	/^(defconst dart-packages$/;"	f
dart/init-dart-mode	conf/emacs/.emacs.d/layers/+lang/dart/packages.el	/^(defun dart\/init-dart-mode ()$/;"	f
dart/init-dart-server	conf/emacs/.emacs.d/layers/+lang/dart/packages.el	/^(defun dart\/init-dart-server ()$/;"	f
dart/init-flutter	conf/emacs/.emacs.d/layers/+lang/dart/packages.el	/^(defun dart\/init-flutter ()$/;"	f
dart/init-lsp-dart	conf/emacs/.emacs.d/layers/+lang/dart/packages.el	/^(defun dart\/init-lsp-dart ()$/;"	f
dart/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/dart/packages.el	/^(defun dart\/post-init-flycheck ()$/;"	f
dart/show-buffer	conf/emacs/.emacs.d/layers/+lang/dart/packages.el	/^(defun dart\/show-buffer ()$/;"	f
darwin_specified	install.sh	/^darwin_specified() {$/;"	f
dash	conf/zsh/.oh-my-zsh/plugins/dash/dash.plugin.zsh	/^dash() { open -a Dash.app "dash:\/\/$(omz_urlencode -r $*)" }$/;"	f
dash-autoload-common-docsets	conf/emacs/.emacs.d/layers/+readers/dash/config.el	/^(defvar dash-autoload-common-docsets t$/;"	f
dash-docs-docset-newpath	conf/emacs/.emacs.d/layers/+readers/dash/config.el	/^(defvar dash-docs-docset-newpath "~\/.docsets"$/;"	f
dash-packages	conf/emacs/.emacs.d/layers/+readers/dash/packages.el	/^(defconst dash-packages$/;"	f
dash//activate-package-docsets	conf/emacs/.emacs.d/layers/+readers/dash/funcs.el	/^(defun dash\/\/activate-package-docsets (path)$/;"	f
dash/init-consult-dash	conf/emacs/.emacs.d/layers/+readers/dash/packages.el	/^(defun dash\/init-consult-dash ()$/;"	f
dash/init-counsel-dash	conf/emacs/.emacs.d/layers/+readers/dash/packages.el	/^(defun dash\/init-counsel-dash ()$/;"	f
dash/init-dash-at-point	conf/emacs/.emacs.d/layers/+readers/dash/packages.el	/^(defun dash\/init-dash-at-point ()$/;"	f
dash/init-helm-dash	conf/emacs/.emacs.d/layers/+readers/dash/packages.el	/^(defun dash\/init-helm-dash ()$/;"	f
dash/init-zeal-at-point	conf/emacs/.emacs.d/layers/+readers/dash/packages.el	/^(defun dash\/init-zeal-at-point ()$/;"	f
data_serializer	workflows/Ariafred/src/workflow/workflow.py	/^    def data_serializer(self):$/;"	m	class:Workflow
data_serializer	workflows/Ariafred/src/workflow/workflow.py	/^    def data_serializer(self, serializer_name):$/;"	m	class:Workflow
datadir	workflows/Ariafred/src/workflow/workflow.py	/^    def datadir(self):$/;"	m	class:Workflow
datafile	workflows/Ariafred/src/workflow/workflow.py	/^    def datafile(self, filename):$/;"	m	class:Workflow
debianversion	sh/shadowsocks-all.sh	/^debianversion(){$/;"	f
debug	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def debug(self, msg: str,$/;"	m	class:LoggingMixin
debug	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def debug(vim: Nvim, expr: typing.Any) -> None:$/;"	f
debug	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/debug.py	/^def debug(msg):$/;"	f
debug	conf/vim/.vim/plugged/vim-go/autoload/go/debug_test.vim	/^function! s:debug(...) abort$/;"	f
debug	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:debug(event, data) abort$/;"	f
debug	sh/spf13-vim.sh	/^debug() {$/;"	f
debug-additional-debuggers	conf/emacs/.emacs.d/layers/+tools/debug/config.el	/^(defvar debug-additional-debuggers '()$/;"	f
debug-packages	conf/emacs/.emacs.d/layers/+tools/debug/packages.el	/^(defconst debug-packages$/;"	f
debug/init-realgud	conf/emacs/.emacs.d/layers/+tools/debug/packages.el	/^(defun debug\/init-realgud ()$/;"	f
debugasync	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:debugasync(timer) abort$/;"	f
debugging	workflows/Ariafred/src/workflow/workflow.py	/^    def debugging(self):$/;"	m	class:Workflow
decode	workflows/Ariafred/src/workflow/workflow.py	/^    def decode(self, text, encoding=None, normalization=None):$/;"	m	class:Workflow
decode64	conf/zsh/.oh-my-zsh/plugins/encode64/encode64.plugin.zsh	/^decode64() {$/;"	f
decode_stream	workflows/Ariafred/src/workflow/web.py	/^        def decode_stream(iterator, r):$/;"	f	function:Response.iter_content
decodehex	conf/vim/.vim/plugged/vim-go/autoload/go/uri.vim	/^function! s:decodehex(value)$/;"	f
dedup	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:dedup(list)$/;"	f
def_job	conf/vim/.vim/plugged/vim-go/autoload/go/def.vim	/^function s:def_job(args, state) abort$/;"	f
default	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^        default="Terminal",$/;"	v
default	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^        default=1,$/;"	v
default	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^        default=False)$/;"	v
default	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^        default=False,$/;"	v
default	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let default = exists('&previewpopup') ? !empty(&previewpopup) : 0$/;"	v
default	conf/zsh/.oh-my-zsh/lib/functions.zsh	/^function default() {$/;"	f
defaultScope	conf/vim/.vim/plugged/vim-go/test/parse.go	/^	defaultScope scope = iota$/;"	c
defaultScopeStopTags	conf/vim/.vim/plugged/vim-go/test/parse.go	/^	defaultScopeStopTags = map[string][]a.Atom{$/;"	v
default_branch	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^    default_branch = "master"$/;"	v	class:Git
default_grep	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let default_grep = 'grep'$/;"	v
defaults	workflows/Ariafred/src/aria.py	/^    defaults = {$/;"	v
define_commands	conf/vim/.vim/autoload/plug.vim	/^function! s:define_commands()$/;"	f
define_completion_via_timer	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:define_completion_via_timer(event) abort$/;"	f
define_on_event	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:define_on_event(event) abort$/;"	f
define_sign_line_highlights	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:define_sign_line_highlights() abort$/;"	f
define_sign_linenr_highlights	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:define_sign_linenr_highlights() abort$/;"	f
define_sign_text	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:define_sign_text() abort$/;"	f
definitionHandler	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:definitionHandler(next, msg) abort dict$/;"	f
defs	conf/vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^function! s:defs(commands)$/;"	f
deft-packages	conf/emacs/.emacs.d/layers/+readers/deft/packages.el	/^(defconst deft-packages$/;"	f
deft-zetteldeft	conf/emacs/.emacs.d/layers/+readers/deft/config.el	/^(defvar deft-zetteldeft nil$/;"	f
deft/init-deft	conf/emacs/.emacs.d/layers/+readers/deft/packages.el	/^(defun deft\/init-deft ()$/;"	f
deft/init-zetteldeft	conf/emacs/.emacs.d/layers/+readers/deft/packages.el	/^(defun deft\/init-zetteldeft ()$/;"	f
deiconify-everything	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun deiconify-everything ()$/;"	f
del_instance	sh/kcptun.sh	/^del_instance() {$/;"	f
delete	conf/vim/.vim/autoload/plug.vim	/^function! s:delete(range, force)$/;"	f
delete-1-window-frames-on	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun delete-1-window-frames-on (buffer)$/;"	f
delete-other-frames	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun delete-other-frames (&optional frame)$/;"	f
delete-window	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defadvice delete-window (around delete-frame-if-one-win activate)$/;"	f
delete-windows-for	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun delete-windows-for (&optional buffer)$/;"	f
delete-windows-on	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun delete-windows-on (&optional buffer frame)$/;"	f
delete/iconify-window	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun delete\/iconify-window (&optional window frame-p)$/;"	f
delete/iconify-windows-on	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun delete\/iconify-windows-on (buffer &optional frame frame-p)$/;"	f
deleteBookmark	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:deleteBookmark(bookmark) abort$/;"	f
delete_expands	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:delete_expands()$/;"	f
delete_mark	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def delete_mark(name):$/;"	f
delete_op	conf/vim/.vim/autoload/plug.vim	/^function! s:delete_op(type, ...)$/;"	f
delete_password	workflows/Ariafred/src/workflow/workflow.py	/^    def delete_password(self, account, service=None):$/;"	m	class:Workflow
delete_paths	workflows/Ariafred/src/workflow/workflow.py	/^        def delete_paths(paths):$/;"	f	function:Workflow.store_data
deleteline	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:deleteline(start, end) abort$/;"	f
delta	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def delta(self, pos):$/;"	m	class:Position
deoplete#auto_complete	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#auto_complete(...) abort$/;"	f
deoplete#can_complete	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#can_complete() abort$/;"	f
deoplete#cancel_popup	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#cancel_popup() abort$/;"	f
deoplete#close_popup	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#close_popup() abort$/;"	f
deoplete#complete	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#complete() abort$/;"	f
deoplete#complete_common_string	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#complete_common_string() abort$/;"	f
deoplete#custom#_get	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_get() abort$/;"	f
deoplete#custom#_get_buffer	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_get_buffer() abort$/;"	f
deoplete#custom#_get_filetype_option	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_get_filetype_option(name, filetype, default) abort$/;"	f
deoplete#custom#_get_filter	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_get_filter(name) abort$/;"	f
deoplete#custom#_get_option	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_get_option(name) abort$/;"	f
deoplete#custom#_get_source	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_get_source(source_name) abort$/;"	f
deoplete#custom#_get_source_vars	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_get_source_vars(name) abort$/;"	f
deoplete#custom#_init	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_init() abort$/;"	f
deoplete#custom#_init_buffer	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_init_buffer() abort$/;"	f
deoplete#custom#_update_cache	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_update_cache() abort$/;"	f
deoplete#custom#buffer_filter	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#buffer_filter(filter_name, name_or_dict, ...) abort$/;"	f
deoplete#custom#buffer_option	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#buffer_option(name_or_dict, ...) abort$/;"	f
deoplete#custom#buffer_var	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#buffer_var(source_name, name_or_dict, ...) abort$/;"	f
deoplete#custom#filter	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#filter(filter_name, name_or_dict, ...) abort$/;"	f
deoplete#custom#option	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#option(name_or_dict, ...) abort$/;"	f
deoplete#custom#source	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#source(source_name, name_or_dict, ...) abort$/;"	f
deoplete#custom#var	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#var(source_name, name_or_dict, ...) abort$/;"	f
deoplete#disable	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#disable() abort$/;"	f
deoplete#enable	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#enable() abort$/;"	f
deoplete#enable_logging	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#enable_logging(level, logfile) abort$/;"	f
deoplete#handler#_async_timer_start	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_async_timer_start() abort$/;"	f
deoplete#handler#_check_omnifunc	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_check_omnifunc(context) abort$/;"	f
deoplete#handler#_check_prev_completion	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_check_prev_completion(event) abort$/;"	f
deoplete#handler#_completion_begin	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_completion_begin(event) abort$/;"	f
deoplete#handler#_do_complete	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_do_complete() abort$/;"	f
deoplete#handler#_init	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_init() abort$/;"	f
deoplete#handler#_skip_next_completion	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_skip_next_completion() abort$/;"	f
deoplete#init#_channel	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_channel() abort$/;"	f
deoplete#init#_channel_initialized	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_channel_initialized() abort$/;"	f
deoplete#init#_custom_variables	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_custom_variables() abort$/;"	f
deoplete#init#_disable_handler	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_disable_handler() abort$/;"	f
deoplete#init#_enable_handler	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_enable_handler() abort$/;"	f
deoplete#init#_initialize	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_initialize() abort$/;"	f
deoplete#init#_is_handler_enabled	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_is_handler_enabled() abort$/;"	f
deoplete#init#_msgpack_version_check	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_msgpack_version_check() abort$/;"	f
deoplete#init#_option	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_option() abort$/;"	f
deoplete#init#_prev_completion	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_prev_completion() abort$/;"	f
deoplete#init#_python_version_check	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_python_version_check() abort$/;"	f
deoplete#initialize	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#initialize() abort$/;"	f
deoplete#insert_candidate	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#insert_candidate(number) abort$/;"	f
deoplete#is_enabled	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#is_enabled() abort$/;"	f
deoplete#manual_complete	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#manual_complete(...) abort$/;"	f
deoplete#mapping#_can_complete	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_can_complete() abort$/;"	f
deoplete#mapping#_complete	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_complete() abort$/;"	f
deoplete#mapping#_complete_common_string	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_complete_common_string() abort$/;"	f
deoplete#mapping#_dummy	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_dummy(func) abort$/;"	f
deoplete#mapping#_init	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_init() abort$/;"	f
deoplete#mapping#_insert_candidate	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_insert_candidate(number) abort$/;"	f
deoplete#mapping#_prev_complete	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_prev_complete() abort$/;"	f
deoplete#mapping#_restore_completeopt	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_restore_completeopt() abort$/;"	f
deoplete#mapping#_rpcrequest_wrapper	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_rpcrequest_wrapper(sources) abort$/;"	f
deoplete#mapping#_set_completeopt	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_set_completeopt(is_async) abort$/;"	f
deoplete#mapping#_undo_completion	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_undo_completion() abort$/;"	f
deoplete#send_event	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#send_event(event, ...) abort$/;"	f
deoplete#smart_close_popup	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#smart_close_popup() abort$/;"	f
deoplete#toggle	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#toggle() abort$/;"	f
deoplete#undo_completion	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#undo_completion() abort$/;"	f
deoplete#util#check_eskk_phase_henkan	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#check_eskk_phase_henkan() abort$/;"	f
deoplete#util#check_popup	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#check_popup() abort$/;"	f
deoplete#util#convert2list	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#convert2list(expr) abort$/;"	f
deoplete#util#get_input	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_input(event) abort$/;"	f
deoplete#util#get_keyword_pattern	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_keyword_pattern(filetype) abort$/;"	f
deoplete#util#get_next_input	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_next_input(event) abort$/;"	f
deoplete#util#get_syn_names	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_syn_names() abort$/;"	f
deoplete#util#has_yarp	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#has_yarp() abort$/;"	f
deoplete#util#indent_current_line	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#indent_current_line() abort$/;"	f
deoplete#util#neovim_version	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#neovim_version() abort$/;"	f
deoplete#util#print_debug	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#print_debug(string) abort$/;"	f
deoplete#util#print_error	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#print_error(string, ...) abort$/;"	f
deoplete#util#print_warning	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#print_warning(string) abort$/;"	f
deoplete#util#rpcnotify	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#rpcnotify(method, context) abort$/;"	f
deoplete#util#split	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#split(string) abort$/;"	f
deoplete#util#string	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#string(expr) abort$/;"	f
deoplete#util#uniq	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#uniq(list) abort$/;"	f
deoplete#util#versioncmp	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#versioncmp(a, b) abort$/;"	f
deoplete#util#vimoption2python	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#vimoption2python(option) abort$/;"	f
deoplete#util#vimoption2python_not	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#vimoption2python_not(option) abort$/;"	f
deoplete_auto_completion_begin	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def deoplete_auto_completion_begin(context: Context) -> None:$/;"	f
deoplete_enable_logging	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def deoplete_enable_logging(context: Context) -> None:$/;"	f
deoplete_init	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def deoplete_init() -> None:$/;"	f
deoplete_manual_completion_begin	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def deoplete_manual_completion_begin(context: Context) -> None:$/;"	f
deoplete_on_event	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def deoplete_on_event(context: Context) -> None:$/;"	f
dequeueneocbs	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^function! s:dequeueneocbs(timer) abort$/;"	f
dequote	conf/zsh/.oh-my-zsh/plugins/gitfast/git-completion.bash	/^	function dequote(p,    bs_idx, out, esc, esc_idx, dec) {$/;"	f
desc	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^            desc=int(opts.desc))$/;"	v
description	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def description(self):$/;"	m	class:SnippetDefinition
dest	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^        dest="append")$/;"	v
dest	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^        dest="cache")$/;"	v
dest	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^        dest="format")$/;"	v
dest	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^        dest="url")$/;"	v
dest	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^        dest="verbose",$/;"	v
destroy	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/spec/terminal_session.rb	/^  def destroy$/;"	f	class:TerminalSession
destroy	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/spec/terminal_session.rb	/^  def destroy$/;"	f	class:TerminalSession
detect	conf/zsh/.oh-my-zsh/lib/clipboard.zsh	/^function detect-clipboard() {$/;"	f
detect_clang_format	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^function! s:detect_clang_format() abort$/;"	f
detect_style_file	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:detect_style_file() abort$/;"	f
dhall-packages	conf/emacs/.emacs.d/layers/+lang/dhall/packages.el	/^(defconst dhall-packages$/;"	f
dhall/init-dhall-mode	conf/emacs/.emacs.d/layers/+lang/dhall/packages.el	/^(defun dhall\/init-dhall-mode ()$/;"	f
dhall/post-init-lsp-mode	conf/emacs/.emacs.d/layers/+lang/dhall/packages.el	/^(defun dhall\/post-init-lsp-mode ()$/;"	f
diagnostic_after_write	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! s:diagnostic_after_write(contents, changes) abort$/;"	f
did_plugin_ultisnips	conf/vim/.vim/plugged/ultisnips/plugin/UltiSnips.vim	/^let did_plugin_ultisnips=1$/;"	v
diff	conf/vim/.vim/autoload/plug.vim	/^function! s:diff()$/;"	f
diff	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/diff.py	/^def diff(a, b, sline=0):$/;"	f
diff	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! s:diff(rline, aline, rlinenr, alinenr, rprefix, aprefix, regions, whole_line)$/;"	f
diff	conf/zsh/.oh-my-zsh/lib/theme-and-appearance.zsh	/^  function diff {$/;"	f
diff-hl-change	conf/emacs/.emacs.d/layers/+source-control/version-control/config.el	/^(defface diff-hl-change$/;"	f
diff-hl-delete	conf/emacs/.emacs.d/layers/+source-control/version-control/config.el	/^(defface diff-hl-delete$/;"	f
diff-hl-insert	conf/emacs/.emacs.d/layers/+source-control/version-control/config.el	/^(defface diff-hl-insert$/;"	f
diff_in_buffer_length	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def diff_in_buffer_length(self):$/;"	m	class:VimState
directory-files-recursive_ForOldEmacs	conf/emacs/.emacs.d/tests/doc/org-export-ftest.el	/^(defun directory-files-recursive_ForOldEmacs (directory match maxdepth ignore)$/;"	f
dirhistory_back	conf/zsh/.oh-my-zsh/plugins/dirhistory/dirhistory.plugin.zsh	/^function dirhistory_back() {$/;"	f
dirhistory_cd	conf/zsh/.oh-my-zsh/plugins/dirhistory/dirhistory.plugin.zsh	/^function dirhistory_cd(){$/;"	f
dirhistory_down	conf/zsh/.oh-my-zsh/plugins/dirhistory/dirhistory.plugin.zsh	/^function dirhistory_down() {$/;"	f
dirhistory_forward	conf/zsh/.oh-my-zsh/plugins/dirhistory/dirhistory.plugin.zsh	/^function dirhistory_forward() {$/;"	f
dirhistory_up	conf/zsh/.oh-my-zsh/plugins/dirhistory/dirhistory.plugin.zsh	/^function dirhistory_up() {$/;"	f
dirhistory_zle_dirhistory_back	conf/zsh/.oh-my-zsh/plugins/dirhistory/dirhistory.plugin.zsh	/^function dirhistory_zle_dirhistory_back() {$/;"	f
dirhistory_zle_dirhistory_down	conf/zsh/.oh-my-zsh/plugins/dirhistory/dirhistory.plugin.zsh	/^function dirhistory_zle_dirhistory_down() {$/;"	f
dirhistory_zle_dirhistory_future	conf/zsh/.oh-my-zsh/plugins/dirhistory/dirhistory.plugin.zsh	/^function dirhistory_zle_dirhistory_future() {$/;"	f
dirhistory_zle_dirhistory_up	conf/zsh/.oh-my-zsh/plugins/dirhistory/dirhistory.plugin.zsh	/^function dirhistory_zle_dirhistory_up() {$/;"	f
dirpath	conf/vim/.vim/autoload/plug.vim	/^  function! s:dirpath(path)$/;"	f
disable	conf/zsh/.oh-my-zsh/plugins/shell-proxy/proxy.py	/^    def disable(self):$/;"	m	class:CommandSet
disable-hybrid-editing-style	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/hybrid-mode/hybrid-mode.el	/^(defun disable-hybrid-editing-style ()$/;"	f
disable_selinux	sh/kcptun.sh	/^disable_selinux() {$/;"	f
disable_selinux	sh/shadowsocks-all.sh	/^disable_selinux() {$/;"	f
disable_selinux	sh/shadowsocks.sh	/^disable_selinux(){$/;"	f
display	conf/zsh/.oh-my-zsh/tools/changelog.sh	/^  function display:breaking {$/;"	f
display	conf/zsh/.oh-my-zsh/tools/changelog.sh	/^  function display:others {$/;"	f
display	conf/zsh/.oh-my-zsh/tools/changelog.sh	/^  function display:type {$/;"	f
display	conf/zsh/.oh-my-zsh/tools/changelog.sh	/^  function display:version {$/;"	f
display	conf/zsh/.oh-my-zsh/tools/changelog.sh	/^function display-release {$/;"	f
display-startup-echo-area-message	conf/emacs/.emacs.d/core/core-spacemacs.el	/^(defun display-startup-echo-area-message ()$/;"	f
displayHelp	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:displayHelp() abort$/;"	f
display_emoji	conf/zsh/.oh-my-zsh/plugins/emoji/emoji.plugin.zsh	/^function display_emoji() {$/;"	f
display_emotty	conf/zsh/.oh-my-zsh/plugins/emotty/emotty.plugin.zsh	/^function display_emotty() {$/;"	f
display_help	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/run_tests	/^display_help() {$/;"	f
display_message	conf/tmux/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^display_message() {$/;"	f
display_octozen	conf/zsh/.oh-my-zsh/plugins/octozen/octozen.plugin.zsh	/^function display_octozen() {$/;"	f
display_plugin_update_list	conf/tmux/.tmux/plugins/tpm/bindings/update_plugins	/^display_plugin_update_list() {$/;"	f
display_width	conf/vim/.vim/plugged/vim-snippets/pythonx/vimsnippets.py	/^def display_width(str):$/;"	f
distance	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-fns.el	/^(defun distance (pt1 pt2)$/;"	f
divergence	conf/zsh/.oh-my-zsh/plugins/git-prompt/gitstatus.py	/^                divergence = ' '.join(rest.split(' ')[1:])$/;"	v
divergence	conf/zsh/.oh-my-zsh/plugins/git-prompt/gitstatus.py	/^                divergence = divergence.lstrip('[').rstrip(']')$/;"	v
django/init-pony-mode	conf/emacs/.emacs.d/layers/+frameworks/django/packages.el	/^(defun django\/init-pony-mode ()$/;"	f
djvu-packages	conf/emacs/.emacs.d/layers/+readers/djvu/packages.el	/^(defconst djvu-packages$/;"	f
djvu-semi-continuous-scrolling	conf/emacs/.emacs.d/layers/+readers/djvu/config.el	/^(defvar djvu-semi-continuous-scrolling nil$/;"	f
djvu/init-djvu	conf/emacs/.emacs.d/layers/+readers/djvu/packages.el	/^(defun djvu\/init-djvu ()$/;"	f
djvu/init-djvu3	conf/emacs/.emacs.d/layers/+readers/djvu/packages.el	/^(defun djvu\/init-djvu3 ()$/;"	f
djvu/init-tablist	conf/emacs/.emacs.d/layers/+readers/djvu/packages.el	/^(defun djvu\/init-tablist ()$/;"	f
dls	conf/zsh/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function dls() {$/;"	f
do	conf/vim/.vim/autoload/plug.vim	/^function! s:do(pull, force, todo)$/;"	f
do_backup	sh/spf13-vim.sh	/^do_backup() {$/;"	f
do_help	workflows/Ariafred/src/workflow/workflow.py	/^        def do_help():$/;"	f	function:Workflow._register_default_magic
do_post_expand	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def do_post_expand(self, start, end, snippets_stack):$/;"	m	class:SnippetDefinition
do_post_jump	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def do_post_jump($/;"	m	class:SnippetDefinition
do_pre_expand	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def do_pre_expand(self, visual_content, snippets_stack):$/;"	m	class:SnippetDefinition
do_unmapping	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    do_unmapping = False$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
do_unmapping	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    do_unmapping = True$/;"	v	class:_SelectModeMappings
do_update	workflows/Ariafred/src/workflow/workflow.py	/^        def do_update():$/;"	f	function:Workflow._register_default_magic
doas	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/test-data/precommand4.zsh	/^doas(){}$/;"	f
doas	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/test-data/precommand4.zsh	/^doas(){}$/;"	f
doautocmd	conf/vim/.vim/autoload/plug.vim	/^function! s:doautocmd(...)$/;"	f
dobufread	conf/vim/.vim/autoload/plug.vim	/^function! s:dobufread(names)$/;"	f
docFromHoverResult	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:docFromHoverResult(msg) abort dict$/;"	f
docLinkFromHoverResult	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:docLinkFromHoverResult(msg) abort dict$/;"	f
docURL	conf/vim/.vim/plugged/vim-go/autoload/go/doc.vim	/^function! s:docURL() abort$/;"	f
docURLFor	conf/vim/.vim/plugged/vim-go/autoload/go/doc.vim	/^function! s:docURLFor(...) abort$/;"	f
docker-dockerfile-backend	conf/emacs/.emacs.d/layers/+tools/docker/config.el	/^(defvar docker-dockerfile-backend 'nil$/;"	f
docker-packages	conf/emacs/.emacs.d/layers/+tools/docker/packages.el	/^(defconst docker-packages$/;"	f
docker/init-docker	conf/emacs/.emacs.d/layers/+tools/docker/packages.el	/^(defun docker\/init-docker ()$/;"	f
docker/init-docker-tramp	conf/emacs/.emacs.d/layers/+tools/docker/packages.el	/^(defun docker\/init-docker-tramp ()$/;"	f
docker/init-dockerfile-mode	conf/emacs/.emacs.d/layers/+tools/docker/packages.el	/^(defun docker\/init-dockerfile-mode ()$/;"	f
docker/post-init-flycheck	conf/emacs/.emacs.d/layers/+tools/docker/packages.el	/^(defun docker\/post-init-flycheck ()$/;"	f
dotnet-packages	conf/emacs/.emacs.d/layers/+tools/dotnet/packages.el	/^(defconst dotnet-packages$/;"	f
dotnet/init-dotnet	conf/emacs/.emacs.d/layers/+tools/dotnet/packages.el	/^(defun dotnet\/init-dotnet ()$/;"	f
dotspacemacs--additional-theme-packages	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defvar dotspacemacs--additional-theme-packages '()$/;"	f
dotspacemacs--configuration-layers-saved	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defvar dotspacemacs--configuration-layers-saved nil$/;"	f
dotspacemacs--pretty-ignore-subdirs	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defvar dotspacemacs--pretty-ignore-subdirs$/;"	f
dotspacemacs--user-config-elapsed-time	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defvar dotspacemacs--user-config-elapsed-time 0$/;"	f
dotspacemacs-check-for-update	conf/emacs/.emacs.d/core/core-release-management.el	/^(defvar dotspacemacs-check-for-update)$/;"	f
dotspacemacs-directory	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defconst dotspacemacs-directory$/;"	f
dotspacemacs-emacs-command-key	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defvaralias 'dotspacemacs-emacs-command-key 'dotspacemacs-command-key$/;"	f
dotspacemacs-filepath	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defconst dotspacemacs-filepath$/;"	f
dotspacemacs-mode	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defalias 'dotspacemacs-mode 'emacs-lisp-mode)$/;"	f
dotspacemacs-template-directory	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defconst dotspacemacs-template-directory$/;"	f
dotspacemacs-test-results-buffer	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defconst dotspacemacs-test-results-buffer "*dotfile-test-results*"$/;"	f
dotspacemacs//check-layers-changed	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defun dotspacemacs\/\/check-layers-changed ()$/;"	f
dotspacemacs//ido-completing-read	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defun dotspacemacs\/\/ido-completing-read (prompt candidates)$/;"	f
dotspacemacs//prettify-spacemacs-docs	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defun dotspacemacs\/\/prettify-spacemacs-docs ()$/;"	f
dotspacemacs//profile-user-config	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defun dotspacemacs\/\/profile-user-config (f &rest args)$/;"	f
dotspacemacs//read-editing-style-config	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defun dotspacemacs\/\/read-editing-style-config (config)$/;"	f
dotspacemacs//test-dotspacemacs/init	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defun dotspacemacs\/\/test-dotspacemacs\/init ()$/;"	f
dotspacemacs//test-dotspacemacs/layers	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defun dotspacemacs\/\/test-dotspacemacs\/layers ()$/;"	f
dotspacemacs/add-layer	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defun dotspacemacs\/add-layer (layer-name)$/;"	f
dotspacemacs/call-user-env	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defun dotspacemacs\/call-user-env ()$/;"	f
dotspacemacs/config	conf/emacs/.emacs.d/tests/core/dotspacemacs.el	/^(defun dotspacemacs\/config ())$/;"	f
dotspacemacs/config	conf/emacs/.emacs.d/tests/doc/dotspacemacs.el	/^(defun dotspacemacs\/config ())$/;"	f
dotspacemacs/config	conf/emacs/.emacs.d/tests/layers/+distribution/spacemacs-base/dotspacemacs.el	/^(defun dotspacemacs\/config ())$/;"	f
dotspacemacs/config	conf/emacs/.emacs.d/tests/layers/+distribution/spacemacs/dotspacemacs.el	/^(defun dotspacemacs\/config ())$/;"	f
dotspacemacs/copy-template	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defun dotspacemacs\/copy-template ()$/;"	f
dotspacemacs/go-to-user-env	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defun dotspacemacs\/go-to-user-env ()$/;"	f
dotspacemacs/init	conf/emacs/.emacs.d/tests/core/dotspacemacs.el	/^(defun dotspacemacs\/init ())$/;"	f
dotspacemacs/init	conf/emacs/.emacs.d/tests/doc/dotspacemacs.el	/^(defun dotspacemacs\/init ())$/;"	f
dotspacemacs/init	conf/emacs/.emacs.d/tests/layers/+distribution/spacemacs-base/dotspacemacs.el	/^(defun dotspacemacs\/init ())$/;"	f
dotspacemacs/init	conf/emacs/.emacs.d/tests/layers/+distribution/spacemacs/dotspacemacs.el	/^(defun dotspacemacs\/init ())$/;"	f
dotspacemacs/install	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defun dotspacemacs\/install (arg)$/;"	f
dotspacemacs/layers	conf/emacs/.emacs.d/tests/core/dotspacemacs.el	/^(defun dotspacemacs\/layers ()$/;"	f
dotspacemacs/layers	conf/emacs/.emacs.d/tests/doc/dotspacemacs.el	/^(defun dotspacemacs\/layers ()$/;"	f
dotspacemacs/layers	conf/emacs/.emacs.d/tests/layers/+distribution/spacemacs-base/dotspacemacs.el	/^(defun dotspacemacs\/layers ()$/;"	f
dotspacemacs/layers	conf/emacs/.emacs.d/tests/layers/+distribution/spacemacs/dotspacemacs.el	/^(defun dotspacemacs\/layers ()$/;"	f
dotspacemacs/load-file	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defun dotspacemacs\/load-file ()$/;"	f
dotspacemacs/location	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defun dotspacemacs\/location ()$/;"	f
dotspacemacs/maybe-install-dotfile	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defun dotspacemacs\/maybe-install-dotfile ()$/;"	f
dotspacemacs/safe-load	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defun dotspacemacs\/safe-load ()$/;"	f
dotspacemacs/sync-configuration-layers	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defun dotspacemacs\/sync-configuration-layers (&optional arg)$/;"	f
dotspacemacs/test-dotfile	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defun dotspacemacs\/test-dotfile (&optional hide-buffer)$/;"	f
dotspacemacs/user-config	conf/emacs/.emacs.d/tests/core/dotspacemacs.el	/^(defun dotspacemacs\/user-config ())$/;"	f
dotspacemacs/user-config	conf/emacs/.emacs.d/tests/doc/dotspacemacs.el	/^(defun dotspacemacs\/user-config ())$/;"	f
dotspacemacs/user-config	conf/emacs/.emacs.d/tests/layers/+distribution/spacemacs-base/dotspacemacs.el	/^(defun dotspacemacs\/user-config ())$/;"	f
dotspacemacs/user-config	conf/emacs/.emacs.d/tests/layers/+distribution/spacemacs/dotspacemacs.el	/^(defun dotspacemacs\/user-config ())$/;"	f
dotspacemacs/user-init	conf/emacs/.emacs.d/tests/core/dotspacemacs.el	/^(defun dotspacemacs\/user-init ())$/;"	f
dotspacemacs/user-init	conf/emacs/.emacs.d/tests/doc/dotspacemacs.el	/^(defun dotspacemacs\/user-init ())$/;"	f
dotspacemacs/user-init	conf/emacs/.emacs.d/tests/layers/+distribution/spacemacs-base/dotspacemacs.el	/^(defun dotspacemacs\/user-init ())$/;"	f
dotspacemacs/user-init	conf/emacs/.emacs.d/tests/layers/+distribution/spacemacs/dotspacemacs.el	/^(defun dotspacemacs\/user-init ())$/;"	f
dotspacemacs|call-func	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defmacro dotspacemacs|call-func (func &optional msg)$/;"	f
dotspacemacs|symbol-value	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defmacro dotspacemacs|symbol-value (symbol)$/;"	f
dotspacemacs||let-init-test	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defmacro dotspacemacs||let-init-test (&rest body)$/;"	f
download	sh/shadowsocks-all.sh	/^download() {$/;"	f
download_file	sh/kcptun.sh	/^download_file(){$/;"	f
download_files	sh/shadowsocks-all.sh	/^download_files() {$/;"	f
download_files	sh/shadowsocks.sh	/^download_files(){$/;"	f
download_workflow	workflows/Ariafred/src/workflow/update.py	/^def download_workflow(url):$/;"	f
downlod_init_script	sh/kcptun.sh	/^downlod_init_script() {$/;"	f
dren	conf/zsh/.oh-my-zsh/plugins/drush/drush.plugin.zsh	/^function dren() {$/;"	f
drf	conf/zsh/.oh-my-zsh/plugins/drush/drush.plugin.zsh	/^function drf() {$/;"	f
drfi	conf/zsh/.oh-my-zsh/plugins/drush/drush.plugin.zsh	/^function drfi() {$/;"	f
dris	conf/zsh/.oh-my-zsh/plugins/drush/drush.plugin.zsh	/^function dris() {$/;"	f
drnew	conf/zsh/.oh-my-zsh/plugins/drush/drush.plugin.zsh	/^function drnew() {$/;"	f
droplr	conf/zsh/.oh-my-zsh/plugins/droplr/droplr.plugin.zsh	/^droplr() {$/;"	f
drpu	conf/zsh/.oh-my-zsh/plugins/drush/drush.plugin.zsh	/^function drpu() {$/;"	f
dtrt-indent-packages	conf/emacs/.emacs.d/layers/+misc/dtrt-indent/packages.el	/^(defconst dtrt-indent-packages '(dtrt-indent))$/;"	f
dtrt-indent/init-dtrt-indent	conf/emacs/.emacs.d/layers/+misc/dtrt-indent/packages.el	/^(defun dtrt-indent\/init-dtrt-indent ()$/;"	f
duckduckgo	conf/emacs/.emacs.d/layers/+tools/eaf/funcs.el	/^(defun duckduckgo ()$/;"	f
dumbify_punctuation	workflows/Ariafred/src/workflow/workflow.py	/^    def dumbify_punctuation(self, text):$/;"	m	class:Workflow
dump	workflows/Ariafred/src/workflow/workflow.py	/^    def dump(cls, obj, file_obj):$/;"	m	class:CPickleSerializer
dump	workflows/Ariafred/src/workflow/workflow.py	/^    def dump(cls, obj, file_obj):$/;"	m	class:JSONSerializer
dump	workflows/Ariafred/src/workflow/workflow.py	/^    def dump(cls, obj, file_obj):$/;"	m	class:PickleSerializer
eaf-packages	conf/emacs/.emacs.d/layers/+tools/eaf/packages.el	/^(defconst eaf-packages$/;"	f
eaf-toggle-dark-mode	conf/emacs/.emacs.d/layers/+tools/eaf/funcs.el	/^(defun eaf-toggle-dark-mode ()$/;"	f
eaf/init-eaf	conf/emacs/.emacs.d/layers/+tools/eaf/packages.el	/^(defun eaf\/init-eaf ()$/;"	f
ecd	conf/zsh/.oh-my-zsh/plugins/emacs/emacs.plugin.zsh	/^function ecd {$/;"	f
echo	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! s:echo(msg, hi)$/;"	f
echo_err	conf/tmux/.tmux/plugins/tpm/scripts/helpers/shell_echo_functions.sh	/^echo_err() {$/;"	f
echo_err	conf/tmux/.tmux/plugins/tpm/scripts/helpers/tmux_echo_functions.sh	/^echo_err() {$/;"	f
echo_go_info	conf/vim/.vim/plugged/vim-go/autoload/go/auto.vim	/^function! s:echo_go_info()$/;"	f
echo_headline	conf/emacs/.emacs.d/.circleci/shared	/^echo_headline () {$/;"	f
echo_ok	conf/tmux/.tmux/plugins/tpm/scripts/helpers/shell_echo_functions.sh	/^echo_ok() {$/;"	f
echo_ok	conf/tmux/.tmux/plugins/tpm/scripts/helpers/tmux_echo_functions.sh	/^echo_ok() {$/;"	f
echo_signature	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! s:echo_signature(parts)$/;"	f
echo_to_hierarchy	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/debug.py	/^def echo_to_hierarchy(text_object):$/;"	f
ed	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/test-data/opt-shwordsplit1.zsh	/^ed() { command ed "$@" }$/;"	f
ed	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/test-data/opt-shwordsplit1.zsh	/^ed() { command ed "$@" }$/;"	f
efile	conf/zsh/.oh-my-zsh/plugins/emacs/emacs.plugin.zsh	/^function efile {$/;"	f
eglot-packages	conf/emacs/.emacs.d/layers/+tools/eglot/packages.el	/^(defconst eglot-packages$/;"	f
eglot/init-eglot	conf/emacs/.emacs.d/layers/+tools/eglot/packages.el	/^(defun eglot\/init-eglot ()$/;"	f
ein-backend	conf/emacs/.emacs.d/layers/+tools/ipython-notebook/config.el	/^(defvar ein-backend 'nil$/;"	f
elasticsearch-packages	conf/emacs/.emacs.d/layers/+tools/elasticsearch/packages.el	/^(defconst elasticsearch-packages$/;"	f
elasticsearch/init-es-mode	conf/emacs/.emacs.d/layers/+tools/elasticsearch/packages.el	/^(defun elasticsearch\/init-es-mode ()$/;"	f
elasticsearch/post-init-company	conf/emacs/.emacs.d/layers/+tools/elasticsearch/packages.el	/^(defun elasticsearch\/post-init-company ()$/;"	f
elasticsearch/pre-init-org	conf/emacs/.emacs.d/layers/+tools/elasticsearch/packages.el	/^(defun elasticsearch\/pre-init-org ()$/;"	f
elem	workflows/Ariafred/src/workflow/workflow.py	/^    def elem(self):$/;"	m	class:Item
elementInScope	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func (p *parser) elementInScope(s scope, matchTags ...a.Atom) bool {$/;"	f
elfeed-enable-goodies	conf/emacs/.emacs.d/layers/+readers/elfeed/config.el	/^(defvar elfeed-enable-goodies t$/;"	f
elfeed-enable-web-interface	conf/emacs/.emacs.d/layers/+readers/elfeed/config.el	/^(defvar elfeed-enable-web-interface nil$/;"	f
elfeed/init-elfeed	conf/emacs/.emacs.d/layers/+readers/elfeed/packages.el	/^(defun elfeed\/init-elfeed ()$/;"	f
elfeed/init-elfeed-goodies	conf/emacs/.emacs.d/layers/+readers/elfeed/packages.el	/^(defun elfeed\/init-elfeed-goodies ()$/;"	f
elfeed/init-elfeed-org	conf/emacs/.emacs.d/layers/+readers/elfeed/packages.el	/^(defun elfeed\/init-elfeed-org ()$/;"	f
elfeed/init-elfeed-web	conf/emacs/.emacs.d/layers/+readers/elfeed/packages.el	/^(defun elfeed\/init-elfeed-web ()$/;"	f
elfeed/pre-init-elfeed-goodies	conf/emacs/.emacs.d/layers/+readers/elfeed/packages.el	/^(defun elfeed\/pre-init-elfeed-goodies ()$/;"	f
elfeed/pre-init-elfeed-org	conf/emacs/.emacs.d/layers/+readers/elfeed/packages.el	/^(defun elfeed\/pre-init-elfeed-org ()$/;"	f
elixir-backend	conf/emacs/.emacs.d/layers/+lang/elixir/config.el	/^(defvar elixir-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'alchemist)$/;"	f
elixir-ls-path	conf/emacs/.emacs.d/layers/+lang/elixir/config.el	/^(defvar elixir-ls-path "~\/elixir-ls\/release"$/;"	f
elixir-packages	conf/emacs/.emacs.d/layers/+lang/elixir/packages.el	/^(defconst elixir-packages$/;"	f
elixir/init-alchemist	conf/emacs/.emacs.d/layers/+lang/elixir/packages.el	/^(defun elixir\/init-alchemist ()$/;"	f
elixir/init-elixir-mode	conf/emacs/.emacs.d/layers/+lang/elixir/packages.el	/^(defun elixir\/init-elixir-mode ()$/;"	f
elixir/init-flycheck-credo	conf/emacs/.emacs.d/layers/+lang/elixir/packages.el	/^(defun elixir\/init-flycheck-credo ()$/;"	f
elixir/init-ob-elixir	conf/emacs/.emacs.d/layers/+lang/elixir/packages.el	/^(defun elixir\/init-ob-elixir ())$/;"	f
elixir/post-init-company	conf/emacs/.emacs.d/layers/+lang/elixir/packages.el	/^(defun elixir\/post-init-company ()$/;"	f
elixir/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/elixir/packages.el	/^(defun elixir\/post-init-counsel-gtags nil)$/;"	f
elixir/post-init-evil-matchit	conf/emacs/.emacs.d/layers/+lang/elixir/packages.el	/^(defun elixir\/post-init-evil-matchit ()$/;"	f
elixir/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/elixir/packages.el	/^(defun elixir\/post-init-flycheck ()$/;"	f
elixir/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/elixir/packages.el	/^(defun elixir\/post-init-ggtags ()$/;"	f
elixir/pre-init-dap-mode	conf/emacs/.emacs.d/layers/+lang/elixir/packages.el	/^(defun elixir\/pre-init-dap-mode ()$/;"	f
elixir/pre-init-ob-elixir	conf/emacs/.emacs.d/layers/+lang/elixir/packages.el	/^(defun elixir\/pre-init-ob-elixir ()$/;"	f
elixir/pre-init-popwin	conf/emacs/.emacs.d/layers/+lang/elixir/packages.el	/^(defun elixir\/pre-init-popwin ()$/;"	f
elixir/pre-init-smartparens	conf/emacs/.emacs.d/layers/+lang/elixir/packages.el	/^(defun elixir\/pre-init-smartparens ()$/;"	f
elm-backend	conf/emacs/.emacs.d/layers/+lang/elm/config.el	/^(defvar elm-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp nil)$/;"	f
elm-packages	conf/emacs/.emacs.d/layers/+lang/elm/packages.el	/^(defconst elm-packages$/;"	f
elm/init-elm-mode	conf/emacs/.emacs.d/layers/+lang/elm/packages.el	/^(defun elm\/init-elm-mode ()$/;"	f
elm/init-elm-test-runner	conf/emacs/.emacs.d/layers/+lang/elm/packages.el	/^(defun elm\/init-elm-test-runner ()$/;"	f
elm/init-flycheck-elm	conf/emacs/.emacs.d/layers/+lang/elm/packages.el	/^(defun elm\/init-flycheck-elm ()$/;"	f
elm/post-init-company	conf/emacs/.emacs.d/layers/+lang/elm/packages.el	/^(defun elm\/post-init-company ()$/;"	f
elm/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/elm/packages.el	/^(defun elm\/post-init-flycheck ()$/;"	f
elm/post-init-smartparens	conf/emacs/.emacs.d/layers/+lang/elm/packages.el	/^(defun elm\/post-init-smartparens ()$/;"	f
elm/pre-init-popwin	conf/emacs/.emacs.d/layers/+lang/elm/packages.el	/^(defun elm\/pre-init-popwin ()$/;"	f
emacs-built-in-themes	conf/emacs/.emacs.d/core/core-themes-support.el	/^(defconst emacs-built-in-themes (cons 'default (custom-available-themes))$/;"	f
emacs-lisp-format-on-save	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/config.el	/^(defvar emacs-lisp-format-on-save t$/;"	f
emacs-lisp-hide-namespace-prefix	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/config.el	/^(defvar emacs-lisp-hide-namespace-prefix nil$/;"	f
emacs-lisp-packages	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defconst emacs-lisp-packages$/;"	f
emacs-lisp/init-auto-compile	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/init-auto-compile ()$/;"	f
emacs-lisp/init-debug	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/init-debug ()$/;"	f
emacs-lisp/init-edebug	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/init-edebug ()$/;"	f
emacs-lisp/init-elisp-def	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/init-elisp-def ()$/;"	f
emacs-lisp/init-elisp-demos	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/init-elisp-demos ()$/;"	f
emacs-lisp/init-elisp-slime-nav	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/init-elisp-slime-nav ()$/;"	f
emacs-lisp/init-emacs-lisp	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/init-emacs-lisp ()$/;"	f
emacs-lisp/init-emr	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/init-emr ()$/;"	f
emacs-lisp/init-flycheck-elsa	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/init-flycheck-elsa ()$/;"	f
emacs-lisp/init-flycheck-package	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/init-flycheck-package ()$/;"	f
emacs-lisp/init-ielm	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/init-ielm ()$/;"	f
emacs-lisp/init-inspector	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/init-inspector ()$/;"	f
emacs-lisp/init-macrostep	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/init-macrostep ()$/;"	f
emacs-lisp/init-nameless	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/init-nameless ()$/;"	f
emacs-lisp/init-overseer	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/init-overseer ()$/;"	f
emacs-lisp/post-init-company	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/post-init-company ()$/;"	f
emacs-lisp/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/post-init-counsel-gtags nil)$/;"	f
emacs-lisp/post-init-eldoc	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/post-init-eldoc ()$/;"	f
emacs-lisp/post-init-eval-sexp-fu	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/post-init-eval-sexp-fu ()$/;"	f
emacs-lisp/post-init-evil	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/post-init-evil ()$/;"	f
emacs-lisp/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/post-init-flycheck ()$/;"	f
emacs-lisp/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/post-init-ggtags ()$/;"	f
emacs-lisp/post-init-rainbow-identifiers	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/post-init-rainbow-identifiers ()$/;"	f
emacs-lisp/post-init-semantic	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/post-init-semantic ()$/;"	f
emacs-lisp/post-init-smartparens	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/post-init-smartparens ()$/;"	f
emacs-lisp/post-init-srefactor	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/post-init-srefactor ()$/;"	f
emacs-lisp/pre-dump	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/config.el	/^(defun emacs-lisp\/pre-dump ()$/;"	f
emacs-lisp/pre-init-evil-cleverparens	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/packages.el	/^(defun emacs-lisp\/pre-init-evil-cleverparens ()$/;"	f
emacs-start-time	conf/emacs/.emacs.d/init.el	/^(defconst emacs-start-time (current-time))$/;"	f
emacs-tutorial	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defalias 'emacs-tutorial 'help-with-tutorial)$/;"	f
emacsfun	conf/zsh/.oh-my-zsh/plugins/emacs/emacsclient.sh	/^emacsfun() {$/;"	f
emberjs-packages	conf/emacs/.emacs.d/layers/+frameworks/emberjs/packages.el	/^(defconst emberjs-packages$/;"	f
emberjs/init-ember-mode	conf/emacs/.emacs.d/layers/+frameworks/emberjs/packages.el	/^(defun emberjs\/init-ember-mode ()$/;"	f
emberjs/init-ember-yasnippets	conf/emacs/.emacs.d/layers/+frameworks/emberjs/packages.el	/^(defun emberjs\/init-ember-yasnippets ()$/;"	f
emoji	conf/zsh/.oh-my-zsh/plugins/emoji-clock/emoji-clock.plugin.zsh	/^function emoji-clock() {$/;"	f
emoji-packages	conf/emacs/.emacs.d/layers/+fun/emoji/packages.el	/^(defconst emoji-packages$/;"	f
emoji/init-company-emoji	conf/emacs/.emacs.d/layers/+fun/emoji/packages.el	/^(defun emoji\/init-company-emoji ()$/;"	f
emoji/init-emoji-cheat-sheet-plus	conf/emacs/.emacs.d/layers/+fun/emoji/packages.el	/^(defun emoji\/init-emoji-cheat-sheet-plus ()$/;"	f
emoji/init-emojify	conf/emacs/.emacs.d/layers/+fun/emoji/packages.el	/^(defun emoji\/init-emojify ()$/;"	f
emoji_database	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^emoji_database = []$/;"	v
emoji_groups	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^emoji_groups = {"fruits": "\\n", "vehicles": "\\n", "hands": "\\n",$/;"	v
emoji_map	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^        emoji_map = "emoji_flags"$/;"	v
emoji_map	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^        emoji_map = "emoji_mod"$/;"	v
emoji_map	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^    emoji_map = "emoji"$/;"	v
emoji_match	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^    emoji_match = re.findall(regex_emoji, line)$/;"	v
emotty	conf/zsh/.oh-my-zsh/plugins/emotty/emotty.plugin.zsh	/^function emotty() {$/;"	f
empty_border	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:empty_border(border) abort$/;"	f
empty_gh	conf/zsh/.oh-my-zsh/plugins/github/github.plugin.zsh	/^empty_gh() { # [NAME_OF_REPO]$/;"	f
en/disable-command	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(define-advice en\/disable-command (:around (orig-f &rest args) write-to-dotspacemacs-instead)$/;"	f
enable	conf/zsh/.oh-my-zsh/plugins/shell-proxy/proxy.py	/^    def enable(self):$/;"	m	class:CommandSet
enable-flyspell-auto-completion	conf/emacs/.emacs.d/layers/+checkers/spell-checking/config.el	/^(defvar enable-flyspell-auto-completion nil$/;"	f
enable-hybrid-editing-style	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/hybrid-mode/hybrid-mode.el	/^(defun enable-hybrid-editing-style ()$/;"	f
enable_logging	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def enable_logging(self, context: Context) -> None:$/;"	m	class:DeopleteHandlers
enable_logging	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def enable_logging(self) -> None:$/;"	m	class:Deoplete
enable_logging	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def enable_logging(self) -> None:$/;"	m	class:_Parent
enable_staging_from_hunk_preview_window	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:enable_staging_from_hunk_preview_window()$/;"	f
enable_syntax	conf/vim/.vim/plugged/vim-go/autoload/ctrlp/decls.vim	/^function! s:enable_syntax() abort$/;"	f
encode	conf/vim/.vim/plugged/vim-go/autoload/go/uri.vim	/^function! s:encode(value, unreserved)$/;"	f
encode64	conf/zsh/.oh-my-zsh/plugins/encode64/encode64.plugin.zsh	/^encode64() {$/;"	f
encode_multipart_formdata	workflows/Ariafred/src/workflow/web.py	/^def encode_multipart_formdata(fields, files):$/;"	f
encodechar	conf/vim/.vim/plugged/vim-go/autoload/go/uri.vim	/^function! s:encodechar(value)$/;"	f
encodefile64	conf/zsh/.oh-my-zsh/plugins/encode64/encode64.plugin.zsh	/^encodefile64() {$/;"	f
encoding	workflows/Ariafred/src/workflow/web.py	/^    def encoding(self):$/;"	m	class:Response
end	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def end(self):$/;"	m	class:TextObject
end_message	conf/tmux/.tmux/plugins/tpm/scripts/helpers/tmux_echo_functions.sh	/^end_message() {$/;"	f
enlarge-font	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun enlarge-font (&optional increment frame)$/;"	f
enlarge-font-tries	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defcustom enlarge-font-tries 100$/;"	f
enlarge-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun enlarge-frame (&optional increment frame) ; Suggested binding: `C-M-down'.$/;"	f
enlarge-frame-horizontally	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun enlarge-frame-horizontally (&optional increment frame) ; Suggested binding: `C-M-right'.$/;"	f
enlarge-window-horizontally-repeat	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun enlarge-window-horizontally-repeat () ; Emacs 22+$/;"	f
enlarge-window-repeat	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun enlarge-window-repeat ()         ; Emacs 22+$/;"	f
enlarge/shrink-window	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun enlarge\/shrink-window (arg)      ; Emacs 22+$/;"	f
enlarge/shrink-window-repeat	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun enlarge\/shrink-window-repeat ()  ; Emacs 22+$/;"	f
ensure	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def ensure(self, filetypes):$/;"	m	class:SnippetSource
ensure	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def ensure(self, filetypes):$/;"	m	class:SnippetFileSource
ensureWorkspace	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:ensureWorkspace(dir)$/;"	f
ensure_tpm_path_exists	conf/tmux/.tmux/plugins/tpm/scripts/helpers/utility.sh	/^ensure_tpm_path_exists() {$/;"	f
env_default	conf/zsh/.oh-my-zsh/lib/functions.zsh	/^function env_default() {$/;"	f
epub-packages	conf/emacs/.emacs.d/layers/+readers/epub/packages.el	/^(defconst epub-packages '(nov))$/;"	f
epub/init-nov	conf/emacs/.emacs.d/layers/+readers/epub/packages.el	/^(defun epub\/init-nov ()$/;"	f
erc-enable-notifications	conf/emacs/.emacs.d/layers/+chat/erc/config.el	/^(defvar erc-enable-notifications t$/;"	f
erc-enable-sasl-auth	conf/emacs/.emacs.d/layers/+chat/erc/config.el	/^(defvar erc-enable-sasl-auth nil$/;"	f
erc-packages	conf/emacs/.emacs.d/layers/+chat/erc/packages.el	/^(defconst erc-packages$/;"	f
erc-server-list	conf/emacs/.emacs.d/layers/+chat/erc/config.el	/^(defvar erc-server-list nil$/;"	f
erc-spacemacs-layout-binding	conf/emacs/.emacs.d/layers/+chat/erc/config.el	/^(defvar erc-spacemacs-layout-binding "E"$/;"	f
erc-spacemacs-layout-name	conf/emacs/.emacs.d/layers/+chat/erc/config.el	/^(defvar erc-spacemacs-layout-name "@ERC"$/;"	f
erc-tex-dvipng-program	conf/emacs/.emacs.d/layers/+chat/erc/local/erc-tex/erc-tex.el	/^(defvar erc-tex-dvipng-program "dvipng"$/;"	f
erc-tex-image-edit	conf/emacs/.emacs.d/layers/+chat/erc/local/erc-tex/erc-tex.el	/^(defun erc-tex-image-edit ()$/;"	f
erc-tex-image-keymap	conf/emacs/.emacs.d/layers/+chat/erc/local/erc-tex/erc-tex.el	/^(defvar erc-tex-image-keymap$/;"	f
erc-tex-image-size	conf/emacs/.emacs.d/layers/+chat/erc/local/erc-tex/erc-tex.el	/^(defvar erc-tex-image-size 1.2$/;"	f
erc-tex-latex-program	conf/emacs/.emacs.d/layers/+chat/erc/local/erc-tex/erc-tex.el	/^(defvar erc-tex-latex-program "latex"$/;"	f
erc-tex-make-image	conf/emacs/.emacs.d/layers/+chat/erc/local/erc-tex/erc-tex.el	/^(defun erc-tex-make-image (math-expression fg bg)$/;"	f
erc-tex-render	conf/emacs/.emacs.d/layers/+chat/erc/local/erc-tex/erc-tex.el	/^(defun erc-tex-render (&optional fg bg)$/;"	f
erc-tex-render-insert	conf/emacs/.emacs.d/layers/+chat/erc/local/erc-tex/erc-tex.el	/^(defun erc-tex-render-insert ()$/;"	f
erc-tex-render-send	conf/emacs/.emacs.d/layers/+chat/erc/local/erc-tex/erc-tex.el	/^(defun erc-tex-render-send ()$/;"	f
erc-tex-run-dvipng	conf/emacs/.emacs.d/layers/+chat/erc/local/erc-tex/erc-tex.el	/^(defsubst erc-tex-run-dvipng (&rest arguments)$/;"	f
erc-tex-run-latex	conf/emacs/.emacs.d/layers/+chat/erc/local/erc-tex/erc-tex.el	/^(defsubst erc-tex-run-latex (&rest arguments)$/;"	f
erc-yank	conf/emacs/.emacs.d/layers/+chat/erc/local/erc-yank/erc-yank.el	/^(defgroup erc-yank nil$/;"	f
erc-yank	conf/emacs/.emacs.d/layers/+chat/erc/local/erc-yank/erc-yank.el	/^(defun erc-yank (&optional arg)$/;"	f
erc-yank-display-text-on-prompt	conf/emacs/.emacs.d/layers/+chat/erc/local/erc-yank/erc-yank.el	/^(defcustom erc-yank-display-text-on-prompt t$/;"	f
erc-yank-flood-limit	conf/emacs/.emacs.d/layers/+chat/erc/local/erc-yank/erc-yank.el	/^(defcustom erc-yank-flood-limit 5$/;"	f
erc-yank-query-before-gisting	conf/emacs/.emacs.d/layers/+chat/erc/local/erc-yank/erc-yank.el	/^(defcustom erc-yank-query-before-gisting t$/;"	f
erc//servers	conf/emacs/.emacs.d/layers/+chat/erc/funcs.el	/^(defun erc\/\/servers (server-list)$/;"	f
erc/default-servers	conf/emacs/.emacs.d/layers/+chat/erc/funcs.el	/^(defun erc\/default-servers ()$/;"	f
erc/init-erc	conf/emacs/.emacs.d/layers/+chat/erc/packages.el	/^(defun erc\/init-erc ()$/;"	f
erc/init-erc-gitter	conf/emacs/.emacs.d/layers/+chat/erc/packages.el	/^(defun erc\/init-erc-gitter ()$/;"	f
erc/init-erc-hl-nicks	conf/emacs/.emacs.d/layers/+chat/erc/packages.el	/^(defun erc\/init-erc-hl-nicks ())$/;"	f
erc/init-erc-image	conf/emacs/.emacs.d/layers/+chat/erc/packages.el	/^(defun erc\/init-erc-image ()$/;"	f
erc/init-erc-social-graph	conf/emacs/.emacs.d/layers/+chat/erc/packages.el	/^(defun erc\/init-erc-social-graph ())$/;"	f
erc/init-erc-terminal-notifier	conf/emacs/.emacs.d/layers/+chat/erc/packages.el	/^(defun erc\/init-erc-terminal-notifier ()$/;"	f
erc/init-erc-tex	conf/emacs/.emacs.d/layers/+chat/erc/packages.el	/^(defun erc\/init-erc-tex ())$/;"	f
erc/init-erc-tweet	conf/emacs/.emacs.d/layers/+chat/erc/packages.el	/^(defun erc\/init-erc-tweet ())$/;"	f
erc/init-erc-view-log	conf/emacs/.emacs.d/layers/+chat/erc/packages.el	/^(defun erc\/init-erc-view-log ()$/;"	f
erc/init-erc-yank	conf/emacs/.emacs.d/layers/+chat/erc/packages.el	/^(defun erc\/init-erc-yank ())$/;"	f
erc/init-erc-yt	conf/emacs/.emacs.d/layers/+chat/erc/packages.el	/^(defun erc\/init-erc-yt ())$/;"	f
erc/post-init-company	conf/emacs/.emacs.d/layers/+chat/erc/packages.el	/^(defun erc\/post-init-company ()$/;"	f
erc/post-init-company-emoji	conf/emacs/.emacs.d/layers/+chat/erc/packages.el	/^(defun erc\/post-init-company-emoji ()$/;"	f
erc/post-init-emoji-cheat-sheet-plus	conf/emacs/.emacs.d/layers/+chat/erc/packages.el	/^(defun erc\/post-init-emoji-cheat-sheet-plus ()$/;"	f
erc/post-init-window-purpose	conf/emacs/.emacs.d/layers/+chat/erc/packages.el	/^(defun erc\/post-init-window-purpose ()$/;"	f
erc/pre-init-erc-hl-nicks	conf/emacs/.emacs.d/layers/+chat/erc/packages.el	/^(defun erc\/pre-init-erc-hl-nicks ()$/;"	f
erc/pre-init-erc-social-graph	conf/emacs/.emacs.d/layers/+chat/erc/packages.el	/^(defun erc\/pre-init-erc-social-graph ()$/;"	f
erc/pre-init-erc-tex	conf/emacs/.emacs.d/layers/+chat/erc/packages.el	/^(defun erc\/pre-init-erc-tex ()$/;"	f
erc/pre-init-erc-tweet	conf/emacs/.emacs.d/layers/+chat/erc/packages.el	/^(defun erc\/pre-init-erc-tweet ()$/;"	f
erc/pre-init-erc-yank	conf/emacs/.emacs.d/layers/+chat/erc/packages.el	/^(defun erc\/pre-init-erc-yank ()$/;"	f
erc/pre-init-erc-yt	conf/emacs/.emacs.d/layers/+chat/erc/packages.el	/^(defun erc\/pre-init-erc-yt ()$/;"	f
erc/pre-init-persp-mode	conf/emacs/.emacs.d/layers/+chat/erc/packages.el	/^(defun erc\/pre-init-persp-mode ()$/;"	f
erlang-backend	conf/emacs/.emacs.d/layers/+lang/erlang/config.el	/^(defvar erlang-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'company-erlang)$/;"	f
erlang-fill-column	conf/emacs/.emacs.d/layers/+lang/erlang/config.el	/^(defvar erlang-fill-column 80$/;"	f
erlang/init-erlang	conf/emacs/.emacs.d/layers/+lang/erlang/packages.el	/^(defun erlang\/init-erlang ()$/;"	f
erlang/post-init-company	conf/emacs/.emacs.d/layers/+lang/erlang/packages.el	/^(defun erlang\/post-init-company ()$/;"	f
erlang/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/erlang/packages.el	/^(defun erlang\/post-init-counsel-gtags nil)$/;"	f
erlang/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/erlang/packages.el	/^(defun erlang\/post-init-flycheck ()$/;"	f
erlang/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/erlang/packages.el	/^(defun erlang\/post-init-ggtags ()$/;"	f
erlang/pre-init-dap-mode	conf/emacs/.emacs.d/layers/+lang/erlang/packages.el	/^(defun erlang\/pre-init-dap-mode ()$/;"	f
err	conf/vim/.vim/autoload/plug.vim	/^function! s:err(msg)$/;"	f
err	sh/clang_format.sh	/^err() {$/;"	f
err_cb	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:err_cb(ch, msg) abort$/;"	f
errcheck	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/errcheck/errcheck.go	/^package errcheck$/;"	p
errcheck	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/errcheck/errcheck_test.go	/^package errcheck$/;"	p
error	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def error(self, msg: str,$/;"	m	class:LoggingMixin
error	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def error(vim: Nvim, expr: typing.Any) -> None:$/;"	f
error	sh/spf13-vim.sh	/^error() {$/;"	f
error_detect_depends	sh/shadowsocks-all.sh	/^error_detect_depends(){$/;"	f
error_message	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:error_message(result) abort$/;"	f
error_tb	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def error_tb(vim: Nvim, msg: str) -> None:$/;"	f
error_vim	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def error_vim(vim: Nvim, msg: str) -> None:$/;"	f
errorformat	conf/vim/.vim/plugged/vim-go/autoload/go/lint.vim	/^function! s:errorformat(metalinter) abort$/;"	f
errorformat	conf/vim/.vim/plugged/vim-go/autoload/go/test.vim	/^function! s:errorformat() abort$/;"	f
esc	conf/vim/.vim/autoload/plug.vim	/^function! s:esc(path)$/;"	f
escape	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def escape(expr: str) -> str:$/;"	f
escape	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:escape(path)$/;"	f
escape	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text.py	/^def escape(text, chars):$/;"	f
escape	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def escape(inp):$/;"	f
escape	workflows/Ariafred/src/aria_actions.py	/^def escape(s, char=' '):$/;"	f
escape	workflows/Ariafred/src/notifier.py	/^def escape(s, char=' '):$/;"	f
escape_for_bash	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:escape_for_bash(path)$/;"	f
escape_space	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:escape_space(text) abort$/;"	f
escrtp	conf/vim/.vim/autoload/plug.vim	/^function! s:escrtp(path)$/;"	f
ess-assign-key	conf/emacs/.emacs.d/layers/+lang/ess/config.el	/^(defvar ess-assign-key nil$/;"	f
ess-packages	conf/emacs/.emacs.d/layers/+lang/ess/packages.el	/^(defconst ess-packages$/;"	f
ess-r-backend	conf/emacs/.emacs.d/layers/+lang/ess/config.el	/^(defvar ess-r-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'ess)$/;"	f
ess/init-ess	conf/emacs/.emacs.d/layers/+lang/ess/packages.el	/^(defun ess\/init-ess ()$/;"	f
ess/init-ess-R-data-view	conf/emacs/.emacs.d/layers/+lang/ess/packages.el	/^(defun ess\/init-ess-R-data-view ()$/;"	f
ess/post-init-company	conf/emacs/.emacs.d/layers/+lang/ess/packages.el	/^(defun ess\/post-init-company ()$/;"	f
ess/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/ess/packages.el	/^(defun ess\/post-init-flycheck ()$/;"	f
ess/pre-init-golden-ratio	conf/emacs/.emacs.d/layers/+lang/ess/packages.el	/^(defun ess\/pre-init-golden-ratio ()$/;"	f
ess/pre-init-org	conf/emacs/.emacs.d/layers/+lang/ess/packages.el	/^(defun ess\/pre-init-org ()$/;"	f
eval	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:eval(dict, key, arg)$/;"	f
eval	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def eval(text):$/;"	f
eval	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:eval(arg) abort$/;"	f
evalResult	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:evalResult(res) abort$/;"	f
eval_tree	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:eval_tree(var, nest, isMapOrSliceChild) abort$/;"	f
evernote-packages	conf/emacs/.emacs.d/layers/+web-services/evernote/packages.el	/^(defconst evernote-packages$/;"	f
evernote/init-geeknote	conf/emacs/.emacs.d/layers/+web-services/evernote/packages.el	/^(defun evernote\/init-geeknote ()$/;"	f
evil-better-jumper-packages	conf/emacs/.emacs.d/layers/+vim/evil-better-jumper/packages.el	/^(defconst evil-better-jumper-packages$/;"	f
evil-better-jumper/init-better-jumper	conf/emacs/.emacs.d/layers/+vim/evil-better-jumper/packages.el	/^(defun evil-better-jumper\/init-better-jumper ()$/;"	f
evil-better-jumper/set-jump-a	conf/emacs/.emacs.d/layers/+vim/evil-better-jumper/funcs.el	/^(defun evil-better-jumper\/set-jump-a (orig-fn &rest args)$/;"	f
evil-commentary/init-evil-commentary	conf/emacs/.emacs.d/layers/+vim/evil-commentary/packages.el	/^(defun evil-commentary\/init-evil-commentary ()$/;"	f
evil-evilified-state-exit	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(defalias 'evil-evilified-state-exit 'evilified-state--evilified-state-on-exit)$/;"	f
evil-evilified-state-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(define-key evil-evilified-state-map ":" 'evil-ex)$/;"	f
evil-evilified-state-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(define-key evil-evilified-state-map "G" 'evil-goto-line)$/;"	f
evil-evilified-state-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(define-key evil-evilified-state-map "N" 'evil-search-previous)$/;"	f
evil-evilified-state-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(define-key evil-evilified-state-map "V" 'evil-visual-line)$/;"	f
evil-evilified-state-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(define-key evil-evilified-state-map "\/" 'evil-search-forward)$/;"	f
evil-evilified-state-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(define-key evil-evilified-state-map "gg" 'evil-goto-first-line)$/;"	f
evil-evilified-state-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(define-key evil-evilified-state-map "h" 'evil-backward-char)$/;"	f
evil-evilified-state-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(define-key evil-evilified-state-map "j" 'evil-next-visual-line)$/;"	f
evil-evilified-state-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(define-key evil-evilified-state-map "k" 'evil-previous-visual-line)$/;"	f
evil-evilified-state-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(define-key evil-evilified-state-map "l" 'evil-forward-char)$/;"	f
evil-evilified-state-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(define-key evil-evilified-state-map "n" 'evil-search-next)$/;"	f
evil-evilified-state-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(define-key evil-evilified-state-map "v" 'evil-visual-char)$/;"	f
evil-evilified-state-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(define-key evil-evilified-state-map (kbd "C-b") 'evil-scroll-page-up)$/;"	f
evil-evilified-state-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(define-key evil-evilified-state-map (kbd "C-d") 'evil-scroll-down)$/;"	f
evil-evilified-state-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(define-key evil-evilified-state-map (kbd "C-e") 'evil-scroll-line-down)$/;"	f
evil-evilified-state-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(define-key evil-evilified-state-map (kbd "C-f") 'evil-scroll-page-down)$/;"	f
evil-evilified-state-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(define-key evil-evilified-state-map (kbd "C-o") 'evil-jump-backward)$/;"	f
evil-evilified-state-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(define-key evil-evilified-state-map (kbd "C-u") 'evil-scroll-up)$/;"	f
evil-evilified-state-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(define-key evil-evilified-state-map (kbd "C-w") 'evil-window-map)$/;"	f
evil-evilified-state-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(define-key evil-evilified-state-map (kbd "C-y") 'evil-scroll-line-up)$/;"	f
evil-evilified-state-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(define-key evil-evilified-state-map (kbd "C-z") 'evil-emacs-state)$/;"	f
evil-hybrid-state-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/hybrid-mode/hybrid-mode.el	/^(define-key evil-hybrid-state-map [escape] 'evil-normal-state)$/;"	f
evil-insert-state-cursor-hide	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/funcs.el	/^(defun evil-insert-state-cursor-hide ()$/;"	f
evil-insert-state-p	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/hybrid-mode/hybrid-mode.el	/^(defun evil-insert-state-p (&optional state)$/;"	f
evil-leader/set-key	conf/emacs/.emacs.d/core/core-keybindings.el	/^(defalias 'evil-leader\/set-key 'spacemacs\/set-leader-keys)$/;"	f
evil-lisp-safe-structural-editing-modes	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/config.el	/^(defvar evil-lisp-safe-structural-editing-modes '()$/;"	f
evil-motion-state-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(define-key evil-motion-state-map (kbd "[ b") 'previous-buffer)$/;"	f
evil-motion-state-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(define-key evil-motion-state-map (kbd "[ f") 'evil-unimpaired\/previous-file)$/;"	f
evil-motion-state-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(define-key evil-motion-state-map (kbd "[ l") 'spacemacs\/previous-error)$/;"	f
evil-motion-state-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(define-key evil-motion-state-map (kbd "[ q") 'spacemacs\/previous-error)$/;"	f
evil-motion-state-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(define-key evil-motion-state-map (kbd "[ t") 'evil-unimpaired\/previous-frame)$/;"	f
evil-motion-state-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(define-key evil-motion-state-map (kbd "[ w") 'previous-multiframe-window)$/;"	f
evil-motion-state-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(define-key evil-motion-state-map (kbd "] b") 'next-buffer)$/;"	f
evil-motion-state-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(define-key evil-motion-state-map (kbd "] f") 'evil-unimpaired\/next-file)$/;"	f
evil-motion-state-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(define-key evil-motion-state-map (kbd "] l") 'spacemacs\/next-error)$/;"	f
evil-motion-state-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(define-key evil-motion-state-map (kbd "] q") 'spacemacs\/next-error)$/;"	f
evil-motion-state-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(define-key evil-motion-state-map (kbd "] t") 'evil-unimpaired\/next-frame)$/;"	f
evil-motion-state-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(define-key evil-motion-state-map (kbd "] w") 'next-multiframe-window)$/;"	f
evil-motion-state-map	conf/emacs/.emacs.d/layers/+tools/tmux/local/tmux/tmux.el	/^(define-key evil-motion-state-map (kbd "C-h") #'tmux-nav-left)$/;"	f
evil-motion-state-map	conf/emacs/.emacs.d/layers/+tools/tmux/local/tmux/tmux.el	/^(define-key evil-motion-state-map (kbd "C-j") #'tmux-nav-down)$/;"	f
evil-motion-state-map	conf/emacs/.emacs.d/layers/+tools/tmux/local/tmux/tmux.el	/^(define-key evil-motion-state-map (kbd "C-k") #'tmux-nav-up)$/;"	f
evil-motion-state-map	conf/emacs/.emacs.d/layers/+tools/tmux/local/tmux/tmux.el	/^(define-key evil-motion-state-map (kbd "C-l") #'tmux-nav-right)$/;"	f
evil-normal-state-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(define-key evil-normal-state-map (kbd "[ SPC")$/;"	f
evil-normal-state-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(define-key evil-normal-state-map (kbd "[ e") 'drag-stuff-up)$/;"	f
evil-normal-state-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(define-key evil-normal-state-map (kbd "[ p") 'evil-unimpaired\/paste-above)$/;"	f
evil-normal-state-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(define-key evil-normal-state-map (kbd "] SPC")$/;"	f
evil-normal-state-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(define-key evil-normal-state-map (kbd "] e") 'drag-stuff-down)$/;"	f
evil-normal-state-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(define-key evil-normal-state-map (kbd "] p") 'evil-unimpaired\/paste-below)$/;"	f
evil-normal-state-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(define-key evil-normal-state-map (kbd "g p") (kbd "` [ v ` ]"))$/;"	f
evil-normal-state-map	conf/emacs/.emacs.d/layers/+tools/tmux/local/tmux/tmux.el	/^(define-key evil-normal-state-map (kbd "C-h") #'tmux-nav-left)$/;"	f
evil-normal-state-map	conf/emacs/.emacs.d/layers/+tools/tmux/local/tmux/tmux.el	/^(define-key evil-normal-state-map (kbd "C-j") #'tmux-nav-down)$/;"	f
evil-normal-state-map	conf/emacs/.emacs.d/layers/+tools/tmux/local/tmux/tmux.el	/^(define-key evil-normal-state-map (kbd "C-k") #'tmux-nav-up)$/;"	f
evil-normal-state-map	conf/emacs/.emacs.d/layers/+tools/tmux/local/tmux/tmux.el	/^(define-key evil-normal-state-map (kbd "C-l") #'tmux-nav-right)$/;"	f
evil-normal-state-map	conf/emacs/.emacs.d/layers/+vim/vinegar/keybindings.el	/^(define-key evil-normal-state-map (kbd "-") 'dired-jump)$/;"	f
evil-normal-state-map	conf/emacs/.spacemacs.d/load.d/keybindings.el	/^(define-key evil-normal-state-map (kbd "K") 'manual-entry)$/;"	f
evil-snipe-enable-alternate-f-and-t-behaviors	conf/emacs/.emacs.d/layers/+vim/evil-snipe/config.el	/^(defvar evil-snipe-enable-alternate-f-and-t-behaviors nil$/;"	f
evil-snipe/init-evil-snipe	conf/emacs/.emacs.d/layers/+vim/evil-snipe/packages.el	/^(defun evil-snipe\/init-evil-snipe ()$/;"	f
evil-snipe/post-init-magit	conf/emacs/.emacs.d/layers/+vim/evil-snipe/packages.el	/^(defun evil-snipe\/post-init-magit ()$/;"	f
evil-snipe/post-init-ranger	conf/emacs/.emacs.d/layers/+vim/evil-snipe/packages.el	/^(defun evil-snipe\/post-init-ranger ()$/;"	f
evil-unimpaired//find-relative-filename	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(defun evil-unimpaired\/\/find-relative-filename (offset)$/;"	f
evil-unimpaired/insert-space-above	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(defun evil-unimpaired\/insert-space-above (count)$/;"	f
evil-unimpaired/insert-space-below	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(defun evil-unimpaired\/insert-space-below (count)$/;"	f
evil-unimpaired/next-file	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(defun evil-unimpaired\/next-file ()$/;"	f
evil-unimpaired/next-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(defun evil-unimpaired\/next-frame ()$/;"	f
evil-unimpaired/paste-above	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(defun evil-unimpaired\/paste-above ()$/;"	f
evil-unimpaired/paste-below	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(defun evil-unimpaired\/paste-below ()$/;"	f
evil-unimpaired/previous-file	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(defun evil-unimpaired\/previous-file ()$/;"	f
evil-unimpaired/previous-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(defun evil-unimpaired\/previous-frame ()$/;"	f
evil-visual-state-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(define-key evil-visual-state-map (kbd "[ e") 'drag-stuff-up)$/;"	f
evil-visual-state-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/local/evil-unimpaired/evil-unimpaired.el	/^(define-key evil-visual-state-map (kbd "] e") 'drag-stuff-down)$/;"	f
evilified-state--clear-normal-state-keymap	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(defun evilified-state--clear-normal-state-keymap ()$/;"	f
evilified-state--configure-default-state	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(defun evilified-state--configure-default-state (mode)$/;"	f
evilified-state--define-pre-bindings	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(defun evilified-state--define-pre-bindings (map pre-bindings)$/;"	f
evilified-state--evil-surround-was-enabled	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(defvar evilified-state--evil-surround-was-enabled nil$/;"	f
evilified-state--evilified-state-on-entry	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(defun evilified-state--evilified-state-on-entry ()$/;"	f
evilified-state--evilified-state-on-exit	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(defun evilified-state--evilified-state-on-exit ()$/;"	f
evilified-state--evilify-event	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(defun evilified-state--evilify-event (map map-symbol evil-map event evil-value$/;"	f
evilified-state--find-new-event	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(defun evilified-state--find-new-event (event)$/;"	f
evilified-state--mplist-get	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(defun evilified-state--mplist-get (plist prop)$/;"	f
evilified-state--normal-state-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(defvar evilified-state--normal-state-map nil$/;"	f
evilified-state--pre-command-hook	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(defun evilified-state--pre-command-hook ()$/;"	f
evilified-state--restore-normal-state-keymap	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(defun evilified-state--restore-normal-state-keymap ()$/;"	f
evilified-state--restore-visual-state-keymap	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(defun evilified-state--restore-visual-state-keymap ()$/;"	f
evilified-state--setup-normal-state-keymap	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(defun evilified-state--setup-normal-state-keymap ()$/;"	f
evilified-state--setup-visual-state-keymap	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(defun evilified-state--setup-visual-state-keymap ()$/;"	f
evilified-state--sort-keymap	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(defun evilified-state--sort-keymap (map)$/;"	f
evilified-state--visual-state-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(defvar evilified-state--visual-state-map nil$/;"	f
evilified-state--visual-state-on-entry	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(defun evilified-state--visual-state-on-entry ()$/;"	f
evilified-state--visual-state-on-exit	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(defun evilified-state--visual-state-on-exit ()$/;"	f
evilified-state-evilify-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/evil-evilified-state/evil-evilified-state.el	/^(defmacro evilified-state-evilify-map (map &rest props)$/;"	f
eww-packages	conf/emacs/.emacs.d/layers/+web/eww/packages.el	/^(defconst eww-packages$/;"	f
eww/init-eww	conf/emacs/.emacs.d/layers/+web/eww/packages.el	/^(defun eww\/init-eww ()$/;"	f
eww/init-texfrag	conf/emacs/.emacs.d/layers/+web/eww/packages.el	/^(defun eww\/init-texfrag ()$/;"	f
eww/post-init-evil	conf/emacs/.emacs.d/layers/+web/eww/packages.el	/^(defun eww\/post-init-evil ()$/;"	f
eww/post-init-writeroom-mode	conf/emacs/.emacs.d/layers/+web/eww/packages.el	/^(defun eww\/post-init-writeroom-mode ()$/;"	f
eww/post-init-zoom-frm	conf/emacs/.emacs.d/layers/+web/eww/packages.el	/^(defun eww\/post-init-zoom-frm ()$/;"	f
exception	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def exception(self, msg: str,$/;"	m	class:LoggingMixin
excmds	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:excmds()$/;"	f
exec	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! s:exec(cmd, ...) abort$/;"	f
execute	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:execute(cmd)$/;"	f
executeCommand	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:executeCommand(cmd, args) abort$/;"	f
execute_silent	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:execute_silent(cmd)$/;"	f
exist_gh	conf/zsh/.oh-my-zsh/plugins/github/github.plugin.zsh	/^exist_gh() { # [DIRECTORY]$/;"	f
exists_file	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:exists_file(bufnr) abort$/;"	f
exists_path	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def exists_path(path: str) -> bool:$/;"	f
exit	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:exit(restart) abort$/;"	f
exit_cb	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^function! s:exit_cb(job, exitval) dict$/;"	f
exit_cb	conf/vim/.vim/plugged/vim-go/autoload/go/rename.vim	/^function! s:exit_cb(next, job, exitval) abort$/;"	f
exit_cb	conf/vim/.vim/plugged/vim-go/autoload/go/term.vim	/^function! s:exit_cb(job_id, exit_status) dict abort$/;"	f
exit_helper	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^exit_helper() {$/;"	f
exit_if_no_patchfile	conf/emacs/.emacs.d/.circleci/shared	/^exit_if_no_patchfile () {$/;"	f
exit_if_unsupported_version	conf/tmux/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^exit_if_unsupported_version() {$/;"	f
exit_message	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/run_tests	/^exit_message() {$/;"	f
exit_value_helper	conf/tmux/.tmux/plugins/tpm/scripts/helpers/utility.sh	/^exit_value_helper() {$/;"	f
exit_with_error	sh/kcptun.sh	/^exit_with_error() {$/;"	f
exited	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:exited(res) abort$/;"	f
expand	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def expand(path: str) -> str:$/;"	f
expand	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def expand(self):$/;"	m	class:SnippetManager
expandRunArgs	conf/vim/.vim/plugged/vim-go/autoload/go/cmd.vim	/^function! s:expandRunArgs(idx, val) abort$/;"	f
expand_anon	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def expand_anon($/;"	m	class:SnippetManager
expand_anon	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def expand_anon(self, *args, **kwargs):$/;"	m	class:SnippetUtilForAction
expand_or_jump	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def expand_or_jump(self):$/;"	m	class:SnippetManager
expand_var	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:expand_var() abort$/;"	f
expect_the_same_output	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^function! s:expect_the_same_output(line1, line2) abort$/;"	f
expectation	sh/PEG.py	/^expectation = float(input("expectation profit after 3y: "))$/;"	v
expected	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let expected = ClangFormat(1, line('$'))$/;"	v
expected	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^  let expected = [$/;"	v
expected	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^  let expected = [{'lnum': 1, 'name': 'GitGutterLineRemovedFirstLine'}]$/;"	v
expected	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^  let expected = [{'lnum': 2, 'name': 'GitGutterLineRemoved'}]$/;"	v
expected_error	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    expected_error = "Choices selection is not supported on \\$0"$/;"	v	class:Choices_ShouldThrowErrorWithZeroTabstop
expected_error	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    expected_error = r"IndexError: line number out of range"$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
expected_error	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    expected_error = r"NameError: name 'Tru' is not defined"$/;"	v	class:ContextSnippets_ReportError
expected_error	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = " > \\s+qwe"$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
expected_error	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = " > abc"$/;"	v	class:ParseSnippets_PrintPythonStacktrace
expected_error	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Context: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
expected_error	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Defined in: .*\/all.snippets"$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
expected_error	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Invalid multiword trigger: '!inv snip\/' in \\S+:2"$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
expected_error	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Invalid multiword trigger: 'test snip' in \\S+:2"$/;"	v	class:ParseSnippets_MultiWord_NoContainer
expected_error	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Post-expand: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
expected_error	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Pre-expand: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
expected_error	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Trigger: test"$/;"	v	class:ParseSnippets_PrintErroneousSnippet
expected_error	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"'extends' without file types in \\S+:2"$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
expected_error	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Invalid line 'unknown directive' in \\S+:2"$/;"	v	class:ParseSnippets_UnknownDirective
expected_error	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Invalid priority '' in \\S+:2"$/;"	v	class:ParseSnippets_InvalidPriorityLine1
expected_error	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Invalid priority '- 50' in \\S+:2"$/;"	v	class:ParseSnippets_InvalidPriorityLine
expected_error	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Missing 'endsnippet' for 'testsnip' in \\S+:4"$/;"	v	class:ParseSnippets_MissingEndSnippet
expected_error	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    expected_error = "changes are untrackable"$/;"	v	class:SnippetActions_ErrorOnBufferModificationThroughCommand
expected_error	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    expected_error = "line under the cursor was modified"$/;"	v	class:SnippetActions_ErrorOnModificationSnippetLine
expected_error	conf/vim/.vim/plugged/ultisnips/test/vim_test_case.py	/^    expected_error = ""$/;"	v	class:VimTestCase
expected_python_version	conf/vim/.vim/plugged/ultisnips/test/vim_test_case.py	/^    expected_python_version = ($/;"	v	class:VimTestCase
extempore-packages	conf/emacs/.emacs.d/layers/+lang/extempore/packages.el	/^(defconst extempore-packages$/;"	f
extempore/init-extempore-mode	conf/emacs/.emacs.d/layers/+lang/extempore/packages.el	/^(defun extempore\/init-extempore-mode ()$/;"	f
extempore/post-init-eldoc	conf/emacs/.emacs.d/layers/+lang/extempore/packages.el	/^(defun extempore\/post-init-eldoc ()$/;"	f
extend	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:extend(base, extra)$/;"	f
extend_opts	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:extend_opts(dict, eopts, prepend)$/;"	f
extract	conf/zsh/.oh-my-zsh/plugins/extract/extract.plugin.zsh	/^extract() {$/;"	f
extract_name	conf/vim/.vim/autoload/plug.vim	/^function! s:extract_name(str, prefix, suffix)$/;"	f
exwm--autostart-process-list	conf/emacs/.emacs.d/layers/+window-management/exwm/funcs.el	/^(defvar exwm--autostart-process-list nil$/;"	f
exwm--randr-displays	conf/emacs/.emacs.d/layers/+window-management/exwm/config.el	/^(defvar exwm--randr-displays (thread-first$/;"	f
exwm--toggle-workspace	conf/emacs/.emacs.d/layers/+window-management/exwm/funcs.el	/^(defvar exwm--toggle-workspace 0 "Previously selected workspace. Used with `exwm\/jump-to-last-exwm'.")$/;"	f
exwm-autostart-xdg-applications	conf/emacs/.emacs.d/layers/+window-management/exwm/config.el	/^(defvar exwm-autostart-xdg-applications nil$/;"	f
exwm-enable-systray	conf/emacs/.emacs.d/layers/+window-management/exwm/config.el	/^(defvar exwm-enable-systray nil$/;"	f
exwm-hide-tiling-modeline	conf/emacs/.emacs.d/layers/+window-management/exwm/config.el	/^(defvar exwm-hide-tiling-modeline nil$/;"	f
exwm-locking-command	conf/emacs/.emacs.d/layers/+window-management/exwm/config.el	/^(defvar exwm-locking-command nil$/;"	f
exwm-packages	conf/emacs/.emacs.d/layers/+window-management/exwm/packages.el	/^(defconst exwm-packages$/;"	f
exwm-randr-command	conf/emacs/.emacs.d/layers/+window-management/exwm/config.el	/^(defvar exwm-randr-command nil$/;"	f
exwm-terminal-command	conf/emacs/.emacs.d/layers/+window-management/exwm/config.el	/^(defvar exwm-terminal-command "xterm"$/;"	f
exwm-workspace-switch	conf/emacs/.emacs.d/layers/+window-management/exwm/funcs.el	/^(define-advice exwm-workspace-switch (:before (&rest _) save-toggle-workspace)$/;"	f
exwm-workspace-switch-wrap	conf/emacs/.emacs.d/layers/+window-management/exwm/config.el	/^(defvar exwm-workspace-switch-wrap t$/;"	f
exwm//autostart-process	conf/emacs/.emacs.d/layers/+window-management/exwm/funcs.el	/^(defun exwm\/\/autostart-process (name command &optional directory)$/;"	f
exwm//autostart-xdg-applications	conf/emacs/.emacs.d/layers/+window-management/exwm/funcs.el	/^(defun exwm\/\/autostart-xdg-applications ()$/;"	f
exwm//exwm-workspace-switch	conf/emacs/.emacs.d/layers/+window-management/exwm/funcs.el	/^(defun exwm\/\/exwm-workspace-switch (arg)$/;"	f
exwm//randr-setup	conf/emacs/.emacs.d/layers/+window-management/exwm/funcs.el	/^(defun exwm\/\/randr-setup ()$/;"	f
exwm//read-xdg-autostart-files	conf/emacs/.emacs.d/layers/+window-management/exwm/funcs.el	/^(defun exwm\/\/read-xdg-autostart-files ()$/;"	f
exwm//start-desktop-application	conf/emacs/.emacs.d/layers/+window-management/exwm/funcs.el	/^(defun exwm\/\/start-desktop-application (xdg)$/;"	f
exwm//systray-setup	conf/emacs/.emacs.d/layers/+window-management/exwm/funcs.el	/^(defun exwm\/\/systray-setup ()$/;"	f
exwm/exwm-app-launcher	conf/emacs/.emacs.d/layers/+window-management/exwm/funcs.el	/^(defun exwm\/exwm-app-launcher ()$/;"	f
exwm/exwm-lock	conf/emacs/.emacs.d/layers/+window-management/exwm/funcs.el	/^(defun exwm\/exwm-lock ()$/;"	f
exwm/exwm-workspace-next	conf/emacs/.emacs.d/layers/+window-management/exwm/funcs.el	/^(defun exwm\/exwm-workspace-next ()$/;"	f
exwm/exwm-workspace-prev	conf/emacs/.emacs.d/layers/+window-management/exwm/funcs.el	/^(defun exwm\/exwm-workspace-prev ()$/;"	f
exwm/init-desktop-environment	conf/emacs/.emacs.d/layers/+window-management/exwm/packages.el	/^(defun exwm\/init-desktop-environment ()$/;"	f
exwm/init-evil-exwm-state	conf/emacs/.emacs.d/layers/+window-management/exwm/packages.el	/^(defun exwm\/init-evil-exwm-state ()$/;"	f
exwm/init-exwm	conf/emacs/.emacs.d/layers/+window-management/exwm/packages.el	/^(defun exwm\/init-exwm ()$/;"	f
exwm/init-helm-exwm	conf/emacs/.emacs.d/layers/+window-management/exwm/packages.el	/^(defun exwm\/init-helm-exwm ()$/;"	f
exwm/init-xdg	conf/emacs/.emacs.d/layers/+window-management/exwm/packages.el	/^(defun exwm\/init-xdg ()$/;"	f
exwm/init-xelb	conf/emacs/.emacs.d/layers/+window-management/exwm/packages.el	/^(defun exwm\/init-xelb ()$/;"	f
exwm/jump-to-last-exwm	conf/emacs/.emacs.d/layers/+window-management/exwm/funcs.el	/^(defun exwm\/jump-to-last-exwm ()$/;"	f
exwm/terminal-launcher	conf/emacs/.emacs.d/layers/+window-management/exwm/funcs.el	/^(defun exwm\/terminal-launcher ()$/;"	f
f	conf/vim/.vim/plugged/vim-clang-format/test/t/test.cpp	/^void f(){ std::cout << "hello\\n"; }$/;"	f
f	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/test-data/off-by-one.zsh	/^f() {}$/;"	f
f	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/test-data/off-by-one.zsh	/^f() {}$/;"	f
factor--ui-listener-process	conf/emacs/.emacs.d/layers/+lang/factor/funcs.el	/^(defvar factor--ui-listener-process nil$/;"	f
factor-packages	conf/emacs/.emacs.d/layers/+lang/factor/packages.el	/^(defconst factor-packages$/;"	f
factor-ui-listener-args	conf/emacs/.emacs.d/layers/+lang/factor/config.el	/^(defvar factor-ui-listener-args ""$/;"	f
factor//fuel-elisp-dir	conf/emacs/.emacs.d/layers/+lang/factor/funcs.el	/^(defun factor\/\/fuel-elisp-dir ()$/;"	f
factor//fuel-feature-p	conf/emacs/.emacs.d/layers/+lang/factor/funcs.el	/^(defun factor\/\/fuel-feature-p (fuel-directory feature)$/;"	f
factor//fuel-stack-effect	conf/emacs/.emacs.d/layers/+lang/factor/funcs.el	/^(defun factor\/\/fuel-stack-effect ()$/;"	f
factor//load-fuel-from-path	conf/emacs/.emacs.d/layers/+lang/factor/funcs.el	/^(defun factor\/\/load-fuel-from-path (path)$/;"	f
factor//loaded-fuel-features	conf/emacs/.emacs.d/layers/+lang/factor/funcs.el	/^(defun factor\/\/loaded-fuel-features ()$/;"	f
factor//reload-fuel-from-path	conf/emacs/.emacs.d/layers/+lang/factor/funcs.el	/^(defun factor\/\/reload-fuel-from-path (path)$/;"	f
factor//unload-fuel	conf/emacs/.emacs.d/layers/+lang/factor/funcs.el	/^(defun factor\/\/unload-fuel ()$/;"	f
factor/init-fuel	conf/emacs/.emacs.d/layers/+lang/factor/packages.el	/^(defun factor\/init-fuel ()$/;"	f
factor/post-init-yasnippet	conf/emacs/.emacs.d/layers/+lang/factor/packages.el	/^(defun factor\/post-init-yasnippet ()$/;"	f
factor/start-connect-factor	conf/emacs/.emacs.d/layers/+lang/factor/funcs.el	/^(defun factor\/start-connect-factor (factor-binary factor-image fuel-path &optional cmd-line-options)$/;"	f
factor/start-ui-listener	conf/emacs/.emacs.d/layers/+lang/factor/funcs.el	/^(defun factor\/start-ui-listener ()$/;"	f
fail_helper	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^fail_helper() {$/;"	f
fail_helper	conf/tmux/.tmux/plugins/tpm/scripts/helpers/utility.sh	/^fail_helper() {$/;"	f
fail_when_undefined_pr_number	conf/emacs/.emacs.d/.circleci/shared	/^fail_when_undefined_pr_number () {$/;"	f
fasd-find-file-make-persp	conf/emacs/.emacs.d/layers/+tools/fasd/funcs.el	/^(defun fasd-find-file-make-persp ()$/;"	f
fasd-packages	conf/emacs/.emacs.d/layers/+tools/fasd/packages.el	/^(defconst fasd-packages$/;"	f
fasd/init-fasd	conf/emacs/.emacs.d/layers/+tools/fasd/packages.el	/^(defun fasd\/init-fasd ()$/;"	f
fasd/init-helm-fasd	conf/emacs/.emacs.d/layers/+tools/fasd/packages.el	/^(defun fasd\/init-helm-fasd ()$/;"	f
fastfile	conf/zsh/.oh-my-zsh/plugins/fastfile/fastfile.plugin.zsh	/^function fastfile() {$/;"	f
fastfile_get	conf/zsh/.oh-my-zsh/plugins/fastfile/fastfile.plugin.zsh	/^function fastfile_get() {$/;"	f
fastfile_ls	conf/zsh/.oh-my-zsh/plugins/fastfile/fastfile.plugin.zsh	/^function fastfile_ls() {$/;"	f
fastfile_print	conf/zsh/.oh-my-zsh/plugins/fastfile/fastfile.plugin.zsh	/^function fastfile_print() {$/;"	f
fastfile_resolv	conf/zsh/.oh-my-zsh/plugins/fastfile/fastfile.plugin.zsh	/^function fastfile_resolv() {$/;"	f
fastfile_rm	conf/zsh/.oh-my-zsh/plugins/fastfile/fastfile.plugin.zsh	/^function fastfile_rm() {$/;"	f
fastfile_sync	conf/zsh/.oh-my-zsh/plugins/fastfile/fastfile.plugin.zsh	/^function fastfile_sync() {$/;"	f
fatal	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    fatal = critical$/;"	v	class:LoggingMixin
faust-packages	conf/emacs/.emacs.d/layers/+lang/faust/packages.el	/^(defconst faust-packages$/;"	f
faust/init-faust-mode	conf/emacs/.emacs.d/layers/+lang/faust/packages.el	/^(defun faust\/init-faust-mode ()$/;"	f
faust/post-init-company	conf/emacs/.emacs.d/layers/+lang/faust/packages.el	/^(defun faust\/post-init-company ()$/;"	f
faust/post-init-yasnippet	conf/emacs/.emacs.d/layers/+lang/faust/packages.el	/^(defun faust\/post-init-yasnippet ()$/;"	f
fcss	conf/zsh/.oh-my-zsh/plugins/sfffe/sfffe.plugin.zsh	/^fcss() {$/;"	f
feedkeys	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def feedkeys(keys, mode="n"):$/;"	f
file_options	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_options(prefix)$/;"	f
file_source	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_source(prefix)$/;"	f
file_split_prefix	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_split_prefix(prefix)$/;"	f
files	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
files	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_CanMatchContext
files	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_CanMatchPreviouslySelectedPlaceholder
files	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
files	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_CanToggle
files	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_GlobalDisable
files	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^    files = {$/;"	v	class:Autotrigger_GlobalDisableThenToggle
files	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_Before
files	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ContextHasAccessToReMatch
files	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ContextHasAccessToVisual
files	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ContextIsClearedBeforeExpand
files	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_CursorIsZeroBased
files	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_DoNotExpandOnFalse
files	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ExpandOnTrue
files	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_Header_DoNotExpandOnFalse
files	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_Header_ExpandOnTrue
files	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_PriorityKeyword
files	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ReportError
files	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
files	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_SimpleSnippet
files	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_SnippetPriority
files	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    files = {$/;"	v	class:ContextSnippets_UseContext
files	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    files = {$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
files	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_ClearAll
files	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_ClearOne
files	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_ClearTwo
files	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
files	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_Global_Local_Python
files	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_Global_Python
files	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_Global_Python_After
files	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_InvalidPriorityLine
files	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_InvalidPriorityLine1
files	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MissingEndSnippet
files	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MultiWord_NoContainer
files	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MultiWord_Quotes
files	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
files	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
files	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippet
files	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
files	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
files	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
files	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
files	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintPythonStacktrace
files	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
files	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_SimpleSnippet
files	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:ParseSnippets_UnknownDirective
files	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:_ParseSnippets_MultiWord
files	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    files = {$/;"	v	class:_ParseSnippets_MultiWord_RE
files	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    files = {$/;"	v	class:RecTabStops_ChildTriggerContainsParentTextObjects
files	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Disabled
files	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_EmptyLinesContinueSnippets
files	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Extends
files	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Interpolation
files	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_InterpolationWithSystem
files	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Issue1325
files	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Issue1344
files	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Issue658
files	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_MultiMatches
files	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_NoNestedTabstops
files	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_OtherFiletype
files	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_OverwrittenByRegExpTrigger
files	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_SimpleSnippet
files	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
files	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_SimpleSnippetSubDirectory
files	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestMirrors
files	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestMirrorsInPlaceholders
files	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestMirrorsInPlaceholders_Overwrite
files	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestNoBraceTabstops
files	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_TestNoBraceTabstopsAndMirrors
files	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_Visual_Simple
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanEvenWrapSnippetInPreAction
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandAnonOnPreExpand
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpAction
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandAnonSnippetOnFirstJump
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanExpandSnippetInDifferentPlace
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanMirrorTabStopsOutsideOfSnippet
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanModifyParentBody
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanUseContextFromContextMatch
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_DoNotBreakCursorOnSingleLikeChange
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_EnsureIndent
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_ErrorOnBufferModificationThroughCommand
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_ErrorOnModificationSnippetLine
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_MoveParentSnippetFromChildInPreAction
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_MoveVisual
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PostActionCanUseSnippetRange
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PostActionModifiesBuffer
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PostActionModifiesCharAfterSnippet
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PostActionModifiesLineAfterSnippet
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_PreActionModifiesBuffer
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    files = {$/;"	v	class:SnippetActions_UseCorrectJumpActions
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_ClearedByChild
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_ClearedByParent
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_SimpleClear
files	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_SimpleClear2
files	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    files = {$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet
files	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    files = {$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE
files	conf/vim/.vim/plugged/ultisnips/test/vim_test_case.py	/^    files = {}$/;"	v	class:VimTestCase
filetypes	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def filetypes(self):$/;"	m	class:VimBuffer
fill_in_whitespace	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text.py	/^def fill_in_whitespace(text):$/;"	f
fill_quickfix	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:fill_quickfix(name, list)$/;"	f
filter	conf/vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! s:filter(list, id) abort$/;"	f
filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/base/filter.py	/^    def filter(self, context: UserContext) -> Candidates:$/;"	m	class:Base
filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_delimiter.py	/^    def filter(self, context: UserContext) -> Candidates:$/;"	m	class:Filter
filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_paren.py	/^    def filter(self, context: UserContext) -> Candidates:$/;"	m	class:Filter
filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_case.py	/^    def filter(self, context: UserContext) -> Candidates:$/;"	m	class:Filter
filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^    def filter(self, context: UserContext) -> Candidates:$/;"	m	class:Filter
filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_paren.py	/^    def filter(self, context: UserContext) -> Candidates:$/;"	m	class:Filter
filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_reorder_attr.py	/^    def filter(self, context: UserContext) -> Candidates:$/;"	m	class:Filter
filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_abbr.py	/^    def filter(self, context: UserContext) -> Candidates:$/;"	m	class:Filter
filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_info.py	/^    def filter(self, context: UserContext) -> Candidates:$/;"	m	class:Filter
filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_kind.py	/^    def filter(self, context: UserContext) -> Candidates:$/;"	m	class:Filter
filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_menu.py	/^    def filter(self, context: UserContext) -> Candidates:$/;"	m	class:Filter
filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_word_abbr.py	/^    def filter(self, context: UserContext) -> Candidates:$/;"	m	class:Filter
filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^    def filter(self, context: UserContext) -> Candidates:$/;"	m	class:Filter
filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_full_fuzzy.py	/^    def filter(self, context: UserContext) -> Candidates:$/;"	m	class:Filter
filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_fuzzy.py	/^    def filter(self, context: UserContext) -> Candidates:$/;"	m	class:Filter
filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_head.py	/^    def filter(self, context: UserContext) -> Candidates:$/;"	m	class:Filter
filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_length.py	/^    def filter(self, context: UserContext) -> Candidates:$/;"	m	class:Filter
filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_matchfuzzy.py	/^    def filter(self, context: UserContext) -> Candidates:$/;"	m	class:Filter
filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^    def filter(self, context: UserContext) -> Candidates:$/;"	m	class:Filter
filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_word.py	/^    def filter(self, context: UserContext) -> Candidates:$/;"	m	class:Filter
filter	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def filter(self, record: logging.LogRecord) -> bool:$/;"	m	class:DeopleteLogFilter
filter	workflows/Ariafred/src/workflow/workflow.py	/^    def filter(self, query, items, key=lambda x: x, ascending=False,$/;"	m	class:Workflow
filter_attrs	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_reorder_attr.py	/^    def filter_attrs(candidates: Candidates,$/;"	m	class:Filter
finalize	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^def finalize(all_tokens, seen_ts, snippet_instance):$/;"	f
finance-hledger-journal-file	conf/emacs/.emacs.d/layers/+tools/finance/config.el	/^(defconst finance-hledger-journal-file "~\/hledger.journal"$/;"	f
finance-packages	conf/emacs/.emacs.d/layers/+tools/finance/packages.el	/^(defconst finance-packages$/;"	f
finance/init-evil-ledger	conf/emacs/.emacs.d/layers/+tools/finance/packages.el	/^(defun finance\/init-evil-ledger ()$/;"	f
finance/init-flycheck-ledger	conf/emacs/.emacs.d/layers/+tools/finance/packages.el	/^(defun finance\/init-flycheck-ledger ()$/;"	f
finance/init-hledger-mode	conf/emacs/.emacs.d/layers/+tools/finance/packages.el	/^(defun finance\/init-hledger-mode ()$/;"	f
finance/init-ledger-mode	conf/emacs/.emacs.d/layers/+tools/finance/packages.el	/^(defun finance\/init-ledger-mode ()$/;"	f
finance/post-init-company	conf/emacs/.emacs.d/layers/+tools/finance/packages.el	/^(defun finance\/post-init-company ()$/;"	f
finance/post-init-flycheck	conf/emacs/.emacs.d/layers/+tools/finance/packages.el	/^(defun finance\/post-init-flycheck ()$/;"	f
findAndRevealPath	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:findAndRevealPath(pathStr) abort$/;"	f
find_all_snippet_directories	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def find_all_snippet_directories() -> List[str]:$/;"	f
find_all_snippet_files	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def find_all_snippet_files(ft) -> Set[str]:$/;"	f
find_current_signs	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:find_current_signs(bufnr) abort$/;"	f
find_name	conf/vim/.vim/autoload/plug.vim	/^function! s:find_name(lnum)$/;"	f
find_open_window	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:find_open_window(b)$/;"	f
find_parent_for_new_to	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def find_parent_for_new_to(self, pos):$/;"	m	class:EditableTextObject
find_project	conf/zsh/.oh-my-zsh/plugins/sublime/sublime.plugin.zsh	/^function find_project() {$/;"	f
find_snippet_files	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def find_snippet_files(ft, directory: str) -> Set[str]:$/;"	f
find_win	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^function! s:find_win(key) abort$/;"	f
finish	conf/vim/.vim/autoload/plug.vim	/^function! s:finish(pull)$/;"	f
finish_bindings	conf/vim/.vim/autoload/plug.vim	/^function! s:finish_bindings()$/;"	f
firewall_set	sh/shadowsocks.sh	/^firewall_set(){$/;"	f
first_line	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:first_line(lines)$/;"	f
first_run	workflows/Ariafred/src/workflow/workflow.py	/^    def first_run(self):$/;"	m	class:Workflow
fix_file_references	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:fix_file_references(filepath, hunk_diff)$/;"	f
fixperms	conf/zsh/.oh-my-zsh/plugins/perms/perms.plugin.zsh	/^function fixperms {$/;"	f
fjs	conf/zsh/.oh-my-zsh/plugins/sfffe/sfffe.plugin.zsh	/^fjs() {$/;"	f
fl	conf/zsh/.oh-my-zsh/plugins/forklift/forklift.plugin.zsh	/^function fl {$/;"	f
flash-ding	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-fns.el	/^(defun flash-ding (&optional do-not-terminate frame)$/;"	f
flatten_test_suite	conf/vim/.vim/plugged/ultisnips/test_all.py	/^    def flatten_test_suite(suite):$/;"	f	function:setup_other_plugins
floobits-packages	conf/emacs/.emacs.d/layers/+pair-programming/floobits/packages.el	/^(defconst floobits-packages$/;"	f
floobits/init-floobits	conf/emacs/.emacs.d/layers/+pair-programming/floobits/packages.el	/^(defun floobits\/init-floobits ()$/;"	f
flycheck-checkers	conf/emacs/.emacs.d/core/libs/package-recipe-mode.el	/^(defvar flycheck-checkers)$/;"	f
flycheck-ocaml-reason-setup	conf/emacs/.emacs.d/layers/+lang/reasonml/packages.el	/^(defun flycheck-ocaml-reason-setup ()$/;"	f
fmt	conf/zsh/.oh-my-zsh/tools/changelog.sh	/^  function fmt:hash {$/;"	f
fmt	conf/zsh/.oh-my-zsh/tools/changelog.sh	/^  function fmt:header {$/;"	f
fmt	conf/zsh/.oh-my-zsh/tools/changelog.sh	/^  function fmt:scope {$/;"	f
fmt	conf/zsh/.oh-my-zsh/tools/changelog.sh	/^  function fmt:subject {$/;"	f
fmt	conf/zsh/.oh-my-zsh/tools/changelog.sh	/^  function fmt:type {$/;"	f
fmt	sh/clang_format.sh	/^fmt() {$/;"	f
fmt_cmd	conf/vim/.vim/plugged/vim-go/autoload/go/fmt.vim	/^function! s:fmt_cmd(bin_name, source, target)$/;"	f
fmt_code	conf/zsh/.oh-my-zsh/tools/install.sh	/^fmt_code() {$/;"	f
fmt_error	conf/zsh/.oh-my-zsh/tools/install.sh	/^fmt_error() {$/;"	f
fmt_link	conf/zsh/.oh-my-zsh/tools/install.sh	/^fmt_link() {$/;"	f
fmt_link	conf/zsh/.oh-my-zsh/tools/upgrade.sh	/^fmt_link() {$/;"	f
fmt_underline	conf/zsh/.oh-my-zsh/tools/install.sh	/^fmt_underline() {$/;"	f
fmt_underline	conf/zsh/.oh-my-zsh/tools/upgrade.sh	/^fmt_underline() {$/;"	f
fn	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def fn(self):  # pylint:disable=no-self-use,invalid-name$/;"	m	class:SnippetUtil
fname_prefix	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:fname_prefix(str)$/;"	f
focus	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def focus(self, title=None):$/;"	m	class:VimInterfaceWindows
fold_default	workflows/Ariafred/src/workflow/workflow.py	/^        def fold_default():$/;"	f	function:Workflow._register_default_magic
fold_off	workflows/Ariafred/src/workflow/workflow.py	/^        def fold_off():$/;"	f	function:Workflow._register_default_magic
fold_on	workflows/Ariafred/src/workflow/workflow.py	/^        def fold_on():$/;"	f	function:Workflow._register_default_magic
fold_to_ascii	workflows/Ariafred/src/workflow/workflow.py	/^    def fold_to_ascii(self, text):$/;"	m	class:Workflow
folded	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! s:folded()$/;"	f
foldmarker	conf/vim/.vim/plugged/vim-snippets/pythonx/vimsnippets.py	/^def foldmarker():$/;"	f
foo	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/config/buildtags/constrainedfoo.go	/^func foo() {$/;"	f
foo	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/config/buildtags/foo.go	/^func foo() {$/;"	f
foo	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/errcheck/errcheck.go	/^func foo() {$/;"	f
foo	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/foo/foo.go	/^package foo$/;"	p
format_change	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_change(bufnr, offset, item)$/;"	f
format_change_offset	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_change_offset(current, index, cursor)$/;"	f
format_cmd	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_cmd(line)$/;"	f
format_excmd	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_excmd(ex)$/;"	f
format_for_log	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:format_for_log(data) abort$/;"	f
format_git_log	conf/vim/.vim/autoload/plug.vim	/^function! s:format_git_log(line)$/;"	f
format_inserted_area	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:format_inserted_area() abort$/;"	f
format_mark	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_mark(line)$/;"	f
format_message	conf/vim/.vim/autoload/plug.vim	/^function! s:format_message(bullet, name, message)$/;"	f
format_win	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_win(tab, win, buf)$/;"	f
formatted	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let formatted = clang_format#format(1, line('$'))$/;"	v
forth-packages	conf/emacs/.emacs.d/layers/+lang/forth/packages.el	/^(defconst forth-packages '(forth-mode))$/;"	f
forth/init-forth-mode	conf/emacs/.emacs.d/layers/+lang/forth/packages.el	/^(defun forth\/init-forth-mode ()$/;"	f
fossil_prompt_info	conf/zsh/.oh-my-zsh/plugins/fossil/fossil.plugin.zsh	/^function fossil_prompt_info() {$/;"	f
fosterParent	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func (p *parser) fosterParent(n *Node) {$/;"	f
fountain-packages	conf/emacs/.emacs.d/layers/+lang/fountain/packages.el	/^(defconst fountain-packages$/;"	f
fountain/init-fountain-mode	conf/emacs/.emacs.d/layers/+lang/fountain/packages.el	/^(defun fountain\/init-fountain-mode ()$/;"	f
fountain/init-olivetti	conf/emacs/.emacs.d/layers/+lang/fountain/packages.el	/^(defun fountain\/init-olivetti ()$/;"	f
frame-alpha-lower-limit	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defvar frame-alpha-lower-limit)        ; Emacs 23+$/;"	f
frame-config-register	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defcustom frame-config-register ?\\C-l  ; Control-L is the name of the register.$/;"	f
frame-geom-spec-cons	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-fns.el	/^(defun frame-geom-spec-cons (spec &optional frame)$/;"	f
frame-geom-spec-numeric	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-fns.el	/^(defun frame-geom-spec-numeric (spec &optional frame)$/;"	f
frame-geom-value-cons	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-fns.el	/^(defun frame-geom-value-cons (type value &optional frame)$/;"	f
frame-geom-value-numeric	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-fns.el	/^(defun frame-geom-value-numeric (type value &optional frame)$/;"	f
frame-parameters-to-exclude	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defcustom frame-parameters-to-exclude '((window-id) (buffer-list) (name) (title) (icon-name))$/;"	f
frame-zoom-font-difference	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/zoom-frm.el	/^(defcustom frame-zoom-font-difference 1$/;"	f
frames-on	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-fns.el	/^(defun frames-on (buffer)$/;"	f
frcmds-available-screen-pixel-bounds	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun frcmds-available-screen-pixel-bounds ()$/;"	f
frcmds-available-screen-pixel-height	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun frcmds-available-screen-pixel-height (&optional include-mini-p)$/;"	f
frcmds-available-screen-pixel-width	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun frcmds-available-screen-pixel-width (&optional include-mini-p)$/;"	f
frcmds-effective-screen-pixel-bounds	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun frcmds-effective-screen-pixel-bounds ()$/;"	f
frcmds-enlarged-font-name	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun frcmds-enlarged-font-name (fontname frame increment)$/;"	f
frcmds-extra-pixels-height	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun frcmds-extra-pixels-height (frame)$/;"	f
frcmds-extra-pixels-width	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun frcmds-extra-pixels-width (frame)$/;"	f
frcmds-frame-alist-var-names	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun frcmds-frame-alist-var-names ()$/;"	f
frcmds-frame-iconified-p	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defsubst frcmds-frame-iconified-p (frame)$/;"	f
frcmds-frame-number	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun frcmds-frame-number (frame)$/;"	f
frcmds-frame-parameter-names	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun frcmds-frame-parameter-names ()$/;"	f
frcmds-frame-pixel-height	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun frcmds-frame-pixel-height (frame)$/;"	f
frcmds-new-frame-position	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun frcmds-new-frame-position (frame type incr)$/;"	f
frcmds-read-args-for-tiling	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun frcmds-read-args-for-tiling ()$/;"	f
frcmds-read-buffer-for-delete-windows	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun frcmds-read-buffer-for-delete-windows ()$/;"	f
frcmds-repeat-command	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun frcmds-repeat-command (command)  ; Emacs 22+$/;"	f
frcmds-set-difference	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun frcmds-set-difference (list1 list2 &optional key)$/;"	f
frcmds-smart-tool-bar-pixel-height	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun frcmds-smart-tool-bar-pixel-height (&optional frame)$/;"	f
frcmds-split-frame-1	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun frcmds-split-frame-1 (direction num)$/;"	f
frcmds-tile-frames	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun frcmds-tile-frames (direction frames &optional x-min-pix y-min-pix pix-width pix-height)$/;"	f
freespace	conf/zsh/.oh-my-zsh/plugins/macos/macos.plugin.zsh	/^function freespace(){$/;"	f
friendly_name	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^  let friendly_name = FriendlyName(test)$/;"	v
frontend	conf/zsh/.oh-my-zsh/plugins/frontend-search/frontend-search.plugin.zsh	/^function frontend() {$/;"	f
fsharp-backend	conf/emacs/.emacs.d/layers/+lang/fsharp/config.el	/^(defvar fsharp-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'eglot)$/;"	f
fsharp-packages	conf/emacs/.emacs.d/layers/+lang/fsharp/packages.el	/^(defconst fsharp-packages$/;"	f
fsharp/init-eglot-fsharp	conf/emacs/.emacs.d/layers/+lang/fsharp/packages.el	/^(defun fsharp\/init-eglot-fsharp ()$/;"	f
fsharp/init-fsharp-mode	conf/emacs/.emacs.d/layers/+lang/fsharp/packages.el	/^(defun fsharp\/init-fsharp-mode ()$/;"	f
fsharp/post-init-company	conf/emacs/.emacs.d/layers/+lang/fsharp/packages.el	/^(defun fsharp\/post-init-company ()$/;"	f
fsharp/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/fsharp/packages.el	/^(defun fsharp\/post-init-counsel-gtags nil)$/;"	f
fsharp/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/fsharp/packages.el	/^(defun fsharp\/post-init-flycheck ()$/;"	f
fsharp/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/fsharp/packages.el	/^(defun fsharp\/post-init-ggtags ()$/;"	f
ft	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def ft(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
func-region	conf/emacs/.spacemacs.d/load.d/functions.el	/^(defun func-region (start end func)$/;"	f
funcs.buf_add_highlight	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_add_highlight(bufnr, srcId, hlGroup, line, colStart, colEnd, ...) abort$/;"	f
funcs.buf_attach	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_attach(...)$/;"	f
funcs.buf_clear_namespace	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_clear_namespace(bufnr, srcId, startLine, endLine) abort$/;"	f
funcs.buf_del_keymap	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_del_keymap(bufnr, mode, lhs) abort$/;"	f
funcs.buf_del_var	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_del_var(bufnr, name)$/;"	f
funcs.buf_detach	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_detach()$/;"	f
funcs.buf_get_changedtick	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_changedtick(bufnr)$/;"	f
funcs.buf_get_lines	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_lines(bufnr, start, end, strict) abort$/;"	f
funcs.buf_get_mark	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_mark(bufnr, name)$/;"	f
funcs.buf_get_name	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_name(bufnr)$/;"	f
funcs.buf_get_option	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_option(bufnr, name)$/;"	f
funcs.buf_get_var	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_get_var(bufnr, name)$/;"	f
funcs.buf_is_loaded	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_is_loaded(bufnr)$/;"	f
funcs.buf_is_valid	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_is_valid(bufnr)$/;"	f
funcs.buf_line_count	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_line_count(bufnr) abort$/;"	f
funcs.buf_set_keymap	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_set_keymap(bufnr, mode, lhs, rhs, opts) abort$/;"	f
funcs.buf_set_lines	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_set_lines(bufnr, start, end, strict, ...) abort$/;"	f
funcs.buf_set_name	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_set_name(bufnr, name) abort$/;"	f
funcs.buf_set_option	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_set_option(bufnr, name, val)$/;"	f
funcs.buf_set_var	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.buf_set_var(bufnr, name, val)$/;"	f
funcs.call_atomic	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.call_atomic(calls)$/;"	f
funcs.call_dict_function	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.call_dict_function(dict, method, args) abort$/;"	f
funcs.call_function	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.call_function(method, args) abort$/;"	f
funcs.command	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.command(command) abort$/;"	f
funcs.command_output	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.command_output(cmd)$/;"	f
funcs.create_buf	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.create_buf(listed, scratch) abort$/;"	f
funcs.create_namespace	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.create_namespace(name) abort$/;"	f
funcs.del_current_line	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.del_current_line()$/;"	f
funcs.del_keymap	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.del_keymap(mode, lhs) abort$/;"	f
funcs.del_var	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.del_var(name) abort$/;"	f
funcs.err_write	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.err_write(str)$/;"	f
funcs.err_writeln	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.err_writeln(str)$/;"	f
funcs.eval	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.eval(expr) abort$/;"	f
funcs.exec	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.exec(code, output) abort$/;"	f
funcs.feedkeys	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.feedkeys(keys, mode, escape_csi)$/;"	f
funcs.get_api_info	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_api_info()$/;"	f
funcs.get_current_buf	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_current_buf()$/;"	f
funcs.get_current_line	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_current_line()$/;"	f
funcs.get_current_tabpage	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_current_tabpage()$/;"	f
funcs.get_current_win	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_current_win()$/;"	f
funcs.get_mode	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_mode()$/;"	f
funcs.get_option	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_option(name)$/;"	f
funcs.get_var	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_var(var)$/;"	f
funcs.get_vvar	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.get_vvar(var)$/;"	f
funcs.input	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.input(keys) abort$/;"	f
funcs.list_bufs	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.list_bufs()$/;"	f
funcs.list_runtime_paths	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.list_runtime_paths()$/;"	f
funcs.list_tabpages	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.list_tabpages()$/;"	f
funcs.list_wins	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.list_wins() abort$/;"	f
funcs.out_write	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.out_write(str)$/;"	f
funcs.set_client_info	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_client_info(...) abort$/;"	f
funcs.set_current_buf	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_buf(bufnr) abort$/;"	f
funcs.set_current_dir	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_dir(dir) abort$/;"	f
funcs.set_current_line	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_line(line)$/;"	f
funcs.set_current_tabpage	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_tabpage(tid) abort$/;"	f
funcs.set_current_win	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_current_win(winid) abort$/;"	f
funcs.set_keymap	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_keymap(mode, lhs, rhs, opts) abort$/;"	f
funcs.set_option	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_option(name, value) abort$/;"	f
funcs.set_var	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.set_var(name, value) abort$/;"	f
funcs.strwidth	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.strwidth(str)$/;"	f
funcs.subscribe	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.subscribe(...) abort$/;"	f
funcs.tabpage_del_var	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_del_var(tid, name)$/;"	f
funcs.tabpage_get_number	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_get_number(tid)$/;"	f
funcs.tabpage_get_var	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_get_var(tid, name)$/;"	f
funcs.tabpage_get_win	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_get_win(tid)$/;"	f
funcs.tabpage_is_valid	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_is_valid(tid)$/;"	f
funcs.tabpage_list_wins	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_list_wins(tid)$/;"	f
funcs.tabpage_set_var	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.tabpage_set_var(tid, name, value)$/;"	f
funcs.unsubscribe	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.unsubscribe(...) abort$/;"	f
funcs.win_close	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_close(winid, ...) abort$/;"	f
funcs.win_del_var	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_del_var(winid, name) abort$/;"	f
funcs.win_get_buf	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_buf(winid)$/;"	f
funcs.win_get_cursor	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_cursor(winid) abort$/;"	f
funcs.win_get_height	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_height(winid) abort$/;"	f
funcs.win_get_number	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_number(winid) abort$/;"	f
funcs.win_get_option	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_option(winid, name, ...) abort$/;"	f
funcs.win_get_position	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_position(winid) abort$/;"	f
funcs.win_get_tabpage	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_tabpage(winid) abort$/;"	f
funcs.win_get_var	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_var(winid, name, ...) abort$/;"	f
funcs.win_get_width	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_get_width(winid) abort$/;"	f
funcs.win_is_valid	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_is_valid(winid) abort$/;"	f
funcs.win_set_buf	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_buf(winid, bufnr) abort$/;"	f
funcs.win_set_cursor	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_cursor(winid, pos) abort$/;"	f
funcs.win_set_height	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_height(winid, height) abort$/;"	f
funcs.win_set_option	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_option(winid, name, value) abort$/;"	f
funcs.win_set_var	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_var(winid, name, value) abort$/;"	f
funcs.win_set_width	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:funcs.win_set_width(winid, width) abort$/;"	f
function	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! s:function(name)$/;"	f
function	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^  function! s:function(name)$/;"	f
functionCallHighlightGroup	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! s:functionCallHighlightGroup(testname, value)$/;"	f
functionHighlightGroup	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! s:functionHighlightGroup(testname, value)$/;"	f
fuzzy_escape	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def fuzzy_escape(string: str, camelcase: bool) -> str:$/;"	f
fwl	conf/zsh/.oh-my-zsh/plugins/firewalld/firewalld.plugin.zsh	/^function fwl () {$/;"	f
fzf	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:fzf(name, opts, extra)$/;"	f
fzf#complete	conf/vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^function! fzf#complete(...)$/;"	f
fzf#decls#cmd	conf/vim/.vim/plugged/vim-go/autoload/fzf/decls.vim	/^function! fzf#decls#cmd(...) abort$/;"	f
fzf#vim#_buflisted_sorted	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_buflisted_sorted()$/;"	f
fzf#vim#_format_buffer	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_format_buffer(b)$/;"	f
fzf#vim#_lines	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_lines(all)$/;"	f
fzf#vim#_recent_files	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_recent_files()$/;"	f
fzf#vim#_uniq	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_uniq(list)$/;"	f
fzf#vim#ag	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#ag(query, ...)$/;"	f
fzf#vim#ag_raw	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#ag_raw(command_suffix, ...)$/;"	f
fzf#vim#buffer_commits	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_commits(...) range$/;"	f
fzf#vim#buffer_lines	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_lines(...)$/;"	f
fzf#vim#buffer_tags	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_tags(query, ...)$/;"	f
fzf#vim#buffers	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffers(...)$/;"	f
fzf#vim#changes	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#changes(...)$/;"	f
fzf#vim#colors	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#colors(...)$/;"	f
fzf#vim#command_history	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#command_history(...)$/;"	f
fzf#vim#commands	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#commands(...)$/;"	f
fzf#vim#commits	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#commits(...) range$/;"	f
fzf#vim#complete	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#complete(...)$/;"	f
fzf#vim#complete#buffer_line	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#buffer_line(...)$/;"	f
fzf#vim#complete#line	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#line(...)$/;"	f
fzf#vim#complete#path	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#path(command, ...)$/;"	f
fzf#vim#complete#word	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#word(...)$/;"	f
fzf#vim#files	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#files(dir, ...)$/;"	f
fzf#vim#filetypes	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#filetypes(...)$/;"	f
fzf#vim#gitfiles	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#gitfiles(args, ...)$/;"	f
fzf#vim#grep	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#grep(grep_command, ...)$/;"	f
fzf#vim#grep2	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#grep2(command_prefix, query, ...)$/;"	f
fzf#vim#helptags	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#helptags(...)$/;"	f
fzf#vim#history	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#history(...)$/;"	f
fzf#vim#ipc#restart	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim/ipc.vim	/^function! fzf#vim#ipc#restart()$/;"	f
fzf#vim#ipc#start	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim/ipc.vim	/^function! fzf#vim#ipc#start(Callback)$/;"	f
fzf#vim#ipc#stop	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim/ipc.vim	/^function! fzf#vim#ipc#stop()$/;"	f
fzf#vim#jumps	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#jumps(...)$/;"	f
fzf#vim#lines	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#lines(...)$/;"	f
fzf#vim#listproc#location	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim/listproc.vim	/^function! fzf#vim#listproc#location(list)$/;"	f
fzf#vim#listproc#quickfix	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim/listproc.vim	/^function! fzf#vim#listproc#quickfix(list)$/;"	f
fzf#vim#locate	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#locate(query, ...)$/;"	f
fzf#vim#maps	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#maps(mode, ...)$/;"	f
fzf#vim#marks	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#marks(...)$/;"	f
fzf#vim#search_history	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#search_history(...)$/;"	f
fzf#vim#snippets	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#snippets(...)$/;"	f
fzf#vim#tags	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#tags(query, ...)$/;"	f
fzf#vim#windows	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#windows(...)$/;"	f
fzf#vim#with_preview	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#with_preview(...)$/;"	f
fzf_buffers	conf/vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^augroup fzf_buffers$/;"	a
fzf_restore_colors	conf/vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^  function! s:fzf_restore_colors()$/;"	f
fzf_setup_error	conf/zsh/.oh-my-zsh/plugins/fzf/fzf.plugin.zsh	/^function fzf_setup_error() {$/;"	f
fzf_setup_using_base_dir	conf/zsh/.oh-my-zsh/plugins/fzf/fzf.plugin.zsh	/^function fzf_setup_using_base_dir() {$/;"	f
fzf_setup_using_cygwin	conf/zsh/.oh-my-zsh/plugins/fzf/fzf.plugin.zsh	/^function fzf_setup_using_cygwin() {$/;"	f
fzf_setup_using_debian	conf/zsh/.oh-my-zsh/plugins/fzf/fzf.plugin.zsh	/^function fzf_setup_using_debian() {$/;"	f
fzf_setup_using_fedora	conf/zsh/.oh-my-zsh/plugins/fzf/fzf.plugin.zsh	/^function fzf_setup_using_fedora() {$/;"	f
fzf_setup_using_fzf	conf/zsh/.oh-my-zsh/plugins/fzf/fzf.plugin.zsh	/^function fzf_setup_using_fzf() {$/;"	f
fzf_setup_using_macports	conf/zsh/.oh-my-zsh/plugins/fzf/fzf.plugin.zsh	/^function fzf_setup_using_macports() {$/;"	f
fzf_setup_using_openbsd	conf/zsh/.oh-my-zsh/plugins/fzf/fzf.plugin.zsh	/^function fzf_setup_using_openbsd() {$/;"	f
fzf_setup_using_opensuse	conf/zsh/.oh-my-zsh/plugins/fzf/fzf.plugin.zsh	/^function fzf_setup_using_opensuse() {$/;"	f
fzf_vim_term	conf/vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^  function! s:fzf_vim_term()$/;"	f
g:NERDTree	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^let g:NERDTree = s:NERDTree$/;"	v
g:NERDTreeAutoCenter	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeAutoCenter            = get(g:, 'NERDTreeAutoCenter',            1)$/;"	v
g:NERDTreeAutoCenterThreshold	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeAutoCenterThreshold   = get(g:, 'NERDTreeAutoCenterThreshold',   3)$/;"	v
g:NERDTreeAutoDeleteBuffer	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeBookmarksFile	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeBookmarksFile         = get(g:, 'NERDTreeBookmarksFile',         expand('$HOME') . '\/.NERDTreeBookmarks')$/;"	v
g:NERDTreeBookmarksSort	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeBookmarksSort         = get(g:, 'NERDTreeBookmarksSort',         1)$/;"	v
g:NERDTreeCascadeOpenSingleChildDir	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeCascadeOpenSingleChildDir = get(g:, 'NERDTreeCascadeOpenSingleChildDir', 1)$/;"	v
g:NERDTreeCascadeSingleChildDir	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeCascadeSingleChildDir     = get(g:, 'NERDTreeCascadeSingleChildDir',     1)$/;"	v
g:NERDTreeCaseSensitiveFS	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeCaseSensitiveFS       = get(g:, 'NERDTreeCaseSensitiveFS',       2)$/;"	v
g:NERDTreeCaseSensitiveSort	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeCaseSensitiveSort     = get(g:, 'NERDTreeCaseSensitiveSort',     0)$/;"	v
g:NERDTreeChDirMode	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeChDirMode             = get(g:, 'NERDTreeChDirMode',             0)$/;"	v
g:NERDTreeCopyCmd	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeCopyCmd      = get(g:, 'NERDTreeCopyCmd',      'cp -r ')$/;"	v
g:NERDTreeCopyDirCmd	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeCopyDirCmd   = get(g:, 'NERDTreeCopyDirCmd',   'xcopy \/s \/e \/i \/y \/q ')$/;"	v
g:NERDTreeCopyFileCmd	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeCopyFileCmd  = get(g:, 'NERDTreeCopyFileCmd',  'copy \/y ')$/;"	v
g:NERDTreeCreatePrefix	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeCreatePrefix          = get(g:, 'NERDTreeCreatePrefix',          'silent')$/;"	v
g:NERDTreeCreator	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirArrowCollapsible	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowCollapsible = get(g:, 'NERDTreeDirArrowCollapsible', '~')$/;"	v
g:NERDTreeDirArrowCollapsible	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowCollapsible = get(g:, 'NERDTreeDirArrowCollapsible', '▾')$/;"	v
g:NERDTreeDirArrowExpandable	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowExpandable  = get(g:, 'NERDTreeDirArrowExpandable',  '+')$/;"	v
g:NERDTreeDirArrowExpandable	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeDirArrowExpandable  = get(g:, 'NERDTreeDirArrowExpandable',  '▸')$/;"	v
g:NERDTreeDirNode	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeEvent	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/event.vim	/^let g:NERDTreeEvent = s:Event$/;"	v
g:NERDTreeFileLines	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeFileLines             = get(g:, 'NERDTreeFileLines',             0)$/;"	v
g:NERDTreeFileNode	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeFlagSet	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/flag_set.vim	/^let g:NERDTreeFlagSet = s:FlagSet$/;"	v
g:NERDTreeGlyphReadOnly	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeGlyphReadOnly = get(g:, 'NERDTreeGlyphReadOnly', 'RO')$/;"	v
g:NERDTreeHighlightCursorline	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeHighlightCursorline   = get(g:, 'NERDTreeHighlightCursorline',   1)$/;"	v
g:NERDTreeHijackNetrw	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeHijackNetrw           = get(g:, 'NERDTreeHijackNetrw',           1)$/;"	v
g:NERDTreeIgnore	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeIgnore                = get(g:, 'NERDTreeIgnore',                ['\\~$'])$/;"	v
g:NERDTreeKeyMap	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMapActivateNode	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapActivateNode    = get(g:, 'NERDTreeMapActivateNode',    'o')$/;"	v
g:NERDTreeMapCWD	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCWD             = get(g:, 'NERDTreeMapCWD',             'CD')$/;"	v
g:NERDTreeMapChangeRoot	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapChangeRoot      = get(g:, 'NERDTreeMapChangeRoot',      'C')$/;"	v
g:NERDTreeMapChdir	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapChdir           = get(g:, 'NERDTreeMapChdir',           'cd')$/;"	v
g:NERDTreeMapCloseChildren	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCloseChildren   = get(g:, 'NERDTreeMapCloseChildren',   'X')$/;"	v
g:NERDTreeMapCloseDir	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCloseDir        = get(g:, 'NERDTreeMapCloseDir',        'x')$/;"	v
g:NERDTreeMapCustomOpen	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapCustomOpen      = get(g:, 'NERDTreeMapCustomOpen',      '<CR>')$/;"	v
g:NERDTreeMapDeleteBookmark	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapDeleteBookmark  = get(g:, 'NERDTreeMapDeleteBookmark',  'D')$/;"	v
g:NERDTreeMapHelp	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapHelp            = get(g:, 'NERDTreeMapHelp',            '?')$/;"	v
g:NERDTreeMapJumpBookmarks	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpBookmarks   = get(g:, 'NERDTreeMapJumpBookmarks',   'gb')$/;"	v
g:NERDTreeMapJumpFirstChild	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpFirstChild  = get(g:, 'NERDTreeMapJumpFirstChild',  'K')$/;"	v
g:NERDTreeMapJumpLastChild	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpLastChild   = get(g:, 'NERDTreeMapJumpLastChild',   'J')$/;"	v
g:NERDTreeMapJumpNextSibling	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpNextSibling = get(g:, 'NERDTreeMapJumpNextSibling', '<C-j>')$/;"	v
g:NERDTreeMapJumpParent	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpParent      = get(g:, 'NERDTreeMapJumpParent',      'p')$/;"	v
g:NERDTreeMapJumpPrevSibling	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpPrevSibling = get(g:, 'NERDTreeMapJumpPrevSibling', '<C-k>')$/;"	v
g:NERDTreeMapJumpRoot	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapJumpRoot        = get(g:, 'NERDTreeMapJumpRoot',        'P')$/;"	v
g:NERDTreeMapMenu	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapMenu            = get(g:, 'NERDTreeMapMenu',            'm')$/;"	v
g:NERDTreeMapOpenExpl	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenExpl        = get(g:, 'NERDTreeMapOpenExpl',        'e')$/;"	v
g:NERDTreeMapOpenInTab	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenInTab       = get(g:, 'NERDTreeMapOpenInTab',       't')$/;"	v
g:NERDTreeMapOpenInTabSilent	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenInTabSilent = get(g:, 'NERDTreeMapOpenInTabSilent', 'T')$/;"	v
g:NERDTreeMapOpenRecursively	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenRecursively = get(g:, 'NERDTreeMapOpenRecursively', 'O')$/;"	v
g:NERDTreeMapOpenSplit	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenSplit       = get(g:, 'NERDTreeMapOpenSplit',       'i')$/;"	v
g:NERDTreeMapOpenVSplit	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapOpenVSplit      = get(g:, 'NERDTreeMapOpenVSplit',      's')$/;"	v
g:NERDTreeMapPreview	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapPreview         = get(g:, 'NERDTreeMapPreview',         'g'.NERDTreeMapActivateNode)$/;"	v
g:NERDTreeMapPreviewSplit	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapPreviewSplit    = get(g:, 'NERDTreeMapPreviewSplit',    'g'.NERDTreeMapOpenSplit)$/;"	v
g:NERDTreeMapPreviewVSplit	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapPreviewVSplit   = get(g:, 'NERDTreeMapPreviewVSplit',   'g'.NERDTreeMapOpenVSplit)$/;"	v
g:NERDTreeMapQuit	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapQuit            = get(g:, 'NERDTreeMapQuit',            'q')$/;"	v
g:NERDTreeMapRefresh	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapRefresh         = get(g:, 'NERDTreeMapRefresh',         'r')$/;"	v
g:NERDTreeMapRefreshRoot	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapRefreshRoot     = get(g:, 'NERDTreeMapRefreshRoot',     'R')$/;"	v
g:NERDTreeMapToggleBookmarks	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleBookmarks = get(g:, 'NERDTreeMapToggleBookmarks', 'B')$/;"	v
g:NERDTreeMapToggleFileLines	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleFileLines = get(g:, 'NERDTreeMapToggleFileLines', 'FL')$/;"	v
g:NERDTreeMapToggleFiles	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleFiles     = get(g:, 'NERDTreeMapToggleFiles',     'F')$/;"	v
g:NERDTreeMapToggleFilters	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleFilters   = get(g:, 'NERDTreeMapToggleFilters',   'f')$/;"	v
g:NERDTreeMapToggleHidden	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleHidden    = get(g:, 'NERDTreeMapToggleHidden',    'I')$/;"	v
g:NERDTreeMapToggleZoom	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapToggleZoom      = get(g:, 'NERDTreeMapToggleZoom',      'A')$/;"	v
g:NERDTreeMapUpdir	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapUpdir           = get(g:, 'NERDTreeMapUpdir',           'u')$/;"	v
g:NERDTreeMapUpdirKeepOpen	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMapUpdirKeepOpen   = get(g:, 'NERDTreeMapUpdirKeepOpen',   'U')$/;"	v
g:NERDTreeMarkBookmarks	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMarkBookmarks         = get(g:, 'NERDTreeMarkBookmarks',         1)$/;"	v
g:NERDTreeMenuController	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuDown	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMenuDown           = get(g:, 'NERDTreeMenuDown',           'j')$/;"	v
g:NERDTreeMenuItem	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeMenuUp	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMenuUp             = get(g:, 'NERDTreeMenuUp',             'k')$/;"	v
g:NERDTreeMinimalMenu	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMinimalMenu           = get(g:, 'NERDTreeMinimalMenu',           0)$/;"	v
g:NERDTreeMinimalUI	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMinimalUI             = get(g:, 'NERDTreeMinimalUI',             0)$/;"	v
g:NERDTreeMouseMode	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeMouseMode             = get(g:, 'NERDTreeMouseMode',             1)$/;"	v
g:NERDTreeNaturalSort	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeNaturalSort           = get(g:, 'NERDTreeNaturalSort',           0)$/;"	v
g:NERDTreeNodeDelimiter	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeNodeDelimiter = get(g:, 'NERDTreeNodeDelimiter', "\\u00a0")$/;"	v
g:NERDTreeNodeDelimiter	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeNodeDelimiter = get(g:, 'NERDTreeNodeDelimiter', "\\u00b7")$/;"	v
g:NERDTreeNodeDelimiter	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeNodeDelimiter = get(g:, 'NERDTreeNodeDelimiter', "\\x07")$/;"	v
g:NERDTreeNotificationThreshold	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeNotificationThreshold = get(g:, 'NERDTreeNotificationThreshold', 100)$/;"	v
g:NERDTreeOldSortOrder	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeOldSortOrder = []$/;"	v
g:NERDTreeOpener	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreePathNotifier	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/notifier.vim	/^let g:NERDTreePathNotifier = deepcopy(s:Notifier)$/;"	v
g:NERDTreeQuitOnOpen	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeQuitOnOpen            = get(g:, 'NERDTreeQuitOnOpen',            0)$/;"	v
g:NERDTreeRemoveDirCmd	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeRemoveDirCmd = get(g:, 'NERDTreeRemoveDirCmd', 'rm -rf ')$/;"	v
g:NERDTreeRemoveDirCmd	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeRemoveDirCmd = get(g:, 'NERDTreeRemoveDirCmd', 'rmdir \/s \/q ')$/;"	v
g:NERDTreeRespectWildIgnore	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeRespectWildIgnore     = get(g:, 'NERDTreeRespectWildIgnore',     0)$/;"	v
g:NERDTreeShowBookmarks	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeShowBookmarks         = get(g:, 'NERDTreeShowBookmarks',         0)$/;"	v
g:NERDTreeShowFiles	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeShowFiles             = get(g:, 'NERDTreeShowFiles',             1)$/;"	v
g:NERDTreeShowHidden	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeShowHidden            = get(g:, 'NERDTreeShowHidden',            0)$/;"	v
g:NERDTreeShowLineNumbers	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeShowLineNumbers       = get(g:, 'NERDTreeShowLineNumbers',       0)$/;"	v
g:NERDTreeSortDirs	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeSortDirs              = get(g:, 'NERDTreeSortDirs',              1)$/;"	v
g:NERDTreeSortHiddenFirst	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeSortHiddenFirst       = get(g:, 'NERDTreeSortHiddenFirst',       1)$/;"	v
g:NERDTreeSortOrder	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeSortOrder    = get(g:, 'NERDTreeSortOrder', ['\\\/$', '*', '\\.swp$', '\\.bak$', '\\~$'])$/;"	v
g:NERDTreeStatusline	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeStatusline = get(g:, 'NERDTreeStatusline', "%{exists('b:NERDTree')?b:NERDTree.root.path.str():''}")$/;"	v
g:NERDTreeUI	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^let g:NERDTreeUI = s:UI$/;"	v
g:NERDTreeUseTCD	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeUseTCD                = get(g:, 'NERDTreeUseTCD',                0)$/;"	v
g:NERDTreeWinPos	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeWinPos  = get(g:, 'NERDTreeWinPos', 'left')$/;"	v
g:NERDTreeWinSize	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeWinSize = get(g:, 'NERDTreeWinSize', 31)$/;"	v
g:UltiSnipsDebugHost	conf/vim/.vim/plugged/ultisnips/plugin/UltiSnips.vim	/^   let g:UltiSnipsDebugHost = 'localhost'$/;"	v
g:UltiSnipsDebugPort	conf/vim/.vim/plugged/ultisnips/plugin/UltiSnips.vim	/^   let g:UltiSnipsDebugPort = 8080$/;"	v
g:UltiSnipsDebugServerEnable	conf/vim/.vim/plugged/ultisnips/plugin/UltiSnips.vim	/^   let g:UltiSnipsDebugServerEnable = 0$/;"	v
g:UltiSnipsEditSplit	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsEditSplit = 'normal'$/;"	v
g:UltiSnipsEditSplit	conf/vim/.vim/plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsEditSplit="vertical"$/;"	v
g:UltiSnipsEnableSnipMate	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsEnableSnipMate = 1$/;"	v
g:UltiSnipsExpandTrigger	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsExpandTrigger = "<tab>"$/;"	v
g:UltiSnipsExpandTrigger	conf/vim/.vim/plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsExpandTrigger="<tab>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsJumpBackwardTrigger = "<c-k>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	conf/vim/.vim/plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsJumpBackwardTrigger="1"$/;"	v
g:UltiSnipsJumpForwardTrigger	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsJumpForwardTrigger = "<c-j>"$/;"	v
g:UltiSnipsJumpForwardTrigger	conf/vim/.vim/plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsJumpForwardTrigger="2"$/;"	v
g:UltiSnipsListSnippets	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsListSnippets = "<c-tab>"$/;"	v
g:UltiSnipsListSnippets	conf/vim/.vim/plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsListSnippets="9"$/;"	v
g:UltiSnipsMappingsToIgnore	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsMappingsToIgnore = []$/;"	v
g:UltiSnipsPMDebugBlocking	conf/vim/.vim/plugged/ultisnips/plugin/UltiSnips.vim	/^   let g:UltiSnipsPMDebugBlocking = 0$/;"	v
g:UltiSnipsRemoveSelectModeMappings	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsRemoveSelectModeMappings = 1$/;"	v
g:UltiSnipsSnippetDirectories	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsSnippetDirectories = [ "UltiSnips" ]$/;"	v
g:clang_format#auto_filetypes	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#auto_filetypes = s:getg( 'clang_format#auto_filetypes',$/;"	v
g:clang_format#auto_format	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#auto_format = s:getg('clang_format#auto_format', 0)$/;"	v
g:clang_format#auto_format	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let g:clang_format#auto_format = 1$/;"	v
g:clang_format#auto_format_git_diff	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#auto_format_git_diff = s:getg('clang_format#auto_format_git_diff', 0)$/;"	v
g:clang_format#auto_format_git_diff_fallback	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#auto_format_git_diff_fallback = s:getg('clang_format#auto_format_git_diff_fallback', 'file')$/;"	v
g:clang_format#auto_format_on_insert_leave	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#auto_format_on_insert_leave = s:getg('clang_format#auto_format_on_insert_leave', 0)$/;"	v
g:clang_format#auto_format_on_insert_leave	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let g:clang_format#auto_format_on_insert_leave = 1$/;"	v
g:clang_format#auto_formatexpr	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#auto_formatexpr = s:getg('clang_format#auto_formatexpr', 0)$/;"	v
g:clang_format#auto_formatexpr	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let g:clang_format#auto_formatexpr = 1$/;"	v
g:clang_format#code_style	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#code_style = s:getg('clang_format#code_style', 'google')$/;"	v
g:clang_format#command	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#command = s:getg('clang_format#command', 'clang-format')$/;"	v
g:clang_format#command	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let g:clang_format#command = "clang_format_not_exist"$/;"	v
g:clang_format#command	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let g:clang_format#command = '.\/t\/clang-format-dummy.sh'$/;"	v
g:clang_format#command	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let g:clang_format#command = s:cmd_tmp$/;"	v
g:clang_format#command	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^let g:clang_format#command = s:detect_clang_format()$/;"	v
g:clang_format#detect_style_file	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#detect_style_file = s:getg('clang_format#detect_style_file', 1)$/;"	v
g:clang_format#detect_style_file	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let g:clang_format#detect_style_file = 0$/;"	v
g:clang_format#detect_style_file	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let g:clang_format#detect_style_file = 0$/;"	v
g:clang_format#enable_fallback_style	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#enable_fallback_style = s:getg('clang_format#enable_fallback_style', 1)$/;"	v
g:clang_format#extra_args	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^    let g:clang_format#extra_args = join(g:clang_format#extra_args, " ")$/;"	v
g:clang_format#extra_args	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#extra_args = s:getg('clang_format#extra_args', "")$/;"	v
g:clang_format#filetype_style_options	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#filetype_style_options = s:getg('clang_format#filetype_style_options', {})$/;"	v
g:clang_format#git	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#git = s:getg('clang_format#git', 'git')$/;"	v
g:clang_format#style_options	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#style_options = s:getg('clang_format#style_options', {})$/;"	v
g:clang_format#style_options	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^                let g:clang_format#style_options = {'UseTab' : v:false, 'IndentWidth' : 4}$/;"	v
g:clang_format#style_options	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let g:clang_format#style_options = saved$/;"	v
g:clang_format#style_options	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let g:clang_format#style_options = {$/;"	v
g:clang_format#style_options	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let g:clang_format#style_options = {'UseTab' : 'false', 'IndentWidth' : 4}$/;"	v
g:coc_global_extensions	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^let g:coc_global_extensions = get(g:, 'coc_global_extensions', [])$/;"	v
g:coc_highlight_maximum_count	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^let g:coc_highlight_maximum_count = get(g:, 'coc_highlight_maximum_count', 200)$/;"	v
g:coc_max_treeview_width	conf/vim/.vim/plugged/coc.nvim/autoload/coc/window.vim	/^let g:coc_max_treeview_width = get(g:, 'coc_max_treeview_width', 40)$/;"	v
g:coc_selected_text	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^let g:coc_selected_text = ''$/;"	v
g:coc_service_initialized	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^let g:coc_service_initialized = 0$/;"	v
g:coc_snippet_next	conf/vim/.vim/custom/coc.vim	/^let g:coc_snippet_next = '<tab>'$/;"	v
g:coc_user_config	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^let g:coc_user_config = get(g:, 'coc_user_config', {})$/;"	v
g:coc_vim_commands	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^let g:coc_vim_commands = []$/;"	v
g:cscope_db_added	conf/vim/.vim/custom/cscope_maps.vim	/^        let g:cscope_db_added = 1$/;"	v
g:ctrlp_ext_vars	conf/vim/.vim/plugged/vim-go/autoload/ctrlp/decls.vim	/^  let g:ctrlp_ext_vars = [s:go_decls_var]$/;"	v
g:ctrlp_ext_vars	conf/vim/.vim/plugged/vim-go/autoload/ctrlp/decls.vim	/^  let g:ctrlp_ext_vars = add(g:ctrlp_ext_vars, s:go_decls_var)$/;"	v
g:current_compiler	conf/vim/.vim/plugged/vim-go/compiler/go.vim	/^let g:current_compiler = "go"$/;"	v
g:did_coc_loaded	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^let g:did_coc_loaded = 1$/;"	v
g:fzf#vim#buffers	conf/vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^  let g:fzf#vim#buffers = {}$/;"	v
g:gitgutter_async	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_async                        = get(g:, 'gitgutter_async', 1)$/;"	v
g:gitgutter_close_preview_on_escape	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_close_preview_on_escape      = get(g:, 'gitgutter_close_preview_on_escape', 0)$/;"	v
g:gitgutter_diff_args	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_diff_args                    = get(g:, 'gitgutter_diff_args', '')$/;"	v
g:gitgutter_diff_base	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_diff_base                    = get(g:, 'gitgutter_diff_base', '')$/;"	v
g:gitgutter_diff_relative_to	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_diff_relative_to             = get(g:, 'gitgutter_diff_relative_to', 'index')$/;"	v
g:gitgutter_enabled	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_enabled = get(g:, 'gitgutter_enabled', 1)$/;"	v
g:gitgutter_floating_window_options	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_floating_window_options = get(g:, 'gitgutter_floating_window_options', {$/;"	v
g:gitgutter_git_args	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_git_args                     = get(g:, 'gitgutter_git_args', '')$/;"	v
g:gitgutter_git_executable	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_git_executable = get(g:, 'gitgutter_git_executable', 'git')$/;"	v
g:gitgutter_grep	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^      let g:gitgutter_grep .= ' --color=never'$/;"	v
g:gitgutter_grep	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^    let g:gitgutter_grep = ''$/;"	v
g:gitgutter_grep	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_grep = get(g:, 'gitgutter_grep', default_grep)$/;"	v
g:gitgutter_highlight_linenrs	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_highlight_linenrs = get(g:, 'gitgutter_highlight_linenrs', 0)$/;"	v
g:gitgutter_highlight_lines	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_highlight_lines   = get(g:, 'gitgutter_highlight_lines', 0)$/;"	v
g:gitgutter_log	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_log                          = get(g:, 'gitgutter_log', 0)$/;"	v
g:gitgutter_map_keys	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_map_keys                     = get(g:, 'gitgutter_map_keys', 1)$/;"	v
g:gitgutter_max_signs	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_max_signs = get(g:, 'gitgutter_max_signs', -1)$/;"	v
g:gitgutter_max_signs	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_max_signs = get(g:, 'gitgutter_max_signs', 500)$/;"	v
g:gitgutter_preview_win_floating	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_preview_win_floating = get(g:, 'gitgutter_preview_win_floating', 1)$/;"	v
g:gitgutter_preview_win_floating	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_preview_win_floating = get(g:, 'gitgutter_preview_win_floating', default)$/;"	v
g:gitgutter_preview_win_location	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_preview_win_location = get(g:, 'gitgutter_preview_win_location', 'bo')$/;"	v
g:gitgutter_set_sign_backgrounds	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_set_sign_backgrounds = get(g:, 'gitgutter_set_sign_backgrounds', 0)$/;"	v
g:gitgutter_show_msg_on_hunk_jumping	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_show_msg_on_hunk_jumping     = get(g:, 'gitgutter_show_msg_on_hunk_jumping', 1)$/;"	v
g:gitgutter_sign_added	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_added           = get(g:, 'gitgutter_sign_added', '+')$/;"	v
g:gitgutter_sign_allow_clobber	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_sign_allow_clobber = 1$/;"	v
g:gitgutter_sign_allow_clobber	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_allow_clobber   = get(g:, 'gitgutter_sign_allow_clobber', 0)$/;"	v
g:gitgutter_sign_modified	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_modified        = get(g:, 'gitgutter_sign_modified', '~')$/;"	v
g:gitgutter_sign_modified_removed	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_modified_removed        = get(g:, 'gitgutter_sign_modified_removed', '~_')$/;"	v
g:gitgutter_sign_priority	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_priority     = get(g:, 'gitgutter_sign_priority', 10)$/;"	v
g:gitgutter_sign_removed	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_removed         = get(g:, 'gitgutter_sign_removed', '_')$/;"	v
g:gitgutter_sign_removed_above_and_below	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_sign_removed_above_and_below = get(g:, 'gitgutter_sign_removed_above_and_below', '_¯')$/;"	v
g:gitgutter_sign_removed_first_line	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_sign_removed_first_line = get(g:, 'gitgutter_sign_removed_first_line', '_^')$/;"	v
g:gitgutter_sign_removed_first_line	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_sign_removed_first_line = get(g:, 'gitgutter_sign_removed_first_line', '‾')$/;"	v
g:gitgutter_signs	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_signs             = get(g:, 'gitgutter_signs', 1)$/;"	v
g:gitgutter_terminal_reports_focus	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_terminal_reports_focus       = get(g:, 'gitgutter_terminal_reports_focus', 1)$/;"	v
g:gitgutter_use_location_list	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:gitgutter_use_location_list            = get(g:, 'gitgutter_use_location_list', 0)$/;"	v
g:go_echo_command_info	conf/vim/.vim/plugged/vim-go/scripts/runtest.vim	/^  let g:go_echo_command_info = 0$/;"	v
g:go_gopls_options	conf/vim/.vim/plugged/vim-go/scripts/runtest.vim	/^  let g:go_gopls_options = []$/;"	v
g:go_gotags_bin	conf/vim/.vim/plugged/vim-go/ftplugin/go/tagbar.vim	/^  let g:go_gotags_bin = "gotags"$/;"	v
g:go_jump_to_error	conf/vim/.vim/plugged/vim-go/ftplugin/go/mappings.vim	/^  let g:go_jump_to_error = 1$/;"	v
g:go_loaded_gosnippets	conf/vim/.vim/plugged/vim-go/ftplugin/go/snippets.vim	/^let g:go_loaded_gosnippets = 1$/;"	v
g:go_loaded_install	conf/vim/.vim/plugged/vim-go/plugin/go.vim	/^let g:go_loaded_install = 1$/;"	v
g:loaded_clang_format	conf/vim/.vim/plugged/vim-clang-format/plugin/clang_format.vim	/^let g:loaded_clang_format = 1$/;"	v
g:loaded_commentary	conf/vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^let g:loaded_commentary = 1$/;"	v
g:loaded_deoplete	conf/vim/.vim/plugged/deoplete.nvim/plugin/deoplete.vim	/^let g:loaded_deoplete = 1$/;"	v
g:loaded_fzf_vim	conf/vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^let g:loaded_fzf_vim = 1$/;"	v
g:loaded_gitgutter	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:loaded_gitgutter = 1$/;"	v
g:loaded_nerdtree_autoload	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_ui_glue_autoload	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^let g:loaded_nerdtree_ui_glue_autoload = 1$/;"	v
g:loaded_plug	conf/vim/.vim/autoload/plug.vim	/^let g:loaded_plug = 1$/;"	v
g:main_syntax	conf/vim/.vim/plugged/vim-go/syntax/gohtmltmpl.vim	/^  let g:main_syntax = 'html'$/;"	v
g:plugs_order	conf/vim/.vim/autoload/plug.vim	/^  let g:plugs_order = get(g:, 'plugs_order', keys(g:plugs))$/;"	v
g:snips_author	conf/vim/.vim/plugged/vim-snippets/plugin/vimsnippets.vim	/^    let g:snips_author = "yourname"$/;"	v
g:snips_email	conf/vim/.vim/plugged/vim-snippets/plugin/vimsnippets.vim	/^    let g:snips_email = "yourname@email.com"$/;"	v
g:snips_github	conf/vim/.vim/plugged/vim-snippets/plugin/vimsnippets.vim	/^    let g:snips_github = "https:\/\/github.com\/yourname"$/;"	v
g:tabular_default_format	conf/vim/.vim/plugged/tabular/autoload/tabular.vim	/^  let g:tabular_default_format = "l1"$/;"	v
g:tabular_loaded	conf/vim/.vim/plugged/tabular/plugin/Tabular.vim	/^let g:tabular_loaded = 1$/;"	v
g:tagbar_type_snippets	conf/vim/.vim/plugged/ultisnips/ftplugin/snippets.vim	/^let g:tagbar_type_snippets = {$/;"	v
g:test_verbose	conf/vim/.vim/plugged/vim-go/scripts/runtest.vim	/^  let g:test_verbose = 0$/;"	v
g:testname	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^let g:testname = expand('%')$/;"	v
g:vim_go_root	conf/vim/.vim/plugged/vim-go/scripts/runtest.vim	/^let g:vim_go_root = fnamemodify(getcwd(), ':p')$/;"	v
g<LeftMouse>	conf/vim/.vim/plugged/vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> g<LeftMouse> <LeftMouse>:GoDef<cr>$/;"	m
gD	conf/vim/.vim/plugged/vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> gD :GoDefType<cr>$/;"	m
ga	conf/vim/.vim/custom/keymaps.vim	/^nmap ga <Plug>(EasyAlign)$/;"	m
games-packages	conf/emacs/.emacs.d/layers/+fun/games/packages.el	/^(defconst games-packages$/;"	f
games/init-2048-game	conf/emacs/.emacs.d/layers/+fun/games/packages.el	/^(defun games\/init-2048-game ()$/;"	f
games/init-helm-games	conf/emacs/.emacs.d/layers/+fun/games/packages.el	/^(defun games\/init-helm-games ()$/;"	f
games/init-pacmacs	conf/emacs/.emacs.d/layers/+fun/games/packages.el	/^(defun games\/init-pacmacs ()$/;"	f
games/init-sudoku	conf/emacs/.emacs.d/layers/+fun/games/packages.el	/^(defun games\/init-sudoku ()$/;"	f
games/init-tetris	conf/emacs/.emacs.d/layers/+fun/games/packages.el	/^(defun games\/init-tetris ()$/;"	f
games/init-typit	conf/emacs/.emacs.d/layers/+fun/games/packages.el	/^(defun games\/init-typit ()$/;"	f
gather_candidates	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/base/source.py	/^    def gather_candidates(self, context: UserContext) -> Candidates:$/;"	m	class:Base
gather_candidates	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^    def gather_candidates(self, context: UserContext) -> Candidates:$/;"	m	class:Source
gather_candidates	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^    def gather_candidates(self, context: UserContext) -> Candidates:$/;"	m	class:Source
gather_candidates	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def gather_candidates(self, context: UserContext) -> Candidates:$/;"	m	class:Source
gather_candidates	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^    def gather_candidates(self, context: UserContext) -> Candidates:$/;"	m	class:Source
gather_candidates	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^    def gather_candidates(self, context: UserContext) -> Candidates:$/;"	m	class:Source
gather_candidates	conf/vim/.vim/plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	conf/vim/.vim/plugged/vim-go/rplugin/python3/denite/source/decls.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gbda	conf/zsh/.oh-my-zsh/plugins/git/git.plugin.zsh	/^function gbda() {$/;"	f
gbds	conf/zsh/.oh-my-zsh/plugins/git/git.plugin.zsh	/^function gbds() {$/;"	f
gc	conf/vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^  nmap gc  <Plug>Commentary$/;"	m
gc	conf/vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^  omap gc  <Plug>Commentary$/;"	m
gcc	conf/vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^  nmap gcc <Plug>CommentaryLine$/;"	m
gccd	conf/zsh/.oh-my-zsh/plugins/git/git.plugin.zsh	/^function gccd() {$/;"	f
gcu	conf/vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^  nmap gcu <Plug>Commentary<Plug>Commentary$/;"	m
gd	conf/vim/.vim/custom/coc.vim	/^nmap <silent> gd <Plug>(coc-definition)$/;"	m
gd	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nmap <silent> gd <Plug>(coc-definition)$/;"	m
gd	conf/vim/.vim/plugged/vim-go/ftplugin/go.vim	/^  nnoremap <buffer> <silent> gd :GoDef<cr>$/;"	m
gdnolock	conf/zsh/.oh-my-zsh/plugins/git/git.plugin.zsh	/^function gdnolock() {$/;"	f
gdv	conf/zsh/.oh-my-zsh/plugins/git/git.plugin.zsh	/^function gdv() { git diff -w "$@" | view - }$/;"	f
gemoji_db	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^gemoji_db = open("gemoji_db.json")$/;"	v
gems	conf/zsh/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh	/^  function gems() { echo "not supported" }$/;"	f
gems	conf/zsh/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh	/^  function gems() {$/;"	f
gems	conf/zsh/.oh-my-zsh/plugins/rvm/rvm.plugin.zsh	/^function gems {$/;"	f
gemsets	conf/zsh/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh	/^  function gemsets() { echo "not supported" }$/;"	f
gemy	conf/zsh/.oh-my-zsh/plugins/gem/gem.plugin.zsh	/^function gemy {$/;"	f
gen_filter_keys	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:gen_filter_keys(line) abort$/;"	f
generate	workflows/Ariafred/src/workflow/web.py	/^        def generate():$/;"	f	function:Response.iter_content
generateImpliedEndTags	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func (p *parser) generateImpliedEndTags(exceptions ...string) {$/;"	f
generate_id	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:generate_id(bufnr) abort$/;"	f
generate_mobile_args	sh/kcptun.sh	/^generate_mobile_args() {$/;"	f
geolocation-enable-automatic-theme-changer	conf/emacs/.emacs.d/layers/+tools/geolocation/config.el	/^(defvar geolocation-enable-automatic-theme-changer nil$/;"	f
geolocation-enable-location-service	conf/emacs/.emacs.d/layers/+tools/geolocation/config.el	/^(defvar geolocation-enable-location-service nil$/;"	f
geolocation-enable-weather-forecast	conf/emacs/.emacs.d/layers/+tools/geolocation/config.el	/^(defvar geolocation-enable-weather-forecast nil$/;"	f
geolocation-packages	conf/emacs/.emacs.d/layers/+tools/geolocation/packages.el	/^(defconst geolocation-packages$/;"	f
geolocation//activate-theme-changer	conf/emacs/.emacs.d/layers/+tools/geolocation/funcs.el	/^(defun geolocation\/\/activate-theme-changer ()$/;"	f
geolocation/init-osx-location	conf/emacs/.emacs.d/layers/+tools/geolocation/packages.el	/^(defun geolocation\/init-osx-location ()$/;"	f
geolocation/init-rase	conf/emacs/.emacs.d/layers/+tools/geolocation/packages.el	/^(defun geolocation\/init-rase ()$/;"	f
geolocation/init-sunshine	conf/emacs/.emacs.d/layers/+tools/geolocation/packages.el	/^(defun geolocation\/init-sunshine ()$/;"	f
geolocation/init-theme-changer	conf/emacs/.emacs.d/layers/+tools/geolocation/extensions.el	/^(defun geolocation\/init-theme-changer ()$/;"	f
geolocation/init-theme-changer	conf/emacs/.emacs.d/layers/+tools/geolocation/packages.el	/^(defun geolocation\/init-theme-changer ()$/;"	f
geolocation/pre-init-popwin	conf/emacs/.emacs.d/layers/+tools/geolocation/packages.el	/^(defun geolocation\/pre-init-popwin ()$/;"	f
get	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/context.py	/^    def get(self, event: str) -> UserContext:$/;"	m	class:Context
get	workflows/Ariafred/src/workflow/web.py	/^    def get(self, key, default=None):$/;"	m	class:CaseInsensitiveDictionary
get	workflows/Ariafred/src/workflow/web.py	/^def get(url, params=None, headers=None, cookies=None, auth=None,$/;"	f
get-a-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-fns.el	/^(defun get-a-frame (frame)$/;"	f
get-frame-name	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-fns.el	/^(defun get-frame-name (&optional frame)$/;"	f
getLogger	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^def getLogger(name: str) -> logging.Logger:$/;"	f
getReceiver	conf/vim/.vim/plugged/vim-go/autoload/go/impl.vim	/^function! s:getReceiver()$/;"	f
get_active_tasks	workflows/Ariafred/src/aria.py	/^def get_active_tasks(command, filters):$/;"	f
get_arch	sh/kcptun.sh	/^get_arch() {$/;"	f
get_background_colors	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:get_background_colors(group) abort$/;"	f
get_borderchars	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:get_borderchars(config) abort$/;"	f
get_borderhighlight	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:get_borderhighlight(config) abort$/;"	f
get_buf_option	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/base/source.py	/^    def get_buf_option(self, option: str) -> typing.Any:$/;"	m	class:Base
get_buffer_data	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def get_buffer_data(self):$/;"	m	class:VimInterface
get_buffer_filetypes	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def get_buffer_filetypes(self):$/;"	m	class:SnippetManager
get_char	sh/shadowsocks-all.sh	/^get_char() {$/;"	f
get_char	sh/shadowsocks.sh	/^get_char(){$/;"	f
get_clear_priority	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def get_clear_priority(self, filetypes):$/;"	m	class:SnippetSource
get_cleared	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def get_cleared(self, filetypes):$/;"	m	class:SnippetSource
get_color	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^function! s:get_color(item, fallback) abort$/;"	f
get_color	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:get_color(attr, ...)$/;"	f
get_comment_format	conf/vim/.vim/plugged/vim-snippets/pythonx/vimsnippets.py	/^def get_comment_format():$/;"	f
get_complete_position	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/base/source.py	/^    def get_complete_position(self, context: UserContext) -> int:$/;"	m	class:Base
get_complete_position	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def get_complete_position(self, context: UserContext) -> int:$/;"	m	class:Source
get_complete_position	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^    def get_complete_position(self, context: UserContext) -> int:$/;"	m	class:Source
get_complete_position	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^    def get_complete_position(self, context: UserContext) -> int:$/;"	m	class:Source
get_completed_tasks	workflows/Ariafred/src/aria.py	/^def get_completed_tasks(command, filters):$/;"	f
get_content_type	workflows/Ariafred/src/workflow/web.py	/^    def get_content_type(filename):$/;"	f	function:encode_multipart_formdata
get_current_config_file	sh/kcptun.sh	/^get_current_config_file() {$/;"	f
get_current_listen_port	sh/kcptun.sh	/^get_current_listen_port() {$/;"	f
get_current_log_file	sh/kcptun.sh	/^get_current_log_file() {$/;"	f
get_current_supervisor_config_file	sh/kcptun.sh	/^get_current_supervisor_config_file() {$/;"	f
get_cursor_pos	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def get_cursor_pos():$/;"	f
get_cursorline	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:get_cursorline(topline, lines, scrolloff, width, height) abort$/;"	f
get_custom	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def get_custom(custom: typing.Dict[str, typing.Any],$/;"	f
get_deep_extends	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def get_deep_extends(self, base_filetypes):$/;"	m	class:SnippetSource
get_digits_from_string	conf/tmux/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^get_digits_from_string() {$/;"	f
get_dot_vim	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def get_dot_vim():$/;"	f
get_error_tasks	workflows/Ariafred/src/aria.py	/^def get_error_tasks(command, filters):$/;"	f
get_filetype_var	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/base/source.py	/^    def get_filetype_var(self, filetype: str,$/;"	m	class:Base
get_firstline	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! s:get_firstline(lnum, total, height) abort$/;"	f
get_foreground_colors	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:get_foreground_colors(group) abort$/;"	f
get_foreground_fallback_colors	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:get_foreground_fallback_colors(type)$/;"	f
get_git_root	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:get_git_root(dir)$/;"	f
get_height	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! s:get_height(lines, width) abort$/;"	f
get_height	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! s:get_height(winid) abort$/;"	f
get_help	workflows/Ariafred/src/aria_actions.py	/^def get_help():$/;"	f
get_hl	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:get_hl(group, what, mode) abort$/;"	f
get_host_port	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^    def get_host_port(host=None, port=None):$/;"	m	class:RemotePDB
get_http_proxy	conf/zsh/.oh-my-zsh/plugins/shell-proxy/proxy.py	/^def get_http_proxy():$/;"	f
get_icon	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^function! s:get_icon(kind, bg) abort$/;"	f
get_index	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! s:get_index(next) abort$/;"	f
get_input_pattern	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/base/source.py	/^    def get_input_pattern(self, filetype: str) -> str:$/;"	m	class:Base
get_installed_version	sh/kcptun.sh	/^get_installed_version() {$/;"	f
get_instance_count	sh/kcptun.sh	/^get_instance_count() {$/;"	f
get_ip	sh/shadowsocks-all.sh	/^get_ip() {$/;"	f
get_ip	sh/shadowsocks.sh	/^get_ip(){$/;"	f
get_ipv6	sh/shadowsocks-all.sh	/^get_ipv6(){$/;"	f
get_kcptun_version_info	sh/kcptun.sh	/^get_kcptun_version_info() {$/;"	f
get_libev_ver	sh/shadowsocks-all.sh	/^get_libev_ver(){$/;"	f
get_mark_pos	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def get_mark_pos(name):$/;"	f
get_matcher	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^def get_matcher(insensitive=True, desc=True):$/;"	f
get_matching_snippets	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/snippet_dictionary.py	/^    def get_matching_snippets($/;"	m	class:SnippetDictionary
get_new_instance_id	sh/kcptun.sh	/^get_new_instance_id() {$/;"	f
get_notified	workflows/Ariafred/src/notifier.py	/^def get_notified():$/;"	f
get_opsy	sh/shadowsocks-all.sh	/^get_opsy(){$/;"	f
get_option	conf/vim/.vim/plugged/vim-snippets/pythonx/javascript_snippets.py	/^def get_option(snip, option, default=None):$/;"	f
get_option_vim	conf/vim/.vim/plugged/coc.nvim/autoload/coc/vtext.vim	/^function! s:get_option_vim(align, column, wrap) abort$/;"	f
get_password	workflows/Ariafred/src/workflow/workflow.py	/^    def get_password(self, account, service=None):$/;"	m	class:Workflow
get_paused_tasks	workflows/Ariafred/src/aria.py	/^def get_paused_tasks(command, filters):$/;"	f
get_pending_tasks	workflows/Ariafred/src/aria.py	/^def get_pending_tasks(command, filters):$/;"	f
get_preview_height	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! s:get_preview_height(lines, config) abort$/;"	f
get_preview_lines	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! s:get_preview_lines(lines, config) abort$/;"	f
get_priority	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! s:get_priority(key, hlGroup, priority) abort$/;"	f
get_prompt_dimension	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! s:get_prompt_dimension(title, default, opts) abort$/;"	f
get_props	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^function! s:get_props(from, to, percent) abort$/;"	f
get_pum_dimension	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! s:get_pum_dimension(lines, col, config) abort$/;"	f
get_removed_tasks	workflows/Ariafred/src/aria.py	/^def get_removed_tasks(command, filters):$/;"	f
get_rpc	workflows/Ariafred/src/aria.py	/^def get_rpc():$/;"	f
get_server_ip	sh/kcptun.sh	/^get_server_ip() {$/;"	f
get_shell_version_info	sh/kcptun.sh	/^get_shell_version_info() {$/;"	f
get_snippets	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def get_snippets($/;"	m	class:SnippetSource
get_stash	conf/zsh/.oh-my-zsh/plugins/git-prompt/gitstatus.py	/^def get_stash():$/;"	f
get_stats	workflows/Ariafred/src/aria.py	/^def get_stats():$/;"	f
get_stopped_tasks	workflows/Ariafred/src/aria.py	/^def get_stopped_tasks():$/;"	f
get_syn_names	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def get_syn_names(vim: Nvim) -> typing.List[str]:$/;"	f
get_tabstops	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def get_tabstops(self):$/;"	m	class:SnippetInstance
get_tagname_or_hash	conf/zsh/.oh-my-zsh/plugins/git-prompt/gitstatus.py	/^def get_tagname_or_hash():$/;"	f
get_task_name	workflows/Ariafred/src/aria.py	/^def get_task_name(task):$/;"	f
get_task_name	workflows/Ariafred/src/aria_actions.py	/^def get_task_name(gid):$/;"	f
get_task_name	workflows/Ariafred/src/notifier.py	/^def get_task_name(gid):$/;"	f
get_tasks	workflows/Ariafred/src/aria.py	/^def get_tasks(command, status, filters):$/;"	f
get_tmux_config	conf/tmux/.tmux/plugins/tmux-sensible/sensible.tmux	/^get_tmux_config() {$/;"	f
get_tmux_option	conf/tmux/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^get_tmux_option() {$/;"	f
get_tmux_option	conf/tmux/.tmux/plugins/tpm/tpm	/^get_tmux_option() {$/;"	f
get_topline	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:get_topline(topline, lines, forward, height, width) abort$/;"	f
get_topline	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! s:get_topline(config, lnum, winheight) abort$/;"	f
get_topline	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! s:get_topline(winid) abort$/;"	f
get_tree_winid	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! s:get_tree_winid(opts) abort$/;"	f
get_url	workflows/Ariafred/src/aria_actions.py	/^def get_url(gid):$/;"	f
get_valid_releases	workflows/Ariafred/src/workflow/update.py	/^def get_valid_releases(github_slug, prereleases=False):$/;"	f
get_var	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/base/filter.py	/^    def get_var(self, var_name: str) -> typing.Any:$/;"	m	class:Base
get_var	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/base/source.py	/^    def get_var(self, var_name: str) -> typing.Any:$/;"	m	class:Base
get_visual_content	conf/vim/.vim/plugged/vim-go/autoload/go/play.vim	/^function! s:get_visual_content() abort$/;"	f
get_visual_selection	conf/vim/.vim/plugged/vim-go/autoload/go/play.vim	/^function! s:get_visual_selection() abort$/;"	f
geteip	conf/zsh/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function geteip() {$/;"	f
getg	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:getg(name, default) abort$/;"	f
getinfo	conf/vim/.vim/plugged/vim-go/autoload/go/complete_test.vim	/^func! s:getinfo()$/;"	f
getinfo	conf/vim/.vim/plugged/vim-go/autoload/go/lsp_test.vim	/^function! s:getinfo(str, name)$/;"	f
getip	conf/zsh/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function getip() {$/;"	f
getlines	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def getlines(vim: Nvim, start: int = 1,$/;"	f
getvar	workflows/Ariafred/src/workflow/workflow3.py	/^    def getvar(self, name, default=None):$/;"	m	class:Item3
getvar	workflows/Ariafred/src/workflow/workflow3.py	/^    def getvar(self, name, default=None):$/;"	m	class:Modifier
getvar	workflows/Ariafred/src/workflow/workflow3.py	/^    def getvar(self, name, default=None):$/;"	m	class:Workflow3
getversion	sh/shadowsocks-all.sh	/^getversion() {$/;"	f
getversion	sh/shadowsocks.sh	/^getversion(){$/;"	f
gg	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^  normal gg$/;"	m
ggVGgq	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        normal ggVGgq$/;"	m
ggVGx	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        normal ggVGx$/;"	m
ggf	conf/zsh/.oh-my-zsh/plugins/git/git.plugin.zsh	/^function ggf() {$/;"	f
ggfl	conf/zsh/.oh-my-zsh/plugins/git/git.plugin.zsh	/^function ggfl() {$/;"	f
ggl	conf/zsh/.oh-my-zsh/plugins/git/git.plugin.zsh	/^function ggl() {$/;"	f
ggp	conf/zsh/.oh-my-zsh/plugins/git/git.plugin.zsh	/^function ggp() {$/;"	f
ggpnp	conf/zsh/.oh-my-zsh/plugins/git/git.plugin.zsh	/^function ggpnp() {$/;"	f
ggu	conf/zsh/.oh-my-zsh/plugins/git/git.plugin.zsh	/^function ggu() {$/;"	f
gi	conf/vim/.vim/custom/coc.vim	/^nmap <silent> gi <Plug>(coc-implementation)$/;"	m
gi	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nmap <silent> gi <Plug>(coc-implementation)$/;"	m
gi	conf/zsh/.oh-my-zsh/plugins/gitignore/gitignore.plugin.zsh	/^function gi() { curl -fLw '\\n' https:\/\/www.toptal.com\/developers\/gitignore\/api\/"${(j:,:)@}" }$/;"	f
git	conf/zsh/.oh-my-zsh/plugins/git-auto-fetch/git-auto-fetch.plugin.zsh	/^function git-auto-fetch {$/;"	f
git	conf/zsh/.oh-my-zsh/plugins/git-auto-fetch/git-auto-fetch.plugin.zsh	/^function git-fetch-all {$/;"	f
git-enable-magit-delta-plugin	conf/emacs/.emacs.d/layers/+source-control/git/config.el	/^(defvar git-enable-magit-delta-plugin nil$/;"	f
git-enable-magit-gitflow-plugin	conf/emacs/.emacs.d/layers/+source-control/git/config.el	/^(defvar git-enable-magit-gitflow-plugin nil$/;"	f
git-enable-magit-svn-plugin	conf/emacs/.emacs.d/layers/+source-control/git/config.el	/^(defvar git-enable-magit-svn-plugin nil$/;"	f
git-enable-magit-todos-plugin	conf/emacs/.emacs.d/layers/+source-control/git/config.el	/^(defvar git-enable-magit-todos-plugin nil$/;"	f
git-magit-status-fullscreen	conf/emacs/.emacs.d/layers/+source-control/git/config.el	/^(defvar git-magit-status-fullscreen nil$/;"	f
git-packages	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defconst git-packages$/;"	f
git/init-code-review	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/init-code-review ()$/;"	f
git/init-forge	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/init-forge ()$/;"	f
git/init-git-link	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/init-git-link ()$/;"	f
git/init-git-messenger	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/init-git-messenger ()$/;"	f
git/init-git-modes	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/init-git-modes ()$/;"	f
git/init-git-timemachine	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/init-git-timemachine ()$/;"	f
git/init-gitignore-templates	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/init-gitignore-templates ()$/;"	f
git/init-helm-git-grep	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/init-helm-git-grep ()$/;"	f
git/init-magit	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/init-magit ()$/;"	f
git/init-magit-delta	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/init-magit-delta ()$/;"	f
git/init-magit-gitflow	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/init-magit-gitflow ()$/;"	f
git/init-magit-section	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/init-magit-section ()$/;"	f
git/init-magit-svn	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/init-magit-svn ()$/;"	f
git/init-magit-todos	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/init-magit-todos ()$/;"	f
git/init-orgit	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/init-orgit ()$/;"	f
git/init-orgit-forge	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/init-orgit-forge ()$/;"	f
git/init-smeargle	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/init-smeargle ()$/;"	f
git/init-transient	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/init-transient ()$/;"	f
git/post-init-emojify	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/post-init-emojify ()$/;"	f
git/post-init-evil-surround	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/post-init-evil-surround ()$/;"	f
git/post-init-fill-column-indicator	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/post-init-fill-column-indicator ()$/;"	f
git/post-init-org	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/post-init-org ()$/;"	f
git/pre-init-evil-collection	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/pre-init-evil-collection ()$/;"	f
git/pre-init-golden-ratio	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/pre-init-golden-ratio ()$/;"	f
git/pre-init-magit-todos	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/pre-init-magit-todos ()$/;"	f
git/pre-init-transient	conf/emacs/.emacs.d/layers/+source-control/git/packages.el	/^(defun git\/pre-init-transient ()$/;"	f
git_commits_ahead	conf/zsh/.oh-my-zsh/lib/git.zsh	/^function git_commits_ahead() {$/;"	f
git_commits_behind	conf/zsh/.oh-my-zsh/lib/git.zsh	/^function git_commits_behind() {$/;"	f
git_current_branch	conf/zsh/.oh-my-zsh/lib/git.zsh	/^function git_current_branch() {$/;"	f
git_current_user_email	conf/zsh/.oh-my-zsh/lib/git.zsh	/^function git_current_user_email() {$/;"	f
git_current_user_name	conf/zsh/.oh-my-zsh/lib/git.zsh	/^function git_current_user_name() {$/;"	f
git_develop_branch	conf/zsh/.oh-my-zsh/plugins/git/git.plugin.zsh	/^function git_develop_branch() {$/;"	f
git_diff	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:git_diff(...)$/;"	f
git_diff_staged	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:git_diff_staged(...)$/;"	f
git_dir	conf/vim/.vim/autoload/plug.vim	/^function! s:git_dir(dir) abort$/;"	f
git_local_branch	conf/vim/.vim/autoload/plug.vim	/^function! s:git_local_branch(dir) abort$/;"	f
git_main_branch	conf/zsh/.oh-my-zsh/plugins/git/git.plugin.zsh	/^function git_main_branch() {$/;"	f
git_origin_branch	conf/vim/.vim/autoload/plug.vim	/^function! s:git_origin_branch(spec)$/;"	f
git_origin_url	conf/vim/.vim/autoload/plug.vim	/^function! s:git_origin_url(dir) abort$/;"	f
git_previous_branch	conf/zsh/.oh-my-zsh/lib/git.zsh	/^function git_previous_branch() {$/;"	f
git_prompt_ahead	conf/zsh/.oh-my-zsh/lib/git.zsh	/^function git_prompt_ahead() {$/;"	f
git_prompt_behind	conf/zsh/.oh-my-zsh/lib/git.zsh	/^function git_prompt_behind() {$/;"	f
git_prompt_info	conf/zsh/.oh-my-zsh/lib/git.zsh	/^  function git_prompt_info() {$/;"	f
git_prompt_info	conf/zsh/.oh-my-zsh/plugins/gitfast/gitfast.plugin.zsh	/^function git_prompt_info() {$/;"	f
git_prompt_long_sha	conf/zsh/.oh-my-zsh/lib/git.zsh	/^function git_prompt_long_sha() {$/;"	f
git_prompt_remote	conf/zsh/.oh-my-zsh/lib/git.zsh	/^function git_prompt_remote() {$/;"	f
git_prompt_short_sha	conf/zsh/.oh-my-zsh/lib/git.zsh	/^function git_prompt_short_sha() {$/;"	f
git_prompt_status	conf/zsh/.oh-my-zsh/lib/git.zsh	/^  function git_prompt_status() {$/;"	f
git_remote_status	conf/zsh/.oh-my-zsh/lib/git.zsh	/^function git_remote_status() {$/;"	f
git_repo_name	conf/zsh/.oh-my-zsh/lib/git.zsh	/^function git_repo_name() {$/;"	f
git_revision	conf/vim/.vim/autoload/plug.vim	/^function! s:git_revision(dir) abort$/;"	f
git_super_status	conf/zsh/.oh-my-zsh/plugins/git-prompt/git-prompt.plugin.zsh	/^git_super_status() {$/;"	f
git_validate	conf/vim/.vim/autoload/plug.vim	/^function! s:git_validate(spec, check_branch)$/;"	f
git_version	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:git_version()$/;"	f
git_version_requirement	conf/vim/.vim/autoload/plug.vim	/^function! s:git_version_requirement(...)$/;"	f
git_version_requirement	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:git_version_requirement(...)$/;"	f
gitgutter	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^augroup gitgutter$/;"	a
gitgutter#all	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#all(force) abort$/;"	f
gitgutter#async#available	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#available()$/;"	f
gitgutter#async#execute	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#execute(cmd, bufnr, handler) abort$/;"	f
gitgutter#buffer_disable	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#buffer_disable(...) abort$/;"	f
gitgutter#buffer_enable	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#buffer_enable(...) abort$/;"	f
gitgutter#buffer_toggle	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#buffer_toggle(...) abort$/;"	f
gitgutter#debug#debug	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#debug()$/;"	f
gitgutter#debug#log	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#log(message, ...) abort$/;"	f
gitgutter#diff#handler	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#handler(bufnr, diff) abort$/;"	f
gitgutter#diff#hunk_diff	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#hunk_diff(bufnr, full_diff, ...)$/;"	f
gitgutter#diff#parse_diff	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_diff(diff) abort$/;"	f
gitgutter#diff#parse_hunk	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_hunk(line) abort$/;"	f
gitgutter#diff#process_hunks	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_hunks(bufnr, hunks) abort$/;"	f
gitgutter#diff#run_diff	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#run_diff(bufnr, from, preserve_full_diff) abort$/;"	f
gitgutter#diff_highlight#process	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! gitgutter#diff_highlight#process(hunk_body)$/;"	f
gitgutter#difforig	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#difforig()$/;"	f
gitgutter#disable	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#disable() abort$/;"	f
gitgutter#enable	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#enable() abort$/;"	f
gitgutter#fold#disable	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#disable()$/;"	f
gitgutter#fold#enable	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#enable()$/;"	f
gitgutter#fold#foldtext	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#foldtext()$/;"	f
gitgutter#fold#is_changed	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#is_changed()$/;"	f
gitgutter#fold#level	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#level(lnum)$/;"	f
gitgutter#fold#toggle	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! gitgutter#fold#toggle()$/;"	f
gitgutter#git	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#git(...)$/;"	f
gitgutter#highlight#define_highlights	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_highlights() abort$/;"	f
gitgutter#highlight#define_sign_text_highlights	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_text_highlights() abort$/;"	f
gitgutter#highlight#define_signs	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_signs() abort$/;"	f
gitgutter#highlight#line_disable	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_disable() abort$/;"	f
gitgutter#highlight#line_enable	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_enable() abort$/;"	f
gitgutter#highlight#line_toggle	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_toggle() abort$/;"	f
gitgutter#highlight#linenr_disable	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#linenr_disable() abort$/;"	f
gitgutter#highlight#linenr_enable	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#linenr_enable() abort$/;"	f
gitgutter#highlight#linenr_toggle	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#linenr_toggle() abort$/;"	f
gitgutter#hunk#close_hunk_preview_window	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#close_hunk_preview_window()$/;"	f
gitgutter#hunk#cursor_in_hunk	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#cursor_in_hunk(hunk) abort$/;"	f
gitgutter#hunk#hunks	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#hunks(bufnr) abort$/;"	f
gitgutter#hunk#in_hunk	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#in_hunk(lnum)$/;"	f
gitgutter#hunk#increment_lines_added	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_added(bufnr, count) abort$/;"	f
gitgutter#hunk#increment_lines_modified	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_modified(bufnr, count) abort$/;"	f
gitgutter#hunk#increment_lines_removed	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_removed(bufnr, count) abort$/;"	f
gitgutter#hunk#is_preview_window_open	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function gitgutter#hunk#is_preview_window_open()$/;"	f
gitgutter#hunk#next_hunk	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#next_hunk(count) abort$/;"	f
gitgutter#hunk#prev_hunk	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#prev_hunk(count) abort$/;"	f
gitgutter#hunk#preview	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#preview() abort$/;"	f
gitgutter#hunk#reset	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#reset(bufnr) abort$/;"	f
gitgutter#hunk#set_hunks	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#set_hunks(bufnr, hunks) abort$/;"	f
gitgutter#hunk#stage	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#stage(...) abort$/;"	f
gitgutter#hunk#summary	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#summary(bufnr) abort$/;"	f
gitgutter#hunk#text_object	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#text_object(inner) abort$/;"	f
gitgutter#hunk#undo	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#undo() abort$/;"	f
gitgutter#process_buffer	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#process_buffer(bufnr, force) abort$/;"	f
gitgutter#quickfix	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#quickfix(current_file)$/;"	f
gitgutter#setup_maps	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#setup_maps()$/;"	f
gitgutter#sign#clear_signs	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#clear_signs(bufnr) abort$/;"	f
gitgutter#sign#disable	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#disable() abort$/;"	f
gitgutter#sign#enable	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#enable() abort$/;"	f
gitgutter#sign#reset	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#reset()$/;"	f
gitgutter#sign#toggle	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#toggle() abort$/;"	f
gitgutter#sign#update_signs	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#update_signs(bufnr, modified_lines) abort$/;"	f
gitgutter#toggle	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#toggle() abort$/;"	f
gitgutter#utility#base_path	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#base_path(bufnr)$/;"	f
gitgutter#utility#clean_smudge_filter_applies	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#clean_smudge_filter_applies(bufnr)$/;"	f
gitgutter#utility#dir	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#dir(bufnr) abort$/;"	f
gitgutter#utility#extension	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#extension(bufnr) abort$/;"	f
gitgutter#utility#file	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#file(bufnr)$/;"	f
gitgutter#utility#filename	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#filename(bufnr) abort$/;"	f
gitgutter#utility#get_diff_base	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#get_diff_base(bufnr)$/;"	f
gitgutter#utility#getbufvar	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#getbufvar(buffer, varname, ...)$/;"	f
gitgutter#utility#git_supports_command_line_config_override	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#git_supports_command_line_config_override() abort$/;"	f
gitgutter#utility#has_repo_path	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#has_repo_path(bufnr)$/;"	f
gitgutter#utility#is_active	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#is_active(bufnr) abort$/;"	f
gitgutter#utility#repo_path	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#repo_path(bufnr, shellesc) abort$/;"	f
gitgutter#utility#set_repo_path	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#set_repo_path(bufnr, continuation) abort$/;"	f
gitgutter#utility#setbufvar	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#setbufvar(buffer, varname, val)$/;"	f
gitgutter#utility#shellescape	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#shellescape(arg) abort$/;"	f
gitgutter#utility#supports_overscore_sign	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#supports_overscore_sign()$/;"	f
gitgutter#utility#system	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#system(cmd, ...) abort$/;"	f
gitgutter#utility#warn	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn(message) abort$/;"	f
gitgutter#utility#warn_once	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn_once(bufnr, message, key) abort$/;"	f
gitgutter#utility#windows	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#windows()$/;"	f
github-copilot-packages	conf/emacs/.emacs.d/layers/+web-services/github-copilot/packages.el	/^(defconst github-copilot-packages$/;"	f
github-copilot/init-copilot	conf/emacs/.emacs.d/layers/+web-services/github-copilot/packages.el	/^(defun github-copilot\/init-copilot ()$/;"	f
gitignore	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/setup	/^gitignore() {$/;"	f
given_range	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:given_range(line1, line2)$/;"	f
gleam-build-command	conf/emacs/.emacs.d/layers/+lang/gleam/config.el	/^(defvar gleam-build-command "gleam build"$/;"	f
gleam-enable-lsp	conf/emacs/.emacs.d/layers/+lang/gleam/config.el	/^(defvar gleam-enable-lsp (not (null (configuration-layer\/layer-used-p 'lsp)))$/;"	f
gleam-format-on-save	conf/emacs/.emacs.d/layers/+lang/gleam/config.el	/^(defvar gleam-format-on-save nil$/;"	f
gleam-packages	conf/emacs/.emacs.d/layers/+lang/gleam/packages.el	/^(defconst gleam-packages$/;"	f
gleam-run-command	conf/emacs/.emacs.d/layers/+lang/gleam/config.el	/^(defvar gleam-run-command "gleam run"$/;"	f
gleam-run-scope	conf/emacs/.emacs.d/layers/+lang/gleam/config.el	/^(defvar gleam-run-scope 'project$/;"	f
gleam-runtime	conf/emacs/.emacs.d/layers/+lang/gleam/config.el	/^(defvar gleam-runtime 'nodejs$/;"	f
gleam-target	conf/emacs/.emacs.d/layers/+lang/gleam/config.el	/^(defvar gleam-target 'erlang$/;"	f
gleam-test-command	conf/emacs/.emacs.d/layers/+lang/gleam/config.el	/^(defvar gleam-test-command "gleam test"$/;"	f
gleam/init-gleam-mode	conf/emacs/.emacs.d/layers/+lang/gleam/packages.el	/^(defun gleam\/init-gleam-mode ()$/;"	f
gleam/post-init-tree-sitter-indent	conf/emacs/.emacs.d/layers/+lang/gleam/packages.el	/^(defun gleam\/post-init-tree-sitter-indent ()$/;"	f
glob	conf/vim/.vim/autoload/plug.vim	/^function! s:glob(from, pattern)$/;"	f
glob_dir	conf/vim/.vim/autoload/plug.vim	/^function! s:glob_dir(path)$/;"	f
global-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(define-key global-map (kbd "C-x 1") 'spacemacs\/toggle-maximize-window)$/;"	f
global-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(define-key global-map (kbd "M-SPC") 'cycle-spacing)$/;"	f
global-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(define-key global-map (kbd "RET") 'newline-and-indent)$/;"	f
global-page-break-lines-mode	conf/emacs/.emacs.d/core/libs/page-break-lines.el	/^(define-global-minor-mode global-page-break-lines-mode$/;"	f
global-spacemacs-whitespace-cleanup-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/local/spacemacs-whitespace-cleanup/spacemacs-whitespace-cleanup.el	/^(define-global-minor-mode global-spacemacs-whitespace-cleanup-mode$/;"	f
global_deoplete	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    global_deoplete = Deoplete(vim)$/;"	v
globalias	conf/zsh/.oh-my-zsh/plugins/globalias/globalias.plugin.zsh	/^globalias() {$/;"	f
globruntime	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def globruntime(runtimepath: str, path: str) -> typing.List[str]:$/;"	f
gnus-packages	conf/emacs/.emacs.d/layers/+email/gnus/packages.el	/^(defconst gnus-packages$/;"	f
gnus-spacemacs-layout-binding	conf/emacs/.emacs.d/layers/+email/gnus/config.el	/^(defvar gnus-spacemacs-layout-binding "g"$/;"	f
gnus-spacemacs-layout-name	conf/emacs/.emacs.d/layers/+email/gnus/config.el	/^(defvar gnus-spacemacs-layout-name "@gnus"$/;"	f
gnus/init-gnus	conf/emacs/.emacs.d/layers/+email/gnus/packages.el	/^(defun gnus\/init-gnus ()$/;"	f
gnus/post-init-window-purpose	conf/emacs/.emacs.d/layers/+email/gnus/packages.el	/^(defun gnus\/post-init-window-purpose ()$/;"	f
gnus/pre-init-persp-mode	conf/emacs/.emacs.d/layers/+email/gnus/packages.el	/^(defun gnus\/pre-init-persp-mode ()$/;"	f
go	conf/vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^function! s:go(...) abort$/;"	f
go#alternate#Switch	conf/vim/.vim/plugged/vim-go/autoload/go/alternate.vim	/^function! go#alternate#Switch(bang, cmd) abort$/;"	f
go#asmfmt#Format	conf/vim/.vim/plugged/vim-go/autoload/go/asmfmt.vim	/^function! go#asmfmt#Format() abort$/;"	f
go#asmfmt#ToggleAsmFmtAutoSave	conf/vim/.vim/plugged/vim-go/autoload/go/asmfmt.vim	/^function! go#asmfmt#ToggleAsmFmtAutoSave() abort$/;"	f
go#auto#asmfmt_autosave	conf/vim/.vim/plugged/vim-go/autoload/go/auto.vim	/^function! go#auto#asmfmt_autosave()$/;"	f
go#auto#complete_done	conf/vim/.vim/plugged/vim-go/autoload/go/auto.vim	/^function! go#auto#complete_done()$/;"	f
go#auto#fmt_autosave	conf/vim/.vim/plugged/vim-go/autoload/go/auto.vim	/^function! go#auto#fmt_autosave()$/;"	f
go#auto#metalinter_autosave	conf/vim/.vim/plugged/vim-go/autoload/go/auto.vim	/^function! go#auto#metalinter_autosave()$/;"	f
go#auto#modfmt_autosave	conf/vim/.vim/plugged/vim-go/autoload/go/auto.vim	/^function! go#auto#modfmt_autosave()$/;"	f
go#auto#template_autocreate	conf/vim/.vim/plugged/vim-go/autoload/go/auto.vim	/^function! go#auto#template_autocreate()$/;"	f
go#auto#update_autocmd	conf/vim/.vim/plugged/vim-go/autoload/go/auto.vim	/^function! go#auto#update_autocmd()$/;"	f
go#calls#Callers	conf/vim/.vim/plugged/vim-go/autoload/go/calls.vim	/^function! go#calls#Callers() abort$/;"	f
go#cmd#Build	conf/vim/.vim/plugged/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Build(bang, ...) abort$/;"	f
go#cmd#BuildTags	conf/vim/.vim/plugged/vim-go/autoload/go/cmd.vim	/^function! go#cmd#BuildTags(bang, ...) abort$/;"	f
go#cmd#Generate	conf/vim/.vim/plugged/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Generate(bang, ...) abort$/;"	f
go#cmd#Install	conf/vim/.vim/plugged/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Install(bang, ...) abort$/;"	f
go#cmd#Run	conf/vim/.vim/plugged/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Run(bang, ...) abort$/;"	f
go#cmd#RunTerm	conf/vim/.vim/plugged/vim-go/autoload/go/cmd.vim	/^function! go#cmd#RunTerm(bang, mode, files) abort$/;"	f
go#cmd#autowrite	conf/vim/.vim/plugged/vim-go/autoload/go/cmd.vim	/^function! go#cmd#autowrite() abort$/;"	f
go#complete#Complete	conf/vim/.vim/plugged/vim-go/autoload/go/complete.vim	/^function! go#complete#Complete(findstart, base) abort$/;"	f
go#complete#GetInfo	conf/vim/.vim/plugged/vim-go/autoload/go/complete.vim	/^function! go#complete#GetInfo() abort$/;"	f
go#complete#ToggleAutoTypeInfo	conf/vim/.vim/plugged/vim-go/autoload/go/complete.vim	/^function! go#complete#ToggleAutoTypeInfo() abort$/;"	f
go#config#AddtagsSkipUnexported	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#AddtagsSkipUnexported() abort$/;"	f
go#config#AddtagsTransform	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#AddtagsTransform() abort$/;"	f
go#config#AlternateMode	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#AlternateMode() abort$/;"	f
go#config#AsmfmtAutosave	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#AsmfmtAutosave() abort$/;"	f
go#config#AutoSameids	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#AutoSameids() abort$/;"	f
go#config#AutoTypeInfo	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#AutoTypeInfo() abort$/;"	f
go#config#BinPath	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#BinPath() abort$/;"	f
go#config#BuildTags	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#BuildTags() abort$/;"	f
go#config#CodeCompletionEnabled	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#CodeCompletionEnabled() abort$/;"	f
go#config#CodeCompletionIcase	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#CodeCompletionIcase() abort$/;"	f
go#config#Debug	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#Debug() abort$/;"	f
go#config#DebugAddress	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DebugAddress() abort$/;"	f
go#config#DebugBreakpointSignText	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DebugBreakpointSignText() abort$/;"	f
go#config#DebugCommands	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DebugCommands() abort$/;"	f
go#config#DebugLogDelay	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DebugLogDelay() abort$/;"	f
go#config#DebugLogOutput	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DebugLogOutput() abort$/;"	f
go#config#DebugMappings	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DebugMappings() abort$/;"	f
go#config#DebugPreserveLayout	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DebugPreserveLayout() abort$/;"	f
go#config#DebugSubstitutePaths	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DebugSubstitutePaths() abort$/;"	f
go#config#DebugWindows	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DebugWindows() abort$/;"	f
go#config#DeclsIncludes	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DeclsIncludes() abort$/;"	f
go#config#DeclsMode	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DeclsMode() abort$/;"	f
go#config#DefMode	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DefMode() abort$/;"	f
go#config#DefReuseBuffer	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DefReuseBuffer() abort$/;"	f
go#config#DiagnosticsEnabled	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DiagnosticsEnabled() abort$/;"	f
go#config#DiagnosticsLevel	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DiagnosticsLevel() abort$/;"	f
go#config#DocBalloon	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DocBalloon() abort$/;"	f
go#config#DocMaxHeight	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DocMaxHeight() abort$/;"	f
go#config#DocPopupWindow	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DocPopupWindow() abort$/;"	f
go#config#DocUrl	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#DocUrl() abort$/;"	f
go#config#EchoCommandInfo	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#EchoCommandInfo() abort$/;"	f
go#config#EchoGoInfo	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#EchoGoInfo() abort$/;"	f
go#config#ErrcheckBin	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#ErrcheckBin() abort$/;"	f
go#config#FillStructMode	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#FillStructMode() abort$/;"	f
go#config#FmtAutosave	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#FmtAutosave() abort$/;"	f
go#config#FmtCommand	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#FmtCommand() abort$/;"	f
go#config#FmtExperimental	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#FmtExperimental() abort$/;"	f
go#config#FmtFailSilently	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#FmtFailSilently() abort$/;"	f
go#config#FmtOptions	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#FmtOptions() abort$/;"	f
go#config#FoldEnable	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#FoldEnable(...) abort$/;"	f
go#config#GolintBin	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#GolintBin() abort$/;"	f
go#config#GoplsAnalyses	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#GoplsAnalyses() abort$/;"	f
go#config#GoplsCompleteUnimported	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#GoplsCompleteUnimported() abort$/;"	f
go#config#GoplsDeepCompletion	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#GoplsDeepCompletion() abort$/;"	f
go#config#GoplsEnabled	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#GoplsEnabled() abort$/;"	f
go#config#GoplsGofumpt	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#GoplsGofumpt() abort$/;"	f
go#config#GoplsLocal	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#GoplsLocal() abort$/;"	f
go#config#GoplsMatcher	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#GoplsMatcher() abort$/;"	f
go#config#GoplsOptions	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#GoplsOptions() abort$/;"	f
go#config#GoplsSettings	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#GoplsSettings() abort$/;"	f
go#config#GoplsStaticCheck	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#GoplsStaticCheck() abort$/;"	f
go#config#GoplsTempModfile	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#GoplsTempModfile() abort$/;"	f
go#config#GoplsUsePlaceholders	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#GoplsUsePlaceholders() abort$/;"	f
go#config#GorenameBin	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#GorenameBin() abort$/;"	f
go#config#GorenamePrefill	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#GorenamePrefill() abort$/;"	f
go#config#HighlightArrayWhitespaceError	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightArrayWhitespaceError() abort$/;"	f
go#config#HighlightBuildConstraints	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightBuildConstraints() abort$/;"	f
go#config#HighlightChanWhitespaceError	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightChanWhitespaceError() abort$/;"	f
go#config#HighlightDebug	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightDebug() abort$/;"	f
go#config#HighlightDiagnosticErrors	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightDiagnosticErrors() abort$/;"	f
go#config#HighlightDiagnosticWarnings	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightDiagnosticWarnings() abort$/;"	f
go#config#HighlightExtraTypes	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightExtraTypes() abort$/;"	f
go#config#HighlightFields	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightFields() abort$/;"	f
go#config#HighlightFormatStrings	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightFormatStrings() abort$/;"	f
go#config#HighlightFunctionCalls	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightFunctionCalls() abort$/;"	f
go#config#HighlightFunctionParameters	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightFunctionParameters() abort$/;"	f
go#config#HighlightFunctions	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightFunctions() abort$/;"	f
go#config#HighlightGenerateTags	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightGenerateTags() abort$/;"	f
go#config#HighlightOperators	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightOperators() abort$/;"	f
go#config#HighlightSpaceTabError	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightSpaceTabError() abort$/;"	f
go#config#HighlightStringSpellcheck	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightStringSpellcheck() abort$/;"	f
go#config#HighlightTrailingWhitespaceError	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightTrailingWhitespaceError() abort$/;"	f
go#config#HighlightTypes	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightTypes() abort$/;"	f
go#config#HighlightVariableAssignments	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightVariableAssignments() abort$/;"	f
go#config#HighlightVariableDeclarations	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#HighlightVariableDeclarations() abort$/;"	f
go#config#ImplementsMode	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#ImplementsMode() abort$/;"	f
go#config#ImportsAutosave	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#ImportsAutosave() abort$/;"	f
go#config#ImportsMode	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#ImportsMode() abort$/;"	f
go#config#ListAutoclose	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#ListAutoclose() abort$/;"	f
go#config#ListHeight	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#ListHeight() abort$/;"	f
go#config#ListType	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#ListType() abort$/;"	f
go#config#ListTypeCommands	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#ListTypeCommands() abort$/;"	f
go#config#LspLog	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#LspLog() abort$/;"	f
go#config#MetalinterAutosave	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#MetalinterAutosave() abort$/;"	f
go#config#MetalinterAutosaveEnabled	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#MetalinterAutosaveEnabled() abort$/;"	f
go#config#MetalinterCommand	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#MetalinterCommand() abort$/;"	f
go#config#MetalinterDeadline	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#MetalinterDeadline() abort$/;"	f
go#config#MetalinterEnabled	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#MetalinterEnabled() abort$/;"	f
go#config#ModFmtAutosave	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#ModFmtAutosave() abort$/;"	f
go#config#PlayBrowserCommand	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#PlayBrowserCommand() abort$/;"	f
go#config#PlayOpenBrowser	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#PlayOpenBrowser() abort$/;"	f
go#config#ReferrersMode	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#ReferrersMode() abort$/;"	f
go#config#RenameCommand	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#RenameCommand() abort$/;"	f
go#config#SearchBinPathFirst	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SearchBinPathFirst() abort$/;"	f
go#config#SetAsmfmtAutosave	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SetAsmfmtAutosave(value) abort$/;"	f
go#config#SetAutoSameids	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SetAutoSameids(value) abort$/;"	f
go#config#SetAutoTypeInfo	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SetAutoTypeInfo(value) abort$/;"	f
go#config#SetBuildTags	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SetBuildTags(value) abort$/;"	f
go#config#SetDebugDiag	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SetDebugDiag(value) abort$/;"	f
go#config#SetFmtAutosave	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SetFmtAutosave(value) abort$/;"	f
go#config#SetMetalinterAutosave	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SetMetalinterAutosave(value) abort$/;"	f
go#config#SetModFmtAutosave	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SetModFmtAutosave(value) abort$/;"	f
go#config#SetTemplateAutocreate	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SetTemplateAutocreate(value) abort$/;"	f
go#config#SetTermCloseOnExit	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SetTermCloseOnExit(value) abort$/;"	f
go#config#SetTermEnabled	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SetTermEnabled(value) abort$/;"	f
go#config#SnippetEngine	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#SnippetEngine() abort$/;"	f
go#config#StatuslineDuration	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#StatuslineDuration() abort$/;"	f
go#config#TemplateAutocreate	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TemplateAutocreate() abort$/;"	f
go#config#TemplateFile	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TemplateFile() abort$/;"	f
go#config#TemplateTestFile	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TemplateTestFile() abort$/;"	f
go#config#TemplateUsePkg	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TemplateUsePkg() abort$/;"	f
go#config#TermCloseOnExit	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TermCloseOnExit() abort$/;"	f
go#config#TermEnabled	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TermEnabled() abort$/;"	f
go#config#TermHeight	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TermHeight() abort$/;"	f
go#config#TermMode	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TermMode() abort$/;"	f
go#config#TermReuse	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TermReuse() abort$/;"	f
go#config#TermWidth	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TermWidth() abort$/;"	f
go#config#TestShowName	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TestShowName() abort$/;"	f
go#config#TestTimeout	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TestTimeout() abort$/;"	f
go#config#TextobjIncludeFunctionDoc	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TextobjIncludeFunctionDoc() abort$/;"	f
go#config#TextobjIncludeVariable	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#TextobjIncludeVariable() abort$/;"	f
go#config#Updatetime	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#Updatetime() abort$/;"	f
go#config#VersionWarning	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^function! go#config#VersionWarning() abort$/;"	f
go#coverage#Browser	conf/vim/.vim/plugged/vim-go/autoload/go/coverage.vim	/^function! go#coverage#Browser(bang, ...) abort$/;"	f
go#coverage#Buffer	conf/vim/.vim/plugged/vim-go/autoload/go/coverage.vim	/^function! go#coverage#Buffer(bang, ...) abort$/;"	f
go#coverage#BufferToggle	conf/vim/.vim/plugged/vim-go/autoload/go/coverage.vim	/^function! go#coverage#BufferToggle(bang, ...) abort$/;"	f
go#coverage#Clear	conf/vim/.vim/plugged/vim-go/autoload/go/coverage.vim	/^function! go#coverage#Clear() abort$/;"	f
go#coverage#Overlay	conf/vim/.vim/plugged/vim-go/autoload/go/coverage.vim	/^function! go#coverage#Overlay(file) abort$/;"	f
go#coverage#genmatch	conf/vim/.vim/plugged/vim-go/autoload/go/coverage.vim	/^function! go#coverage#genmatch(cov) abort$/;"	f
go#coverage#parsegocoverline	conf/vim/.vim/plugged/vim-go/autoload/go/coverage.vim	/^function! go#coverage#parsegocoverline(line) abort$/;"	f
go#debug#BalloonExpr	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! go#debug#BalloonExpr() abort$/;"	f
go#debug#Breakpoint	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! go#debug#Breakpoint(...) abort$/;"	f
go#debug#Goroutine	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! go#debug#Goroutine() abort$/;"	f
go#debug#Print	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! go#debug#Print(arg) abort$/;"	f
go#debug#Restart	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! go#debug#Restart() abort$/;"	f
go#debug#Set	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! go#debug#Set(symbol, value) abort$/;"	f
go#debug#Stack	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! go#debug#Stack(name) abort$/;"	f
go#debug#Start	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! go#debug#Start(mode, ...) abort$/;"	f
go#debug#Stop	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! go#debug#Stop() abort$/;"	f
go#debug#TestFunc	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! go#debug#TestFunc(...) abort$/;"	f
go#decls#Decls	conf/vim/.vim/plugged/vim-go/autoload/go/decls.vim	/^function! go#decls#Decls(mode, ...) abort$/;"	f
go#def#Jump	conf/vim/.vim/plugged/vim-go/autoload/go/def.vim	/^function! go#def#Jump(mode, type) abort$/;"	f
go#def#SelectStackEntry	conf/vim/.vim/plugged/vim-go/autoload/go/def.vim	/^function! go#def#SelectStackEntry() abort$/;"	f
go#def#Stack	conf/vim/.vim/plugged/vim-go/autoload/go/def.vim	/^function! go#def#Stack(...) abort$/;"	f
go#def#StackClear	conf/vim/.vim/plugged/vim-go/autoload/go/def.vim	/^function! go#def#StackClear(...) abort$/;"	f
go#def#StackPop	conf/vim/.vim/plugged/vim-go/autoload/go/def.vim	/^function! go#def#StackPop(...) abort$/;"	f
go#def#StackUI	conf/vim/.vim/plugged/vim-go/autoload/go/def.vim	/^function! go#def#StackUI() abort$/;"	f
go#def#jump_to_declaration	conf/vim/.vim/plugged/vim-go/autoload/go/def.vim	/^function! go#def#jump_to_declaration(out, mode, bin_name) abort$/;"	f
go#doc#Open	conf/vim/.vim/plugged/vim-go/autoload/go/doc.vim	/^function! go#doc#Open(newmode, mode, ...) abort$/;"	f
go#doc#OpenBrowser	conf/vim/.vim/plugged/vim-go/autoload/go/doc.vim	/^function! go#doc#OpenBrowser(...) abort$/;"	f
go#extract#Extract	conf/vim/.vim/plugged/vim-go/autoload/go/extract.vim	/^function! go#extract#Extract(line1, line2) abort$/;"	f
go#fillstruct#FillStruct	conf/vim/.vim/plugged/vim-go/autoload/go/fillstruct.vim	/^function! go#fillstruct#FillStruct() abort$/;"	f
go#fmt#CleanErrors	conf/vim/.vim/plugged/vim-go/autoload/go/fmt.vim	/^function! go#fmt#CleanErrors() abort$/;"	f
go#fmt#Format	conf/vim/.vim/plugged/vim-go/autoload/go/fmt.vim	/^function! go#fmt#Format(withGoimport) abort$/;"	f
go#fmt#ShowErrors	conf/vim/.vim/plugged/vim-go/autoload/go/fmt.vim	/^function! go#fmt#ShowErrors(errors) abort$/;"	f
go#fmt#ToggleFmtAutoSave	conf/vim/.vim/plugged/vim-go/autoload/go/fmt.vim	/^function! go#fmt#ToggleFmtAutoSave() abort$/;"	f
go#fmt#run	conf/vim/.vim/plugged/vim-go/autoload/go/fmt.vim	/^function! go#fmt#run(bin_name, source, target)$/;"	f
go#fmt#update_file	conf/vim/.vim/plugged/vim-go/autoload/go/fmt.vim	/^function! go#fmt#update_file(source, target)$/;"	f
go#iferr#Generate	conf/vim/.vim/plugged/vim-go/autoload/go/iferr.vim	/^function! go#iferr#Generate()$/;"	f
go#impl#Complete	conf/vim/.vim/plugged/vim-go/autoload/go/impl.vim	/^function! go#impl#Complete(arglead, cmdline, cursorpos) abort$/;"	f
go#impl#Impl	conf/vim/.vim/plugged/vim-go/autoload/go/impl.vim	/^function! go#impl#Impl(...) abort$/;"	f
go#implements#Implements	conf/vim/.vim/plugged/vim-go/autoload/go/implements.vim	/^function! go#implements#Implements(selected) abort$/;"	f
go#import#SwitchImport	conf/vim/.vim/plugged/vim-go/autoload/go/import.vim	/^function! go#import#SwitchImport(enabled, localname, path, bang) abort$/;"	f
go#issue#New	conf/vim/.vim/plugged/vim-go/autoload/go/issue.vim	/^function! go#issue#New() abort$/;"	f
go#job#Options	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^function! go#job#Options(args)$/;"	f
go#job#Spawn	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^function! go#job#Spawn(cmd, args)$/;"	f
go#job#Start	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^function! go#job#Start(cmd, options)$/;"	f
go#job#Stop	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^function! go#job#Stop(job) abort$/;"	f
go#job#Wait	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^function! go#job#Wait(job) abort$/;"	f
go#lint#Diagnostics	conf/vim/.vim/plugged/vim-go/autoload/go/lint.vim	/^function! go#lint#Diagnostics(bang, ...) abort$/;"	f
go#lint#Errcheck	conf/vim/.vim/plugged/vim-go/autoload/go/lint.vim	/^function! go#lint#Errcheck(bang, ...) abort$/;"	f
go#lint#Golint	conf/vim/.vim/plugged/vim-go/autoload/go/lint.vim	/^function! go#lint#Golint(bang, ...) abort$/;"	f
go#lint#Gometa	conf/vim/.vim/plugged/vim-go/autoload/go/lint.vim	/^function! go#lint#Gometa(bang, autosave, ...) abort$/;"	f
go#lint#ToggleMetaLinterAutoSave	conf/vim/.vim/plugged/vim-go/autoload/go/lint.vim	/^function! go#lint#ToggleMetaLinterAutoSave() abort$/;"	f
go#lint#Vet	conf/vim/.vim/plugged/vim-go/autoload/go/lint.vim	/^function! go#lint#Vet(bang, ...) abort$/;"	f
go#list#Clean	conf/vim/.vim/plugged/vim-go/autoload/go/list.vim	/^function! go#list#Clean(listtype) abort$/;"	f
go#list#Close	conf/vim/.vim/plugged/vim-go/autoload/go/list.vim	/^function! go#list#Close(listtype) abort$/;"	f
go#list#Get	conf/vim/.vim/plugged/vim-go/autoload/go/list.vim	/^function! go#list#Get(listtype) abort$/;"	f
go#list#JumpToFirst	conf/vim/.vim/plugged/vim-go/autoload/go/list.vim	/^function! go#list#JumpToFirst(listtype) abort$/;"	f
go#list#Parse	conf/vim/.vim/plugged/vim-go/autoload/go/list.vim	/^function! go#list#Parse(listtype, items, title, add) abort$/;"	f
go#list#ParseFormat	conf/vim/.vim/plugged/vim-go/autoload/go/list.vim	/^function! go#list#ParseFormat(listtype, errformat, items, title, add) abort$/;"	f
go#list#Populate	conf/vim/.vim/plugged/vim-go/autoload/go/list.vim	/^function! go#list#Populate(listtype, items, title) abort$/;"	f
go#list#Type	conf/vim/.vim/plugged/vim-go/autoload/go/list.vim	/^function! go#list#Type(for) abort$/;"	f
go#list#Window	conf/vim/.vim/plugged/vim-go/autoload/go/list.vim	/^function! go#list#Window(listtype, ...) abort$/;"	f
go#lsp#AddWorkspaceDirectory	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#AddWorkspaceDirectory(...) abort$/;"	f
go#lsp#AnalyzeFile	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#AnalyzeFile(fname) abort$/;"	f
go#lsp#Callers	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#Callers(fname, line, col, handler) abort$/;"	f
go#lsp#CleanWorkspaces	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#CleanWorkspaces() abort$/;"	f
go#lsp#ClearDiagnosticHighlights	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#ClearDiagnosticHighlights() abort$/;"	f
go#lsp#Completion	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#Completion(fname, line, col, handler) abort$/;"	f
go#lsp#DebugBrowser	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#DebugBrowser() abort$/;"	f
go#lsp#Definition	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#Definition(fname, line, col, handler) abort$/;"	f
go#lsp#Diagnostics	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#Diagnostics(...) abort$/;"	f
go#lsp#DidChange	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#DidChange(fname) abort$/;"	f
go#lsp#DidClose	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#DidClose(fname) abort$/;"	f
go#lsp#DidOpen	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#DidOpen(fname) abort$/;"	f
go#lsp#Doc	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#Doc() abort$/;"	f
go#lsp#DocLink	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#DocLink() abort$/;"	f
go#lsp#Exit	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#Exit() abort$/;"	f
go#lsp#Extract	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#Extract(line1, line2) abort$/;"	f
go#lsp#FillStruct	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#FillStruct() abort$/;"	f
go#lsp#Format	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#Format() abort$/;"	f
go#lsp#GetInfo	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#GetInfo()$/;"	f
go#lsp#Hover	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#Hover(fname, line, col, handler) abort$/;"	f
go#lsp#Implements	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#Implements(fname, line, col, handler) abort$/;"	f
go#lsp#Imports	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#Imports() abort$/;"	f
go#lsp#Info	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#Info(showstatus)$/;"	f
go#lsp#ModReload	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#ModReload(...) abort$/;"	f
go#lsp#Referrers	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#Referrers(fname, line, col, handler) abort$/;"	f
go#lsp#Rename	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#Rename(newName) abort$/;"	f
go#lsp#ResetWorkspaceDirectories	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#ResetWorkspaceDirectories() abort$/;"	f
go#lsp#Restart	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#Restart() abort$/;"	f
go#lsp#SameIDs	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#SameIDs(showstatus, fname, line, col, handler) abort$/;"	f
go#lsp#TypeDef	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! go#lsp#TypeDef(fname, line, col, handler) abort$/;"	f
go#lsp#completionitemkind#IsFunction	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^function! go#lsp#completionitemkind#IsFunction(kind) abort$/;"	f
go#lsp#completionitemkind#IsMethod	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^function! go#lsp#completionitemkind#IsMethod(kind) abort$/;"	f
go#lsp#completionitemkind#Vim	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^function! go#lsp#completionitemkind#Vim(kind) abort$/;"	f
go#lsp#filechangetype#FileChangeType	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/filechangetype.vim	/^function! go#lsp#filechangetype#FileChangeType(name)$/;"	f
go#lsp#lsp#Position	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/lsp.vim	/^function! go#lsp#lsp#Position(...)$/;"	f
go#lsp#lsp#PositionOf	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/lsp.vim	/^function! go#lsp#lsp#PositionOf(content, units, ...) abort$/;"	f
go#lsp#lsp#SeverityToErrorType	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/lsp.vim	/^function! go#lsp#lsp#SeverityToErrorType(severity) abort$/;"	f
go#lsp#message#ApplyWorkspaceEditResponse	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#ApplyWorkspaceEditResponse(ok) abort$/;"	f
go#lsp#message#ChangeWorkspaceFolders	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#ChangeWorkspaceFolders(add, remove) abort$/;"	f
go#lsp#message#CodeActionFillStruct	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#CodeActionFillStruct(file, line, col) abort$/;"	f
go#lsp#message#CodeActionImports	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#CodeActionImports(file) abort$/;"	f
go#lsp#message#CodeActionRefactor	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#CodeActionRefactor(action, file, startline, startcol, endline, endcol) abort$/;"	f
go#lsp#message#CodeActionRefactorExtract	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#CodeActionRefactorExtract(file, startline, startcol, endline, endcol) abort$/;"	f
go#lsp#message#Completion	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#Completion(file, line, col) abort$/;"	f
go#lsp#message#ConfigurationResult	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#ConfigurationResult(items) abort$/;"	f
go#lsp#message#Definition	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#Definition(file, line, col) abort$/;"	f
go#lsp#message#DidChange	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#DidChange(file, content, version) abort$/;"	f
go#lsp#message#DidChangeWatchedFile	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#DidChangeWatchedFile(file, ct) abort$/;"	f
go#lsp#message#DidClose	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#DidClose(file) abort$/;"	f
go#lsp#message#DidOpen	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#DidOpen(file, content, version) abort$/;"	f
go#lsp#message#ExecuteCommand	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#ExecuteCommand(cmd, args) abort$/;"	f
go#lsp#message#Exit	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#Exit() abort$/;"	f
go#lsp#message#Format	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#Format(file) abort$/;"	f
go#lsp#message#Hover	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#Hover(file, line, col) abort$/;"	f
go#lsp#message#Implementation	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#Implementation(file, line, col) abort$/;"	f
go#lsp#message#IncomingCalls	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#IncomingCalls(item) abort$/;"	f
go#lsp#message#Initialize	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#Initialize(wd) abort$/;"	f
go#lsp#message#Initialized	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#Initialized() abort$/;"	f
go#lsp#message#PrepareCallHierarchy	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#PrepareCallHierarchy(file, line, col) abort$/;"	f
go#lsp#message#PrepareRename	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#PrepareRename(file, line, col) abort$/;"	f
go#lsp#message#References	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#References(file, line, col) abort$/;"	f
go#lsp#message#Rename	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#Rename(file, line, col, newName) abort$/;"	f
go#lsp#message#Shutdown	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#Shutdown() abort$/;"	f
go#lsp#message#TypeDefinition	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#TypeDefinition(file, line, col) abort$/;"	f
go#lsp#message#WorkspaceFoldersResult	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! go#lsp#message#WorkspaceFoldersResult(dirs) abort$/;"	f
go#mod#Format	conf/vim/.vim/plugged/vim-go/autoload/go/mod.vim	/^function! go#mod#Format() abort$/;"	f
go#mod#ToggleModFmtAutoSave	conf/vim/.vim/plugged/vim-go/autoload/go/mod.vim	/^function! go#mod#ToggleModFmtAutoSave() abort$/;"	f
go#mod#update_file	conf/vim/.vim/plugged/vim-go/autoload/go/mod.vim	/^function! go#mod#update_file(source, target)$/;"	f
go#package#Complete	conf/vim/.vim/plugged/vim-go/autoload/go/package.vim	/^function! go#package#Complete(ArgLead, CmdLine, CursorPos) abort$/;"	f
go#package#CompleteMembers	conf/vim/.vim/plugged/vim-go/autoload/go/package.vim	/^function! go#package#CompleteMembers(package, member) abort$/;"	f
go#package#FromPath	conf/vim/.vim/plugged/vim-go/autoload/go/package.vim	/^function! go#package#FromPath(arg) abort$/;"	f
go#package#ImportPath	conf/vim/.vim/plugged/vim-go/autoload/go/package.vim	/^function! go#package#ImportPath() abort$/;"	f
go#package#InGOPATH	conf/vim/.vim/plugged/vim-go/autoload/go/package.vim	/^function! go#package#InGOPATH() abort$/;"	f
go#path#BinPath	conf/vim/.vim/plugged/vim-go/autoload/go/path.vim	/^function! go#path#BinPath() abort$/;"	f
go#path#CheckBinPath	conf/vim/.vim/plugged/vim-go/autoload/go/path.vim	/^function! go#path#CheckBinPath(binpath) abort$/;"	f
go#path#Default	conf/vim/.vim/plugged/vim-go/autoload/go/path.vim	/^function! go#path#Default() abort$/;"	f
go#path#FromURI	conf/vim/.vim/plugged/vim-go/autoload/go/path.vim	/^function! go#path#FromURI(uri) abort$/;"	f
go#path#GoPath	conf/vim/.vim/plugged/vim-go/autoload/go/path.vim	/^function! go#path#GoPath(...) abort$/;"	f
go#path#ToURI	conf/vim/.vim/plugged/vim-go/autoload/go/path.vim	/^function! go#path#ToURI(path)$/;"	f
go#play#Share	conf/vim/.vim/plugged/vim-go/autoload/go/play.vim	/^function! go#play#Share(count, line1, line2) abort$/;"	f
go#promise#New	conf/vim/.vim/plugged/vim-go/autoload/go/promise.vim	/^function! go#promise#New(fn, timeout, default) abort$/;"	f
go#referrers#Referrers	conf/vim/.vim/plugged/vim-go/autoload/go/referrers.vim	/^function! go#referrers#Referrers(selected) abort$/;"	f
go#rename#Complete	conf/vim/.vim/plugged/vim-go/autoload/go/rename.vim	/^function! go#rename#Complete(lead, cmdline, cursor)$/;"	f
go#rename#Rename	conf/vim/.vim/plugged/vim-go/autoload/go/rename.vim	/^function! go#rename#Rename(bang, ...) abort$/;"	f
go#sameids#AutoToggleSameIds	conf/vim/.vim/plugged/vim-go/autoload/go/sameids.vim	/^function! go#sameids#AutoToggleSameIds() abort$/;"	f
go#sameids#ClearSameIds	conf/vim/.vim/plugged/vim-go/autoload/go/sameids.vim	/^function! go#sameids#ClearSameIds() abort$/;"	f
go#sameids#SameIds	conf/vim/.vim/plugged/vim-go/autoload/go/sameids.vim	/^function! go#sameids#SameIds(showstatus) abort$/;"	f
go#sameids#ToggleSameIds	conf/vim/.vim/plugged/vim-go/autoload/go/sameids.vim	/^function! go#sameids#ToggleSameIds() abort$/;"	f
go#statusline#Clear	conf/vim/.vim/plugged/vim-go/autoload/go/statusline.vim	/^function! go#statusline#Clear(timer_id) abort$/;"	f
go#statusline#Show	conf/vim/.vim/plugged/vim-go/autoload/go/statusline.vim	/^function! go#statusline#Show() abort$/;"	f
go#statusline#Update	conf/vim/.vim/plugged/vim-go/autoload/go/statusline.vim	/^function! go#statusline#Update(status_dir, status) abort$/;"	f
go#tags#Add	conf/vim/.vim/plugged/vim-go/autoload/go/tags.vim	/^function! go#tags#Add(start, end, count, ...) abort$/;"	f
go#tags#Remove	conf/vim/.vim/plugged/vim-go/autoload/go/tags.vim	/^function! go#tags#Remove(start, end, count, ...) abort$/;"	f
go#tags#run	conf/vim/.vim/plugged/vim-go/autoload/go/tags.vim	/^function! go#tags#run(start, end, offset, mode, fname, test_mode, ...) abort$/;"	f
go#template#ToggleAutoCreate	conf/vim/.vim/plugged/vim-go/autoload/go/template.vim	/^function! go#template#ToggleAutoCreate() abort$/;"	f
go#template#create	conf/vim/.vim/plugged/vim-go/autoload/go/template.vim	/^function! go#template#create() abort$/;"	f
go#term#ToggleCloseOnExit	conf/vim/.vim/plugged/vim-go/autoload/go/term.vim	/^function! go#term#ToggleCloseOnExit() abort$/;"	f
go#term#new	conf/vim/.vim/plugged/vim-go/autoload/go/term.vim	/^function! go#term#new(bang, cmd, errorformat) abort$/;"	f
go#term#newmode	conf/vim/.vim/plugged/vim-go/autoload/go/term.vim	/^function! go#term#newmode(bang, cmd, errorformat, mode) abort$/;"	f
go#test#File	conf/vim/.vim/plugged/vim-go/autoload/go/test.vim	/^function! go#test#File(bang, ...) abort$/;"	f
go#test#Func	conf/vim/.vim/plugged/vim-go/autoload/go/test.vim	/^function! go#test#Func(bang, ...) abort$/;"	f
go#test#Test	conf/vim/.vim/plugged/vim-go/autoload/go/test.vim	/^function! go#test#Test(bang, compile, ...) abort$/;"	f
go#textobj#Comment	conf/vim/.vim/plugged/vim-go/autoload/go/textobj.vim	/^function! go#textobj#Comment(mode) abort$/;"	f
go#textobj#Function	conf/vim/.vim/plugged/vim-go/autoload/go/textobj.vim	/^function! go#textobj#Function(mode) abort$/;"	f
go#textobj#FunctionJump	conf/vim/.vim/plugged/vim-go/autoload/go/textobj.vim	/^function! go#textobj#FunctionJump(mode, direction) abort$/;"	f
go#textobj#FunctionLocation	conf/vim/.vim/plugged/vim-go/autoload/go/textobj.vim	/^function! go#textobj#FunctionLocation(direction, cnt) abort$/;"	f
go#tool#Deps	conf/vim/.vim/plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#Deps() abort$/;"	f
go#tool#DescribeBalloon	conf/vim/.vim/plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#DescribeBalloon()$/;"	f
go#tool#Exists	conf/vim/.vim/plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#Exists(importpath) abort$/;"	f
go#tool#Files	conf/vim/.vim/plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#Files(...) abort$/;"	f
go#tool#Imports	conf/vim/.vim/plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#Imports() abort$/;"	f
go#tool#Info	conf/vim/.vim/plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#Info(showstatus) abort$/;"	f
go#tool#List	conf/vim/.vim/plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#List(package_path) abort$/;"	f
go#tool#PackageName	conf/vim/.vim/plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#PackageName() abort$/;"	f
go#tool#ValidFiles	conf/vim/.vim/plugged/vim-go/autoload/go/tool.vim	/^function! go#tool#ValidFiles(...)$/;"	f
go#ui#CloseWindow	conf/vim/.vim/plugged/vim-go/autoload/go/ui.vim	/^function! go#ui#CloseWindow() abort$/;"	f
go#ui#GetReturnWindow	conf/vim/.vim/plugged/vim-go/autoload/go/ui.vim	/^function! go#ui#GetReturnWindow() abort$/;"	f
go#ui#OpenDefinition	conf/vim/.vim/plugged/vim-go/autoload/go/ui.vim	/^function! go#ui#OpenDefinition(filter) abort$/;"	f
go#ui#OpenWindow	conf/vim/.vim/plugged/vim-go/autoload/go/ui.vim	/^function! go#ui#OpenWindow(title, content, filetype) abort$/;"	f
go#uri#Decode	conf/vim/.vim/plugged/vim-go/autoload/go/uri.vim	/^function! go#uri#Decode(value) abort$/;"	f
go#uri#Encode	conf/vim/.vim/plugged/vim-go/autoload/go/uri.vim	/^function! go#uri#Encode(value) abort$/;"	f
go#uri#EncodePath	conf/vim/.vim/plugged/vim-go/autoload/go/uri.vim	/^function! go#uri#EncodePath(value) abort$/;"	f
go#util#Chdir	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#Chdir(dir) abort$/;"	f
go#util#ClearHighlights	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#ClearHighlights(group) abort$/;"	f
go#util#EchoError	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#EchoError(msg)$/;"	f
go#util#EchoInfo	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#EchoInfo(msg)$/;"	f
go#util#EchoProgress	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#EchoProgress(msg)$/;"	f
go#util#EchoSuccess	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#EchoSuccess(msg)$/;"	f
go#util#EchoWarning	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#EchoWarning(msg)$/;"	f
go#util#Exec	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#Exec(cmd, ...) abort$/;"	f
go#util#ExecInDir	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#ExecInDir(cmd, ...) abort$/;"	f
go#util#ExecInWorkDir	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#ExecInWorkDir(cmd, wd, ...) abort$/;"	f
go#util#ExpandPattern	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#ExpandPattern(...) abort$/;"	f
go#util#GetLines	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#GetLines()$/;"	f
go#util#HasDebug	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#HasDebug(flag)$/;"	f
go#util#HighlightPositions	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#HighlightPositions(group, pos) abort$/;"	f
go#util#IsMac	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#IsMac() abort$/;"	f
go#util#IsUsingCygwinShell	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#IsUsingCygwinShell()$/;"	f
go#util#IsWin	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#IsWin() abort$/;"	f
go#util#Join	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#Join(...) abort$/;"	f
go#util#LineEnding	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#LineEnding() abort$/;"	f
go#util#ModuleRoot	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#ModuleRoot(...) abort$/;"	f
go#util#Offset	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#Offset(line, col) abort$/;"	f
go#util#OffsetCursor	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#OffsetCursor() abort$/;"	f
go#util#OpenBrowser	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#OpenBrowser(url) abort$/;"	f
go#util#ParseErrors	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#ParseErrors(lines) abort$/;"	f
go#util#PathListSep	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#PathListSep() abort$/;"	f
go#util#PathSep	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#PathSep() abort$/;"	f
go#util#SetEnv	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#SetEnv(name, value) abort$/;"	f
go#util#ShellError	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#ShellError() abort$/;"	f
go#util#Shelljoin	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#Shelljoin(arglist, ...) abort$/;"	f
go#util#Shelllist	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#Shelllist(arglist, ...) abort$/;"	f
go#util#ShowInfo	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#ShowInfo(info)$/;"	f
go#util#StripPathSep	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#StripPathSep(path) abort$/;"	f
go#util#StripTrailingSlash	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#StripTrailingSlash(paths) abort$/;"	f
go#util#System	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#System(str, ...) abort$/;"	f
go#util#TestName	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#TestName() abort$/;"	f
go#util#TestNamesInFile	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#TestNamesInFile() abort$/;"	f
go#util#Windo	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#Windo(command) abort$/;"	f
go#util#archive	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#archive()$/;"	f
go#util#camelcase	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#camelcase(word) abort$/;"	f
go#util#env	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#env(key) abort$/;"	f
go#util#goarch	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#goarch() abort$/;"	f
go#util#gobin	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#gobin() abort$/;"	f
go#util#gomod	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#gomod() abort$/;"	f
go#util#gomodcache	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#gomodcache() abort$/;"	f
go#util#goos	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#goos() abort$/;"	f
go#util#gopath	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#gopath() abort$/;"	f
go#util#goroot	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#goroot() abort$/;"	f
go#util#has_job	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#has_job(...) abort$/;"	f
go#util#hostosarch	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#hostosarch() abort$/;"	f
go#util#pascalcase	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#pascalcase(word) abort$/;"	f
go#util#snakecase	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#snakecase(word) abort$/;"	f
go#util#snippetcase	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#snippetcase(word) abort$/;"	f
go#util#tempdir	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#tempdir(prefix) abort$/;"	f
go#util#testLine	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! go#util#testLine() abort$/;"	f
go-packages	conf/emacs/.emacs.d/layers/+lang/go/packages.el	/^(defconst go-packages$/;"	f
go/init-company-go	conf/emacs/.emacs.d/layers/+lang/go/packages.el	/^(defun go\/init-company-go ()$/;"	f
go/init-flycheck-golangci-lint	conf/emacs/.emacs.d/layers/+lang/go/packages.el	/^(defun go\/init-flycheck-golangci-lint ()$/;"	f
go/init-go-eldoc	conf/emacs/.emacs.d/layers/+lang/go/packages.el	/^(defun go\/init-go-eldoc ()$/;"	f
go/init-go-fill-struct	conf/emacs/.emacs.d/layers/+lang/go/packages.el	/^(defun go\/init-go-fill-struct ()$/;"	f
go/init-go-gen-test	conf/emacs/.emacs.d/layers/+lang/go/packages.el	/^(defun go\/init-go-gen-test ()$/;"	f
go/init-go-guru	conf/emacs/.emacs.d/layers/+lang/go/packages.el	/^(defun go\/init-go-guru ()$/;"	f
go/init-go-impl	conf/emacs/.emacs.d/layers/+lang/go/packages.el	/^(defun go\/init-go-impl ()$/;"	f
go/init-go-mode	conf/emacs/.emacs.d/layers/+lang/go/packages.el	/^(defun go\/init-go-mode ()$/;"	f
go/init-go-rename	conf/emacs/.emacs.d/layers/+lang/go/packages.el	/^(defun go\/init-go-rename ()$/;"	f
go/init-go-tag	conf/emacs/.emacs.d/layers/+lang/go/packages.el	/^(defun go\/init-go-tag ()$/;"	f
go/init-godoctor	conf/emacs/.emacs.d/layers/+lang/go/packages.el	/^(defun go\/init-godoctor ()$/;"	f
go/post-init-company	conf/emacs/.emacs.d/layers/+lang/go/packages.el	/^(defun go\/post-init-company ()$/;"	f
go/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/go/packages.el	/^(defun go\/post-init-counsel-gtags nil)$/;"	f
go/post-init-eldoc	conf/emacs/.emacs.d/layers/+lang/go/packages.el	/^(defun go\/post-init-eldoc ()$/;"	f
go/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/go/packages.el	/^(defun go\/post-init-flycheck ()$/;"	f
go/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/go/packages.el	/^(defun go\/post-init-ggtags ()$/;"	f
go/pre-init-dap-mode	conf/emacs/.emacs.d/layers/+lang/go/packages.el	/^(defun go\/pre-init-dap-mode ()$/;"	f
go/pre-init-popwin	conf/emacs/.emacs.d/layers/+lang/go/packages.el	/^(defun go\/pre-init-popwin ()$/;"	f
go_packages	conf/vim/.vim/plugged/vim-go/autoload/go/impl.vim	/^function! s:go_packages(dirs, arglead) abort$/;"	f
godocCursorWord	conf/vim/.vim/plugged/vim-go/autoload/go/doc.vim	/^function! s:godocCursorWord() abort$/;"	f
godocIdentifier	conf/vim/.vim/plugged/vim-go/autoload/go/doc.vim	/^function s:godocIdentifier(...) abort$/;"	f
godocWord	conf/vim/.vim/plugged/vim-go/autoload/go/doc.vim	/^function! s:godocWord(...) abort$/;"	f
gofiletype_post	conf/vim/.vim/plugged/vim-go/plugin/go.vim	/^function! s:gofiletype_post()$/;"	f
gofiletype_pre	conf/vim/.vim/plugged/vim-go/plugin/go.vim	/^function! s:gofiletype_pre()$/;"	f
golangcilintcmd	conf/vim/.vim/plugged/vim-go/autoload/go/lint.vim	/^function! s:golangcilintcmd(bin_path, haslinter)$/;"	f
gometa	conf/vim/.vim/plugged/vim-go/autoload/go/lint_test.vim	/^func! s:gometa(metalinter) abort$/;"	f
gometa_multiple	conf/vim/.vim/plugged/vim-go/autoload/go/lint_test.vim	/^func! s:gometa_multiple(metalinter) abort$/;"	f
gometaautosave	conf/vim/.vim/plugged/vim-go/autoload/go/lint_test.vim	/^func! s:gometaautosave(metalinter, withList) abort$/;"	f
gometaautosave_multiple	conf/vim/.vim/plugged/vim-go/autoload/go/lint_test.vim	/^func! s:gometaautosave_multiple(metalinter) abort$/;"	f
gomod	conf/vim/.vim/plugged/vim-go/ftdetect/gofiletype.vim	/^fun! s:gomod()$/;"	f
goroutineID	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:goroutineID() abort$/;"	f
gotest#assert_buffer	conf/vim/.vim/plugged/vim-go/autoload/gotest.vim	/^fun! gotest#assert_buffer(skipHeader, want) abort$/;"	f
gotest#assert_fixture	conf/vim/.vim/plugged/vim-go/autoload/gotest.vim	/^fun! gotest#assert_fixture(path) abort$/;"	f
gotest#assert_quickfix	conf/vim/.vim/plugged/vim-go/autoload/gotest.vim	/^func! gotest#assert_quickfix(got, want) abort$/;"	f
gotest#load_fixture	conf/vim/.vim/plugged/vim-go/autoload/gotest.vim	/^fun! gotest#load_fixture(path) abort$/;"	f
gotest#write_file	conf/vim/.vim/plugged/vim-go/autoload/gotest.vim	/^fun! gotest#write_file(path, contents) abort$/;"	f
goto_file	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:goto_file() abort$/;"	f
goto_original_window	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:goto_original_window()$/;"	f
gplfs	conf/zsh/.oh-my-zsh/plugins/git-lfs/git-lfs.plugin.zsh	/^function gplfs() {$/;"	f
gpu/init-company-glsl	conf/emacs/.emacs.d/layers/+lang/gpu/packages.el	/^(defun gpu\/init-company-glsl ()$/;"	f
gpu/init-cuda-mode	conf/emacs/.emacs.d/layers/+lang/gpu/packages.el	/^(defun gpu\/init-cuda-mode ()$/;"	f
gpu/init-glsl-mode	conf/emacs/.emacs.d/layers/+lang/gpu/packages.el	/^(defun gpu\/init-glsl-mode ()$/;"	f
gpu/init-opencl-c-mode	conf/emacs/.emacs.d/layers/+lang/gpu/packages.el	/^(defun gpu\/init-opencl-c-mode ()$/;"	f
gr	conf/vim/.vim/custom/coc.vim	/^nmap <silent> gr <Plug>(coc-references)$/;"	m
gr	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nmap <silent> gr <Plug>(coc-references)$/;"	m
gradle	conf/zsh/.oh-my-zsh/plugins/gradle/gradle.plugin.zsh	/^function gradle-or-gradlew() {$/;"	f
graphql-packages	conf/emacs/.emacs.d/layers/+lang/graphql/packages.el	/^(defconst graphql-packages$/;"	f
graphql/init-graphql-mode	conf/emacs/.emacs.d/layers/+lang/graphql/packages.el	/^(defun graphql\/init-graphql-mode ()$/;"	f
graphql/post-init-company	conf/emacs/.emacs.d/layers/+lang/graphql/packages.el	/^(defun graphql\/post-init-company ()$/;"	f
graphql/pre-init-prettier-js	conf/emacs/.emacs.d/layers/+lang/graphql/packages.el	/^(defun graphql\/pre-init-prettier-js ()$/;"	f
graphviz-packages	conf/emacs/.emacs.d/layers/+lang/graphviz/packages.el	/^(defconst graphviz-packages$/;"	f
graphviz/init-graphviz-dot-mode	conf/emacs/.emacs.d/layers/+lang/graphviz/packages.el	/^(defun graphviz\/init-graphviz-dot-mode ()$/;"	f
graphviz/pre-init-org	conf/emacs/.emacs.d/layers/+lang/graphviz/packages.el	/^(defun graphviz\/pre-init-org ()$/;"	f
graphviz/pre-init-smartparens	conf/emacs/.emacs.d/layers/+lang/graphviz/packages.el	/^(defun graphviz\/pre-init-smartparens ()$/;"	f
grename	conf/zsh/.oh-my-zsh/plugins/git/git.plugin.zsh	/^function grename() {$/;"	f
grep_multi_line	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:grep_multi_line(opts)$/;"	f
grep_version	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:grep_version()$/;"	f
grey_colour	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:grey_colour(n)$/;"	f
grey_level	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:grey_level(n)$/;"	f
grey_number	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:grey_number(x)$/;"	f
groovy-packages	conf/emacs/.emacs.d/layers/+lang/groovy/packages.el	/^(defconst groovy-packages$/;"	f
groovy/init-groovy-imports	conf/emacs/.emacs.d/layers/+lang/groovy/packages.el	/^(defun groovy\/init-groovy-imports ()$/;"	f
groovy/init-groovy-mode	conf/emacs/.emacs.d/layers/+lang/groovy/packages.el	/^(defun groovy\/init-groovy-mode ()$/;"	f
groovy/post-init-company	conf/emacs/.emacs.d/layers/+lang/groovy/packages.el	/^(defun groovy\/post-init-company ()$/;"	f
groovy/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/groovy/packages.el	/^(defun groovy\/post-init-flycheck ()$/;"	f
groovy/pre-init-org	conf/emacs/.emacs.d/layers/+lang/groovy/packages.el	/^(defun groovy\/pre-init-org ()$/;"	f
group	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^            group = name$/;"	v
group_hls	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! s:group_hls(hls, linecount) abort$/;"	f
group_list	conf/zsh/.oh-my-zsh/plugins/aliases/cheatsheet.py	/^    group_list = args.group_list or None$/;"	v
group_match	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^    group_match = re.findall(regex_group, line)$/;"	v
gtags-enable-by-default	conf/emacs/.emacs.d/layers/+tags/gtags/config.el	/^(defvar gtags-enable-by-default t$/;"	f
gtags-packages	conf/emacs/.emacs.d/layers/+tags/gtags/packages.el	/^(defconst gtags-packages$/;"	f
gtags/init-counsel-gtags	conf/emacs/.emacs.d/layers/+tags/gtags/packages.el	/^(defun gtags\/init-counsel-gtags ()$/;"	f
gtags/init-ggtags	conf/emacs/.emacs.d/layers/+tags/gtags/packages.el	/^(defun gtags\/init-ggtags ()$/;"	f
gtags/init-helm-gtags	conf/emacs/.emacs.d/layers/+tags/gtags/packages.el	/^(defun gtags\/init-helm-gtags ()$/;"	f
guess_edit	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/diff.py	/^def guess_edit(initial_line, last_text, current_text, vim_state):$/;"	f
gunwipall	conf/zsh/.oh-my-zsh/plugins/git/git.plugin.zsh	/^function gunwipall() {$/;"	f
gy	conf/vim/.vim/custom/coc.vim	/^nmap <silent> gy <Plug>(coc-type-definition)$/;"	m
gy	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^nmap <silent> gy <Plug>(coc-type-definition)$/;"	m
hackernews-packages	conf/emacs/.emacs.d/layers/+web-services/hackernews/packages.el	/^(defconst hackernews-packages$/;"	f
hackernews/init-hackernews	conf/emacs/.emacs.d/layers/+web-services/hackernews/packages.el	/^(defun hackernews\/init-hackernews()$/;"	f
handleCodeAction	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:handleCodeAction(kind, cmd, fix, msg) abort dict$/;"	f
handleCodeActionError	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:handleCodeActionError(filename, msg) abort dict$/;"	f
handleFormat	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:handleFormat(msg) abort dict$/;"	f
handleFormatError	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:handleFormatError(filename, msg) abort dict$/;"	f
handleImplements	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:handleImplements(next, msg) abort dict$/;"	f
handleImplementsError	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:handleImplementsError(next, error) abort dict$/;"	f
handleLeftClick	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleLeftClick() abort$/;"	f
handleLocations	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:handleLocations(next, msg) abort$/;"	f
handleMiddleMouse	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleMiddleMouse() abort$/;"	f
handleNextInProgress	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:handleNextInProgress(res)$/;"	f
handleRPCResult	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:handleRPCResult(resp) abort$/;"	f
handleReferences	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:handleReferences(next, msg) abort dict$/;"	f
handleRename	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:handleRename(msg) abort dict$/;"	f
handleRenameError	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:handleRenameError(msg) abort dict$/;"	f
handle_action	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^def handle_action(head, tail, line_index):$/;"	f
handle_completion_insecurities	conf/zsh/.oh-my-zsh/lib/compfix.zsh	/^function handle_completion_insecurities() {$/;"	f
handle_context	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^def handle_context(tail, line_index):$/;"	f
handle_data	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^    def handle_data(self, data):$/;"	m	class:IndexProcessor
handle_double_hunk	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:handle_double_hunk(modified_lines)$/;"	f
handle_endtag	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^    def handle_endtag(self, tag):$/;"	m	class:IndexProcessor
handle_exit	conf/vim/.vim/plugged/vim-go/autoload/go/term.vim	/^func s:handle_exit(job_id, exit_status, state) abort$/;"	f
handle_extends	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^def handle_extends(tail, line_index):$/;"	f
handle_list_function_args	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:handle_list_function_args(check_errors, res) abort$/;"	f
handle_list_local_vars	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:handle_list_local_vars(check_errors, res) abort$/;"	f
handle_list_registers	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:handle_list_registers(check_errors, res) abort$/;"	f
handle_set	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:handle_set(check_errors, res) abort$/;"	f
handle_stack_response	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:handle_stack_response(command, check_errors, res) abort$/;"	f
handle_staleness_check_response	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:handle_staleness_check_response(filename, check_errors, res) abort$/;"	f
handle_starttag	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^    def handle_starttag(self, tag, attrs):$/;"	m	class:IndexProcessor
handle_update	conf/zsh/.oh-my-zsh/tools/check_for_upgrade.sh	/^function handle_update() {$/;"	f
handler	conf/vim/.vim/plugged/vim-go/autoload/go/auto.vim	/^function! s:handler(timer_id)$/;"	f
has_cjk	conf/vim/.vim/plugged/vim-snippets/pythonx/vimsnippets.py	/^def has_cjk(s):$/;"	f
has_fresh_changes	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:has_fresh_changes(bufnr) abort$/;"	f
has_next_tab	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def has_next_tab(self, jump_direction: JumpDirection):$/;"	m	class:SnippetInstance
has_option	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def has_option(self, opt):$/;"	m	class:SnippetDefinition
has_shadow	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:has_shadow(config) abort$/;"	f
has_typed_input	conf/zsh/.oh-my-zsh/tools/check_for_upgrade.sh	/^function has_typed_input() {$/;"	f
has_version	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def has_version(self, major, minor, patchlevel):$/;"	m	class:VimInterface
has_vimproc	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:has_vimproc() abort$/;"	f
hash_match	conf/vim/.vim/autoload/plug.vim	/^function! s:hash_match(a, b)$/;"	f
haskell-completion-backend	conf/emacs/.emacs.d/layers/+lang/haskell/config.el	/^(defvar haskell-completion-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'dante)$/;"	f
haskell-enable-hindent	conf/emacs/.emacs.d/layers/+lang/haskell/config.el	/^(defvar haskell-enable-hindent nil$/;"	f
haskell/init-attrap	conf/emacs/.emacs.d/layers/+lang/haskell/packages.el	/^(defun haskell\/init-attrap ()$/;"	f
haskell/init-cmm-mode	conf/emacs/.emacs.d/layers/+lang/haskell/packages.el	/^(defun haskell\/init-cmm-mode ()$/;"	f
haskell/init-company-cabal	conf/emacs/.emacs.d/layers/+lang/haskell/packages.el	/^(defun haskell\/init-company-cabal ()$/;"	f
haskell/init-dante	conf/emacs/.emacs.d/layers/+lang/haskell/packages.el	/^(defun haskell\/init-dante ()$/;"	f
haskell/init-flycheck-haskell	conf/emacs/.emacs.d/layers/+lang/haskell/packages.el	/^(defun haskell\/init-flycheck-haskell ()$/;"	f
haskell/init-haskell-mode	conf/emacs/.emacs.d/layers/+lang/haskell/packages.el	/^(defun haskell\/init-haskell-mode ()$/;"	f
haskell/init-haskell-snippets	conf/emacs/.emacs.d/layers/+lang/haskell/packages.el	/^(defun haskell\/init-haskell-snippets ()$/;"	f
haskell/init-helm-hoogle	conf/emacs/.emacs.d/layers/+lang/haskell/packages.el	/^(defun haskell\/init-helm-hoogle ()$/;"	f
haskell/init-hindent	conf/emacs/.emacs.d/layers/+lang/haskell/packages.el	/^(defun haskell\/init-hindent ()$/;"	f
haskell/init-hlint-refactor	conf/emacs/.emacs.d/layers/+lang/haskell/packages.el	/^(defun haskell\/init-hlint-refactor ()$/;"	f
haskell/init-lsp-haskell	conf/emacs/.emacs.d/layers/+lang/haskell/packages.el	/^(defun haskell\/init-lsp-haskell ()$/;"	f
haskell/post-init-company	conf/emacs/.emacs.d/layers/+lang/haskell/packages.el	/^(defun haskell\/post-init-company ()$/;"	f
haskell/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/haskell/packages.el	/^(defun haskell\/post-init-counsel-gtags nil)$/;"	f
haskell/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/haskell/packages.el	/^(defun haskell\/post-init-flycheck ()$/;"	f
haskell/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/haskell/packages.el	/^(defun haskell\/post-init-ggtags ()$/;"	f
hcfile	conf/zsh/.oh-my-zsh/plugins/heroku-alias/heroku-alias.plugin.zsh	/^hcfile() {$/;"	f
head_tail	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text.py	/^def head_tail(line):$/;"	f
health#coc#check	conf/vim/.vim/plugged/coc.nvim/autoload/health/coc.vim	/^function! health#coc#check() abort$/;"	f
health#deoplete#check	conf/vim/.vim/plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! health#deoplete#check() abort$/;"	f
helm-available-repls	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun helm-available-repls ()$/;"	f
helm-dash-docset-newpath	conf/emacs/.emacs.d/layers/+readers/dash/config.el	/^(defvaralias 'helm-dash-docset-newpath 'dash-docs-docset-newpath)$/;"	f
helm-enable-auto-resize	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/config.el	/^(defvar helm-enable-auto-resize (spacemacs|dotspacemacs-backward-compatibility$/;"	f
helm-games	conf/emacs/.emacs.d/layers/+fun/games/local/helm-games/helm-games.el	/^(defun helm-games ()$/;"	f
helm-games-list	conf/emacs/.emacs.d/layers/+fun/games/local/helm-games/helm-games.el	/^(defvar helm-games-list '()$/;"	f
helm-games//game-candidates	conf/emacs/.emacs.d/layers/+fun/games/local/helm-games/helm-games.el	/^(defun helm-games\/\/game-candidates ()$/;"	f
helm-games//games-source	conf/emacs/.emacs.d/layers/+fun/games/local/helm-games/helm-games.el	/^(defun helm-games\/\/games-source ()$/;"	f
helm-games//quit-game	conf/emacs/.emacs.d/layers/+fun/games/local/helm-games/helm-games.el	/^(defun helm-games\/\/quit-game (candidate)$/;"	f
helm-games//reset-game	conf/emacs/.emacs.d/layers/+fun/games/local/helm-games/helm-games.el	/^(defun helm-games\/\/reset-game (candidate)$/;"	f
helm-games//run-game	conf/emacs/.emacs.d/layers/+fun/games/local/helm-games/helm-games.el	/^(defun helm-games\/\/run-game (candidate)$/;"	f
helm-gtags-dwim-other-window	conf/emacs/.emacs.d/layers/+tags/gtags/funcs.el	/^(defun helm-gtags-dwim-other-window ()$/;"	f
helm-no-header	conf/emacs/.emacs.d/layers/+completion/helm/config.el	/^(defvar helm-no-header (spacemacs|dotspacemacs-backward-compatibility$/;"	f
helm-packages	conf/emacs/.emacs.d/layers/+completion/helm/packages.el	/^(defconst helm-packages$/;"	f
helm-position	conf/emacs/.emacs.d/layers/+completion/helm/config.el	/^(defvar helm-position (spacemacs|dotspacemacs-backward-compatibility$/;"	f
helm-rcirc-auto-join-channels	conf/emacs/.emacs.d/layers/+chat/rcirc/local/helm-rcirc/helm-rcirc.el	/^(defun helm-rcirc-auto-join-channels ()$/;"	f
helm-rcirc-auto-join-channels-alist	conf/emacs/.emacs.d/layers/+chat/rcirc/local/helm-rcirc/helm-rcirc.el	/^(defun helm-rcirc-auto-join-channels-alist ()$/;"	f
helm-rcirc-auto-join-channels-source	conf/emacs/.emacs.d/layers/+chat/rcirc/local/helm-rcirc/helm-rcirc.el	/^(defun helm-rcirc-auto-join-channels-source (entry)$/;"	f
helm-rcirc-open-channel-buffer	conf/emacs/.emacs.d/layers/+chat/rcirc/local/helm-rcirc/helm-rcirc.el	/^(defun helm-rcirc-open-channel-buffer (selected-value)$/;"	f
helm-show-action-window-other-window	conf/emacs/.emacs.d/layers/+completion/helm/config.el	/^(defvar helm-show-action-window-other-window nil)$/;"	f
helm-spacemacs--initialized	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defvar helm-spacemacs--initialized nil$/;"	f
helm-spacemacs-help	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help (arg)$/;"	f
helm-spacemacs-help--faq-filename	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-faq.el	/^(defvar helm-spacemacs-help--faq-filename$/;"	f
helm-spacemacs-help--layer-map	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defvar helm-spacemacs-help--layer-map$/;"	f
helm-spacemacs-help-docs	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help-docs ()$/;"	f
helm-spacemacs-help-dotspacemacs	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help-dotspacemacs ()$/;"	f
helm-spacemacs-help-faq	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-faq.el	/^(defun helm-spacemacs-help-faq ()$/;"	f
helm-spacemacs-help-layers	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help-layers ()$/;"	f
helm-spacemacs-help-mode	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(define-minor-mode helm-spacemacs-help-mode$/;"	f
helm-spacemacs-help-packages	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help-packages (arg)$/;"	f
helm-spacemacs-help-toggles	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help-toggles ()$/;"	f
helm-spacemacs-help//documentation-action-open-file	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/documentation-action-open-file (candidate)$/;"	f
helm-spacemacs-help//documentation-candidates	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/documentation-candidates ()$/;"	f
helm-spacemacs-help//documentation-source	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/documentation-source ()$/;"	f
helm-spacemacs-help//dotspacemacs-candidates	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/dotspacemacs-candidates ()$/;"	f
helm-spacemacs-help//dotspacemacs-source	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/dotspacemacs-source ()$/;"	f
helm-spacemacs-help//faq-candidate	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-faq.el	/^(defun helm-spacemacs-help\/\/faq-candidate (cand)$/;"	f
helm-spacemacs-help//faq-candidates	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-faq.el	/^(defun helm-spacemacs-help\/\/faq-candidates ()$/;"	f
helm-spacemacs-help//faq-goto-marker	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-faq.el	/^(defun helm-spacemacs-help\/\/faq-goto-marker (marker)$/;"	f
helm-spacemacs-help//faq-source	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-faq.el	/^(defun helm-spacemacs-help\/\/faq-source ()$/;"	f
helm-spacemacs-help//get-faq-headings-list	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-faq.el	/^(defun helm-spacemacs-help\/\/get-faq-headings-list (sources)$/;"	f
helm-spacemacs-help//go-to-dotfile-variable	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/go-to-dotfile-variable (candidate)$/;"	f
helm-spacemacs-help//init	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/init (&optional arg)$/;"	f
helm-spacemacs-help//layer-action-get-directory	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/layer-action-get-directory (candidate)$/;"	f
helm-spacemacs-help//layer-action-install-layer	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/layer-action-install-layer (candidate-layer)$/;"	f
helm-spacemacs-help//layer-action-open-config	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/layer-action-open-config (candidate)$/;"	f
helm-spacemacs-help//layer-action-open-dired	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/layer-action-open-dired (candidate)$/;"	f
helm-spacemacs-help//layer-action-open-file	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/layer-action-open-file$/;"	f
helm-spacemacs-help//layer-action-open-funcs	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/layer-action-open-funcs (candidate)$/;"	f
helm-spacemacs-help//layer-action-open-layers	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/layer-action-open-layers (candidate)$/;"	f
helm-spacemacs-help//layer-action-open-packages	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/layer-action-open-packages (candidate)$/;"	f
helm-spacemacs-help//layer-action-open-readme	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/layer-action-open-readme (candidate)$/;"	f
helm-spacemacs-help//layer-action-open-readme-edit	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/layer-action-open-readme-edit (candidate)$/;"	f
helm-spacemacs-help//layer-source	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/layer-source ()$/;"	f
helm-spacemacs-help//package-action-describe	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/package-action-describe (candidate)$/;"	f
helm-spacemacs-help//package-action-goto-config-func	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/package-action-goto-config-func (candidate)$/;"	f
helm-spacemacs-help//package-action-recompile	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/package-action-recompile (candidate)$/;"	f
helm-spacemacs-help//package-candidates	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/package-candidates ()$/;"	f
helm-spacemacs-help//package-source	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/package-source ()$/;"	f
helm-spacemacs-help//toggle	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/toggle (candidate)$/;"	f
helm-spacemacs-help//toggle-candidates	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/toggle-candidates ()$/;"	f
helm-spacemacs-help//toggle-source	conf/emacs/.emacs.d/layers/+completion/helm/local/helm-spacemacs-help/helm-spacemacs-help.el	/^(defun helm-spacemacs-help\/\/toggle-source ()$/;"	f
helm-toggle-header-line	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun helm-toggle-header-line ()$/;"	f
helm-twitch-enable-chat-actions	conf/emacs/.emacs.d/layers/+web-services/twitch/config.el	/^(defvar helm-twitch-enable-chat-actions nil$/;"	f
helm-twitch-enable-livestreamer-actions	conf/emacs/.emacs.d/layers/+web-services/twitch/config.el	/^(defvar helm-twitch-enable-livestreamer-actions nil$/;"	f
helm-use-fuzzy	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/config.el	/^(defvar helm-use-fuzzy (spacemacs|dotspacemacs-backward-compatibility$/;"	f
helm-use-posframe	conf/emacs/.emacs.d/layers/+completion/helm/config.el	/^(defvar helm-use-posframe nil$/;"	f
helm/init-ace-jump-helm-line	conf/emacs/.emacs.d/layers/+completion/helm/packages.el	/^(defun helm\/init-ace-jump-helm-line ()$/;"	f
helm/init-helm	conf/emacs/.emacs.d/layers/+completion/helm/packages.el	/^(defun helm\/init-helm ()$/;"	f
helm/init-helm-ag	conf/emacs/.emacs.d/layers/+completion/helm/packages.el	/^(defun helm\/init-helm-ag ()$/;"	f
helm/init-helm-comint	conf/emacs/.emacs.d/layers/+completion/helm/packages.el	/^(defun helm\/init-helm-comint ()$/;"	f
helm/init-helm-descbinds	conf/emacs/.emacs.d/layers/+completion/helm/packages.el	/^(defun helm\/init-helm-descbinds ()$/;"	f
helm/init-helm-ls-git	conf/emacs/.emacs.d/layers/+completion/helm/packages.el	/^(defun helm\/init-helm-ls-git ()$/;"	f
helm/init-helm-make	conf/emacs/.emacs.d/layers/+completion/helm/packages.el	/^(defun helm\/init-helm-make ()$/;"	f
helm/init-helm-mode-manager	conf/emacs/.emacs.d/layers/+completion/helm/packages.el	/^(defun helm\/init-helm-mode-manager ()$/;"	f
helm/init-helm-org	conf/emacs/.emacs.d/layers/+completion/helm/packages.el	/^(defun helm\/init-helm-org ()$/;"	f
helm/init-helm-posframe	conf/emacs/.emacs.d/layers/+completion/helm/packages.el	/^(defun helm\/init-helm-posframe ()$/;"	f
helm/init-helm-projectile	conf/emacs/.emacs.d/layers/+completion/helm/packages.el	/^(defun helm\/init-helm-projectile ()$/;"	f
helm/init-helm-spacemacs-faq	conf/emacs/.emacs.d/layers/+completion/helm/packages.el	/^(defun helm\/init-helm-spacemacs-faq ()$/;"	f
helm/init-helm-spacemacs-help	conf/emacs/.emacs.d/layers/+completion/helm/packages.el	/^(defun helm\/init-helm-spacemacs-help ()$/;"	f
helm/init-helm-swoop	conf/emacs/.emacs.d/layers/+completion/helm/packages.el	/^(defun helm\/init-helm-swoop ()$/;"	f
helm/init-helm-themes	conf/emacs/.emacs.d/layers/+completion/helm/packages.el	/^(defun helm\/init-helm-themes ()$/;"	f
helm/init-helm-xref	conf/emacs/.emacs.d/layers/+completion/helm/packages.el	/^(defun helm\/init-helm-xref ()$/;"	f
helm/post-init-bookmark	conf/emacs/.emacs.d/layers/+completion/helm/packages.el	/^(defun helm\/post-init-bookmark ()$/;"	f
helm/post-init-imenu	conf/emacs/.emacs.d/layers/+completion/helm/packages.el	/^(defun helm\/post-init-imenu ()$/;"	f
helm/post-init-popwin	conf/emacs/.emacs.d/layers/+completion/helm/packages.el	/^(defun helm\/post-init-popwin ()$/;"	f
helm/post-init-projectile	conf/emacs/.emacs.d/layers/+completion/helm/packages.el	/^(defun helm\/post-init-projectile ()$/;"	f
helm/pre-dump	conf/emacs/.emacs.d/layers/+completion/helm/config.el	/^(defun helm\/pre-dump ()$/;"	f
helm/pre-init-auto-highlight-symbol	conf/emacs/.emacs.d/layers/+completion/helm/packages.el	/^(defun helm\/pre-init-auto-highlight-symbol ()$/;"	f
helm/pre-init-helm-projectile	conf/emacs/.emacs.d/layers/+completion/helm/packages.el	/^(defun helm\/pre-init-helm-projectile ()$/;"	f
helm/pre-init-persp-mode	conf/emacs/.emacs.d/layers/+completion/helm/packages.el	/^(defun helm\/pre-init-persp-mode ()$/;"	f
help	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^        help="SEARCH OPTION: include description field "$/;"	v
help	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^        help="SEARCH OPTION: insensitive search "$/;"	v
help	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^        help="append to the db from multiple sources",$/;"	v
help	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^        help="extract keywords, internally used",$/;"	v
help	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^        help="type of output formatting, valid: Emacs, Terminal",$/;"	v
help	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^        help="update url or path",$/;"	v
help	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^        help="verbose",$/;"	v
help	conf/tmux/.tmux/plugins/tmux-themepack/bin/build-theme	/^help() {$/;"	f
help	conf/zsh/.oh-my-zsh/plugins/catimg/catimg.sh	/^function help() {$/;"	f
help-describe-package	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(define-button-type 'help-describe-package$/;"	f
help-dotfile-variable	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(define-button-type 'help-dotfile-variable$/;"	f
helper	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/play/play_test.go	/^func helper(t *testing.T) {$/;"	f
helper--add-layers	conf/emacs/.emacs.d/tests/core/core-configuration-layer-utest.el	/^(defun helper--add-layers (layers &optional usedp)$/;"	f
helper--add-packages	conf/emacs/.emacs.d/tests/core/core-configuration-layer-utest.el	/^(defun helper--add-packages (packages &optional usedp)$/;"	f
helpful-packages	conf/emacs/.emacs.d/layers/+emacs/helpful/packages.el	/^(defconst helpful-packages$/;"	f
helpful/init-helpful	conf/emacs/.emacs.d/layers/+emacs/helpful/packages.el	/^(defun helpful\/init-helpful ()$/;"	f
helpful/post-init-link-hint	conf/emacs/.emacs.d/layers/+emacs/helpful/packages.el	/^(defun helpful\/post-init-link-hint ()$/;"	f
helpful/pre-init-popwin	conf/emacs/.emacs.d/layers/+emacs/helpful/packages.el	/^(defun helpful\/pre-init-popwin ()$/;"	f
helptag_sink	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:helptag_sink(line)$/;"	f
hex-region	conf/emacs/.spacemacs.d/load.d/functions.el	/^(defun hex-region (start end)$/;"	f
hg_dirty	conf/zsh/.oh-my-zsh/plugins/mercurial/mercurial.plugin.zsh	/^function hg_dirty {$/;"	f
hg_get_bookmark_name	conf/zsh/.oh-my-zsh/plugins/mercurial/mercurial.plugin.zsh	/^function hg_get_bookmark_name() {$/;"	f
hg_get_branch_name	conf/zsh/.oh-my-zsh/plugins/mercurial/mercurial.plugin.zsh	/^function hg_get_branch_name() {$/;"	f
hg_prompt_info	conf/zsh/.oh-my-zsh/plugins/mercurial/mercurial.plugin.zsh	/^function hg_prompt_info {$/;"	f
hg_root	conf/zsh/.oh-my-zsh/plugins/mercurial/mercurial.plugin.zsh	/^function hg_root() {$/;"	f
hgic	conf/zsh/.oh-my-zsh/plugins/mercurial/mercurial.plugin.zsh	/^function hgic() {$/;"	f
hgoc	conf/zsh/.oh-my-zsh/plugins/mercurial/mercurial.plugin.zsh	/^function hgoc() {$/;"	f
hi	conf/vim/.vim/plugged/vim-go/syntax/go.vim	/^function! s:hi()$/;"	f
hidden-mode-line-mode	conf/emacs/.emacs.d/core/core-funcs.el	/^(define-minor-mode hidden-mode-line-mode$/;"	f
hidden-mode-line-mode	conf/emacs/.emacs.d/core/core-funcs.el	/^(defvar-local hidden-mode-line-mode nil)$/;"	f
hide-everything	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun hide-everything ()$/;"	f
hide-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun hide-frame (frame &optional prefix)$/;"	f
hide-mode-line	conf/emacs/.emacs.d/core/core-funcs.el	/^(defvar-local hide-mode-line nil)$/;"	f
highlight	conf/vim/.vim/plugged/vim-go/rplugin/python3/denite/source/decls.py	/^    def highlight(self):$/;"	m	class:Source
highlightMatches	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:highlightMatches(errorMatches, warningMatches) abort$/;"	f
highlight_keys	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:highlight_keys(str)$/;"	f
highlight_name_for_change	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:highlight_name_for_change(text) abort$/;"	f
history	conf/vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^function! s:history(arg, extra, bang)$/;"	f
history_sink	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:history_sink(type, lines)$/;"	f
history_source	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:history_source(type)$/;"	f
hitokoto	conf/zsh/.oh-my-zsh/plugins/hitokoto/hitokoto.plugin.zsh	/^function hitokoto {$/;"	f
holy-insert-to-emacs-state	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/holy-mode/holy-mode.el	/^(defun holy-insert-to-emacs-state (f &optional arg &rest args)$/;"	f
holy-mode	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/holy-mode/holy-mode.el	/^(define-minor-mode holy-mode$/;"	f
holy-mode//update-states-for-current-buffers	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/holy-mode/holy-mode.el	/^(defun holy-mode\/\/update-states-for-current-buffers (style)$/;"	f
holy-motion-to-emacs-state	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/holy-mode/holy-mode.el	/^(defun holy-motion-to-emacs-state (f &optional arg &rest args)$/;"	f
holy-normal-to-emacs-state	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/holy-mode/holy-mode.el	/^(defun holy-normal-to-emacs-state (f &optional arg &rest args)$/;"	f
hoverError	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:hoverError(next, diagnostic, msg) abort dict$/;"	f
hoverHandler	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:hoverHandler(next, diagnostic, msg) abort dict$/;"	f
html	conf/vim/.vim/plugged/vim-go/test/parse.go	/^package html$/;"	p
html-enable-leex-support	conf/emacs/.emacs.d/layers/+lang/html/config.el	/^(defvar html-enable-leex-support nil$/;"	f
html-enable-lsp	conf/emacs/.emacs.d/layers/+lang/html/config.el	/^(defvar html-enable-lsp nil$/;"	f
html/init-company-web	conf/emacs/.emacs.d/layers/+lang/html/packages.el	/^(defun html\/init-company-web ()$/;"	f
html/init-counsel-css	conf/emacs/.emacs.d/layers/+lang/html/packages.el	/^(defun html\/init-counsel-css ()$/;"	f
html/init-css-mode	conf/emacs/.emacs.d/layers/+lang/html/packages.el	/^(defun html\/init-css-mode ()$/;"	f
html/init-emmet-mode	conf/emacs/.emacs.d/layers/+lang/html/packages.el	/^(defun html\/init-emmet-mode ()$/;"	f
html/init-haml-mode	conf/emacs/.emacs.d/layers/+lang/html/packages.el	/^(defun html\/init-haml-mode ()$/;"	f
html/init-helm-css-scss	conf/emacs/.emacs.d/layers/+lang/html/packages.el	/^(defun html\/init-helm-css-scss ()$/;"	f
html/init-impatient-mode	conf/emacs/.emacs.d/layers/+lang/html/packages.el	/^(defun html\/init-impatient-mode ()$/;"	f
html/init-less-css-mode	conf/emacs/.emacs.d/layers/+lang/html/packages.el	/^(defun html\/init-less-css-mode ()$/;"	f
html/init-pug-mode	conf/emacs/.emacs.d/layers/+lang/html/packages.el	/^(defun html\/init-pug-mode ()$/;"	f
html/init-sass-mode	conf/emacs/.emacs.d/layers/+lang/html/packages.el	/^(defun html\/init-sass-mode ()$/;"	f
html/init-scss-mode	conf/emacs/.emacs.d/layers/+lang/html/packages.el	/^(defun html\/init-scss-mode ()$/;"	f
html/init-slim-mode	conf/emacs/.emacs.d/layers/+lang/html/packages.el	/^(defun html\/init-slim-mode ()$/;"	f
html/init-tagedit	conf/emacs/.emacs.d/layers/+lang/html/packages.el	/^(defun html\/init-tagedit ()$/;"	f
html/init-web-mode	conf/emacs/.emacs.d/layers/+lang/html/packages.el	/^(defun html\/init-web-mode ()$/;"	f
html/post-init-add-node-modules-path	conf/emacs/.emacs.d/layers/+lang/html/packages.el	/^(defun html\/post-init-add-node-modules-path ()$/;"	f
html/post-init-company	conf/emacs/.emacs.d/layers/+lang/html/packages.el	/^(defun html\/post-init-company ()$/;"	f
html/post-init-evil-matchit	conf/emacs/.emacs.d/layers/+lang/html/packages.el	/^(defun html\/post-init-evil-matchit ()$/;"	f
html/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/html/packages.el	/^(defun html\/post-init-flycheck ()$/;"	f
html/post-init-smartparens	conf/emacs/.emacs.d/layers/+lang/html/packages.el	/^(defun html\/post-init-smartparens ()$/;"	f
html/post-init-yasnippet	conf/emacs/.emacs.d/layers/+lang/html/packages.el	/^(defun html\/post-init-yasnippet ()$/;"	f
html/pre-init-prettier-js	conf/emacs/.emacs.d/layers/+lang/html/packages.el	/^(defun html\/pre-init-prettier-js ()$/;"	f
html/pre-init-web-beautify	conf/emacs/.emacs.d/layers/+lang/html/packages.el	/^(defun html\/pre-init-web-beautify ()$/;"	f
http20	conf/zsh/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function http20() {$/;"	f
httpstatus	conf/zsh/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function httpstatus() {$/;"	f
hunk_op	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:hunk_op(op, ...)$/;"	f
hy/init-hy-mode	conf/emacs/.emacs.d/layers/+lang/hy/packages.el	/^(defun hy\/init-hy-mode ()$/;"	f
hy/init-ob-hy	conf/emacs/.emacs.d/layers/+lang/hy/packages.el	/^(defun hy\/init-ob-hy ())$/;"	f
hy/post-init-company	conf/emacs/.emacs.d/layers/+lang/hy/packages.el	/^(defun hy\/post-init-company ()$/;"	f
hy/post-init-smartparens	conf/emacs/.emacs.d/layers/+lang/hy/packages.el	/^(defun hy\/post-init-smartparens ()$/;"	f
hy/pre-init-evil-cleverparens	conf/emacs/.emacs.d/layers/+lang/hy/packages.el	/^(defun hy\/pre-init-evil-cleverparens ()$/;"	f
hy/pre-init-ob-hy	conf/emacs/.emacs.d/layers/+lang/hy/packages.el	/^(defun hy\/pre-init-ob-hy ()$/;"	f
hy/pre-init-pipenv	conf/emacs/.emacs.d/layers/+lang/hy/packages.el	/^(defun hy\/pre-init-pipenv ()$/;"	f
hy/pre-init-pyenv-mode	conf/emacs/.emacs.d/layers/+lang/hy/packages.el	/^(defun hy\/pre-init-pyenv-mode ()$/;"	f
hy/pre-init-pyvenv	conf/emacs/.emacs.d/layers/+lang/hy/packages.el	/^(defun hy\/pre-init-pyvenv ()$/;"	f
hybrid-evilified-to-hybrid-state	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/hybrid-mode/hybrid-mode.el	/^(defun hybrid-evilified-to-hybrid-state (f &optional arg)$/;"	f
hybrid-insert-to-hybrid-state	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/hybrid-mode/hybrid-mode.el	/^(defun hybrid-insert-to-hybrid-state (f &optional arg)$/;"	f
hybrid-mode	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/hybrid-mode/hybrid-mode.el	/^(define-minor-mode hybrid-mode$/;"	f
hybrid-mode-default-state-backup	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/hybrid-mode/hybrid-mode.el	/^(defvar hybrid-mode-default-state-backup evil-default-state$/;"	f
hybrid-mode//update-states-for-current-buffers	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/hybrid-mode/hybrid-mode.el	/^(defun hybrid-mode\/\/update-states-for-current-buffers (style)$/;"	f
hybrid-style-default-state	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/hybrid-mode/hybrid-mode.el	/^(defcustom hybrid-style-default-state$/;"	f
hybrid-style-enable-evilified-state	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/hybrid-mode/hybrid-mode.el	/^(defcustom hybrid-style-enable-evilified-state$/;"	f
hybrid-style-enable-hjkl-bindings	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/hybrid-mode/hybrid-mode.el	/^(defcustom hybrid-style-enable-hjkl-bindings$/;"	f
hybrid-style-use-evil-search-module	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/hybrid-mode/hybrid-mode.el	/^(defcustom hybrid-style-use-evil-search-module$/;"	f
hybrid-style-visual-feedback	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/config.el	/^(defvar hybrid-style-visual-feedback nil$/;"	f
i	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^      let i += 1$/;"	v
i	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^    let i = 0$/;"	v
iS	conf/vim/.vim/plugged/ultisnips/ftplugin/snippets.vim	/^onoremap <silent><buffer> iS :<C-U>call <SID>UltiSnippetTextObj(1)<CR>$/;"	m
ibuffer-group-buffers-by	conf/emacs/.emacs.d/layers/+emacs/ibuffer/config.el	/^(defvar ibuffer-group-buffers-by 'modes$/;"	f
ibuffer/init-ibuffer	conf/emacs/.emacs.d/layers/+emacs/ibuffer/packages.el	/^(defun ibuffer\/init-ibuffer ()$/;"	f
ibuffer/init-ibuffer-projectile	conf/emacs/.emacs.d/layers/+emacs/ibuffer/packages.el	/^(defun ibuffer\/init-ibuffer-projectile ()$/;"	f
ic	conf/vim/.vim/custom/coc.vim	/^omap ic <Plug>(coc-classobj-i)$/;"	m
ic	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^omap ic <Plug>(coc-classobj-i)$/;"	m
ic	conf/vim/.vim/plugged/vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> ic :<c-u>call go#textobj#Comment('i')<cr>$/;"	m
icon_active	workflows/Ariafred/src/aria.py	/^    icon_active = 'active.png'$/;"	v
icon_complete	workflows/Ariafred/src/aria.py	/^    icon_complete = 'complete.png'$/;"	v
icon_deleted	workflows/Ariafred/src/aria.py	/^    icon_deleted = 'deleted.png'$/;"	v
icon_download	workflows/Ariafred/src/aria.py	/^    icon_download = 'download.png'$/;"	v
icon_error	workflows/Ariafred/src/aria.py	/^    icon_error = 'error.png'$/;"	v
icon_paused	workflows/Ariafred/src/aria.py	/^    icon_paused = 'paused.png'$/;"	v
icon_removed	workflows/Ariafred/src/aria.py	/^    icon_removed = 'removed.png'$/;"	v
icon_stopped	workflows/Ariafred/src/aria.py	/^    icon_stopped = 'stopped.png'$/;"	v
icon_upload	workflows/Ariafred/src/aria.py	/^    icon_upload = 'upload.png'$/;"	v
icon_waiting	workflows/Ariafred/src/aria.py	/^    icon_waiting = 'waiting.png'$/;"	v
iconify-everything	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun iconify-everything ()$/;"	f
iconify/map-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defalias 'iconify\/map-frame 'iconify\/show-frame) ; `...\/map...' is the old name.$/;"	f
iconify/show-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun iconify\/show-frame (&optional all-action)$/;"	f
ido-directory-nonreadable	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(defvar ido-directory-nonreadable)$/;"	f
ido-directory-too-big	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(defvar ido-directory-too-big)$/;"	f
ido-show-confirm-message	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(defvar ido-show-confirm-message)$/;"	f
ido-vertical	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(defgroup ido-vertical nil$/;"	f
ido-vertical-completions	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(defun ido-vertical-completions (name)$/;"	f
ido-vertical-count-active	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(defvar ido-vertical-count-active nil$/;"	f
ido-vertical-decorations	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(defvar ido-vertical-decorations nil$/;"	f
ido-vertical-define-keys	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(defcustom ido-vertical-define-keys nil$/;"	f
ido-vertical-define-keys	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(defun ido-vertical-define-keys () ;; C-n\/p is more intuitive in vertical layout$/;"	f
ido-vertical-disable-if-short	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(defcustom ido-vertical-disable-if-short nil$/;"	f
ido-vertical-disable-line-truncation	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(defun ido-vertical-disable-line-truncation ()$/;"	f
ido-vertical-first-match-face	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(defface ido-vertical-first-match-face$/;"	f
ido-vertical-indicator	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(defcustom ido-vertical-indicator "->"$/;"	f
ido-vertical-match-face	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(defface ido-vertical-match-face$/;"	f
ido-vertical-mode	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(define-minor-mode ido-vertical-mode$/;"	f
ido-vertical-next-match	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(defun ido-vertical-next-match ()$/;"	f
ido-vertical-old-completions	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(defvar ido-vertical-old-completions nil$/;"	f
ido-vertical-old-decorations	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(defvar ido-vertical-old-decorations nil$/;"	f
ido-vertical-only-match-face	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(defface ido-vertical-only-match-face$/;"	f
ido-vertical-or-horizontal-completions	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(defun ido-vertical-or-horizontal-completions (name)$/;"	f
ido-vertical-pad-list	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(defcustom ido-vertical-pad-list t$/;"	f
ido-vertical-padding	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(defcustom ido-vertical-padding " "$/;"	f
ido-vertical-prev-match	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(defun ido-vertical-prev-match ()$/;"	f
ido-vertical-show-count	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(defcustom ido-vertical-show-count nil$/;"	f
ido-vertical-turn-off	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(defun ido-vertical-turn-off ()$/;"	f
ido-vertical-turn-on	conf/emacs/.emacs.d/core/libs/ido-vertical-mode.el	/^(defun ido-vertical-turn-on ()$/;"	f
idris/init-idris-mode	conf/emacs/.emacs.d/layers/+lang/idris/packages.el	/^(defun idris\/init-idris-mode ()$/;"	f
idris/post-init-company	conf/emacs/.emacs.d/layers/+lang/idris/packages.el	/^(defun idris\/post-init-company ()$/;"	f
idris/pre-init-golden-ratio	conf/emacs/.emacs.d/layers/+lang/idris/packages.el	/^(defun idris\/pre-init-golden-ratio ()$/;"	f
idris/pre-init-popwin	conf/emacs/.emacs.d/layers/+lang/idris/packages.el	/^(defun idris\/pre-init-popwin ()$/;"	f
ietf-docs-cache	conf/emacs/.emacs.d/layers/+misc/ietf/config.el	/^(defvar ietf-docs-cache (concat spacemacs-cache-directory "ietf-docs-cache")$/;"	f
ietf-packages	conf/emacs/.emacs.d/layers/+misc/ietf/packages.el	/^(defconst ietf-packages '(ietf-docs$/;"	f
ietf/init-ietf-docs	conf/emacs/.emacs.d/layers/+misc/ietf/packages.el	/^(defun ietf\/init-ietf-docs ()$/;"	f
ietf/init-irfc	conf/emacs/.emacs.d/layers/+misc/ietf/packages.el	/^(defun ietf\/init-irfc ()$/;"	f
ietf/init-ox-rfc	conf/emacs/.emacs.d/layers/+misc/ietf/packages.el	/^(defun ietf\/init-ox-rfc ()$/;"	f
if	conf/vim/.vim/custom/coc.vim	/^omap if <Plug>(coc-funcobj-i)$/;"	m
if	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^omap if <Plug>(coc-funcobj-i)$/;"	m
if	conf/vim/.vim/plugged/vim-go/ftplugin/go.vim	/^  onoremap <buffer> <silent> if :<c-u>call go#textobj#Function('i')<cr>$/;"	m
ignores	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    ignores = ["H"]$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
ignores	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    ignores = ["e", "H"]$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
ignores	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    ignores = ["e"]$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
ignores	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    ignores = []$/;"	v	class:_SelectModeMappings
imenu-list-packages	conf/emacs/.emacs.d/layers/+tools/imenu-list/packages.el	/^(defconst imenu-list-packages$/;"	f
imenu-list/init-imenu-list	conf/emacs/.emacs.d/layers/+tools/imenu-list/packages.el	/^(defun imenu-list\/init-imenu-list ()$/;"	f
imenu-list/pre-init-golden-ratio	conf/emacs/.emacs.d/layers/+tools/imenu-list/packages.el	/^(defun imenu-list\/pre-init-golden-ratio ()$/;"	f
import-js/init-import-js	conf/emacs/.emacs.d/layers/+tools/import-js/packages.el	/^(defun import-js\/init-import-js ()$/;"	f
import_plugin	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def import_plugin(path: str, source: str,$/;"	f
in-nomine-patris-et-filii-et-spiritus-sancti	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/local/holy-mode/holy-mode.el	/^(defun in-nomine-patris-et-filii-et-spiritus-sancti ()$/;"	f
inBodyEndTagFormatting	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func (p *parser) inBodyEndTagFormatting(tagAtom a.Atom) {$/;"	f
inBodyEndTagOther	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func (p *parser) inBodyEndTagOther(tagAtom a.Atom) {$/;"	f
inBodyIM	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func inBodyIM(p *parser) bool {$/;"	f
inCaptionIM	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func inCaptionIM(p *parser) bool {$/;"	f
inCellIM	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func inCellIM(p *parser) bool {$/;"	f
inColumnGroupIM	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func inColumnGroupIM(p *parser) bool {$/;"	f
inForeignContent	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func (p *parser) inForeignContent() bool {$/;"	f
inFramesetIM	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func inFramesetIM(p *parser) bool {$/;"	f
inHeadIM	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func inHeadIM(p *parser) bool {$/;"	f
inRowIM	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func inRowIM(p *parser) bool {$/;"	f
inSelectIM	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func inSelectIM(p *parser) bool {$/;"	f
inSelectInTableIM	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func inSelectInTableIM(p *parser) bool {$/;"	f
inTableBodyIM	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func inTableBodyIM(p *parser) bool {$/;"	f
inTableIM	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func inTableIM(p *parser) bool {$/;"	f
in_hg	conf/zsh/.oh-my-zsh/plugins/mercurial/mercurial.plugin.zsh	/^function in_hg() {$/;"	f
in_hunk_preview_window	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:in_hunk_preview_window()$/;"	f
in_svn	conf/zsh/.oh-my-zsh/plugins/svn/svn.plugin.zsh	/^in_svn() {$/;"	f
incomingCallsHandler	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:incomingCallsHandler(next, msg) abort dict$/;"	f
increment_name	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^def increment_name(_shortname):$/;"	f
indent-rigidly-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(define-key indent-rigidly-map "H" 'indent-rigidly-left-to-tab-stop)$/;"	f
indent-rigidly-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(define-key indent-rigidly-map "L" 'indent-rigidly-right-to-tab-stop)$/;"	f
indent-rigidly-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(define-key indent-rigidly-map "h" 'indent-rigidly-left)$/;"	f
indent-rigidly-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(define-key indent-rigidly-map "l" 'indent-rigidly-right)$/;"	f
indent_to_spaces	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def indent_to_spaces(self, indent):$/;"	m	class:IndentUtil
indexOfElementInScope	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func (p *parser) indexOfElementInScope(s scope, matchTags ...a.Atom) int {$/;"	f
index_to_lnum	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! s:index_to_lnum(index) abort$/;"	f
infer_properties	conf/vim/.vim/autoload/plug.vim	/^function! s:infer_properties(name, repo)$/;"	f
inferior-shell	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun inferior-shell (&optional ARG)$/;"	f
info	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def info(self, msg: str,$/;"	m	class:LoggingMixin
info	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:info(show, msg) abort dict$/;"	f
info	workflows/Ariafred/src/workflow/workflow.py	/^    def info(self):$/;"	m	class:Workflow
infoDefinitionHandler	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:infoDefinitionHandler(next, showstatus, msg) abort dict$/;"	f
infoFromHoverContent	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:infoFromHoverContent(content) abort$/;"	f
init	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^init = False$/;"	v
init	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/timeout/timeout_test.go	/^func init() {$/;"	f
initCustomOpenArgs	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:initCustomOpenArgs() abort$/;"	f
init_channel	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def init_channel(self,$/;"	m	class:DeopleteHandlers
init_clangformat	install.sh	/^init_clangformat() {$/;"	f
init_conf	install.sh	/^init_conf() {$/;"	f
init_context	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def init_context(self) -> None:$/;"	m	class:Deoplete
init_dotfiles	install.sh	/^init_dotfiles() {$/;"	f
init_git	install.sh	/^init_git() {$/;"	f
init_internal_variables	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! s:init_internal_variables() abort$/;"	f
init_systemd	install.sh	/^init_systemd() {$/;"	f
init_vim	install.sh	/^init_vim() {$/;"	f
init_zsh	install.sh	/^init_zsh() {$/;"	f
initialIM	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func initialIM(p *parser) bool {$/;"	f
initial_line	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_BackspaceOneChar
initial_line	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_DeleteOneChar
initial_line	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_InsertOneChar
initial_line	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_InsertOneChar1
initial_line	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_Noop0
initialize	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/spec/terminal_session.rb	/^  def initialize(opts = {})$/;"	f	class:TerminalSession
initialize	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/spec/terminal_session.rb	/^  def initialize(opts = {})$/;"	f	class:TerminalSession
inject_snippet	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:inject_snippet(line)$/;"	f
inotify_fun	sh/rsyncm.sh	/^inotify_fun ()$/;"	f
inputPrompt	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:inputPrompt(action)$/;"	f
insensitive	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^            insensitive=int(opts.insensitive),$/;"	v
insert_favlist	conf/zsh/.oh-my-zsh/tools/theme_chooser.sh	/^function insert_favlist() {$/;"	f
insert_virtual_text	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! s:insert_virtual_text() abort$/;"	f
insert_word	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! s:insert_word(word, finish) abort$/;"	f
insertionMode	conf/vim/.vim/plugged/vim-go/test/parse.go	/^type insertionMode func(*parser) bool$/;"	t
inspect_type	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function s:inspect_type(v) abort$/;"	f
install	conf/vim/.vim/autoload/plug.vim	/^function! s:install(force, names)$/;"	f
install	sh/shadowsocks.sh	/^install(){$/;"	f
install_autocompletion	conf/zsh/.oh-my-zsh/plugins/sigstore/sigstore.plugin.zsh	/^function install_autocompletion {$/;"	f
install_check	sh/shadowsocks-all.sh	/^install_check() {$/;"	f
install_cleanup	sh/kcptun.sh	/^install_cleanup() {$/;"	f
install_cleanup	sh/shadowsocks-all.sh	/^install_cleanup(){$/;"	f
install_cleanup	sh/shadowsocks.sh	/^install_cleanup(){$/;"	f
install_completed_go	sh/shadowsocks-all.sh	/^install_completed_go() {$/;"	f
install_completed_libev	sh/shadowsocks-all.sh	/^install_completed_libev() {$/;"	f
install_completed_python	sh/shadowsocks-all.sh	/^install_completed_python() {$/;"	f
install_completed_r	sh/shadowsocks-all.sh	/^install_completed_r() {$/;"	f
install_dependence	sh/kcptun.sh	/^install_dependence() {$/;"	f
install_dependencies	sh/monitor_rsync_multi.sh	/^install_dependencies() {$/;"	f
install_dependencies	sh/monitor_rsync_multi.sh.orig	/^install_dependencies() {$/;"	f
install_dependencies	sh/shadowsocks-all.sh	/^install_dependencies() {$/;"	f
install_jq	sh/kcptun.sh	/^install_jq() {$/;"	f
install_kcptun	sh/kcptun.sh	/^install_kcptun() {$/;"	f
install_libsodium	sh/shadowsocks-all.sh	/^install_libsodium() {$/;"	f
install_main	sh/shadowsocks-all.sh	/^install_main(){$/;"	f
install_mbedtls	sh/shadowsocks-all.sh	/^install_mbedtls() {$/;"	f
install_notifier	workflows/Ariafred/src/workflow/notify.py	/^def install_notifier():$/;"	f
install_nvm	install.sh	/^install_nvm() {$/;"	f
install_packages	install.sh	/^install_packages() {$/;"	f
install_plugin	conf/tmux/.tmux/plugins/tpm/scripts/install_plugins.sh	/^install_plugin() {$/;"	f
install_plugins	conf/tmux/.tmux/plugins/tpm/scripts/install_plugins.sh	/^install_plugins() {$/;"	f
install_prepare	sh/shadowsocks-all.sh	/^install_prepare() {$/;"	f
install_scripts	install.sh	/^install_scripts() {$/;"	f
install_select	sh/shadowsocks-all.sh	/^install_select() {$/;"	f
install_service	sh/kcptun.sh	/^install_service() {$/;"	f
install_shadowsocks	sh/shadowsocks-all.sh	/^install_shadowsocks(){$/;"	f
install_shadowsocks	sh/shadowsocks.sh	/^install_shadowsocks(){$/;"	f
install_shadowsocks_go	sh/shadowsocks-all.sh	/^install_shadowsocks_go() {$/;"	f
install_shadowsocks_libev	sh/shadowsocks-all.sh	/^install_shadowsocks_libev() {$/;"	f
install_shadowsocks_python	sh/shadowsocks-all.sh	/^install_shadowsocks_python() {$/;"	f
install_shadowsocks_r	sh/shadowsocks-all.sh	/^install_shadowsocks_r() {$/;"	f
install_tmux_plugin_under_test_helper	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^install_tmux_plugin_under_test_helper() {$/;"	f
install_update	workflows/Ariafred/src/workflow/update.py	/^def install_update():$/;"	f
installed_check	sh/kcptun.sh	/^installed_check() {$/;"	f
instantiate	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:SnippetDefinition
instantiate	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:SnipMateSnippetDefinition
instantiate	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/ulti_snips.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:UltiSnipsSnippetDefinition
interface_list	conf/vim/.vim/plugged/vim-go/autoload/go/impl.vim	/^function! s:interface_list(pkg) abort$/;"	f
ip	conf/zsh/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function ip() {$/;"	f
ipython-notebook/commands-by-prefix-alist	conf/emacs/.emacs.d/layers/+tools/ipython-notebook/packages.el	/^(defun ipython-notebook\/commands-by-prefix-alist (commands)$/;"	f
ipython-notebook/count-by-prefix	conf/emacs/.emacs.d/layers/+tools/ipython-notebook/packages.el	/^(defun ipython-notebook\/count-by-prefix (alist)$/;"	f
ipython-notebook/init-ein	conf/emacs/.emacs.d/layers/+tools/ipython-notebook/packages.el	/^(defun ipython-notebook\/init-ein ()$/;"	f
ipython-notebook/max-by-prefix	conf/emacs/.emacs.d/layers/+tools/ipython-notebook/packages.el	/^(defun ipython-notebook\/max-by-prefix (alist)$/;"	f
ipython-notebook/post-init-company	conf/emacs/.emacs.d/layers/+tools/ipython-notebook/packages.el	/^(defun ipython-notebook\/post-init-company ()$/;"	f
ipython-notebook/transient-doc	conf/emacs/.emacs.d/layers/+tools/ipython-notebook/packages.el	/^(defun ipython-notebook\/transient-doc (bindings)$/;"	f
irfc	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defgroup irfc nil$/;"	f
irfc-assoc-mode	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defcustom irfc-assoc-mode nil$/;"	f
irfc-buffer-name-includes-title	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defcustom irfc-buffer-name-includes-title t$/;"	f
irfc-current-head	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-current-head (&optional print)$/;"	f
irfc-current-page	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-current-page ()$/;"	f
irfc-directory	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defcustom irfc-directory "~\/.emacs.d\/RFC\/"$/;"	f
irfc-download	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-download (url)$/;"	f
irfc-download-base-url	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defcustom irfc-download-base-url "https:\/\/www.ietf.org\/rfc\/"$/;"	f
irfc-download-buffer	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defvar irfc-download-buffer nil$/;"	f
irfc-download-callback	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-download-callback (&optional redirect download-buffer-name)$/;"	f
irfc-download-url	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defvar irfc-download-url nil$/;"	f
irfc-fill-tables	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-fill-tables (title-line-point)$/;"	f
irfc-follow	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-follow ()$/;"	f
irfc-front-table-p	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-front-table-p ()$/;"	f
irfc-get-buffer	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-get-buffer ()$/;"	f
irfc-get-rfc-filename	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-get-rfc-filename ()$/;"	f
irfc-get-symbol-non-blank	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-get-symbol-non-blank ()$/;"	f
irfc-have-table-p	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-have-table-p ()$/;"	f
irfc-head-goto	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-head-goto (NAME)$/;"	f
irfc-head-move	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-head-move (&optional reverse)$/;"	f
irfc-head-name-face	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defface irfc-head-name-face$/;"	f
irfc-head-name-overlay	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defvar irfc-head-name-overlay nil$/;"	f
irfc-head-next	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-head-next ()$/;"	f
irfc-head-number-face	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defface irfc-head-number-face$/;"	f
irfc-head-number-goto	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-head-number-goto (NAME)$/;"	f
irfc-head-number-overlay	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defvar irfc-head-number-overlay nil$/;"	f
irfc-head-prev	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-head-prev ()$/;"	f
irfc-heading-names-list	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defvar irfc-heading-names-list nil$/;"	f
irfc-heading-names-table	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defvar irfc-heading-names-table nil$/;"	f
irfc-heading-number-at-point	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-heading-number-at-point ()$/;"	f
irfc-heading-numbers-list	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defvar irfc-heading-numbers-list nil$/;"	f
irfc-heading-numbers-table	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defvar irfc-heading-numbers-table nil$/;"	f
irfc-hide-overlay	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defvar irfc-hide-overlay nil$/;"	f
irfc-highlight-references	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defcustom irfc-highlight-references t$/;"	f
irfc-highlight-requirement-keywords	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defcustom irfc-highlight-requirement-keywords t$/;"	f
irfc-in-table-p	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-in-table-p ()$/;"	f
irfc-last-visit-number	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defvar irfc-last-visit-number nil$/;"	f
irfc-mode	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(define-derived-mode irfc-mode text-mode "Irfc"$/;"	f
irfc-mode-map	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defvar irfc-mode-map$/;"	f
irfc-open	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-open (rfc-file-name)$/;"	f
irfc-overlay-add	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-overlay-add (begin end category)$/;"	f
irfc-overlay-hide-region	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-overlay-hide-region (start end)$/;"	f
irfc-overlay-put-alist	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-overlay-put-alist (symbol alist)$/;"	f
irfc-overlay-remove-all	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-overlay-remove-all ()$/;"	f
irfc-page-first	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-page-first ()$/;"	f
irfc-page-goto	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-page-goto (number)$/;"	f
irfc-page-last	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-page-last ()$/;"	f
irfc-page-next	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-page-next (arg)$/;"	f
irfc-page-number-overlay	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defvar irfc-page-number-overlay nil$/;"	f
irfc-page-prev	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-page-prev (arg)$/;"	f
irfc-page-table	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-page-table ()$/;"	f
irfc-quit	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-quit ()$/;"	f
irfc-read-heading-name	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-read-heading-name ()$/;"	f
irfc-read-heading-number	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-read-heading-number ()$/;"	f
irfc-read-reference	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-read-reference ()$/;"	f
irfc-reference-at-point	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-reference-at-point ()$/;"	f
irfc-reference-face	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defface irfc-reference-face$/;"	f
irfc-reference-format-regex	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defvar irfc-reference-format-regex "\\\\[%d]"$/;"	f
irfc-reference-goto	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-reference-goto (&optional number)$/;"	f
irfc-reference-overlay	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defvar irfc-reference-overlay nil$/;"	f
irfc-reference-regex	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defvar irfc-reference-regex "\\\\[[0-9]+]"$/;"	f
irfc-rename-buffer	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-rename-buffer (title-line-point)$/;"	f
irfc-render-buffer	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-render-buffer ()$/;"	f
irfc-render-buffer-hide-blank-line	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-render-buffer-hide-blank-line (top-point)$/;"	f
irfc-render-buffer-hide-whitespace-at-start	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-render-buffer-hide-whitespace-at-start ()$/;"	f
irfc-render-buffer-overlay-head	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-render-buffer-overlay-head (title-line-point)$/;"	f
irfc-render-buffer-overlay-page-number	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-render-buffer-overlay-page-number ()$/;"	f
irfc-render-buffer-overlay-reference	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-render-buffer-overlay-reference (top-point)$/;"	f
irfc-render-buffer-overlay-requirement-keyword	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-render-buffer-overlay-requirement-keyword (top-point)$/;"	f
irfc-render-buffer-overlay-rfc-link	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-render-buffer-overlay-rfc-link (top-point)$/;"	f
irfc-render-buffer-overlay-rfc-number	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-render-buffer-overlay-rfc-number (top-point title-line-point)$/;"	f
irfc-render-buffer-overlay-std-number	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-render-buffer-overlay-std-number (top-point title-line-point)$/;"	f
irfc-render-buffer-overlay-table-item	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-render-buffer-overlay-table-item (top-point)$/;"	f
irfc-render-buffer-overlay-title	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-render-buffer-overlay-title (title-line-point)$/;"	f
irfc-render-p	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defvar irfc-render-p t$/;"	f
irfc-render-toggle	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-render-toggle ()$/;"	f
irfc-render-turn-off	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-render-turn-off ()$/;"	f
irfc-render-turn-on	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-render-turn-on ()$/;"	f
irfc-requirement-keyword-face	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defface irfc-requirement-keyword-face$/;"	f
irfc-requirement-keyword-overlay	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defvar irfc-requirement-keyword-overlay nil$/;"	f
irfc-requirement-keywords	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defcustom irfc-requirement-keywords '("MUST" "MUST NOT"$/;"	f
irfc-retrieve-decode	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-retrieve-decode (retrieve-buffer-name coding)$/;"	f
irfc-rfc-link-face	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defface irfc-rfc-link-face$/;"	f
irfc-rfc-link-next	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-rfc-link-next ()$/;"	f
irfc-rfc-link-overlay	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defvar irfc-rfc-link-overlay nil$/;"	f
irfc-rfc-link-prev	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-rfc-link-prev ()$/;"	f
irfc-rfc-number-face	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defface irfc-rfc-number-face$/;"	f
irfc-rfc-number-overlay	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defvar irfc-rfc-number-overlay nil$/;"	f
irfc-scroll-down-one-line	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-scroll-down-one-line ()$/;"	f
irfc-scroll-up-one-line	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-scroll-up-one-line ()$/;"	f
irfc-std-number-face	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defface irfc-std-number-face$/;"	f
irfc-std-number-overlay	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defvar irfc-std-number-overlay nil$/;"	f
irfc-stock-section-names	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defvar irfc-stock-section-names$/;"	f
irfc-table-item-face	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defface irfc-table-item-face$/;"	f
irfc-table-item-overlay	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defvar irfc-table-item-overlay nil$/;"	f
irfc-table-jump	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-table-jump ()$/;"	f
irfc-table-regex	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defvar irfc-table-regex "^[ ]+\\\\([A-Z]?[0-9\\\\.]*\\\\)[ ]+\\\\([^\\\\.\\n]+\\\\)[\\\\. ]+\\\\([0-9]+\\\\)$"$/;"	f
irfc-title-face	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defface irfc-title-face$/;"	f
irfc-title-overlay	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defvar irfc-title-overlay nil$/;"	f
irfc-title-rfc-link-p	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-title-rfc-link-p ()$/;"	f
irfc-total-pages	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defvar irfc-total-pages 0$/;"	f
irfc-unload-function	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-unload-function ()$/;"	f
irfc-visit	conf/emacs/.emacs.d/layers/+misc/ietf/local/irfc/irfc.el	/^(defun irfc-visit (&optional rfc-number)$/;"	f
isReady	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:isReady()$/;"	f
is_64bit	sh/shadowsocks-all.sh	/^is_64bit() {$/;"	f
is_added	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_added(from_count, to_count) abort$/;"	f
is_blocking	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^    def is_blocking():$/;"	m	class:RemotePDB
is_buffer_changed_outside	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def is_buffer_changed_outside(self):$/;"	m	class:VimBufferProxy
is_complete_edit	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/diff.py	/^def is_complete_edit(initial_line, original, wanted, cmds):$/;"	f
is_debug_enabled	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    is_debug_enabled = False$/;"	v	class:LoggingMixin
is_empty_dir	sh/clean_calibre_directories.sh	/^is_empty_dir() {$/;"	f
is_empty_region	conf/vim/.vim/plugged/vim-clang-format/autoload/operator/clang_format.vim	/^function! s:is_empty_region(begin, end) abort$/;"	f
is_enable	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^    def is_enable():$/;"	m	class:RemotePDB
is_exiting	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:is_exiting() abort$/;"	f
is_file_buffer	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:is_file_buffer(bufnr) abort$/;"	f
is_floating	conf/vim/.vim/plugged/ultisnips/autoload/UltiSnips.vim	/^function! s:is_floating(winId) abort$/;"	f
is_focused	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def is_focused(self, title=None):$/;"	m	class:VimInterfaceWindows
is_json	conf/zsh/.oh-my-zsh/plugins/jsontools/jsontools.plugin.zsh	/^    function is_json() {$/;"	f
is_killed	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^    def is_killed(self):$/;"	m	class:TabStop
is_local_plug	conf/vim/.vim/autoload/plug.vim	/^  function! s:is_local_plug(repo)$/;"	f
is_managed	conf/vim/.vim/autoload/plug.vim	/^function! s:is_managed(name)$/;"	f
is_mkdCode	conf/vim/.vim/plugged/vim-markdown/after/ftplugin/markdown.vim	/^function! s:is_mkdCode(lnum)$/;"	f
is_modified	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified(from_count, to_count) abort$/;"	f
is_modified_and_added	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified_and_added(from_count, to_count) abort$/;"	f
is_modified_and_removed	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified_and_removed(from_count, to_count) abort$/;"	f
is_number	sh/kcptun.sh	/^is_number() {$/;"	f
is_osx	conf/tmux/.tmux/plugins/tmux-sensible/sensible.tmux	/^is_osx() {$/;"	f
is_plugin	conf/zsh/.oh-my-zsh/oh-my-zsh.sh	/^is_plugin() {$/;"	f
is_popup	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:is_popup(winid) abort$/;"	f
is_powershell	conf/vim/.vim/autoload/plug.vim	/^function! s:is_powershell(shell)$/;"	f
is_preview_window_open	conf/vim/.vim/autoload/plug.vim	/^function! s:is_preview_window_open()$/;"	f
is_process_running	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^def is_process_running(pid):$/;"	f
is_removed	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_removed(from_count, to_count) abort$/;"	f
is_running	workflows/Ariafred/src/workflow/background.py	/^def is_running(name):$/;"	f
is_set	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def is_set(self):$/;"	m	class:_SnippetUtilCursor
is_skip	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:is_skip(event) abort$/;"	f
is_skip_prev_text	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:is_skip_prev_text(event) abort$/;"	f
is_skip_text	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:is_skip_text(event) abort$/;"	f
is_theme	conf/zsh/.oh-my-zsh/oh-my-zsh.sh	/^is_theme() {$/;"	f
is_tty	conf/zsh/.oh-my-zsh/tools/changelog.sh	/^  is_tty() {$/;"	f
is_tty	conf/zsh/.oh-my-zsh/tools/install.sh	/^  is_tty() {$/;"	f
is_tty	conf/zsh/.oh-my-zsh/tools/upgrade.sh	/^  is_tty() {$/;"	f
is_update_available	conf/zsh/.oh-my-zsh/tools/check_for_upgrade.sh	/^function is_update_available() {$/;"	f
is_updated	conf/vim/.vim/autoload/plug.vim	/^function! s:is_updated(dir)$/;"	f
isabsolute	conf/vim/.vim/autoload/plug.vim	/^function! s:isabsolute(dir) abort$/;"	f
isascii	workflows/Ariafred/src/workflow/workflow.py	/^def isascii(text):$/;"	f
isearch-mode-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(define-key isearch-mode-map (kbd "<escape>") 'isearch-cancel)$/;"	f
isearch-mode-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(define-key isearch-mode-map (kbd "M-S-<return>") 'isearch-repeat-backward)$/;"	f
isearch-mode-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(define-key isearch-mode-map (kbd "S-<return>") 'isearch-repeat-forward)$/;"	f
issuebody	conf/vim/.vim/plugged/vim-go/autoload/go/issue.vim	/^function! s:issuebody() abort$/;"	f
item_class	workflows/Ariafred/src/workflow/workflow.py	/^    item_class = Item$/;"	v	class:Workflow
item_class	workflows/Ariafred/src/workflow/workflow3.py	/^    item_class = Item3$/;"	v	class:Workflow3
items	workflows/Ariafred/src/workflow/web.py	/^    def items(self):$/;"	m	class:CaseInsensitiveDictionary
iter_content	workflows/Ariafred/src/workflow/web.py	/^    def iter_content(self, chunk_size=4096, decode_unicode=False):$/;"	m	class:Response
iteritems	workflows/Ariafred/src/workflow/web.py	/^    def iteritems(self):$/;"	m	class:CaseInsensitiveDictionary
iterkeys	workflows/Ariafred/src/workflow/web.py	/^    def iterkeys(self):$/;"	m	class:CaseInsensitiveDictionary
iterm2_after_cmd_executes	conf/zsh/.oh-my-zsh/plugins/iterm2/iterm2_shell_integration.zsh	/^    iterm2_after_cmd_executes() {$/;"	f
iterm2_before_cmd_executes	conf/zsh/.oh-my-zsh/plugins/iterm2/iterm2_shell_integration.zsh	/^    iterm2_before_cmd_executes() {$/;"	f
iterm2_decorate_prompt	conf/zsh/.oh-my-zsh/plugins/iterm2/iterm2_shell_integration.zsh	/^    iterm2_decorate_prompt() {$/;"	f
iterm2_precmd	conf/zsh/.oh-my-zsh/plugins/iterm2/iterm2_shell_integration.zsh	/^    iterm2_precmd() {$/;"	f
iterm2_preexec	conf/zsh/.oh-my-zsh/plugins/iterm2/iterm2_shell_integration.zsh	/^    iterm2_preexec() {$/;"	f
iterm2_print_state_data	conf/zsh/.oh-my-zsh/plugins/iterm2/iterm2_shell_integration.zsh	/^    iterm2_print_state_data() {$/;"	f
iterm2_print_user_vars	conf/zsh/.oh-my-zsh/plugins/iterm2/iterm2_shell_integration.zsh	/^      iterm2_print_user_vars() {$/;"	f
iterm2_profile	conf/zsh/.oh-my-zsh/plugins/iterm2/iterm2.plugin.zsh	/^  function iterm2_profile() {$/;"	f
iterm2_prompt_end	conf/zsh/.oh-my-zsh/plugins/iterm2/iterm2_shell_integration.zsh	/^    iterm2_prompt_end() {$/;"	f
iterm2_prompt_mark	conf/zsh/.oh-my-zsh/plugins/iterm2/iterm2_shell_integration.zsh	/^    iterm2_prompt_mark() {$/;"	f
iterm2_set_user_var	conf/zsh/.oh-my-zsh/plugins/iterm2/iterm2_shell_integration.zsh	/^    iterm2_set_user_var() {$/;"	f
iterm2_tab_color	conf/zsh/.oh-my-zsh/plugins/iterm2/iterm2.plugin.zsh	/^  function iterm2_tab_color() {$/;"	f
iterm2_tab_color_reset	conf/zsh/.oh-my-zsh/plugins/iterm2/iterm2.plugin.zsh	/^  function iterm2_tab_color_reset() {$/;"	f
iterm_terminal	conf/tmux/.tmux/plugins/tmux-sensible/sensible.tmux	/^iterm_terminal() {$/;"	f
itervalues	workflows/Ariafred/src/workflow/web.py	/^    def itervalues(self):$/;"	m	class:CaseInsensitiveDictionary
ivy-enable-advanced-buffer-information	conf/emacs/.emacs.d/layers/+completion/ivy/config.el	/^(defvar ivy-enable-advanced-buffer-information nil$/;"	f
ivy-enable-icons	conf/emacs/.emacs.d/layers/+completion/ivy/config.el	/^(defvar ivy-enable-icons nil$/;"	f
ivy-ret-visits-directory	conf/emacs/.emacs.d/layers/+completion/ivy/config.el	/^(defvar ivy-ret-visits-directory nil$/;"	f
ivy-search-from-action	conf/emacs/.emacs.d/layers/+tools/fasd/funcs.el	/^(defun ivy-search-from-action (x)$/;"	f
ivy-spacemacs--initialized	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defvar ivy-spacemacs--initialized nil$/;"	f
ivy-spacemacs-help	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help ()$/;"	f
ivy-spacemacs-help-docs	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help-docs (arg)$/;"	f
ivy-spacemacs-help-dotspacemacs	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help-dotspacemacs ()$/;"	f
ivy-spacemacs-help-faq	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help-faq ()$/;"	f
ivy-spacemacs-help-layers	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help-layers ()$/;"	f
ivy-spacemacs-help-packages	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defalias 'ivy-spacemacs-help-packages 'ivy-spacemacs-help)$/;"	f
ivy-spacemacs-help-toggles	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help-toggles ()$/;"	f
ivy-spacemacs-help//documentation-action-open-file	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/documentation-action-open-file (candidate)$/;"	f
ivy-spacemacs-help//documentation-candidates	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/documentation-candidates ()$/;"	f
ivy-spacemacs-help//dotspacemacs-candidates	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/dotspacemacs-candidates ()$/;"	f
ivy-spacemacs-help//go-to-dotfile-variable	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/go-to-dotfile-variable (candidate)$/;"	f
ivy-spacemacs-help//help-action	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/help-action (args)$/;"	f
ivy-spacemacs-help//help-action-add-layer	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/help-action-add-layer (args)$/;"	f
ivy-spacemacs-help//help-action-describe-package	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/help-action-describe-package (args)$/;"	f
ivy-spacemacs-help//help-action-open-config	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/help-action-open-config (args)$/;"	f
ivy-spacemacs-help//help-action-open-dired	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/help-action-open-dired (args)$/;"	f
ivy-spacemacs-help//help-action-open-packages	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/help-action-open-packages (args)$/;"	f
ivy-spacemacs-help//help-action-open-readme	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/help-action-open-readme (args)$/;"	f
ivy-spacemacs-help//help-action-open-readme-edit	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/help-action-open-readme-edit (args)$/;"	f
ivy-spacemacs-help//help-candidates	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/help-candidates ()$/;"	f
ivy-spacemacs-help//init	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/init (&optional arg)$/;"	f
ivy-spacemacs-help//layer-action-add-layer	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/layer-action-add-layer (candidate)$/;"	f
ivy-spacemacs-help//layer-action-get-directory	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/layer-action-get-directory (candidate)$/;"	f
ivy-spacemacs-help//layer-action-open-config	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/layer-action-open-config (candidate)$/;"	f
ivy-spacemacs-help//layer-action-open-dired	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/layer-action-open-dired (candidate)$/;"	f
ivy-spacemacs-help//layer-action-open-file	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/layer-action-open-file (file candidate &optional edit)$/;"	f
ivy-spacemacs-help//layer-action-open-funcs	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/layer-action-open-funcs (candidate)$/;"	f
ivy-spacemacs-help//layer-action-open-layers	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/layer-action-open-layers (candidate)$/;"	f
ivy-spacemacs-help//layer-action-open-packages	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/layer-action-open-packages (candidate)$/;"	f
ivy-spacemacs-help//layer-action-open-readme	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/layer-action-open-readme (candidate)$/;"	f
ivy-spacemacs-help//layer-action-open-readme-edit	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/layer-action-open-readme-edit (candidate)$/;"	f
ivy-spacemacs-help//layer-candidates	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/layer-candidates ()$/;"	f
ivy-spacemacs-help//toggle	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/toggle (candidate)$/;"	f
ivy-spacemacs-help//toggle-candidates	conf/emacs/.emacs.d/layers/+completion/ivy/local/ivy-spacemacs-help/ivy-spacemacs-help.el	/^(defun ivy-spacemacs-help\/\/toggle-candidates ()$/;"	f
ivy/init-all-the-icons-ivy-rich	conf/emacs/.emacs.d/layers/+completion/ivy/packages.el	/^(defun ivy\/init-all-the-icons-ivy-rich ()$/;"	f
ivy/init-counsel	conf/emacs/.emacs.d/layers/+completion/ivy/packages.el	/^(defun ivy\/init-counsel ()$/;"	f
ivy/init-counsel-projectile	conf/emacs/.emacs.d/layers/+completion/ivy/packages.el	/^(defun ivy\/init-counsel-projectile ()$/;"	f
ivy/init-flx	conf/emacs/.emacs.d/layers/+completion/ivy/packages.el	/^(defun ivy\/init-flx ()$/;"	f
ivy/init-helm-make	conf/emacs/.emacs.d/layers/+completion/ivy/packages.el	/^(defun ivy\/init-helm-make ()$/;"	f
ivy/init-ivy	conf/emacs/.emacs.d/layers/+completion/ivy/packages.el	/^(defun ivy\/init-ivy ()$/;"	f
ivy/init-ivy-avy	conf/emacs/.emacs.d/layers/+completion/ivy/packages.el	/^(defun ivy\/init-ivy-avy ()$/;"	f
ivy/init-ivy-hydra	conf/emacs/.emacs.d/layers/+completion/ivy/packages.el	/^(defun ivy\/init-ivy-hydra ()$/;"	f
ivy/init-ivy-rich	conf/emacs/.emacs.d/layers/+completion/ivy/packages.el	/^(defun ivy\/init-ivy-rich ()$/;"	f
ivy/init-ivy-spacemacs-help	conf/emacs/.emacs.d/layers/+completion/ivy/packages.el	/^(defun ivy\/init-ivy-spacemacs-help ()$/;"	f
ivy/init-ivy-xref	conf/emacs/.emacs.d/layers/+completion/ivy/packages.el	/^(defun ivy\/init-ivy-xref ()$/;"	f
ivy/init-smex	conf/emacs/.emacs.d/layers/+completion/ivy/packages.el	/^(defun ivy\/init-smex ()$/;"	f
ivy/init-swiper	conf/emacs/.emacs.d/layers/+completion/ivy/packages.el	/^(defun ivy\/init-swiper ()$/;"	f
ivy/post-init-bookmark	conf/emacs/.emacs.d/layers/+completion/ivy/packages.el	/^(defun ivy\/post-init-bookmark ()$/;"	f
ivy/post-init-evil	conf/emacs/.emacs.d/layers/+completion/ivy/packages.el	/^(defun ivy\/post-init-evil ()$/;"	f
ivy/post-init-imenu	conf/emacs/.emacs.d/layers/+completion/ivy/packages.el	/^(defun ivy\/post-init-imenu ()$/;"	f
ivy/post-init-org	conf/emacs/.emacs.d/layers/+completion/ivy/packages.el	/^(defun ivy\/post-init-org ()$/;"	f
ivy/post-init-persp-mode	conf/emacs/.emacs.d/layers/+completion/ivy/packages.el	/^(defun ivy\/post-init-persp-mode ()$/;"	f
ivy/post-init-projectile	conf/emacs/.emacs.d/layers/+completion/ivy/packages.el	/^(defun ivy\/post-init-projectile ()$/;"	f
ivy/post-init-recentf	conf/emacs/.emacs.d/layers/+completion/ivy/packages.el	/^(defun ivy\/post-init-recentf ()$/;"	f
ivy/post-init-wgrep	conf/emacs/.emacs.d/layers/+completion/ivy/packages.el	/^(defun ivy\/post-init-wgrep ()$/;"	f
ivy/pre-init-auto-highlight-symbol	conf/emacs/.emacs.d/layers/+completion/ivy/packages.el	/^(defun ivy\/pre-init-auto-highlight-symbol ()$/;"	f
ivy/pre-init-persp-mode	conf/emacs/.emacs.d/layers/+completion/ivy/packages.el	/^(defun ivy\/pre-init-persp-mode ()$/;"	f
j	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^j = json.load(gemoji_db)$/;"	v
jLL	conf/vim/.vim/plugged/vim-operator-user/t/example-a-basic.vim	/^    normal jLL$/;"	m
jabber-packages	conf/emacs/.emacs.d/layers/+chat/jabber/packages.el	/^(defconst jabber-packages$/;"	f
jabber/init-jabber	conf/emacs/.emacs.d/layers/+chat/jabber/packages.el	/^(defun jabber\/init-jabber ()$/;"	f
jabber/post-init-window-purpose	conf/emacs/.emacs.d/layers/+chat/jabber/packages.el	/^(defun jabber\/post-init-window-purpose ()$/;"	f
jaddr	conf/zsh/.oh-my-zsh/plugins/juju/juju.plugin.zsh	/^jaddr() {$/;"	f
japanese/init-avy-migemo	conf/emacs/.emacs.d/layers/+intl/japanese/packages.el	/^(defun japanese\/init-avy-migemo ()$/;"	f
japanese/init-ddskk	conf/emacs/.emacs.d/layers/+intl/japanese/packages.el	/^(defun japanese\/init-ddskk ()$/;"	f
japanese/init-evil-tutor-ja	conf/emacs/.emacs.d/layers/+intl/japanese/packages.el	/^(defun japanese\/init-evil-tutor-ja ()$/;"	f
japanese/init-japanese-holidays	conf/emacs/.emacs.d/layers/+intl/japanese/packages.el	/^(defun japanese\/init-japanese-holidays ()$/;"	f
japanese/init-migemo	conf/emacs/.emacs.d/layers/+intl/japanese/packages.el	/^(defun japanese\/init-migemo ()$/;"	f
japanese/init-pangu-spacing	conf/emacs/.emacs.d/layers/+intl/japanese/packages.el	/^(defun japanese\/init-pangu-spacing ()$/;"	f
japanese/post-init-org	conf/emacs/.emacs.d/layers/+intl/japanese/packages.el	/^(defun japanese\/post-init-org ()$/;"	f
java-backend	conf/emacs/.emacs.d/layers/+lang/java/config.el	/^(defvar java-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'meghanada)$/;"	f
java-packages	conf/emacs/.emacs.d/layers/+lang/java/packages.el	/^(defconst java-packages$/;"	f
java/init-java-mode	conf/emacs/.emacs.d/layers/+lang/java/packages.el	/^(defun java\/init-java-mode ()$/;"	f
java/init-lsp-java	conf/emacs/.emacs.d/layers/+lang/java/packages.el	/^(defun java\/init-lsp-java ()$/;"	f
java/init-maven-test-mode	conf/emacs/.emacs.d/layers/+lang/java/packages.el	/^(defun java\/init-maven-test-mode ()$/;"	f
java/init-meghanada	conf/emacs/.emacs.d/layers/+lang/java/packages.el	/^(defun java\/init-meghanada ()$/;"	f
java/init-mvn	conf/emacs/.emacs.d/layers/+lang/java/packages.el	/^(defun java\/init-mvn ()$/;"	f
java/post-init-company	conf/emacs/.emacs.d/layers/+lang/java/packages.el	/^(defun java\/post-init-company ()$/;"	f
java/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/java/packages.el	/^(defun java\/post-init-counsel-gtags nil)$/;"	f
java/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/java/packages.el	/^(defun java\/post-init-flycheck ()$/;"	f
java/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/java/packages.el	/^(defun java\/post-init-ggtags ()$/;"	f
java/post-init-smartparens	conf/emacs/.emacs.d/layers/+lang/java/packages.el	/^(defun java\/post-init-smartparens ()$/;"	f
java/pre-init-dap-mode	conf/emacs/.emacs.d/layers/+lang/java/packages.el	/^(defun java\/pre-init-dap-mode ()$/;"	f
java/pre-init-org	conf/emacs/.emacs.d/layers/+lang/java/packages.el	/^(defun java\/pre-init-org ()$/;"	f
javascript-backend	conf/emacs/.emacs.d/layers/+lang/javascript/config.el	/^(defvar javascript-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'tern)$/;"	f
javascript-fmt-on-save	conf/emacs/.emacs.d/layers/+lang/javascript/config.el	/^(defvar javascript-fmt-on-save nil$/;"	f
javascript-fmt-tool	conf/emacs/.emacs.d/layers/+lang/javascript/config.el	/^(defvar javascript-fmt-tool 'web-beautify$/;"	f
javascript-import-tool	conf/emacs/.emacs.d/layers/+lang/javascript/config.el	/^(defvar javascript-import-tool nil$/;"	f
javascript-lsp-linter	conf/emacs/.emacs.d/layers/+lang/javascript/config.el	/^(defvar javascript-lsp-linter t$/;"	f
javascript-packages	conf/emacs/.emacs.d/layers/+lang/javascript/packages.el	/^(defconst javascript-packages$/;"	f
javascript-repl	conf/emacs/.emacs.d/layers/+lang/javascript/config.el	/^(defvar javascript-repl 'skewer$/;"	f
javascript/init-js-doc	conf/emacs/.emacs.d/layers/+lang/javascript/packages.el	/^(defun javascript\/init-js-doc ()$/;"	f
javascript/init-js2-mode	conf/emacs/.emacs.d/layers/+lang/javascript/packages.el	/^(defun javascript\/init-js2-mode ()$/;"	f
javascript/init-js2-refactor	conf/emacs/.emacs.d/layers/+lang/javascript/packages.el	/^(defun javascript\/init-js2-refactor ()$/;"	f
javascript/init-livid-mode	conf/emacs/.emacs.d/layers/+lang/javascript/packages.el	/^(defun javascript\/init-livid-mode ()$/;"	f
javascript/init-nodejs-repl	conf/emacs/.emacs.d/layers/+lang/javascript/packages.el	/^(defun javascript\/init-nodejs-repl ()$/;"	f
javascript/init-npm-mode	conf/emacs/.emacs.d/layers/+lang/javascript/packages.el	/^(defun javascript\/init-npm-mode ()$/;"	f
javascript/init-skewer-mode	conf/emacs/.emacs.d/layers/+lang/javascript/packages.el	/^(defun javascript\/init-skewer-mode ()$/;"	f
javascript/post-init-add-node-modules-path	conf/emacs/.emacs.d/layers/+lang/javascript/packages.el	/^(defun javascript\/post-init-add-node-modules-path ()$/;"	f
javascript/post-init-company	conf/emacs/.emacs.d/layers/+lang/javascript/packages.el	/^(defun javascript\/post-init-company ()$/;"	f
javascript/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/javascript/packages.el	/^(defun javascript\/post-init-counsel-gtags nil)$/;"	f
javascript/post-init-evil-matchit	conf/emacs/.emacs.d/layers/+lang/javascript/packages.el	/^(defun javascript\/post-init-evil-matchit ()$/;"	f
javascript/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/javascript/packages.el	/^(defun javascript\/post-init-flycheck ()$/;"	f
javascript/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/javascript/packages.el	/^(defun javascript\/post-init-ggtags ()$/;"	f
javascript/post-init-imenu	conf/emacs/.emacs.d/layers/+lang/javascript/packages.el	/^(defun javascript\/post-init-imenu ()$/;"	f
javascript/post-init-impatient-mode	conf/emacs/.emacs.d/layers/+lang/javascript/packages.el	/^(defun javascript\/post-init-impatient-mode ()$/;"	f
javascript/post-init-tern	conf/emacs/.emacs.d/layers/+lang/javascript/packages.el	/^(defun javascript\/post-init-tern ()$/;"	f
javascript/pre-init-dap-mode	conf/emacs/.emacs.d/layers/+lang/javascript/packages.el	/^(defun javascript\/pre-init-dap-mode ()$/;"	f
javascript/pre-init-import-js	conf/emacs/.emacs.d/layers/+lang/javascript/packages.el	/^(defun javascript\/pre-init-import-js ()$/;"	f
javascript/pre-init-org	conf/emacs/.emacs.d/layers/+lang/javascript/packages.el	/^(defun javascript\/pre-init-org ()$/;"	f
javascript/pre-init-prettier-js	conf/emacs/.emacs.d/layers/+lang/javascript/packages.el	/^(defun javascript\/pre-init-prettier-js ()$/;"	f
javascript/pre-init-web-beautify	conf/emacs/.emacs.d/layers/+lang/javascript/packages.el	/^(defun javascript\/pre-init-web-beautify ()$/;"	f
jclean	conf/zsh/.oh-my-zsh/plugins/juju/juju.plugin.zsh	/^jclean() {$/;"	f
jcontroller	conf/zsh/.oh-my-zsh/plugins/juju/juju.plugin.zsh	/^jcontroller() {$/;"	f
jenv_prompt_info	conf/zsh/.oh-my-zsh/plugins/jenv/jenv.plugin.zsh	/^    function jenv_prompt_info() {$/;"	f
jira	conf/zsh/.oh-my-zsh/plugins/jira/jira.plugin.zsh	/^function jira() {$/;"	f
jmodel	conf/zsh/.oh-my-zsh/plugins/juju/juju.plugin.zsh	/^jmodel() {$/;"	f
job	conf/vim/.vim/plugged/coc.nvim/autoload/coc/terminal.vim	/^    let job = term_getjob(bufnr)$/;"	v
job_abort	conf/vim/.vim/autoload/plug.vim	/^function! s:job_abort(cancel)$/;"	f
job_cb	conf/vim/.vim/autoload/plug.vim	/^function! s:job_cb(fn, job, ch, data)$/;"	f
job_exit_cb	conf/vim/.vim/autoload/plug.vim	/^function! s:job_exit_cb(self, data) abort$/;"	f
job_id	conf/vim/.vim/plugged/coc.nvim/autoload/coc/terminal.vim	/^    let job_id = termopen(a:cmd, {$/;"	v
job_id	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:job_id(job)$/;"	f
job_out_cb	conf/vim/.vim/autoload/plug.vim	/^function! s:job_out_cb(self, data) abort$/;"	f
jr-font-lock-extra-types	conf/emacs/.emacs.d/layers/+lang/jr/local/jr-mode/jr-mode.el	/^(defcustom jr-font-lock-extra-types nil$/;"	f
jr-font-lock-keywords	conf/emacs/.emacs.d/layers/+lang/jr/local/jr-mode/jr-mode.el	/^(defvar jr-font-lock-keywords jr-font-lock-keywords-3$/;"	f
jr-font-lock-keywords-1	conf/emacs/.emacs.d/layers/+lang/jr/local/jr-mode/jr-mode.el	/^(defconst jr-font-lock-keywords-1 (c-lang-const c-matchers-1 jr)$/;"	f
jr-font-lock-keywords-2	conf/emacs/.emacs.d/layers/+lang/jr/local/jr-mode/jr-mode.el	/^(defconst jr-font-lock-keywords-2 (c-lang-const c-matchers-2 jr)$/;"	f
jr-font-lock-keywords-3	conf/emacs/.emacs.d/layers/+lang/jr/local/jr-mode/jr-mode.el	/^(defconst jr-font-lock-keywords-3 (c-lang-const c-matchers-3 jr)$/;"	f
jr-mode	conf/emacs/.emacs.d/layers/+lang/jr/local/jr-mode/jr-mode.el	/^(defun jr-mode ()$/;"	f
jr-mode-abbrev-table	conf/emacs/.emacs.d/layers/+lang/jr/local/jr-mode/jr-mode.el	/^(defvar jr-mode-abbrev-table nil$/;"	f
jr-mode-map	conf/emacs/.emacs.d/layers/+lang/jr/local/jr-mode/jr-mode.el	/^(defvar jr-mode-map (let ((map (c-make-inherited-keymap)))$/;"	f
jr-mode-syntax-table	conf/emacs/.emacs.d/layers/+lang/jr/local/jr-mode/jr-mode.el	/^(defvar jr-mode-syntax-table nil$/;"	f
jr-packages	conf/emacs/.emacs.d/layers/+lang/jr/packages.el	/^(defconst jr-packages$/;"	f
jr/init-jr-mode	conf/emacs/.emacs.d/layers/+lang/jr/packages.el	/^(defun jr\/init-jr-mode ()$/;"	f
jreld	conf/zsh/.oh-my-zsh/plugins/juju/juju.plugin.zsh	/^jreld() {$/;"	f
json	workflows/Ariafred/src/workflow/web.py	/^    def json(self):$/;"	m	class:Response
json-backend	conf/emacs/.emacs.d/layers/+lang/json/config.el	/^(defvar json-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'company-json)$/;"	f
json-fmt-on-save	conf/emacs/.emacs.d/layers/+lang/json/config.el	/^(defvar json-fmt-on-save nil$/;"	f
json-fmt-tool	conf/emacs/.emacs.d/layers/+lang/json/config.el	/^(defvar json-fmt-tool 'web-beautify$/;"	f
json-packages	conf/emacs/.emacs.d/layers/+lang/json/packages.el	/^(defconst json-packages$/;"	f
json/init-json-mode	conf/emacs/.emacs.d/layers/+lang/json/packages.el	/^(defun json\/init-json-mode ()$/;"	f
json/init-json-navigator	conf/emacs/.emacs.d/layers/+lang/json/packages.el	/^(defun json\/init-json-navigator ()$/;"	f
json/init-json-reformat	conf/emacs/.emacs.d/layers/+lang/json/packages.el	/^(defun json\/init-json-reformat ()$/;"	f
json/init-json-snatcher	conf/emacs/.emacs.d/layers/+lang/json/packages.el	/^(defun json\/init-json-snatcher ()$/;"	f
json/post-init-add-node-modules-path	conf/emacs/.emacs.d/layers/+lang/json/packages.el	/^(defun json\/post-init-add-node-modules-path ()$/;"	f
json/post-init-company	conf/emacs/.emacs.d/layers/+lang/json/packages.el	/^(defun json\/post-init-company ()$/;"	f
json/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/json/packages.el	/^(defun json\/post-init-flycheck ()$/;"	f
json/pre-init-prettier-js	conf/emacs/.emacs.d/layers/+lang/json/packages.el	/^(defun json\/pre-init-prettier-js ()$/;"	f
json/pre-init-web-beautify	conf/emacs/.emacs.d/layers/+lang/json/packages.el	/^(defun json\/pre-init-web-beautify ()$/;"	f
jsonnet/init-jsonnet-mode	conf/emacs/.emacs.d/layers/+lang/jsonnet/packages.el	/^(defun jsonnet\/init-jsonnet-mode ()$/;"	f
jsonnet/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/jsonnet/packages.el	/^(defun jsonnet\/post-init-flycheck ()$/;"	f
julia-backend	conf/emacs/.emacs.d/layers/+lang/julia/config.el	/^(defvar julia-backend (when (configuration-layer\/layer-used-p 'lsp) 'lsp)$/;"	f
julia-mode-enable-ess	conf/emacs/.emacs.d/layers/+lang/julia/config.el	/^(defvar julia-mode-enable-ess nil$/;"	f
julia-packages	conf/emacs/.emacs.d/layers/+lang/julia/packages.el	/^(defconst julia-packages$/;"	f
julia/init-julia-mode	conf/emacs/.emacs.d/layers/+lang/julia/packages.el	/^(defun julia\/init-julia-mode ()$/;"	f
julia/init-julia-repl	conf/emacs/.emacs.d/layers/+lang/julia/packages.el	/^(defun julia\/init-julia-repl ()$/;"	f
julia/init-lsp-julia	conf/emacs/.emacs.d/layers/+lang/julia/packages.el	/^(defun julia\/init-lsp-julia ()$/;"	f
julia/post-init-evil-surround	conf/emacs/.emacs.d/layers/+lang/julia/packages.el	/^(defun julia\/post-init-evil-surround ()$/;"	f
julia/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/julia/packages.el	/^(defun julia\/post-init-flycheck ()$/;"	f
jump	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:jump(t, w)$/;"	f
jump	conf/zsh/.oh-my-zsh/plugins/jump/jump.plugin.zsh	/^jump() {$/;"	f
jump-to-frame-config-register	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun jump-to-frame-config-register ()$/;"	f
jumpToBookmarks	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToBookmarks() abort$/;"	f
jumpToChild	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToChild(node, last) abort$/;"	f
jumpToFirstChild	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToFirstChild(node) abort$/;"	f
jumpToLastChild	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToLastChild(node) abort$/;"	f
jumpToNextSibling	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToNextSibling(node) abort$/;"	f
jumpToParent	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToParent(node) abort$/;"	f
jumpToPrevSibling	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToPrevSibling(node) abort$/;"	f
jumpToRoot	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToRoot() abort$/;"	f
jumpToSibling	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToSibling(node, forward) abort$/;"	f
jump_backwards	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def jump_backwards(self):$/;"	m	class:SnippetManager
jump_format	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:jump_format(line)$/;"	f
jump_forwards	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def jump_forwards(self):$/;"	m	class:SnippetManager
jump_or_expand	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def jump_or_expand(self):$/;"	m	class:SnippetManager
jump_sink	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:jump_sink(lines)$/;"	f
jump_to_declaration_cb	conf/vim/.vim/plugged/vim-go/autoload/go/def.vim	/^function! s:jump_to_declaration_cb(mode, bin_name, job, exit_status, data) abort dict$/;"	f
kapow	conf/zsh/.oh-my-zsh/plugins/pow/pow.plugin.zsh	/^kapow(){$/;"	f
kerndeb	conf/zsh/.oh-my-zsh/plugins/debian/debian.plugin.zsh	/^function kerndeb() {$/;"	f
kerndeb	conf/zsh/.oh-my-zsh/plugins/ubuntu/ubuntu.plugin.zsh	/^function kerndeb() {$/;"	f
key	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^        let key = matchstr(s:filetype, '[^=]*')$/;"	v
key-translation-map	conf/emacs/.emacs.d/core/core-keybindings.el	/^(define-key key-translation-map [?\\C-i] 'spacemacs\/translate-C-i)$/;"	f
key_binding_not_changed	conf/tmux/.tmux/plugins/tmux-sensible/sensible.tmux	/^key_binding_not_changed() {$/;"	f
key_binding_not_set	conf/tmux/.tmux/plugins/tmux-sensible/sensible.tmux	/^key_binding_not_set() {$/;"	f
key_sink	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:key_sink(line)$/;"	f
keyboard-layout-packages	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defconst keyboard-layout-packages$/;"	f
keyboard-layout/post-init-evil	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/post-init-evil ()$/;"	f
keyboard-layout/pre-init-ace-window	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-ace-window ()$/;"	f
keyboard-layout/pre-init-avy	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-avy ()$/;"	f
keyboard-layout/pre-init-comint	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-comint ()$/;"	f
keyboard-layout/pre-init-company	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-company ()$/;"	f
keyboard-layout/pre-init-ediff	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-ediff ()$/;"	f
keyboard-layout/pre-init-elfeed	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-elfeed ()$/;"	f
keyboard-layout/pre-init-evil	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-evil ()$/;"	f
keyboard-layout/pre-init-evil-cleverparens	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-evil-cleverparens ()$/;"	f
keyboard-layout/pre-init-evil-collection	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-evil-collection ()$/;"	f
keyboard-layout/pre-init-evil-escape	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-evil-escape ()$/;"	f
keyboard-layout/pre-init-evil-evilified-state	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-evil-evilified-state ()$/;"	f
keyboard-layout/pre-init-evil-lisp-state	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-evil-lisp-state ()$/;"	f
keyboard-layout/pre-init-evil-surround	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-evil-surround ()$/;"	f
keyboard-layout/pre-init-eyebrowse	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-eyebrowse ()$/;"	f
keyboard-layout/pre-init-flycheck	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-flycheck ()$/;"	f
keyboard-layout/pre-init-helm	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-helm ()$/;"	f
keyboard-layout/pre-init-imenu-list	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-imenu-list ()$/;"	f
keyboard-layout/pre-init-ivy	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-ivy ()$/;"	f
keyboard-layout/pre-init-magit	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-magit ()$/;"	f
keyboard-layout/pre-init-mu4e	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-mu4e ()$/;"	f
keyboard-layout/pre-init-neotree	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-neotree ()$/;"	f
keyboard-layout/pre-init-org	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-org ()$/;"	f
keyboard-layout/pre-init-org-agenda	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-org-agenda ()$/;"	f
keyboard-layout/pre-init-ranger	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-ranger ()$/;"	f
keyboard-layout/pre-init-twittering-mode	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-twittering-mode ()$/;"	f
keyboard-layout/pre-init-undo-tree	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/packages.el	/^(defun keyboard-layout\/pre-init-undo-tree ()$/;"	f
keys	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = " " + EA + "Hello" + JF + "World"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
keys	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "123 abc" + EA + "123" + JF + "456"$/;"	v	class:Anon_Trigger_Multi
keys	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc " + EA$/;"	v	class:Anon_NoTrigger_AfterSpace
keys	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc" + EA + "123" + JF + "456"$/;"	v	class:Anon_NoTrigger_Multi
keys	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc" + EA + "\\nabc" + EX$/;"	v	class:Anon_Trigger_Twice
keys	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc" + EA$/;"	v	class:Anon_NoTrigger_Simple
keys	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "abc" + EA$/;"	v	class:Anon_Trigger_Simple
keys	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = "blah blah abc" + EA$/;"	v	class:Anon_Trigger_Opts
keys	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = EA + "Hello" + JF + "World"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
keys	conf/vim/.vim/plugged/ultisnips/test/test_Autocommands.py	/^    keys = ($/;"	v	class:Autocommands
keys	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "a"$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
keys	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "a"$/;"	v	class:Autotrigger_GlobalDisable
keys	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "a\\na"$/;"	v	class:Autotrigger_CanMatchContext
keys	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^    keys = "abc"$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
keys	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^    keys = ($/;"	v	class:Autotrigger_CanToggle
keys	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^    keys = ($/;"	v	class:Autotrigger_GlobalDisableThenToggle
keys	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    keys = "\\ttest" + EX$/;"	v	class:DoNotTrimSpacesAtEndOfLinesByDefault
keys	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    keys = "\\ttest" + EX$/;"	v	class:TrimSpacesAtEndOfLines
keys	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    keys = "oouu trig b" + 2 * ARR_L + EX$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
keys	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + "hello"$/;"	v	class:Snippet_With_Umlauts_Mirrors
keys	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + "hüüll"$/;"	v	class:Snippet_With_Umlauts_Python
keys	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + "more text" + JF + JF + "end"$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
keys	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + "more text"$/;"	v	class:Snippet_With_Umlauts_TypeOn
keys	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + JF + "more text" + JF + "end"$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
keys	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    keys = "te ül" + EX + JF + JF + "end"$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
keys	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    keys = "te" + LS + "2\\n"$/;"	v	class:Snippet_With_DoubleQuote_List
keys	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    keys = "te" + LS + "2\\n"$/;"	v	class:Snippet_With_SingleQuote_List
keys	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    keys = "te" + LS + "2\\n"$/;"	v	class:Snippet_With_Umlauts_List
keys	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    keys = "te'st" + EX$/;"	v	class:Snippet_With_SingleQuote
keys	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "j" + JF + "k"$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + "z" + JF + "y"$/;"	v	class:MultiLineDefault_Type
keys	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + BS + JF + "Goodbye"$/;"	v	class:LeaveTrailingWhitespace
keys	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + BS + JF + "Goodbye"$/;"	v	class:RemoveTrailingWhitespace
keys	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + BS + JF + "y"$/;"	v	class:MultiLineDefault_BS
keys	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    keys = "test" + EX + JF + "y"$/;"	v	class:MultiLineDefault_Jump
keys	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    keys = "teüst" + EX$/;"	v	class:Snippet_With_Umlauts
keys	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    keys = "ööuu trig b" + 2 * ARR_L + EX$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
keys	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    keys = 'te"st' + EX$/;"	v	class:Snippet_With_DoubleQuote
keys	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "1 "$/;"	v	class:Choices_MoreThan9Candidates_ShouldTerminateWithSpace
keys	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "1 is a color"$/;"	v	class:Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone
keys	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "1"$/;"	v	class:Choices_MoreThan9Candidates_ShouldWaitForInputs
keys	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "1"$/;"	v	class:Choices_With_Mirror
keys	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "2"$/;"	v	class:Choices_CanEscapeCommaInsideChoiceItem
keys	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "2"$/;"	v	class:Choices_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "2"$/;"	v	class:Choices_WilNotMessWithTabstopsAfterIt
keys	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "3"$/;"	v	class:Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex
keys	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "char"$/;"	v	class:Choices_WillAbandonSelection_If_CharTyped
keys	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + "input"$/;"	v	class:Choices_AsNestedElement_ShallNotTakeActionIfParentInput
keys	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + JF + "1"$/;"	v	class:Choices_AsNestedElement_CanBeTabbedInto
keys	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX + JF + JF + "input"$/;"	v	class:Choices_AsNestedElement_CanBeTabbedThrough
keys	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_AsNestedElement_ShouldOverwriteDefaultText
keys	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_CanTakeNonAsciiCharacters
keys	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_EmptyChoiceWillBeDiscarded
keys	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_ShouldThrowErrorWithZeroTabstop
keys	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_WillBeExpandedToInlineSelection
keys	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    keys = "test" + EX$/;"	v	class:Choices_WillNotExpand_If_ChoiceListIsEmpty
keys	conf/vim/.vim/plugged/ultisnips/test/test_Completion.py	/^    keys = ($/;"	v	class:Completion_SimpleExample_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Completion.py	/^    keys = COMPLETION_OPTIONS + "test" + EX + "com" + COMPL_KW + JF + "foo"$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
keys	conf/vim/.vim/plugged/ultisnips/test/test_Completion.py	/^    keys = COMPLETION_OPTIONS + "test" + EX + "foo" + JF + "com" + COMPL_KW + JB + "foo"$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
keys	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_DoNotExpandOnFalse
keys	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_ExpandOnTrue
keys	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_Header_DoNotExpandOnFalse
keys	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_Header_ExpandOnTrue
keys	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_SimpleSnippet
keys	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "a" + EX$/;"	v	class:ContextSnippets_UseContext
keys	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "adup" + EX + "\\n" + word + "dup" + EX$/;"	v	class:ContextSnippets_Before
keys	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX + " " + "e" + EX$/;"	v	class:ContextSnippets_ContextIsClearedBeforeExpand
keys	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX$/;"	v	class:ContextSnippets_CursorIsZeroBased
keys	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX$/;"	v	class:ContextSnippets_ReportError
keys	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
keys	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "i" + EX$/;"	v	class:ContextSnippets_PriorityKeyword
keys	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = ($/;"	v	class:ContextSnippets_ContextHasAccessToVisual
keys	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = ($/;"	v	class:ContextSnippets_SnippetPriority
keys	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = negative + EX + positive + EX$/;"	v	class:ContextSnippets_ContextHasAccessToReMatch
keys	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    keys = "first line\\n\\n\\n\\n\\n\\nthird line" + ESC + "3k0itest" + EX + ESC + "u6j"$/;"	v	class:Undo_RemoveWholeSnippet
keys	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    keys = "hello test" + EX + "upsi" + ESC + "hh" + "iabcdef" + ESC + "u"$/;"	v	class:Undo_RemoveEditInTabstop
keys	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    keys = "i" + EX + "asd" + JF + "feh" + ESC + "uuuu"$/;"	v	class:Undo_CompletelyUndoSnippet
keys	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    keys = "i" + EX + "asd" + JF + ESC + "u"$/;"	v	class:Undo_ChangesInPlaceholder
keys	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    keys = "i" + EX + "i" + EX + ESC + "u"$/;"	v	class:Undo_RemoveOneSnippetByTime
keys	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    keys = "i" + EX + "i" + EX + ESC + "uu"$/;"	v	class:Undo_RemoveOneSnippetByTime2
keys	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "A" + JF + BS + "BBB"$/;"	v	class:Backspace_TabStop_NotZero
keys	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "A" + JF + BS + "BBB"$/;"	v	class:Backspace_TabStop_Zero
keys	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "a b c" + JF + "shallnot"$/;"	v	class:JumpForward_DefSnippet
keys	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "a" + JF + "test" + EX + ESC + "u" + JF$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
keys	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "a" + JF + BS + JF + "Int" + JF + "body"$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + "aaaaa" + JF + BS + JF + "3333"$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
keys	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "Vkx" + "i\\nworld\\n"$/;"	v	class:DeleteSnippetInsertion0
keys	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "ddi" + JB$/;"	v	class:DeleteCurrentTabStop1_JumpBack
keys	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "j2dd"$/;"	v	class:DeleteLastTwoLinesInSnippet
keys	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "u"$/;"	v	class:DeleteSnippetInsertion1
keys	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + ESC + "u"$/;"	v	class:Undo_RemoveMultilineSnippet
keys	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + JF + ESC + "ddi" + JB + "hello"$/;"	v	class:DeleteCurrentTabStop2_JumpBack
keys	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    keys = "test" + EX + JF + ESC + "ddkji" + JB + "hello" + JF + "world"$/;"	v	class:DeleteCurrentTabStop3_JumpAround
keys	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    keys = "Wie hallo gehts" + ESC + "bhi" + EX + "Huiui!"$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    keys = "Wie hallo gehts" + ESC + "bhi" + EX$/;"	v	class:ExpandInTheMiddleOfLine_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    keys = "Wie hallo gehts" + ESC + "bhi" + EX$/;"	v	class:MultilineExpand_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo " + EX$/;"	v	class:DoNotExpandAfterSpace_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + "\\nAnd more"$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + "\\nHallo Welt!\\n\\n\\b\\b\\b\\b\\b"$/;"	v	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + "\\nhallo" + EX$/;"	v	class:SimpleExpandTwice_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + "and again"$/;"	v	class:SimpleExpandTypeAfterExpand_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX + BS + ESC + "o" + ESC + "P"$/;"	v	class:SimpleExpand_DoNotClobberDefaultRegister
keys	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX$/;"	v	class:SimpleExpandExpandOrJump_Expand
keys	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX$/;"	v	class:SimpleExpandJumpOrExpand_Expand
keys	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    keys = "hallo" + EX$/;"	v	class:SimpleExpand_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    keys = "na du hallo" + EX + "and again\\b\\b\\b\\b\\bblub"$/;"	v	class:SimpleExpandTypeAndDelete_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    keys = "test" + EX + EX + "foo"$/;"	v	class:SimpleExpandExpandOrJump_Ambiguity
keys	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    keys = "test" + EX + EX + "foo"$/;"	v	class:SimpleExpandJumpOrExpand_Ambiguity
keys	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    keys = "test" + EX + EX$/;"	v	class:ExitSnippetModeAfterTabstopZero
keys	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    keys = "test" + EX + JF + "foo"$/;"	v	class:SimpleExpand_Issue1343
keys	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    keys = "  test" + EX + "hello" + JF + "world" + JF + "blub"$/;"	v	class:Bug1251994
keys	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    keys = "\\t\\t\\tpd" + EX + "2"$/;"	v	class:VirtualEdit
keys	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    keys = "foobar " + NULL_BYTE + "test" + EX$/;"	v	class:NullByte_ExpandAfter
keys	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    keys = "foobar" + NULL_BYTE + LS + "\\n"$/;"	v	class:NullByte_ListSnippets
keys	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    keys = "test" + EX + "foo"$/;"	v	class:ShiftWidthZero
keys	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    keys = "yank" + ESC + "by4lea test" + EX + "HELLO" + JF + JF + ESC + "p"$/;"	v	class:RetainsTheUnnamedRegister
keys	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    keys = ($/;"	v	class:NonUnicodeDataInUnnamedRegister
keys	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    keys = ($/;"	v	class:PassThroughNonexecutedTrigger
keys	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    keys = ($/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
keys	conf/vim/.vim/plugged/ultisnips/test/test_Folding.py	/^    keys = "fold" + EX + "hi" + ESC + "jdd"$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_Folding.py	/^    keys = "fold" + EX + "hi"$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_Folding.py	/^    keys = "test" + EX + "Ball"$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_Folding.py	/^    keys = "test" + EX + JF + "sub junk {}"$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    keys = "    test" + EX + "Hui"$/;"	v	class:ProperIndenting_SimpleCase_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    keys = "    test" + EX + "\\n" + "blah"$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    keys = "    test" + EX + "blah"$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    keys = "inc" + EX + "cstdl"$/;"	v	class:ProperIndenting_FirstLineInFileComplete_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    keys = "inc" + EX + "foo"$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    keys = "m" + EX + "m1" + EX + "\\nHallo"$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    keys = "m" + EX$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    keys = "test" + EX + "This is a longer text that should wrap"$/;"	v	class:FOTextBeforeAndAfter_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    keys = "test" + EX + "This is a longersnippet that should wrap properly"$/;"	v	class:FOWrapOnLongWord_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    keys = ($/;"	v	class:FOSimple_Break_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    keys = ($/;"	v	class:FOTextAfter_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "    test" + EX$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "    test" + EX$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = " " * 8 + "test" + EX  # < 8 works.$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:PythonVisual_SelectOneWord
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:PythonVisual_LineSelect_Simple
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "Hallo Welt"$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "Hallo Welt"$/;"	v	class:PythonCode_ReferencePlaceholderBefore
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "aaa"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "abc"$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "and more"$/;"	v	class:TabStop_Shell_SimpleExample
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "and more"$/;"	v	class:TabStop_Shell_TextInNextLine
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "and more"$/;"	v	class:TabStop_Shell_WithUmlauts
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "blah" + ", bah"$/;"	v	class:PythonCode_CanOverwriteTabstop
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "ho"$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "ho"$/;"	v	class:PythonCode_ReferencePlaceholder
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + "overwrite" + JF + "and more"$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + ESC + "otest" + EX + JF + ESC$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + ESC + "otest" + EX + JF + JF + JF + JF$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + JF + "and more"$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + JF + "and more"$/;"	v	class:TabStop_Shell_InDefValue_Leave
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX + JF + "okay"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCodeOld_SimpleExample
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_SimpleExample
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:Python_SnipRvCanBeNonText
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = "ups test" + EX$/;"	v	class:PythonCode_TrickyReferences
keys	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    keys = ($/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_ListSnippets.py	/^    keys = " " + LS + "3\\n"$/;"	v	class:ListAllAvailable_SpaceInFront_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "" + LS + "3\\n"$/;"	v	class:ListAllAvailable_NothingTyped_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "hallo qualle" + LS + "Hi"$/;"	v	class:ListAllAvailable_NonDefined_NoExpectionShouldBeRaised
keys	conf/vim/.vim/plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "hallo test" + LS + "1\\n"$/;"	v	class:ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "hallo test" + LS + "2\\n"$/;"	v	class:ListAllAvailable_Disabled_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "hallo test" + LS + "2\\n"$/;"	v	class:ListAllAvailable_testtyped_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_ListSnippets.py	/^    keys = "} " + LS + "3\\n"$/;"	v	class:ListAllAvailable_BraceInFront_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "auch" + ESC + "ehihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "auch" + ESC + "eiab" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "auch" + ESC + "wahi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "auch" + ESC + "wihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "hallo test" + EX + "elt"$/;"	v	class:Mirror_TestKillTabstop_Kill
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "outer" + EX + "test" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLineNoSpaceInsideOtherSpaceAfter_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "outer" + EX + "test" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLineNoSpaceInsideOther_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "a"$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo Du\\nHi\\b\\bAch Blah"$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo du"$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo du\\nwie gehts"$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo test"$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo welt"$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo welt"$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLineNoSpaceSpaceAfter_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLineNoSpace_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo\\b\\b"$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo\\b\\bhups"$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "hallo\\nagain"$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin" + JF + "do snap"$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin" + JF + "overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin" + JF + "overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin" + JF + JF + "end"$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin"$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "stdin"$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "world"$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + "world"$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX + BS + "hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "test" + EX$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = "ups test blah" + ESC + "02f i" + EX + "hallo"$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = ($/;"	v	class:MirrorRealLifeExample_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    keys = ($/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    keys = "<trh" + EX + "blah" + JF + BS + BS + JF + "end"$/;"	v	class:CursorMovement_BS_InEditMode
keys	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + 3 * ARR_L + JF + "hallo"$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + 4 * ARR_L + JF + "hallo"$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + 7 * ARR_L + JF + "hallo"$/;"	v	class:IMMoving_NoExiting_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + ARR_R + JF + "hallo"$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    keys = "hello test this" + ESC + "02f i" + EX + "tab" + JF + "hallo"$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    keys = "test" + EX + "text" + 3 * ARR_U + 6 * ARR_D$/;"	v	class:IMMoving_CursorsKeys_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    keys = "test" + EX + "this is something\\nvery nice\\nnot" + JF + "more text"$/;"	v	class:CursorMovement_Multiline_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    keys = "test" + EX + "this" + 2 * ARR_L + "hallo\\nwelt"$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    keys = ($/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    keys = ($/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + " " + ESC + ESC + "ahi"$/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + "0\\n" + "hi"$/;"	v	class:Multiple_SimpleCaseSelectZero_EEscape
keys	conf/vim/.vim/plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + "1\\n"$/;"	v	class:Multiple_SimpleCaseSelectFirst_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + "2\\n"$/;"	v	class:Multiple_SimpleCaseSelectSecond_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + "5\\n"$/;"	v	class:Multiple_SimpleCaseSelectTooHigh_ESelectLast
keys	conf/vim/.vim/plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = "test" + EX + ESC + "hi"$/;"	v	class:Multiple_SimpleCaseEscapeOut_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "ab" + EX + "\\nac" + EX$/;"	v	class:ParseSnippets_Global_Python
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "ab" + EX + "\\nac" + EX$/;"	v	class:ParseSnippets_Global_Python_After
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "ab" + EX$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "abc def" + EX$/;"	v	class:ParseSnippets_MultiWord_RE1
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "foo" + EX + " bar" + EX + "\\nbar" + EX$/;"	v	class:ParseSnippets_MultiWord_RE2
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "inv snip" + EX$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "snip test" + EX$/;"	v	class:ParseSnippets_MultiWord_Description
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "snippet test" + EX$/;"	v	class:ParseSnippets_MultiWord_Description_Option
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test snip" + EX$/;"	v	class:ParseSnippets_MultiWord_NoContainer
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test snip" + EX$/;"	v	class:ParseSnippets_MultiWord_Quotes
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test snip" + EX$/;"	v	class:ParseSnippets_MultiWord_Simple
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test test test" + EX$/;"	v	class:ParseSnippets_MultiWord_RE3
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippet
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintPythonStacktrace
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "test" + EX$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_ClearAll
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine1
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_MissingEndSnippet
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_SimpleSnippet
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "testsnip" + EX$/;"	v	class:ParseSnippets_UnknownDirective
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "toclear" + EX + "\\n" + "testsnip" + EX$/;"	v	class:ParseSnippets_ClearOne
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = "toclear" + EX + "\\n" + "testsnip" + EX$/;"	v	class:ParseSnippets_ClearTwo
keys	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = '"test snip"' + EX$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
keys	conf/vim/.vim/plugged/ultisnips/test/test_Plugin.py	/^    keys = ($/;"	v	class:Plugin_SuperTab_SimpleTest
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = "form_for user, namespace: some_namespace, html: {i" + EX + "i" + EX$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "    hallo m" + EX + "hi"$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "    m" + EX + "hi"$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "hello m" + EX + "world m" + EX + "end"$/;"	v	class:RecTabsStops_TypeInZero2_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "hi" + JF + "m" + EX + "again" + JF + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "hi" + JF + "m" + EX + "m1" + EX + "CD" + JF + "DE" + JF + "AB"$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "hi" + JF + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "a" + 4 * ARR_L + JF + "hallo" + JF + "world"$/;"	v	class:RecTabStops_LeavingInner_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hello" + JF + "world" + JF + "ups" + JF + "end"$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hello" + JF + "world" + JF + JF + JF + "end"$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hello" + JF + JF + JF + "world" + JF + "end"$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hi" + JF + "hallo" + JF + "end"$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "hi"$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX + "m" + EX + "a" + 6 * ARR_L + JF + "hallo" + JF + "end"$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m" + EX$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + " m1" + EX + "hi" + JF + "two" + JF + "end"$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + "CD" + JF + "DE"$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + "hi" + JF + "two" + JF + "end"$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + "m1" + EX + JF + "m1" + EX + "hi" + JF + "end"$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = "m" + EX + JF + JF + BS + "m" + EX$/;"	v	class:RecTabsStops_BackspaceZero_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_LeavingInnerInner_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_MirroredZeroTS_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    keys = ($/;"	v	class:RecTabsStops_TypeInZero_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    keys = "for" + EX + "k" + JF$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    keys = "test" + EX + "Hello"$/;"	v	class:_SelectModeMappings
keys	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    keys = "test" + EX + "ui" + JF$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
keys	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    keys = "test" + EX + "ui" + JF$/;"	v	class:OldSelection_SimpleTabstop_Test
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    keys = "$frac" + EX + JF + JF + "blub"$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "v" + EX$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    keys = "def" + EX$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    keys = "for" + EX + "blub" + JF + "j" + JF + "hi"$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX + "2\\n"$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX + "\\nhello1" + EX + "\\nhello2" + EX$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    keys = "hello" + EX$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    keys = "opt" + EX + "some" + JF + "not" + JF + "ende"$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    keys = "opt" + EX + "some" + JF + JF + "ende"$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    keys = "os." + EX + "foo\\n." + EX$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX + "blub" + JF + "blah"$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX + JF + "hi"$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    keys = "test" + EX$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "[]" + ARR_L + "a" + EX + "1" + JF + "2"$/;"	v	class:SnippetActions_PostActionModifiesCharAfterSnippet
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "\\n3" + ARR_U + "a" + EX + "1" + JF + "2"$/;"	v	class:SnippetActions_PostActionModifiesLineAfterSnippet
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "\\ni" + EX + "i" + EX + "x" + JF + "y" + JF + JF + "z"$/;"	v	class:SnippetActions_CanModifyParentBody
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "\\ni" + EX + "i" + EX + "x"$/;"	v	class:SnippetActions_EnsureIndent
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "\\ni" + EX + "x" + JF + "y"$/;"	v	class:SnippetActions_PostActionCanUseSnippetRange
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX + "123"$/;"	v	class:SnippetActions_DoNotBreakCursorOnSingleLikeChange
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX$/;"	v	class:SnippetActions_ErrorOnBufferModificationThroughCommand
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX$/;"	v	class:SnippetActions_PostActionModifiesBuffer
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX$/;"	v	class:SnippetActions_PreActionModifiesBuffer
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "blah" + JF + "n" + EX + JF + "pass"$/;"	v	class:SnippetActions_CanExpandSnippetInDifferentPlace
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "p" + EX + JF + "z"$/;"	v	class:SnippetActions_MoveParentSnippetFromChildInPreAction
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "x" + JF + "1" + JF + "2" + JF + ";"$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpAction
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "x" + JF + JF + "1" + JF + "2" + JF + ";"$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX$/;"	v	class:SnippetActions_CanUseContextFromContextMatch
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX$/;"	v	class:SnippetActions_ErrorOnModificationSnippetLine
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3" + JF + " or 4" + JF + "5"$/;"	v	class:SnippetActions_CanExpandAnonSnippetOnFirstJump
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3" + JF + "4"$/;"	v	class:SnippetActions_CanEvenWrapSnippetInPreAction
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3"$/;"	v	class:SnippetActions_CanExpandAnonOnPreExpand
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2"$/;"	v	class:SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = ($/;"	v	class:SnippetActions_CanMirrorTabStopsOutsideOfSnippet
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = ($/;"	v	class:SnippetActions_MoveVisual
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    keys = ($/;"	v	class:SnippetActions_UseCorrectJumpActions
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "   test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "   test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "  test it" + EX + "1\\n"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "  test" + EX + "1\\n"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "  test" + EX$/;"	v	class:No_Tab_Expand_ET_Leading_Spaces
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "  test" + EX$/;"	v	class:No_Tab_Expand_Leading_Spaces
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = " ." + EX$/;"	v	class:SnippetOptions_Regex_Self_Space
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = " .a" + EX$/;"	v	class:SnippetOptions_Regex_Self_TextAfter
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "$test" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "-test" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "." + EX$/;"	v	class:SnippetOptions_Regex_Self_Start
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "[[test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix3
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "\\t\\thi" + EX$/;"	v	class:No_Tab_Expand_RealWorld
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "\\ttest" + EX$/;"	v	class:No_Tab_Expand_Leading_Tabs
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a(test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix2
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a-test it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a-test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "a." + EX$/;"	v	class:SnippetOptions_Regex_Self_TextBefore
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "abc test test" + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "abc test test" + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "atest it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "atest it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "atest" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "atest" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NoExpand
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test " + EX$/;"	v	class:SnippetOptions_Regex_WithSpace
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test cabfed" + EX$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test cabfed" + EX$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test me" + EX$/;"	v	class:MultiWordSnippet_Simple
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test test abc" + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test test test" + EX$/;"	v	class:SnippetOptions_Regex_Multiple
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_ET
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_ET_SW
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_ET_SW_TS
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_No_TS
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:No_Tab_Expand_Simple
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NormalExpand
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "test" + EX$/;"	v	class:SnippetOptions_Regex_Expand
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = "ßßtest" + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test me" + EX$/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX + "1\\n\\n" + "test" + EX + "2\\n"$/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_OverwriteExisting
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_SimpleClear
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test" + EX$/;"	v	class:SnippetPriorities_SimpleClear2
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = "test1" + EX$/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
keys	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = ($/;"	v	class:SnippetPriorities_ClearedByChild
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "echo" + EX + "test"$/;"	v	class:TabStop_Exit_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "echo" + EX$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "Nase"$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "Nase"$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "Test" + JF + "Hi" + JF + JF + "du"$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "haselnut" + 2 * ARR_L + "hips" + JF + "end"$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "na" + JF + "Du Nase"$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "na" + JF + "Du Nase"$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + "ship"$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + JF + "Test" + JF + "Hi"$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "hallo" + EX + JF + "Test" + JF + "Hi"$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "i" + EX + EX + "1" + JF + "2" + JF + " after" + JF + "3"$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "i" + EX + EX + "1" + JF + "2" + JF + " after" + JF + "3"$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + " blah" + JF + "Hallo"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hello" + JF + "World" + JF$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Hello" + JF + "World"$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Nothing"$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "Nothing"$/;"	v	class:TabStop_Multiline_Overwrite
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "WORLD" + JF + "End"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "[ -u -v -d ]"$/;"	v	class:TabStop_EscapingChars_RealLife
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "blub" + JF + "hello"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "hello" + JF + "world"$/;"	v	class:TabStop_EscapingChars_Backslash4
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "hi"$/;"	v	class:TabStop_EscapingCharsDollars
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + "ups" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + BS + JF + "Hallo"$/;"	v	class:TabStop_TSInDefaultTextRLExample_DeleteFirst
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + BS + JF + "Nothing"$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + ESC + "0ihi"$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + ESC + "0ihi"$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + ESC + "0ihi"$/;"	v	class:TabStopEscapingWhenSelected_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "Blah"$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "Hallo" + JF + "Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "WORLD" + JF + "End"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "\\n" + JF + "t"$/;"	v	class:TabStop_CROnlyOnSelectedNear
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "hello"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "longertext" + JB + "overwrite" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "longertext" + JB + JF + "overwrite" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "longertext" + JB + JF + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "no" + JF + "End" + JB + "yes" + JF + "Begin" + JF + "Hi"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "no" + JF + "End"$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecond
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + "ups" + JF + "End"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + JF + "Hallo" + JB + JB + "Blah" + JF + "Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX + JF + JF + "Hallo" + JF + "Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsBackticks
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsDollars1
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingChars_Backslash
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingChars_Backslash2
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_EscapingChars_Backslash3
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Multiline_Leave
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = "test" + EX$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack
keys	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    keys = ($/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "ascii" + EX + "éèàçôïÉÈÀÇÔÏ€"$/;"	v	class:Transformation_LowerCaseAsciiResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "ascii" + EX + "éèàçôïÉÈÀÇÔÏ€"$/;"	v	class:Transformation_SimpleCaseAsciiResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "ehihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "eiab" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "wahi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "AUCH" + ESC + "wihi" + ESC + "bb" + "ino" + JF + "end"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "b"$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "some\\b\\b\\b\\b\\b"$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX + "some\\b\\b\\b\\bmore"$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "hallo test" + EX$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "HALLO"$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "Hallo"$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "SomE tExt "$/;"	v	class:Transformation_MultipleTransformations_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "TEST"$/;"	v	class:Transformation_OptionIgnoreCase_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a b  c d e f ghhh h oha"$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a some more text"$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a some"$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a, nice,   building"$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "a, nice, building"$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "aa"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "aa"$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "ab"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "b some"$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "dead parrot"$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "foo boo aoo"$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo foo boy"$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hallo"$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "hi" + JF + BS$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "sometext" + JF + "overwrite"$/;"	v	class:Transformation_InsideTabOvertype_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "sometext" + JF$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "test, hallo"$/;"	v	class:Transformation_CINewlines_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "test, hallo"$/;"	v	class:Transformation_CITabstop_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + "test, halul"$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + BS + "hallo"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + BS + JF + "hi"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test" + EX + BS$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = "test\\ntest\\ntest" + ESC + "V2k" + EX + "test" + EX$/;"	v	class:Transformation_OptionMultiline_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    keys = ($/;"	v	class:Transformation_ConditionalInConditional_ECR
keys	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "abc test" + EX$/;"	v	class:AddFunc_Opt
keys	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "abc test" + EX$/;"	v	class:AddFunc_Simple
keys	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "testme" + EX + "hi1" + JF + "hi2" + JF + "hi3" + JF + "hi4"$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = "testme" + EX + "hi;" + JF + "hi2" + JF + "hi3" + JF + "hi4" + ESC + ";Hello"$/;"	v
keys	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = ($/;"	v	class:AddNewSnippetSource
keys	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = ($/;"	v	class:VerifyVimDict1
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "    hello\\n    nice\\n\\tworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_CheckIndentTwice
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "\\tblablub" + ESC + "5hv3l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "bla blub\\n  helloi" + ESC + "0k4lvjll" + EX + "test" + EX$/;"	v	class:Visual_CrossOneLine
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0lv4l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord_Inword
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v$" + EX + "test" + EX + ESC + "o"$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX + "\\ntest" + EX$/;"	v	class:Visual_ExpandTwice
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX + "hello"$/;"	v	class:Visual_InDefaultText_SelectOneWord
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX + JF + "hello"$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:VisualTransformation_SelectOneWord
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:VisualWithDefault_ExpandWithVisual
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "blablub" + ESC + "0v6l" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWord_TwiceVisual
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "jup" + JF + "hi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "jup" + JF + "hi"$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "super" + JF + "done"$/;"	v	class:Visual_LineSelect_WithTabStop
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + "ups" + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX + JF + "hi"$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:VisualTransformation_LineSelect_Simple
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_CheckIndentSimple
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "hello\\nnice\\nworld" + ESC + "Vkk" + EX + "test" + EX$/;"	v	class:Visual_LineSelect_Simple
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "test" + EX + "abc"$/;"	v	class:Visual_NoVisualSelection_Ignore
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "test" + EX + "hi"$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "test" + EX + "hi"$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "test" + EX + "hi"$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "xxxyyyyxxx" + ESC + "4|vlll" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWordExclusive
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = "xxxyyyyxxx" + ESC + "4|vlll" + EX + "test" + EX$/;"	v	class:Visual_SelectOneWordInclusive
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = ($/;"	v	class:Visual_LineSelect_DedentLine
keys	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    keys = ($/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
keys	conf/vim/.vim/plugged/ultisnips/test/vim_test_case.py	/^    keys = ""$/;"	v	class:VimTestCase
keys	workflows/Ariafred/src/workflow/web.py	/^    def keys(self):$/;"	m	class:CaseInsensitiveDictionary
keyword_spacing	conf/vim/.vim/plugged/vim-snippets/pythonx/javascript_snippets.py	/^def keyword_spacing(snip):$/;"	f
kill	workflows/Ariafred/src/workflow/background.py	/^def kill(name, sig=signal.SIGTERM):$/;"	f
kill-emacs	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(define-advice kill-emacs (:around (f &rest args) spacemacs-really-exit)$/;"	f
kill_notifier	workflows/Ariafred/src/aria.py	/^def kill_notifier():$/;"	f
kill_notifier	workflows/Ariafred/src/aria_actions.py	/^def kill_notifier():$/;"	f
kill_yarp	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:kill_yarp() abort$/;"	f
killit	conf/zsh/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function killit() {$/;"	f
kivy-packages	conf/emacs/.emacs.d/layers/+lang/kivy/packages.el	/^(defconst kivy-packages$/;"	f
kivy/init-kivy-mode	conf/emacs/.emacs.d/layers/+lang/kivy/packages.el	/^(defun kivy\/init-kivy-mode ()$/;"	f
kl--base-rebinding-maps	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/config.el	/^(defvar kl--base-rebinding-maps$/;"	f
kl--rebinding-maps	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/config.el	/^(defvar kl--rebinding-maps$/;"	f
kl-disabled-configurations	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/config.el	/^(defvar kl-disabled-configurations nil$/;"	f
kl-enabled-configurations	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/config.el	/^(defvar kl-enabled-configurations nil$/;"	f
kl-layout	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/config.el	/^(defvar kl-layout 'dvorak$/;"	f
kl//define-key	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/funcs.el	/^(defun kl\/\/define-key (maps key def bindings)$/;"	f
kl//generate-full-rebinding-map	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/funcs.el	/^(defun kl\/\/generate-full-rebinding-map (basemap)$/;"	f
kl//guess-rebindings	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/funcs.el	/^(defun kl\/\/guess-rebindings (key)$/;"	f
kl//remap-key-as	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/funcs.el	/^(defun kl\/\/remap-key-as (map bindings)$/;"	f
kl//replace-in-list-rec	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/funcs.el	/^(defun kl\/\/replace-in-list-rec (lst elem repl)$/;"	f
kl/correct-keys	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/funcs.el	/^(defun kl\/correct-keys (map &rest keys)$/;"	f
kl/evil-correct-keys	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/funcs.el	/^(defun kl\/evil-correct-keys (state map &rest keys)$/;"	f
kl/leader-alias-of	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/funcs.el	/^(defun kl\/leader-alias-of (key1 key2)$/;"	f
kl/leader-correct-keys	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/funcs.el	/^(defun kl\/leader-correct-keys (&rest keys)$/;"	f
kl/leader-swap-keys	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/funcs.el	/^(defun kl\/leader-swap-keys (key1 key2)$/;"	f
kl/set-in-all-evil-states	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/funcs.el	/^(defun kl\/set-in-all-evil-states (key def &rest bindings)$/;"	f
kl/set-in-all-evil-states-but-insert	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/funcs.el	/^(defun kl\/set-in-all-evil-states-but-insert (key def &rest bindings)$/;"	f
kl/set-in-state	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/funcs.el	/^(defun kl\/set-in-state (map key def &rest bindings)$/;"	f
kl/set-in-states	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/funcs.el	/^(defun kl\/set-in-states (maps key def &rest bindings)$/;"	f
kl|config	conf/emacs/.emacs.d/layers/+intl/keyboard-layout/funcs.el	/^(defmacro kl|config (name &rest props)$/;"	f
knife_ssh	conf/zsh/.oh-my-zsh/plugins/knife_ssh/knife_ssh.plugin.zsh	/^function knife_ssh() {$/;"	f
kotlin-backend	conf/emacs/.emacs.d/layers/+lang/kotlin/config.el	/^(defvar kotlin-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'company-kotlin)$/;"	f
kotlin-lsp-jar-path	conf/emacs/.emacs.d/layers/+lang/kotlin/config.el	/^(defvar kotlin-lsp-jar-path "~\/install\/server\/bin\/kotlin-language-server"$/;"	f
kotlin-packages	conf/emacs/.emacs.d/layers/+lang/kotlin/packages.el	/^(defconst kotlin-packages$/;"	f
kotlin/init-flycheck-kotlin	conf/emacs/.emacs.d/layers/+lang/kotlin/packages.el	/^(defun kotlin\/init-flycheck-kotlin ()$/;"	f
kotlin/init-kotlin-mode	conf/emacs/.emacs.d/layers/+lang/kotlin/packages.el	/^(defun kotlin\/init-kotlin-mode ()$/;"	f
kotlin/post-init-company	conf/emacs/.emacs.d/layers/+lang/kotlin/packages.el	/^(defun kotlin\/post-init-company ()$/;"	f
kotlin/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/kotlin/packages.el	/^(defun kotlin\/post-init-counsel-gtags nil)$/;"	f
kotlin/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/kotlin/packages.el	/^(defun kotlin\/post-init-flycheck ()$/;"	f
kotlin/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/kotlin/packages.el	/^(defun kotlin\/post-init-ggtags ()$/;"	f
kres	conf/zsh/.oh-my-zsh/plugins/kubectl/kubectl.plugin.zsh	/^function kres(){$/;"	f
kt	conf/zsh/.oh-my-zsh/plugins/kate/kate.plugin.zsh	/^function kt () {$/;"	f
kube_ps1	conf/zsh/.oh-my-zsh/plugins/kube-ps1/kube-ps1.plugin.zsh	/^kube_ps1() {$/;"	f
kubectx_prompt_info	conf/zsh/.oh-my-zsh/plugins/kubectx/kubectx.plugin.zsh	/^function kubectx_prompt_info() {$/;"	f
kubeoff	conf/zsh/.oh-my-zsh/plugins/kube-ps1/kube-ps1.plugin.zsh	/^kubeoff() {$/;"	f
kubeon	conf/zsh/.oh-my-zsh/plugins/kube-ps1/kube-ps1.plugin.zsh	/^kubeon() {$/;"	f
kubernetes-packages	conf/emacs/.emacs.d/layers/+tools/kubernetes/packages.el	/^(defconst kubernetes-packages$/;"	f
kubernetes/init-kubernetes	conf/emacs/.emacs.d/layers/+tools/kubernetes/packages.el	/^(defun kubernetes\/init-kubernetes ()$/;"	f
kubernetes/init-kubernetes-evil	conf/emacs/.emacs.d/layers/+tools/kubernetes/packages.el	/^(defun kubernetes\/init-kubernetes-evil ()$/;"	f
kubernetes/init-kubernetes-tramp	conf/emacs/.emacs.d/layers/+tools/kubernetes/packages.el	/^(defun kubernetes\/init-kubernetes-tramp ()$/;"	f
l:bin_path	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^  let l:bin_path = go#path#CheckBinPath("gopls")$/;"	v
l:cmd	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^      let l:cmd = extend(l:cmd, ['-debug', 'localhost:0'])$/;"	v
l:cmd	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^  let l:cmd = [l:bin_path]$/;"	v
l:cmdopts	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^  let l:cmdopts = go#config#GoplsOptions()$/;"	v
l:completion	conf/vim/.vim/plugged/vim-go/autoload/go/complete.vim	/^    let l:completion = go#lsp#Completion(expand('%:p'), l:line, l:col, funcref('s:handler', [l:state]))$/;"	v
l:idx	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^      let l:idx = stridx(l:item, '-debug')$/;"	v
l:lsp	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^    let l:lsp.sendMessage = funcref('s:noop')$/;"	v
l:lsp	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^  let l:lsp.job = go#job#Start(l:cmd+l:cmdopts, l:opts)$/;"	v
l:needsDebug	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^        let l:needsDebug = 0$/;"	v
l:needsDebug	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^    let l:needsDebug = 1$/;"	v
l:opts	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^  let l:opts = {$/;"	v
l:start_options	conf/vim/.vim/plugged/vim-go/autoload/go/def.vim	/^    let l:start_options.in_io = "file"$/;"	v
l:start_options	conf/vim/.vim/plugged/vim-go/autoload/go/def.vim	/^    let l:start_options.in_name = l:tmpname$/;"	v
l:start_options	conf/vim/.vim/plugged/vim-go/autoload/go/def.vim	/^  let l:start_options.close_cb = funcref('s:close_cb', [l:start_options.close_cb], l:state)$/;"	v
l:start_options	conf/vim/.vim/plugged/vim-go/autoload/go/def.vim	/^  let l:start_options.exit_cb = funcref('s:exit_cb', [l:start_options.exit_cb], l:state)$/;"	v
l:tmpname	conf/vim/.vim/plugged/vim-go/autoload/go/def.vim	/^    let l:tmpname = tempname()$/;"	v
languagetool-packages	conf/emacs/.emacs.d/layers/+tools/languagetool/packages.el	/^(defconst languagetool-packages$/;"	f
languagetool-show-error-on-jump	conf/emacs/.emacs.d/layers/+tools/languagetool/config.el	/^(defvar languagetool-show-error-on-jump nil$/;"	f
languagetool/init-langtool	conf/emacs/.emacs.d/layers/+tools/languagetool/packages.el	/^(defun languagetool\/init-langtool ()$/;"	f
last_find	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_delimiter.py	/^def last_find(s: str, needles: typing.List[str]) -> typing.Optional[str]:$/;"	f
last_non_empty_line	conf/vim/.vim/autoload/plug.vim	/^function! s:last_non_empty_line(lines)$/;"	f
last_version_run	workflows/Ariafred/src/workflow/workflow.py	/^    def last_version_run(self):$/;"	m	class:Workflow
lastline	conf/vim/.vim/autoload/plug.vim	/^function! s:lastline(msg)$/;"	f
latex-backend	conf/emacs/.emacs.d/layers/+lang/latex/config.el	/^(defvar latex-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'company-auctex)$/;"	f
latex-build-command	conf/emacs/.emacs.d/layers/+lang/latex/config.el	/^(defvar latex-build-command (if (executable-find "latexmk") "LatexMk" "LaTeX")$/;"	f
latex-build-engine	conf/emacs/.emacs.d/layers/+lang/latex/config.el	/^(defvar latex-build-engine (if (and (executable-find "xetex")$/;"	f
latex-enable-auto-fill	conf/emacs/.emacs.d/layers/+lang/latex/config.el	/^(defvar latex-enable-auto-fill t$/;"	f
latex-enable-folding	conf/emacs/.emacs.d/layers/+lang/latex/config.el	/^(defvar latex-enable-folding nil$/;"	f
latex-enable-magic	conf/emacs/.emacs.d/layers/+lang/latex/config.el	/^(defvar latex-enable-magic nil$/;"	f
latex-nofill-env	conf/emacs/.emacs.d/layers/+lang/latex/config.el	/^(defvar latex-nofill-env '("equation"$/;"	f
latex-packages	conf/emacs/.emacs.d/layers/+lang/latex/packages.el	/^(defconst latex-packages$/;"	f
latex-refresh-preview	conf/emacs/.emacs.d/layers/+lang/latex/config.el	/^(defvar latex-refresh-preview nil$/;"	f
latex-view-pdf-in-split-window	conf/emacs/.emacs.d/layers/+lang/latex/config.el	/^(defvar latex-view-pdf-in-split-window nil$/;"	f
latex-view-with-pdf-tools	conf/emacs/.emacs.d/layers/+lang/latex/config.el	/^(defvar latex-view-with-pdf-tools (configuration-layer\/layer-used-p 'pdf)$/;"	f
latex//autofill	conf/emacs/.emacs.d/layers/+lang/latex/funcs.el	/^(defun latex\/\/autofill ()$/;"	f
latex//build-sentinel	conf/emacs/.emacs.d/layers/+lang/latex/funcs.el	/^(defun latex\/\/build-sentinel (process event)$/;"	f
latex/auto-fill-mode	conf/emacs/.emacs.d/layers/+lang/latex/funcs.el	/^(defun latex\/auto-fill-mode ()$/;"	f
latex/build	conf/emacs/.emacs.d/layers/+lang/latex/funcs.el	/^(defun latex\/build ()$/;"	f
latex/font-bold	conf/emacs/.emacs.d/layers/+lang/latex/funcs.el	/^(defun latex\/font-bold () (interactive) (TeX-font nil ?\\C-b))$/;"	f
latex/font-calligraphic	conf/emacs/.emacs.d/layers/+lang/latex/funcs.el	/^(defun latex\/font-calligraphic () (interactive) (TeX-font nil ?\\C-a))$/;"	f
latex/font-clear	conf/emacs/.emacs.d/layers/+lang/latex/funcs.el	/^(defun latex\/font-clear () (interactive) (TeX-font nil ?\\C-d))$/;"	f
latex/font-code	conf/emacs/.emacs.d/layers/+lang/latex/funcs.el	/^(defun latex\/font-code () (interactive) (TeX-font nil ?\\C-t))$/;"	f
latex/font-emphasis	conf/emacs/.emacs.d/layers/+lang/latex/funcs.el	/^(defun latex\/font-emphasis () (interactive) (TeX-font nil ?\\C-e))$/;"	f
latex/font-italic	conf/emacs/.emacs.d/layers/+lang/latex/funcs.el	/^(defun latex\/font-italic () (interactive) (TeX-font nil ?\\C-i))$/;"	f
latex/font-medium	conf/emacs/.emacs.d/layers/+lang/latex/funcs.el	/^(defun latex\/font-medium () (interactive) (TeX-font nil ?\\C-m))$/;"	f
latex/font-normal	conf/emacs/.emacs.d/layers/+lang/latex/funcs.el	/^(defun latex\/font-normal () (interactive) (TeX-font nil ?\\C-n))$/;"	f
latex/font-oblique	conf/emacs/.emacs.d/layers/+lang/latex/funcs.el	/^(defun latex\/font-oblique () (interactive) (TeX-font nil ?\\C-s))$/;"	f
latex/font-sans-serif	conf/emacs/.emacs.d/layers/+lang/latex/funcs.el	/^(defun latex\/font-sans-serif () (interactive) (TeX-font nil ?\\C-f))$/;"	f
latex/font-serif	conf/emacs/.emacs.d/layers/+lang/latex/funcs.el	/^(defun latex\/font-serif () (interactive) (TeX-font nil ?\\C-r))$/;"	f
latex/font-small-caps	conf/emacs/.emacs.d/layers/+lang/latex/funcs.el	/^(defun latex\/font-small-caps () (interactive) (TeX-font nil ?\\C-c))$/;"	f
latex/font-upright	conf/emacs/.emacs.d/layers/+lang/latex/funcs.el	/^(defun latex\/font-upright () (interactive) (TeX-font nil ?\\C-u))$/;"	f
latex/init-auctex	conf/emacs/.emacs.d/layers/+lang/latex/packages.el	/^(defun latex\/init-auctex ()$/;"	f
latex/init-auctex-latexmk	conf/emacs/.emacs.d/layers/+lang/latex/packages.el	/^(defun latex\/init-auctex-latexmk ()$/;"	f
latex/init-company-auctex	conf/emacs/.emacs.d/layers/+lang/latex/packages.el	/^(defun latex\/init-company-auctex ()$/;"	f
latex/init-company-math	conf/emacs/.emacs.d/layers/+lang/latex/packages.el	/^(defun latex\/init-company-math ()$/;"	f
latex/init-company-reftex	conf/emacs/.emacs.d/layers/+lang/latex/packages.el	/^(defun latex\/init-company-reftex ()$/;"	f
latex/init-evil-tex	conf/emacs/.emacs.d/layers/+lang/latex/packages.el	/^(defun latex\/init-evil-tex ()$/;"	f
latex/init-lsp-latex	conf/emacs/.emacs.d/layers/+lang/latex/packages.el	/^(defun latex\/init-lsp-latex ()$/;"	f
latex/init-magic-latex-buffer	conf/emacs/.emacs.d/layers/+lang/latex/packages.el	/^(defun latex\/init-magic-latex-buffer ()$/;"	f
latex/init-math-symbol-lists	conf/emacs/.emacs.d/layers/+lang/latex/packages.el	/^(defun latex\/init-math-symbol-lists ()$/;"	f
latex/init-reftex	conf/emacs/.emacs.d/layers/+lang/latex/packages.el	/^(defun latex\/init-reftex ()$/;"	f
latex/post-init-company	conf/emacs/.emacs.d/layers/+lang/latex/packages.el	/^(defun latex\/post-init-company ()$/;"	f
latex/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/latex/packages.el	/^(defun latex\/post-init-counsel-gtags nil)$/;"	f
latex/post-init-evil-matchit	conf/emacs/.emacs.d/layers/+lang/latex/packages.el	/^(defun latex\/post-init-evil-matchit ()$/;"	f
latex/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/latex/packages.el	/^(defun latex\/post-init-flycheck ()$/;"	f
latex/post-init-flyspell	conf/emacs/.emacs.d/layers/+lang/latex/packages.el	/^(defun latex\/post-init-flyspell ()$/;"	f
latex/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/latex/packages.el	/^(defun latex\/post-init-ggtags ()$/;"	f
latex/post-init-smartparens	conf/emacs/.emacs.d/layers/+lang/latex/packages.el	/^(defun latex\/post-init-smartparens ()$/;"	f
latex/post-init-typo	conf/emacs/.emacs.d/layers/+lang/latex/packages.el	/^(defun latex\/post-init-typo ()$/;"	f
latex/post-init-which-key	conf/emacs/.emacs.d/layers/+lang/latex/packages.el	/^(defun latex\/post-init-which-key ()$/;"	f
latex/post-init-yasnippet	conf/emacs/.emacs.d/layers/+lang/latex/packages.el	/^(defun latex\/post-init-yasnippet ()$/;"	f
latex/pre-init-auctex-latexmk	conf/emacs/.emacs.d/layers/+lang/latex/packages.el	/^(defun latex\/pre-init-auctex-latexmk ()$/;"	f
launch	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def launch(self, text_before, visual_content, parent, start, end):$/;"	m	class:SnippetDefinition
launch	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def launch(self, config=[]):$/;"	m	class:VimInterface
launch	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def launch(self, config=[]):$/;"	m	class:VimInterfaceTmuxNeovim
layouts-autosave-delay	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/config.el	/^(defvar layouts-autosave-delay 900$/;"	f
layouts-enable-autosave	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/config.el	/^(defvar layouts-enable-autosave nil$/;"	f
layouts-enable-local-variables	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/config.el	/^(defvar layouts-enable-local-variables t$/;"	f
lazy	conf/vim/.vim/autoload/plug.vim	/^function! s:lazy(plug, opt)$/;"	f
lcs	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! s:lcs(s1, s2)$/;"	f
leave_with_wait	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def leave_with_wait(self):$/;"	m	class:VimInterface
less-enable-lsp	conf/emacs/.emacs.d/layers/+lang/html/config.el	/^(defvar less-enable-lsp nil$/;"	f
limit_num	workflows/Ariafred/src/aria.py	/^def limit_num(param):$/;"	f
limit_num	workflows/Ariafred/src/aria_actions.py	/^def limit_num(num):$/;"	f
limit_speed	workflows/Ariafred/src/aria.py	/^def limit_speed(type, param):$/;"	f
limit_speed	workflows/Ariafred/src/aria_actions.py	/^def limit_speed(type, speed):$/;"	f
line_adjustment_for_current_hunk	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:line_adjustment_for_current_hunk() abort$/;"	f
line_handler	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:line_handler(lines)$/;"	f
line_index	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def line_index(self):$/;"	m	class:LineIterator
line_till_cursor	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def line_till_cursor(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
lineinfile	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:lineinfile(fname, line) abort$/;"	f
lines	conf/vim/.vim/autoload/plug.vim	/^function! s:lines(msg)$/;"	f
lines	conf/zsh/.oh-my-zsh/plugins/aliases/cheatsheet.py	/^    lines = sys.stdin.readlines()$/;"	v
lint	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/lint/baz.go	/^package lint$/;"	p
lint	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/lint/lint.go	/^package lint$/;"	p
lint	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/lint/quux.go	/^package lint$/;"	p
lint_job	conf/vim/.vim/plugged/vim-go/autoload/go/lint.vim	/^function! s:lint_job(metalinter, args, bang, autosave)$/;"	f
linum-test-mode1	conf/emacs/.emacs.d/tests/layers/+distribution/spacemacs-base/line-numbers-utest.el	/^(define-derived-mode linum-test-mode1 linum-test-parent1 "mode1")$/;"	f
linum-test-mode2	conf/emacs/.emacs.d/tests/layers/+distribution/spacemacs-base/line-numbers-utest.el	/^(define-derived-mode linum-test-mode2 linum-test-parent2 "mode2")$/;"	f
linum-test-parent1	conf/emacs/.emacs.d/tests/layers/+distribution/spacemacs-base/line-numbers-utest.el	/^(define-derived-mode linum-test-parent1 fundamental-mode "parent1")$/;"	f
linum-test-parent2	conf/emacs/.emacs.d/tests/layers/+distribution/spacemacs-base/line-numbers-utest.el	/^(define-derived-mode linum-test-parent2 fundamental-mode "parent2")$/;"	f
linux_check	sh/kcptun.sh	/^linux_check() {$/;"	f
linux_specified	install.sh	/^linux_specified() {$/;"	f
listItemScope	conf/vim/.vim/plugged/vim-go/test/parse.go	/^	listItemScope$/;"	c
listMavenCompletions	conf/zsh/.oh-my-zsh/plugins/mvn/mvn.plugin.zsh	/^function listMavenCompletions {$/;"	f
list_breakpointsigns	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:list_breakpointsigns()$/;"	f
list_goroutines_handler	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function s:list_goroutines_handler(currentGoroutineID, check_errors, res) abort$/;"	f
list_magic	workflows/Ariafred/src/workflow/workflow.py	/^        def list_magic():$/;"	f	function:Workflow._register_default_magic
list_snippets	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def list_snippets(self):$/;"	m	class:SnippetManager
list_themes	conf/zsh/.oh-my-zsh/tools/theme_chooser.sh	/^function list_themes() {$/;"	f
listtype	conf/vim/.vim/plugged/vim-go/autoload/go/list.vim	/^function! s:listtype(listtype) abort$/;"	f
llm-client--gptel-send-called	conf/emacs/.emacs.d/layers/+web-services/llm-client/config.el	/^(defvar llm-client--gptel-send-called nil$/;"	f
llm-client-enable-ellama	conf/emacs/.emacs.d/layers/+web-services/llm-client/config.el	/^(defcustom llm-client-enable-ellama t$/;"	f
llm-client-enable-gptel	conf/emacs/.emacs.d/layers/+web-services/llm-client/config.el	/^(defcustom llm-client-enable-gptel t$/;"	f
llm-client-packages	conf/emacs/.emacs.d/layers/+web-services/llm-client/packages.el	/^(defconst llm-client-packages$/;"	f
llm-client/init-ellama	conf/emacs/.emacs.d/layers/+web-services/llm-client/packages.el	/^(defun llm-client\/init-ellama ()$/;"	f
llm-client/init-gptel	conf/emacs/.emacs.d/layers/+web-services/llm-client/packages.el	/^(defun llm-client\/init-gptel ()$/;"	f
llm-client/post-init-org	conf/emacs/.emacs.d/layers/+web-services/llm-client/packages.el	/^(defun llm-client\/post-init-org ()$/;"	f
llm-client/post-init-window-purpose	conf/emacs/.emacs.d/layers/+web-services/llm-client/packages.el	/^(defun llm-client\/post-init-window-purpose ()$/;"	f
lnif	sh/spf13-vim.sh	/^lnif() {$/;"	f
load	conf/zsh/.oh-my-zsh/plugins/nvm/nvm.plugin.zsh	/^  function load-nvmrc {$/;"	f
load	workflows/Ariafred/src/workflow/workflow.py	/^    def load(cls, file_obj):$/;"	m	class:CPickleSerializer
load	workflows/Ariafred/src/workflow/workflow.py	/^    def load(cls, file_obj):$/;"	m	class:JSONSerializer
load	workflows/Ariafred/src/workflow/workflow.py	/^    def load(cls, file_obj):$/;"	m	class:PickleSerializer
load-buffer-file	conf/emacs/.spacemacs.d/load.d/functions.el	/^(defun load-buffer-file()$/;"	f
load-env-vars	conf/emacs/.emacs.d/core/libs/forks/load-env-vars.el	/^(defun load-env-vars (file-path)$/;"	f
load-env-vars-env-var-regexp	conf/emacs/.emacs.d/core/libs/forks/load-env-vars.el	/^(defvar load-env-vars-env-var-regexp$/;"	f
load-env-vars-extract-env-vars	conf/emacs/.emacs.d/core/libs/forks/load-env-vars.el	/^(defun load-env-vars-extract-env-vars ()$/;"	f
load-env-vars-re-seq	conf/emacs/.emacs.d/core/libs/forks/load-env-vars.el	/^(defun load-env-vars-re-seq (regexp)$/;"	f
load-env-vars-set-env	conf/emacs/.emacs.d/core/libs/forks/load-env-vars.el	/^(defun load-env-vars-set-env (env-vars)$/;"	f
load-theme	conf/emacs/.emacs.d/core/core-themes-support.el	/^(define-advice load-theme (:after (theme &rest _) spacemacs\/load-theme-adv)$/;"	f
load_buffer	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! s:load_buffer(name) abort$/;"	f
load_external_module	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def load_external_module(base: str, module: str) -> None:$/;"	f
load_instance_config	sh/kcptun.sh	/^load_instance_config() {$/;"	f
load_plugin	conf/vim/.vim/autoload/plug.vim	/^function! s:load_plugin(spec)$/;"	f
loaded_names	conf/vim/.vim/autoload/plug.vim	/^function! s:loaded_names()$/;"	f
loaded_nerd_tree	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
lobsters-packages	conf/emacs/.emacs.d/layers/+web-services/lobsters/packages.el	/^(defconst lobsters-packages$/;"	f
lobsters/init-helm-lobsters	conf/emacs/.emacs.d/layers/+web-services/lobsters/packages.el	/^(defun lobsters\/init-helm-lobsters()$/;"	f
lobsters/init-ivy-lobsters	conf/emacs/.emacs.d/layers/+web-services/lobsters/packages.el	/^(defun lobsters\/init-ivy-lobsters()$/;"	f
location	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def location(self):$/;"	m	class:SnippetDefinition
lock	workflows/Ariafred/src/notifier.py	/^    lock = threading.Lock()$/;"	v
locked	workflows/Ariafred/src/workflow/util.py	/^    def locked(self):$/;"	m	class:LockFile
lod	conf/vim/.vim/autoload/plug.vim	/^function! s:lod(names, types, ...)$/;"	f
lod_cmd	conf/vim/.vim/autoload/plug.vim	/^function! s:lod_cmd(cmd, bang, l1, l2, args, names)$/;"	f
lod_ft	conf/vim/.vim/autoload/plug.vim	/^function! s:lod_ft(pat, names)$/;"	f
lod_map	conf/vim/.vim/autoload/plug.vim	/^function! s:lod_map(map, names, with_prefix, prefix)$/;"	f
log	conf/vim/.vim/autoload/plug.vim	/^function! s:log(bullet, name, lines)$/;"	f
log	workflows/Ariafred/src/workflow/notify.py	/^def log():$/;"	f
log4	conf/vim/.vim/autoload/plug.vim	/^function! s:log4(name, msg)$/;"	f
log_format	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^log_format = '%(asctime)s %(levelname)-8s [%(process)d] (%(name)s) %(message)s'$/;"	v
log_message_cooldown	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^log_message_cooldown = 0.5$/;"	v
logfile	workflows/Ariafred/src/workflow/workflow.py	/^    def logfile(self):$/;"	m	class:Workflow
logger	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:logger(prefix, ch, msg) abort$/;"	f
logger	workflows/Ariafred/src/workflow/workflow.py	/^    def logger(self):$/;"	m	class:Workflow
logger	workflows/Ariafred/src/workflow/workflow.py	/^    def logger(self, logger):$/;"	m	class:Workflow
logging	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/fmt/src/imports/vendor/gh.com/gi/foo-logging/logger.go	/^package logging$/;"	p
logmessages	conf/vim/.vim/plugged/vim-go/scripts/runtest.vim	/^function! s:logmessages() abort$/;"	f
logmethod	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^def logmethod(func: FUNC) -> typing.Callable[[FUNC], FUNC]:$/;"	f
logpos	conf/vim/.vim/autoload/plug.vim	/^function! s:logpos(name)$/;"	f
lookup	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^def lookup(db, key, format_spec, out=sys.stdout, insensitive=True, desc=True):$/;"	f
lpad	conf/vim/.vim/autoload/plug.vim	/^function! s:lpad(str, len)$/;"	f
ls	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/test-data/function.zsh	/^ls() {$/;"	f
ls	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/test-data/function.zsh	/^ls() {$/;"	f
lsk	conf/zsh/.oh-my-zsh/plugins/localstack/localstack.plugin.zsh	/^lsk() {$/;"	f
lsp-manage-backends-manually	conf/emacs/.emacs.d/layers/+tools/lsp/config.el	/^(defvar lsp-manage-backends-manually nil "When non-nil lsp-mode does not insert `company-capf' as the ultimate first item of `company-backends'.$/;"	f
lsp-navigation	conf/emacs/.emacs.d/layers/+tools/lsp/config.el	/^(defvar lsp-navigation 'both$/;"	f
lsp-packages	conf/emacs/.emacs.d/layers/+tools/lsp/packages.el	/^(defconst lsp-packages$/;"	f
lsp-remap-xref-keybindings	conf/emacs/.emacs.d/layers/+tools/lsp/config.el	/^(defvar lsp-remap-xref-keybindings nil "When non-nil, xref keybindings remapped to lsp-ui-peek-find-*")$/;"	f
lsp-sonarlint	conf/emacs/.emacs.d/layers/+tools/lsp/config.el	/^(defvar lsp-sonarlint nil "When non-nil, use `lsp-sonarlint' package.")$/;"	f
lsp-ui-doc-enable	conf/emacs/.emacs.d/layers/+tools/lsp/config.el	/^(defvar lsp-ui-doc-enable t "Enable\/disable lsp-ui-doc overlay")$/;"	f
lsp-ui-doc-include-signature	conf/emacs/.emacs.d/layers/+tools/lsp/config.el	/^(defvar lsp-ui-doc-include-signature nil "When non-nil, type signature included in the lsp-ui-doc overlay")$/;"	f
lsp-ui-sideline-enable	conf/emacs/.emacs.d/layers/+tools/lsp/config.el	/^(defvar lsp-ui-sideline-enable t "Enable\/disable lsp-ui-sideline overlay")$/;"	f
lsp-ui-sideline-ignore-duplicate	conf/emacs/.emacs.d/layers/+tools/lsp/config.el	/^(defvar lsp-ui-sideline-ignore-duplicate t "Ignore duplicates")$/;"	f
lsp-ui-sideline-show-symbol	conf/emacs/.emacs.d/layers/+tools/lsp/config.el	/^(defvar lsp-ui-sideline-show-symbol nil "When non-nil, sideline includes symbol info (largely redundant for c modes)")  ; don't show symbol on the right of info$/;"	f
lsp-use-lsp-ui	conf/emacs/.emacs.d/layers/+tools/lsp/config.el	/^(defvar lsp-use-lsp-ui t "When non-nil, use `lsp-ui' package.")$/;"	f
lsp-use-upstream-bindings	conf/emacs/.emacs.d/layers/+tools/lsp/config.el	/^(defvar lsp-use-upstream-bindings nil "When non-nil, map keys to `lsp-command-map'.")$/;"	f
lsp/init-consult-lsp	conf/emacs/.emacs.d/layers/+tools/lsp/packages.el	/^(defun lsp\/init-consult-lsp ()$/;"	f
lsp/init-helm-lsp	conf/emacs/.emacs.d/layers/+tools/lsp/packages.el	/^(defun lsp\/init-helm-lsp ()$/;"	f
lsp/init-lsp-ivy	conf/emacs/.emacs.d/layers/+tools/lsp/packages.el	/^(defun lsp\/init-lsp-ivy ()$/;"	f
lsp/init-lsp-mode	conf/emacs/.emacs.d/layers/+tools/lsp/packages.el	/^(defun lsp\/init-lsp-mode ()$/;"	f
lsp/init-lsp-origami	conf/emacs/.emacs.d/layers/+tools/lsp/packages.el	/^(defun lsp\/init-lsp-origami ()$/;"	f
lsp/init-lsp-sonarlint	conf/emacs/.emacs.d/layers/+tools/lsp/packages.el	/^(defun lsp\/init-lsp-sonarlint ()$/;"	f
lsp/init-lsp-treemacs	conf/emacs/.emacs.d/layers/+tools/lsp/packages.el	/^(defun lsp\/init-lsp-treemacs ()$/;"	f
lsp/init-lsp-ui	conf/emacs/.emacs.d/layers/+tools/lsp/packages.el	/^(defun lsp\/init-lsp-ui ()$/;"	f
lsp/pre-init-popwin	conf/emacs/.emacs.d/layers/+tools/lsp/packages.el	/^(defun lsp\/pre-init-popwin ()$/;"	f
lspfactory.get	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:lspfactory.get() dict abort$/;"	f
lspfactory.reset	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:lspfactory.reset() dict abort$/;"	f
lstheme	conf/zsh/.oh-my-zsh/plugins/themes/themes.plugin.zsh	/^function lstheme {$/;"	f
lua-backend	conf/emacs/.emacs.d/layers/+lang/lua/config.el	/^(defvar lua-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'lua-mode)$/;"	f
lua-lsp-server	conf/emacs/.emacs.d/layers/+lang/lua/config.el	/^(defvar lua-lsp-server 'emmy$/;"	f
lua-packages	conf/emacs/.emacs.d/layers/+lang/lua/packages.el	/^(defconst lua-packages$/;"	f
lua/init-company-lua	conf/emacs/.emacs.d/layers/+lang/lua/packages.el	/^(defun lua\/init-company-lua ()$/;"	f
lua/init-lua-mode	conf/emacs/.emacs.d/layers/+lang/lua/packages.el	/^(defun lua\/init-lua-mode ()$/;"	f
lua/post-init-company	conf/emacs/.emacs.d/layers/+lang/lua/packages.el	/^(defun lua\/post-init-company ()$/;"	f
lua/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/lua/packages.el	/^(defun lua\/post-init-counsel-gtags nil)$/;"	f
lua/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/lua/packages.el	/^(defun lua\/post-init-flycheck ()$/;"	f
lua/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/lua/packages.el	/^(defun lua\/post-init-ggtags ()$/;"	f
lwd	conf/zsh/.oh-my-zsh/plugins/last-working-dir/last-working-dir.plugin.zsh	/^lwd() {$/;"	f
mac-tool-bar-display-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defvar mac-tool-bar-display-mode)$/;"	f
magnet_to_torrent	conf/zsh/.oh-my-zsh/plugins/torrent/torrent.plugin.zsh	/^function magnet_to_torrent() {$/;"	f
main	conf/tmux/.tmux/plugins/tmux-sensible/sensible.tmux	/^main() {$/;"	f
main	conf/tmux/.tmux/plugins/tmux-themepack/bin/build-theme	/^main() {$/;"	f
main	conf/tmux/.tmux/plugins/tmux-themepack/themepack.tmux	/^main() {$/;"	f
main	conf/tmux/.tmux/plugins/tpm/bin/clean_plugins	/^main() {$/;"	f
main	conf/tmux/.tmux/plugins/tpm/bin/install_plugins	/^main() {$/;"	f
main	conf/tmux/.tmux/plugins/tpm/bin/update_plugins	/^main() {$/;"	f
main	conf/tmux/.tmux/plugins/tpm/bindings/clean_plugins	/^main() {$/;"	f
main	conf/tmux/.tmux/plugins/tpm/bindings/install_plugins	/^main() {$/;"	f
main	conf/tmux/.tmux/plugins/tpm/bindings/update_plugins	/^main() {$/;"	f
main	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/run_framework_tests	/^main() {$/;"	f
main	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/run_tests	/^main() {$/;"	f
main	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/setup	/^main() {$/;"	f
main	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/tests/run_tests_in_isolation	/^main() {$/;"	f
main	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/tests/test_tmux_scripting.sh	/^main() {$/;"	f
main	conf/tmux/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^main() {$/;"	f
main	conf/tmux/.tmux/plugins/tpm/scripts/clean_plugins.sh	/^main() {$/;"	f
main	conf/tmux/.tmux/plugins/tpm/scripts/install_plugins.sh	/^main() {$/;"	f
main	conf/tmux/.tmux/plugins/tpm/scripts/source_plugins.sh	/^main() {$/;"	f
main	conf/tmux/.tmux/plugins/tpm/scripts/update_plugin.sh	/^main() {$/;"	f
main	conf/tmux/.tmux/plugins/tpm/scripts/update_plugin_prompt_handler.sh	/^main() {$/;"	f
main	conf/tmux/.tmux/plugins/tpm/tpm	/^main() {$/;"	f
main	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/_main.py	/^def main(serveraddr):$/;"	f
main	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def main(self, name: str, args: typing.List[typing.Any],$/;"	m	class:Child
main	conf/vim/.vim/plugged/ultisnips/test_all.py	/^    def main():$/;"	f	function:setup_other_plugins
main	conf/vim/.vim/plugged/vim-clang-format/test/t/test.cpp	/^int main()$/;"	f
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/cmd/bad.go	/^func main() {$/;"	f
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/cmd/bad.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/debug/compilerror/main.go	/^func main() {$/;"	f
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/debug/compilerror/main.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/debug/debugmain/debugmain.go	/^func main() {$/;"	f
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/debug/debugmain/debugmain.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/def/jump.go	/^func main() {$/;"	f
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/def/jump.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/fmt/hello.go	/^  func main() {$/;"	f
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/fmt/hello.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/fmt/hello_golden.go	/^func main() {$/;"	f
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/fmt/hello_golden.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/fmt/src/imports/goimports.go	/^func main() {$/;"	f
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/fmt/src/imports/goimports.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/fmt/src/imports/goimports_golden.go	/^func main() {$/;"	f
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/fmt/src/imports/goimports_golden.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/job/dir has spaces/main.go	/^func main() {$/;"	f
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/job/dir has spaces/main.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/errcheck/compilererror/compilererror.go	/^func main() {$/;"	f
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/errcheck/compilererror/compilererror.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/vet/compilererror/compilererror.go	/^func main() {$/;"	f
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/vet/compilererror/compilererror.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/vet/vet.go	/^func main() {$/;"	f
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/vet/vet.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lsp/fmt/format.go	/^  func main() {$/;"	f
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lsp/fmt/format.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lsp/fmt/format_golden.go	/^func main() {$/;"	f
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lsp/fmt/format_golden.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lsp/fmt/multibyte.go	/^func main() {$/;"	f
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lsp/fmt/multibyte.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lsp/fmt/multibyte_golden.go	/^func main() {$/;"	f
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lsp/fmt/multibyte_golden.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lsp/fmt/newline.go	/^func main() {$/;"	f
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lsp/fmt/newline.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lsp/imports/imports.go	/^func main() {$/;"	f
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lsp/imports/imports.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lsp/imports/imports_golden.go	/^func main() {$/;"	f
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lsp/imports/imports_golden.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/package/src/package/package.go	/^func main() {$/;"	f
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/package/src/package/package.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/tags/add_all_golden.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/tags/add_all_golden_options.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/tags/add_all_input.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/tags/remove_all_golden.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/tags/remove_all_input.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/term/term.go	/^func main() {$/;"	f
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/term/term.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/compilerror/compilerror.go	/^func main() {$/;"	f
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/compilerror/compilerror.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/example/example_test.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/showname/showname_test.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/testcompilerror/testcompilerror_test.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/timeout/timeout_test.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/veterror/veterror.go	/^func main() {$/;"	f
main	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/veterror/veterror.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/templates/hello_world.go	/^func main() {$/;"	f
main	conf/vim/.vim/plugged/vim-go/templates/hello_world.go	/^package main$/;"	p
main	conf/vim/.vim/plugged/vim-go/templates/hello_world_test.go	/^package main$/;"	p
main	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^def main():$/;"	f
main	conf/zsh/.oh-my-zsh/plugins/shell-proxy/proxy.py	/^def main():$/;"	f
main	conf/zsh/.oh-my-zsh/tools/changelog.sh	/^function main {$/;"	f
main	conf/zsh/.oh-my-zsh/tools/install.sh	/^main() {$/;"	f
main	sh/rsyncm.sh	/^main()$/;"	f
main	workflows/Ariafred/src/aria.py	/^def main(wf):$/;"	f
main	workflows/Ariafred/src/aria_actions.py	/^def main(wf):$/;"	f
main	workflows/Ariafred/src/notifier.py	/^def main(wf):$/;"	f
main	workflows/Ariafred/src/workflow/background.py	/^def main(wf):  # pragma: no cover$/;"	f
main_loop	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def main_loop(self, stdout: typing.Any) -> None:$/;"	m	class:Child
major-modes/init-arduino-mode	conf/emacs/.emacs.d/layers/+lang/major-modes/packages.el	/^(defun major-modes\/init-arduino-mode ())$/;"	f
major-modes/init-ebuild-mode	conf/emacs/.emacs.d/layers/+lang/major-modes/packages.el	/^(defun major-modes\/init-ebuild-mode ()$/;"	f
major-modes/init-gemini-mode	conf/emacs/.emacs.d/layers/+lang/major-modes/packages.el	/^(defun major-modes\/init-gemini-mode ()$/;"	f
major-modes/init-hoon-mode	conf/emacs/.emacs.d/layers/+lang/major-modes/packages.el	/^(defun major-modes\/init-hoon-mode ())$/;"	f
major-modes/init-logcat	conf/emacs/.emacs.d/layers/+lang/major-modes/packages.el	/^(defun major-modes\/init-logcat ()$/;"	f
major-modes/init-matlab-mode	conf/emacs/.emacs.d/layers/+lang/major-modes/packages.el	/^(defun major-modes\/init-matlab-mode ()$/;"	f
major-modes/init-pkgbuild-mode	conf/emacs/.emacs.d/layers/+lang/major-modes/packages.el	/^(defun major-modes\/init-pkgbuild-mode ()$/;"	f
major-modes/init-qml-mode	conf/emacs/.emacs.d/layers/+lang/major-modes/packages.el	/^(defun major-modes\/init-qml-mode ()$/;"	f
major-modes/init-scad-mode	conf/emacs/.emacs.d/layers/+lang/major-modes/packages.el	/^(defun major-modes\/init-scad-mode ())$/;"	f
major-modes/init-stan-mode	conf/emacs/.emacs.d/layers/+lang/major-modes/packages.el	/^(defun major-modes\/init-stan-mode ())$/;"	f
major-modes/init-thrift	conf/emacs/.emacs.d/layers/+lang/major-modes/packages.el	/^(defun major-modes\/init-thrift ())$/;"	f
major-modes/init-vala-mode	conf/emacs/.emacs.d/layers/+lang/major-modes/packages.el	/^(defun major-modes\/init-vala-mode ()$/;"	f
major-modes/init-vala-snippets	conf/emacs/.emacs.d/layers/+lang/major-modes/packages.el	/^(defun major-modes\/init-vala-snippets ())$/;"	f
major-modes/init-wolfram-mode	conf/emacs/.emacs.d/layers/+lang/major-modes/packages.el	/^(defun major-modes\/init-wolfram-mode ()$/;"	f
major-modes/post-init-evil-matchit	conf/emacs/.emacs.d/layers/+lang/major-modes/packages.el	/^(defun major-modes\/post-init-evil-matchit ()$/;"	f
make-shell-pop-command	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defmacro make-shell-pop-command (name func &optional shell)$/;"	f
make_argv	conf/zsh/.oh-my-zsh/plugins/shell-proxy/ssh-proxy.py	/^def make_argv():$/;"	f
make_box	conf/vim/.vim/plugged/vim-snippets/pythonx/vimsnippets.py	/^def make_box(twidth, bwidth=None):$/;"	f
make_candidates	conf/vim/.vim/plugged/vim-go/rplugin/python3/denite/source/decls.py	/^        def make_candidates(row):$/;"	f	function:Source.gather_candidates
make_proxies	conf/zsh/.oh-my-zsh/plugins/shell-proxy/proxy.py	/^def make_proxies(url: str, no_proxy: str):$/;"	f
make_style_options	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:make_style_options() abort$/;"	f
man	conf/zsh/.oh-my-zsh/plugins/colored-man-pages/colored-man-pages.plugin.zsh	/^function man \\$/;"	f
man	conf/zsh/.oh-my-zsh/plugins/macos/macos.plugin.zsh	/^function man-preview() {$/;"	f
manager	workflows/Ariafred/src/workflow/workflow.py	/^manager = SerializerManager()$/;"	v
manual_completion_begin	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def manual_completion_begin(self, context: Context) -> None:$/;"	m	class:DeopleteHandlers
manual_install	sh/kcptun.sh	/^manual_install() {$/;"	f
manually_install_the_plugin	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_clean.sh	/^manually_install_the_plugin() {$/;"	f
manually_install_the_plugin	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_update.sh	/^manually_install_the_plugin() {$/;"	f
mapleader	conf/vim/.vim/custom/keymaps.vim	/^let mapleader = ","$/;"	v
maps	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    maps = ("", "")$/;"	v	class:_SelectModeMappings
maps	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    maps = ("H", "x")$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
maps	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    maps = ("H", "x")$/;"	v	class:SelectModeMappings_RemoveBeforeSelecting_ECR
maps	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    maps = ("H", "x"), ("e", "l")$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
maps	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    maps = ("H", "x"), ("e", "l")$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
maps	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    maps = ("e", "l"), ("H", "x")$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
mark	conf/zsh/.oh-my-zsh/plugins/jump/jump.plugin.zsh	/^mark() {$/;"	f
mark_aborted	conf/vim/.vim/autoload/plug.vim	/^function! s:mark_aborted(name, message)$/;"	f
mark_sink	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:mark_sink(lines)$/;"	f
markdown--key-bindings-modes	conf/emacs/.emacs.d/layers/+lang/markdown/config.el	/^(defvar markdown--key-bindings-modes '(markdown-mode gfm-mode)$/;"	f
markdown-live-preview-engine	conf/emacs/.emacs.d/layers/+lang/markdown/config.el	/^(defvar markdown-live-preview-engine 'eww$/;"	f
markdown-packages	conf/emacs/.emacs.d/layers/+lang/markdown/packages.el	/^(defconst markdown-packages$/;"	f
markdown/init-gh-md	conf/emacs/.emacs.d/layers/+lang/markdown/packages.el	/^(defun markdown\/init-gh-md ()$/;"	f
markdown/init-markdown-mode	conf/emacs/.emacs.d/layers/+lang/markdown/packages.el	/^(defun markdown\/init-markdown-mode ()$/;"	f
markdown/init-markdown-toc	conf/emacs/.emacs.d/layers/+lang/markdown/packages.el	/^(defun markdown\/init-markdown-toc ()$/;"	f
markdown/init-vmd-mode	conf/emacs/.emacs.d/layers/+lang/markdown/packages.el	/^(defun markdown\/init-vmd-mode ()$/;"	f
markdown/post-init-company	conf/emacs/.emacs.d/layers/+lang/markdown/packages.el	/^(defun markdown\/post-init-company ()$/;"	f
markdown/post-init-company-emoji	conf/emacs/.emacs.d/layers/+lang/markdown/packages.el	/^(defun markdown\/post-init-company-emoji ()$/;"	f
markdown/post-init-emoji-cheat-sheet-plus	conf/emacs/.emacs.d/layers/+lang/markdown/packages.el	/^(defun markdown\/post-init-emoji-cheat-sheet-plus ()$/;"	f
markdown/post-init-smartparens	conf/emacs/.emacs.d/layers/+lang/markdown/packages.el	/^(defun markdown\/post-init-smartparens ()$/;"	f
markdown/post-init-valign	conf/emacs/.emacs.d/layers/+lang/markdown/packages.el	/^(defun markdown\/post-init-valign ()$/;"	f
marked	conf/zsh/.oh-my-zsh/plugins/marked2/marked2.plugin.zsh	/^function marked() {$/;"	f
marks	conf/zsh/.oh-my-zsh/plugins/jump/jump.plugin.zsh	/^marks() {$/;"	f
marktext	conf/zsh/.oh-my-zsh/plugins/marktext/marktext.plugin.zsh	/^function marktext() {$/;"	f
match_in_entry_insensitive	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^    def match_in_entry_insensitive(self, key):$/;"	m	class:Element
match_in_entry_sensitive	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^    def match_in_entry_sensitive(self, key):$/;"	m	class:Element
match_insensitive	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^    def match_insensitive(self, key):$/;"	m	class:Element
match_sensitive	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^    def match_sensitive(self, key):$/;"	m	class:Element
match_version	workflows/Ariafred/src/workflow/update.py	/^    match_version = re.compile(r'([0-9\\.]+)(.+)?').match$/;"	v	class:Version
matchaddpos	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! s:matchaddpos(group, pos) abort$/;"	f
matched	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def matched(self):$/;"	m	class:SnippetDefinition
matched_indentkeys	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:matched_indentkeys(input) abort$/;"	f
matches	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def matches(self, before, visual_content=None):$/;"	m	class:SnippetDefinition
maxDiff	conf/vim/.vim/plugged/ultisnips/test/vim_test_case.py	/^    maxDiff = None  # Show all diff output, always.$/;"	v	class:VimTestCase
max_firstline	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:max_firstline(lines, height, width) abort$/;"	f
maximize-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun maximize-frame (&optional direction frame)$/;"	f
maximize-frame-horizontally	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun maximize-frame-horizontally (&optional frame)$/;"	f
maximize-frame-vertically	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun maximize-frame-vertically (&optional frame)$/;"	f
mercury-packages	conf/emacs/.emacs.d/layers/+lang/mercury/packages.el	/^(defconst mercury-packages$/;"	f
mercury/init-flycheck-mercury	conf/emacs/.emacs.d/layers/+lang/mercury/packages.el	/^(defun mercury\/init-flycheck-mercury ()$/;"	f
mercury/init-metal-mercury-mode	conf/emacs/.emacs.d/layers/+lang/mercury/packages.el	/^(defun mercury\/init-metal-mercury-mode ()$/;"	f
mercury/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/mercury/packages.el	/^(defun mercury\/post-init-flycheck ()$/;"	f
mercury/post-init-smartparens	conf/emacs/.emacs.d/layers/+lang/mercury/packages.el	/^(defun mercury\/post-init-smartparens ()$/;"	f
merge	conf/zsh/.oh-my-zsh/plugins/shell-proxy/proxy.py	/^def merge(mapping: dict):$/;"	f
merge_command	conf/vim/.vim/autoload/plug.vim	/^function! s:merge_command(spec)$/;"	f
merge_opts	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:merge_opts(dict, eopts)$/;"	f
merge_results	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def merge_results(self,$/;"	m	class:AsyncParent
merge_results	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def merge_results(self,$/;"	m	class:SyncParent
meson-packages	conf/emacs/.emacs.d/layers/+tools/meson/packages.el	/^(defconst meson-packages$/;"	f
meson/init-meson-mode	conf/emacs/.emacs.d/layers/+tools/meson/packages.el	/^(defun meson\/init-meson-mode ()$/;"	f
message	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:message(buf, data) abort$/;"	f
metalinterautosavecomplete	conf/vim/.vim/plugged/vim-go/autoload/go/lint.vim	/^function! s:metalinterautosavecomplete(metalinter, filepath, job, exit_code, messages)$/;"	f
metalintercmd	conf/vim/.vim/plugged/vim-go/autoload/go/lint.vim	/^function! s:metalintercmd(metalinter, haslinter)$/;"	f
min_btns_width	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^function! s:min_btns_width(buttons) abort$/;"	f
minibuffer-local-completion-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(define-key minibuffer-local-completion-map (kbd "<escape>") 'keyboard-escape-quit)$/;"	f
minibuffer-local-isearch-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(define-key minibuffer-local-isearch-map (kbd "<escape>") 'keyboard-escape-quit)$/;"	f
minibuffer-local-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(define-key minibuffer-local-map (kbd "<escape>") 'keyboard-escape-quit)$/;"	f
minibuffer-local-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(define-key minibuffer-local-map (kbd "C-n") 'next-line-or-history-element)$/;"	f
minibuffer-local-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(define-key minibuffer-local-map (kbd "C-p") 'previous-line-or-history-element)$/;"	f
minibuffer-local-must-match-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(define-key minibuffer-local-must-match-map (kbd "<escape>") 'keyboard-escape-quit)$/;"	f
minibuffer-local-ns-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(define-key minibuffer-local-ns-map (kbd "<escape>") 'keyboard-escape-quit)$/;"	f
mkcd	conf/zsh/.oh-my-zsh/lib/functions.zsh	/^function mkcd takedir() {$/;"	f
mkline	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def mkline(self, line="", indent=None):$/;"	m	class:SnippetUtil
mkv	conf/zsh/.oh-my-zsh/plugins/python/python.plugin.zsh	/^function mkv() {$/;"	f
mock	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/play/mock/controller.go	/^package mock$/;"	p
mocker--plist-remove	conf/emacs/.emacs.d/core/libs/mocker.el	/^(defun mocker--plist-remove (plist key)$/;"	f
mocker-gen-mocks	conf/emacs/.emacs.d/core/libs/mocker.el	/^(defun mocker-gen-mocks (mockspecs)$/;"	f
mocker-inhibit	conf/emacs/.emacs.d/core/libs/mocker.el	/^(defvar mocker-inhibit nil)$/;"	f
mocker-input-record	conf/emacs/.emacs.d/core/libs/mocker.el	/^(defclass mocker-input-record (mocker-record-base)$/;"	f
mocker-let	conf/emacs/.emacs.d/core/libs/mocker.el	/^(defmacro mocker-let (mockspecs &rest body)$/;"	f
mocker-mock	conf/emacs/.emacs.d/core/libs/mocker.el	/^(defclass mocker-mock ()$/;"	f
mocker-mock-default-record-cls	conf/emacs/.emacs.d/core/libs/mocker.el	/^(defvar mocker-mock-default-record-cls 'mocker-record)$/;"	f
mocker-passthrough-record	conf/emacs/.emacs.d/core/libs/mocker.el	/^(defclass mocker-passthrough-record (mocker-input-record)$/;"	f
mocker-record	conf/emacs/.emacs.d/core/libs/mocker.el	/^(defclass mocker-record (mocker-input-record)$/;"	f
mocker-record-base	conf/emacs/.emacs.d/core/libs/mocker.el	/^(defclass mocker-record-base ()$/;"	f
mocker-stub-record	conf/emacs/.emacs.d/core/libs/mocker.el	/^(defclass mocker-stub-record (mocker-record-base)$/;"	f
mode	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def mode(self):$/;"	m	class:VimPosition
mode	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def mode(self):$/;"	m	class:VisualContentPreserver
module	conf/vim/.vim/plugged/vim-go/autoload/go/package.vim	/^function! s:module() abort$/;"	f
monitor_pair	sh/monitor_rsync_multi.sh	/^monitor_pair() {$/;"	f
monitor_pair	sh/monitor_rsync_multi.sh.orig	/^monitor_pair() {$/;"	f
mouse-iconify/map-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defalias 'mouse-iconify\/map-frame 'mouse-iconify\/show-frame) ; `...\/map...' is the old name.$/;"	f
mouse-iconify/show-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun mouse-iconify\/show-frame (event)$/;"	f
mouse-remove-window	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun mouse-remove-window (event)$/;"	f
mouse-show-hide-mark-unmark	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun mouse-show-hide-mark-unmark (event)$/;"	f
move	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def move(self, pivot, delta):$/;"	m	class:Position
move-frame-down	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun move-frame-down (&optional n frame) ; Suggested binding: `M-down'.$/;"	f
move-frame-left	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun move-frame-left (&optional n frame) ; Suggested binding: `M-left'.$/;"	f
move-frame-right	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun move-frame-right (&optional n frame) ; Suggested binding: `M-right'.$/;"	f
move-frame-to-screen-bottom	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun move-frame-to-screen-bottom (arg &optional frame) ; Suggested binding: `C-S-v'.$/;"	f
move-frame-to-screen-left	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun move-frame-to-screen-left (arg &optional frame) ; Suggested binding: `C-S-prior'.$/;"	f
move-frame-to-screen-right	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun move-frame-to-screen-right (arg &optional frame) ; Suggested binding: `C-S-next'.$/;"	f
move-frame-to-screen-top	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun move-frame-to-screen-top (arg &optional frame) ; Suggested binding: `M-S-v'.$/;"	f
move-frame-to-screen-top-left	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun move-frame-to-screen-top-left (arg &optional frame) ; Suggested binding: `C-S-home'.$/;"	f
move-frame-up	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun move-frame-up (&optional n frame) ; Suggested binding: `M-up'.$/;"	f
move-frame-wrap-within-display-flag	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defcustom move-frame-wrap-within-display-flag t$/;"	f
move_win_timer	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^function! s:move_win_timer(winid, from, to, curr) abort$/;"	f
msg	sh/spf13-vim.sh	/^msg() {$/;"	f
mu4e-autorun-background-at-startup	conf/emacs/.emacs.d/layers/+email/mu4e/config.el	/^(defvar mu4e-autorun-background-at-startup nil$/;"	f
mu4e-enable-async-operations	conf/emacs/.emacs.d/layers/+email/mu4e/config.el	/^(defvar mu4e-enable-async-operations nil$/;"	f
mu4e-enable-mode-line	conf/emacs/.emacs.d/layers/+email/mu4e/config.el	/^(defvar mu4e-enable-mode-line nil$/;"	f
mu4e-enable-notifications	conf/emacs/.emacs.d/layers/+email/mu4e/config.el	/^(defvar mu4e-enable-notifications nil$/;"	f
mu4e-installation-path	conf/emacs/.emacs.d/layers/+email/mu4e/config.el	/^(defvar mu4e-installation-path nil$/;"	f
mu4e-list-modes	conf/emacs/.emacs.d/layers/+email/mu4e/config.el	/^(defvar mu4e-list-modes$/;"	f
mu4e-modes	conf/emacs/.emacs.d/layers/+email/mu4e/config.el	/^(defvar mu4e-modes$/;"	f
mu4e-org-compose-support	conf/emacs/.emacs.d/layers/+email/mu4e/config.el	/^(defvar mu4e-org-compose-support nil$/;"	f
mu4e-org-link-support	conf/emacs/.emacs.d/layers/+email/mu4e/config.el	/^(defvar mu4e-org-link-support t$/;"	f
mu4e-packages	conf/emacs/.emacs.d/layers/+email/mu4e/packages.el	/^(defconst mu4e-packages$/;"	f
mu4e-spacemacs-kill-layout-on-exit	conf/emacs/.emacs.d/layers/+email/mu4e/config.el	/^(defvar mu4e-spacemacs-kill-layout-on-exit t$/;"	f
mu4e-spacemacs-layout-binding	conf/emacs/.emacs.d/layers/+email/mu4e/config.el	/^(defvar mu4e-spacemacs-layout-binding "m"$/;"	f
mu4e-spacemacs-layout-name	conf/emacs/.emacs.d/layers/+email/mu4e/config.el	/^(defvar mu4e-spacemacs-layout-name "@Mu4e"$/;"	f
mu4e-view-modes	conf/emacs/.emacs.d/layers/+email/mu4e/config.el	/^(defvar mu4e-view-modes$/;"	f
mu4e/init-helm-mu	conf/emacs/.emacs.d/layers/+email/mu4e/packages.el	/^(defun mu4e\/init-helm-mu ()$/;"	f
mu4e/init-mu4e	conf/emacs/.emacs.d/layers/+email/mu4e/packages.el	/^(defun mu4e\/init-mu4e ()$/;"	f
mu4e/init-mu4e-alert	conf/emacs/.emacs.d/layers/+email/mu4e/packages.el	/^(defun mu4e\/init-mu4e-alert ()$/;"	f
mu4e/load-signature-from-file	conf/emacs/.emacs.d/layers/+email/mu4e/funcs.el	/^(defun mu4e\/load-signature-from-file (file)$/;"	f
mu4e/message-is-for-p	conf/emacs/.emacs.d/layers/+email/mu4e/funcs.el	/^(defun mu4e\/message-is-for-p (msg rx)$/;"	f
mu4e/post-init-persp-mode	conf/emacs/.emacs.d/layers/+email/mu4e/packages.el	/^(defun mu4e\/post-init-persp-mode ()$/;"	f
mu4e/post-init-window-purpose	conf/emacs/.emacs.d/layers/+email/mu4e/packages.el	/^(defun mu4e\/post-init-window-purpose ()$/;"	f
mu4e/pre-init-org	conf/emacs/.emacs.d/layers/+email/mu4e/packages.el	/^(defun mu4e\/pre-init-org ()$/;"	f
multi-window-frames-on	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-fns.el	/^(defun multi-window-frames-on (buffer)$/;"	f
multiple-cursors-backend	conf/emacs/.emacs.d/layers/+misc/multiple-cursors/config.el	/^(defvar multiple-cursors-backend 'evil-mc$/;"	f
multiple-cursors-packages	conf/emacs/.emacs.d/layers/+misc/multiple-cursors/packages.el	/^(defconst multiple-cursors-packages$/;"	f
multiple-cursors/init-evil-mc	conf/emacs/.emacs.d/layers/+misc/multiple-cursors/packages.el	/^(defun multiple-cursors\/init-evil-mc ()$/;"	f
multiple-cursors/init-multiple-cursors	conf/emacs/.emacs.d/layers/+misc/multiple-cursors/packages.el	/^(defun multiple-cursors\/init-multiple-cursors ()$/;"	f
multiterm	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun multiterm (&optional ARG)$/;"	f
multivterm	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun multivterm (&optional ARG)$/;"	f
my-tags-query-replace-compile-replacement	conf/emacs/.spacemacs.d/load.d/functions.el	/^(defun my-tags-query-replace-compile-replacement (fun &rest args)$/;"	f
mySleep	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/lint/golangci-lint/problems/multiple/problems.go	/^func mySleep(time int) {$/;"	f
mySleep	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/lint/golangci-lint/problems/shadow/problems.go	/^func mySleep(time int) {$/;"	f
mygroup	conf/vim/.vim/custom/coc.vim	/^augroup mygroup$/;"	a
mygroup	conf/vim/.vim/plugged/coc.nvim/doc/coc-example-config.vim	/^augroup mygroup$/;"	a
name	workflows/Ariafred/src/workflow/workflow.py	/^    def name(self):$/;"	m	class:Workflow
name-all-frames-numerically	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun name-all-frames-numerically (&optional startover)$/;"	f
name-frame-numerically	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun name-frame-numerically (&optional frame frames)$/;"	f
name_temp	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def name_temp(self, file_path):$/;"	m	class:TempFileManager
name_to_omz	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^def name_to_omz(_name, _group, _subgroup, _status):$/;"	f
names	conf/vim/.vim/autoload/plug.vim	/^function! s:names(...)$/;"	f
names_for_this_emoji	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^    names_for_this_emoji = [_omz_name]$/;"	v
nav-flash--last-point	conf/emacs/.emacs.d/layers/+misc/nav-flash/config.el	/^(defvar nav-flash--last-point nil$/;"	f
nav-flash-packages	conf/emacs/.emacs.d/layers/+misc/nav-flash/packages.el	/^(defconst nav-flash-packages$/;"	f
nav-flash//blink-cursor	conf/emacs/.emacs.d/layers/+misc/nav-flash/funcs.el	/^(defun nav-flash\/\/blink-cursor (&rest _)$/;"	f
nav-flash/blink-cursor	conf/emacs/.emacs.d/layers/+misc/nav-flash/funcs.el	/^(defun nav-flash\/blink-cursor (&rest _)$/;"	f
nav-flash/blink-cursor-maybe	conf/emacs/.emacs.d/layers/+misc/nav-flash/funcs.el	/^(defun nav-flash\/blink-cursor-maybe (&rest _)$/;"	f
nav-flash/delayed-blink-cursor-h	conf/emacs/.emacs.d/layers/+misc/nav-flash/funcs.el	/^(defun nav-flash\/delayed-blink-cursor-h (&rest _)$/;"	f
nav-flash/init-nav-flash	conf/emacs/.emacs.d/layers/+misc/nav-flash/packages.el	/^(defun nav-flash\/init-nav-flash()$/;"	f
navigate	conf/emacs/.emacs.d/layers/+tools/tmux/local/tmux/tmux.el	/^(defgroup navigate nil$/;"	f
negative	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    negative = "no xxx"$/;"	v	class:ContextSnippets_ContextHasAccessToReMatch
neocb	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^function! s:neocb(mode, ch, buf, data, callback)$/;"	f
neocomplete#sources#ultisnips#define	conf/vim/.vim/plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^function! neocomplete#sources#ultisnips#define() abort$/;"	f
neooptions	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^function! s:neooptions(options)$/;"	f
neotree-find-project-root	conf/emacs/.emacs.d/layers/+filetree/neotree/funcs.el	/^(defun neotree-find-project-root ()$/;"	f
neotree-packages	conf/emacs/.emacs.d/layers/+filetree/neotree/packages.el	/^(defconst neotree-packages$/;"	f
neotree/init-neotree	conf/emacs/.emacs.d/layers/+filetree/neotree/packages.el	/^(defun neotree\/init-neotree ()$/;"	f
neotree/pre-init-winum	conf/emacs/.emacs.d/layers/+filetree/neotree/packages.el	/^(defun neotree\/pre-init-winum ()$/;"	f
nerdtree#caseSensitiveFS	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#caseSensitiveFS() abort$/;"	f
nerdtree#checkForBrowse	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir) abort$/;"	f
nerdtree#closeBookmarksOnOpen	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeBookmarksOnOpen() abort$/;"	f
nerdtree#closeTreeOnOpen	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#closeTreeOnOpen() abort$/;"	f
nerdtree#compareNodePaths	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodePaths(p1, p2) abort$/;"	f
nerdtree#compareNodes	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2) abort$/;"	f
nerdtree#completeBookmarks	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P) abort$/;"	f
nerdtree#deprecated	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...) abort$/;"	f
nerdtree#echo	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg) abort$/;"	f
nerdtree#echoError	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg) abort$/;"	f
nerdtree#echoWarning	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg) abort$/;"	f
nerdtree#exec	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd, ignoreAll) abort$/;"	f
nerdtree#has_opt	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name) abort$/;"	f
nerdtree#loadClassFiles	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles() abort$/;"	f
nerdtree#onBufLeave	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#onBufLeave() abort$/;"	f
nerdtree#osDefaultCaseSensitiveFS	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#osDefaultCaseSensitiveFS() abort$/;"	f
nerdtree#pathEquals	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#pathEquals(lhs, rhs) abort$/;"	f
nerdtree#postSourceActions	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions() abort$/;"	f
nerdtree#renderView	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView() abort$/;"	f
nerdtree#runningCygwin	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningCygwin() abort$/;"	f
nerdtree#runningMac	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningMac() abort$/;"	f
nerdtree#runningWindows	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows() abort$/;"	f
nerdtree#slash	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#slash() abort$/;"	f
nerdtree#ui_glue#bookmarkNode	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#bookmarkNode(...) abort$/;"	f
nerdtree#ui_glue#chRootCwd	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#chRootCwd() abort$/;"	f
nerdtree#ui_glue#clearBookmarks	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#clearBookmarks(bookmarks) abort$/;"	f
nerdtree#ui_glue#createDefaultBindings	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#createDefaultBindings() abort$/;"	f
nerdtree#ui_glue#invokeKeyMap	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#invokeKeyMap(key) abort$/;"	f
nerdtree#ui_glue#openBookmark	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#openBookmark(name) abort$/;"	f
nerdtree#ui_glue#revealBookmark	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#revealBookmark(name) abort$/;"	f
nerdtree#ui_glue#setupCommands	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#setupCommands() abort$/;"	f
nerdtree#ui_glue#upDir	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#upDir(preserveState) abort$/;"	f
nerdtree#version	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version(...) abort$/;"	f
newHandlerState	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:newHandlerState(statustype) abort$/;"	f
new_gh	conf/zsh/.oh-my-zsh/plugins/github/github.plugin.zsh	/^new_gh() { # [DIRECTORY]$/;"	f
new_scratch_buffer	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def new_scratch_buffer(text):$/;"	f
new_window	conf/vim/.vim/autoload/plug.vim	/^function! s:new_window()$/;"	f
newlsp	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:newlsp() abort$/;"	f
newpl	conf/zsh/.oh-my-zsh/plugins/perl/perl.plugin.zsh	/^newpl () {$/;"	f
next-next-NEXT-millennium	conf/emacs/.emacs.d/core/aprilfool/zemacs.el	/^(defun next-next-NEXT-millennium ()$/;"	f
next_sign_id	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:next_sign_id() abort$/;"	f
next_tick	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! s:next_tick(cmd)$/;"	f
nginx-packages	conf/emacs/.emacs.d/layers/+tools/nginx/packages.el	/^(defconst nginx-packages '(nginx-mode))$/;"	f
nginx/init-nginx-mode	conf/emacs/.emacs.d/layers/+tools/nginx/packages.el	/^(defun nginx\/init-nginx-mode ()$/;"	f
nil	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(default nil)"$/;"	f
nim-backend	conf/emacs/.emacs.d/layers/+lang/nim/config.el	/^(defvar nim-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'company-nim)$/;"	f
nim-packages	conf/emacs/.emacs.d/layers/+lang/nim/packages.el	/^(defconst nim-packages$/;"	f
nim/init-flycheck-nim	conf/emacs/.emacs.d/layers/+lang/nim/packages.el	/^(defun nim\/init-flycheck-nim ()$/;"	f
nim/init-nim-mode	conf/emacs/.emacs.d/layers/+lang/nim/packages.el	/^(defun nim\/init-nim-mode ()$/;"	f
nim/post-init-company	conf/emacs/.emacs.d/layers/+lang/nim/packages.el	/^(defun nim\/post-init-company ()$/;"	f
nim/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/nim/packages.el	/^(defun nim\/post-init-flycheck ()$/;"	f
nix-backend	conf/emacs/.emacs.d/layers/+os/nixos/config.el	/^(defvar nix-backend nil$/;"	f
nixos-format-on-save	conf/emacs/.emacs.d/layers/+os/nixos/config.el	/^(defvar nixos-format-on-save nil$/;"	f
nixos-packages	conf/emacs/.emacs.d/layers/+os/nixos/packages.el	/^(defconst nixos-packages$/;"	f
nixos/init-company-nixos-options	conf/emacs/.emacs.d/layers/+os/nixos/packages.el	/^(defun nixos\/init-company-nixos-options ()$/;"	f
nixos/init-helm-nixos-options	conf/emacs/.emacs.d/layers/+os/nixos/packages.el	/^(defun nixos\/init-helm-nixos-options ()$/;"	f
nixos/init-nix-mode	conf/emacs/.emacs.d/layers/+os/nixos/packages.el	/^(defun nixos\/init-nix-mode ()$/;"	f
nixos/init-nixos-options	conf/emacs/.emacs.d/layers/+os/nixos/packages.el	/^(defun nixos\/init-nixos-options ()$/;"	f
nixos/post-init-company	conf/emacs/.emacs.d/layers/+os/nixos/packages.el	/^(defun nixos\/post-init-company ()$/;"	f
nixos/post-init-flycheck	conf/emacs/.emacs.d/layers/+os/nixos/packages.el	/^(defun nixos\/post-init-flycheck ()$/;"	f
no_proxy_env	conf/zsh/.oh-my-zsh/plugins/shell-proxy/proxy.py	/^no_proxy_env = "SHELLPROXY_NO_PROXY"$/;"	v
no_result_notify	workflows/Ariafred/src/aria.py	/^def no_result_notify(status, filters):$/;"	f
no_unidecode_available	conf/vim/.vim/plugged/ultisnips/test/util.py	/^def no_unidecode_available():$/;"	f
node	conf/zsh/.oh-my-zsh/plugins/node/node.plugin.zsh	/^function node-docs {$/;"	f
node-add-modules-path	conf/emacs/.emacs.d/layers/+tools/node/config.el	/^(defvar node-add-modules-path nil$/;"	f
node/init-add-node-modules-path	conf/emacs/.emacs.d/layers/+tools/node/packages.el	/^(defun node\/init-add-node-modules-path ()$/;"	f
nodenv_prompt_info	conf/zsh/.oh-my-zsh/plugins/nodenv/nodenv.plugin.zsh	/^  function nodenv_prompt_info() {$/;"	f
noop	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function s:noop(...) abort$/;"	f
noop	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:noop(...) abort$/;"	f
noop	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! s:noop(...) abort dict$/;"	f
noop	conf/vim/.vim/plugged/vim-go/plugin/go.vim	/^function! s:noop(...) abort$/;"	f
normalize_durations	conf/vim/.vim/plugged/vim-go/autoload/go/test_test.vim	/^func! s:normalize_durations(str) abort$/;"	f
normalize_file_path	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/common.py	/^def normalize_file_path(path: str) -> str:$/;"	f
not_git_dir	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:not_git_dir(bufnr) abort$/;"	f
notifier_icon_path	workflows/Ariafred/src/workflow/notify.py	/^def notifier_icon_path():$/;"	f
notifier_program	workflows/Ariafred/src/workflow/notify.py	/^def notifier_program():$/;"	f
notify	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:notify(method, args) dict$/;"	f
notify	workflows/Ariafred/src/aria_actions.py	/^def notify(msg, title='Ariafred', gid=''):$/;"	f
notify	workflows/Ariafred/src/notifier.py	/^def notify(msg, title='Ariafred', gid=''):$/;"	f
notify	workflows/Ariafred/src/workflow/notify.py	/^def notify(title='', text='', sound=None):$/;"	f
notmuch-message-deleted-tags	conf/emacs/.emacs.d/layers/+email/notmuch/config.el	/^(defvar notmuch-message-deleted-tags '("+deleted" "-inbox" "-unread")$/;"	f
notmuch-modes	conf/emacs/.emacs.d/layers/+email/notmuch/config.el	/^(defvar notmuch-modes$/;"	f
notmuch-packages	conf/emacs/.emacs.d/layers/+email/notmuch/packages.el	/^(defconst notmuch-packages$/;"	f
notmuch-spacemacs-layout-binding	conf/emacs/.emacs.d/layers/+email/notmuch/config.el	/^(defvar notmuch-spacemacs-layout-binding "n"$/;"	f
notmuch-spacemacs-layout-name	conf/emacs/.emacs.d/layers/+email/notmuch/config.el	/^(defvar notmuch-spacemacs-layout-name "@Notmuch"$/;"	f
notmuch/init-consult-notmuch	conf/emacs/.emacs.d/layers/+email/notmuch/packages.el	/^(defun notmuch\/init-consult-notmuch ()$/;"	f
notmuch/init-counsel-notmuch	conf/emacs/.emacs.d/layers/+email/notmuch/packages.el	/^(defun notmuch\/init-counsel-notmuch ()$/;"	f
notmuch/init-helm-notmuch	conf/emacs/.emacs.d/layers/+email/notmuch/packages.el	/^(defun notmuch\/init-helm-notmuch ()$/;"	f
notmuch/init-notmuch	conf/emacs/.emacs.d/layers/+email/notmuch/packages.el	/^(defun notmuch\/init-notmuch ()$/;"	f
notmuch/init-ol-notmuch	conf/emacs/.emacs.d/layers/+email/notmuch/packages.el	/^(defun notmuch\/init-ol-notmuch ()$/;"	f
notmuch/post-init-company	conf/emacs/.emacs.d/layers/+email/notmuch/packages.el	/^(defun notmuch\/post-init-company ()$/;"	f
notmuch/post-init-window-purpose	conf/emacs/.emacs.d/layers/+email/notmuch/packages.el	/^(defun notmuch\/post-init-window-purpose ()$/;"	f
notmuch/pre-init-org	conf/emacs/.emacs.d/layers/+email/notmuch/packages.el	/^(defun notmuch\/pre-init-org ()$/;"	f
notmuch/pre-init-persp-mode	conf/emacs/.emacs.d/layers/+email/notmuch/packages.el	/^(defun notmuch\/pre-init-persp-mode ()$/;"	f
noyes	conf/zsh/.oh-my-zsh/tools/theme_chooser.sh	/^function noyes() {$/;"	f
npm_toggle_install_uninstall	conf/zsh/.oh-my-zsh/plugins/npm/npm.plugin.zsh	/^npm_toggle_install_uninstall() {$/;"	f
ntabs_to_proper_indent	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def ntabs_to_proper_indent(self, ntabs):$/;"	m	class:IndentUtil
number	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/tabstop.py	/^    def number(self):$/;"	m	class:TabStop
number	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^    def number(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
number_of_windows	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/tests/test_tmux_scripting.sh	/^number_of_windows() {$/;"	f
numericHighlightGroupInAssignment	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! s:numericHighlightGroupInAssignment(testname, value)$/;"	f
numericHighlightGroupInMultidimensionalSliceElement	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! s:numericHighlightGroupInMultidimensionalSliceElement(testname, value)$/;"	f
numericHighlightGroupInMultidimensionalSliceIndex	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! s:numericHighlightGroupInMultidimensionalSliceIndex(testname, first, second)$/;"	f
numericHighlightGroupInSliceElement	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! s:numericHighlightGroupInSliceElement(testname, value)$/;"	f
numericHighlightGroupInSliceIndex	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! s:numericHighlightGroupInSliceIndex(testname, value)$/;"	f
numericHighlightGroupInSliceSlicing	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! s:numericHighlightGroupInSliceSlicing(testname, from, to)$/;"	f
nvim_add_related	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:nvim_add_related(winid, target, kind, winhl, related) abort$/;"	f
nvim_cb	conf/vim/.vim/autoload/plug.vim	/^function! s:nvim_cb(job_id, data, event) dict abort$/;"	f
nvim_create_keymap	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:nvim_create_keymap(winid) abort$/;"	f
nvim_get_botline	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:nvim_get_botline(topline, height, width, bufnr) abort$/;"	f
nvim_get_foldcolumn	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:nvim_get_foldcolumn(config) abort$/;"	f
nvim_move_related	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^function! s:nvim_move_related(winid, row) abort$/;"	f
nvm_prompt_info	conf/zsh/.oh-my-zsh/lib/nvm.zsh	/^function nvm_prompt_info() {$/;"	f
o	workflows/Ariafred/src/workflow/notify.py	/^    o = p.parse_args()$/;"	v
obj	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 3)$/;"	v	class:MovePosition_DelSameLine1
obj	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 3)$/;"	v	class:MovePosition_InsSameLine1
obj	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 9)$/;"	v	class:MovePosition_DelSameLine
obj	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 9)$/;"	v	class:MovePosition_InsSameLine2
obj	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (1, 0)$/;"	v	class:MovePosition_DelSecondLine
obj	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (1, 3)$/;"	v	class:MovePosition_DelSecondLine1
obj	workflows/Ariafred/src/workflow/workflow3.py	/^    def obj(self):$/;"	m	class:Item3
obj	workflows/Ariafred/src/workflow/workflow3.py	/^    def obj(self):$/;"	m	class:Modifier
obj	workflows/Ariafred/src/workflow/workflow3.py	/^    def obj(self):$/;"	m	class:Variables
obj	workflows/Ariafred/src/workflow/workflow3.py	/^    def obj(self):$/;"	m	class:Workflow3
obsolete	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! s:obsolete(var)$/;"	f
obsolete_gitgutter_signs_to_remove	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:obsolete_gitgutter_signs_to_remove(bufnr, new_gitgutter_signs_line_numbers) abort$/;"	f
obtain_file_renames	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:obtain_file_renames(bufnr, base)$/;"	f
ocaml-format-before-save	conf/emacs/.emacs.d/layers/+lang/ocaml/config.el	/^(define-obsolete-variable-alias 'ocaml-format-before-save 'ocaml-format-on-save "May 2021")$/;"	f
ocaml-format-on-save	conf/emacs/.emacs.d/layers/+lang/ocaml/config.el	/^(defvar ocaml-format-on-save nil$/;"	f
ocaml-packages	conf/emacs/.emacs.d/layers/+lang/ocaml/packages.el	/^(defconst ocaml-packages$/;"	f
ocaml/init-dune	conf/emacs/.emacs.d/layers/+lang/ocaml/packages.el	/^(defun ocaml\/init-dune ()$/;"	f
ocaml/init-flycheck-ocaml	conf/emacs/.emacs.d/layers/+lang/ocaml/packages.el	/^(defun ocaml\/init-flycheck-ocaml ()$/;"	f
ocaml/init-merlin	conf/emacs/.emacs.d/layers/+lang/ocaml/packages.el	/^(defun ocaml\/init-merlin ()$/;"	f
ocaml/init-merlin-company	conf/emacs/.emacs.d/layers/+lang/ocaml/packages.el	/^(defun ocaml\/init-merlin-company ()$/;"	f
ocaml/init-merlin-eldoc	conf/emacs/.emacs.d/layers/+lang/ocaml/packages.el	/^(defun ocaml\/init-merlin-eldoc ()$/;"	f
ocaml/init-merlin-iedit	conf/emacs/.emacs.d/layers/+lang/ocaml/packages.el	/^(defun ocaml\/init-merlin-iedit ()$/;"	f
ocaml/init-ocamlformat	conf/emacs/.emacs.d/layers/+lang/ocaml/packages.el	/^(defun ocaml\/init-ocamlformat ()$/;"	f
ocaml/init-ocp-indent	conf/emacs/.emacs.d/layers/+lang/ocaml/packages.el	/^(defun ocaml\/init-ocp-indent ()$/;"	f
ocaml/init-tuareg	conf/emacs/.emacs.d/layers/+lang/ocaml/packages.el	/^(defun ocaml\/init-tuareg ()$/;"	f
ocaml/init-utop	conf/emacs/.emacs.d/layers/+lang/ocaml/packages.el	/^(defun ocaml\/init-utop ()$/;"	f
ocaml/post-init-company	conf/emacs/.emacs.d/layers/+lang/ocaml/packages.el	/^(defun ocaml\/post-init-company ()$/;"	f
ocaml/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/ocaml/packages.el	/^(defun ocaml\/post-init-counsel-gtags nil)$/;"	f
ocaml/post-init-evil-matchit	conf/emacs/.emacs.d/layers/+lang/ocaml/packages.el	/^(defun ocaml\/post-init-evil-matchit ()$/;"	f
ocaml/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/ocaml/packages.el	/^(defun ocaml\/post-init-flycheck ()$/;"	f
ocaml/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/ocaml/packages.el	/^(defun ocaml\/post-init-ggtags ()$/;"	f
ocaml/post-init-imenu	conf/emacs/.emacs.d/layers/+lang/ocaml/packages.el	/^(defun ocaml\/post-init-imenu ()$/;"	f
ocaml/post-init-smartparens	conf/emacs/.emacs.d/layers/+lang/ocaml/packages.el	/^(defun ocaml\/post-init-smartparens ()$/;"	f
occur-mode-clean-buffer	conf/emacs/.spacemacs.d/load.d/functions.el	/^(defun occur-mode-clean-buffer ()$/;"	f
octave/init-octave	conf/emacs/.emacs.d/layers/+lang/octave/packages.el	/^(defun octave\/init-octave ()$/;"	f
octave/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/octave/packages.el	/^(defun octave\/post-init-counsel-gtags nil)$/;"	f
octave/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/octave/packages.el	/^(defun octave\/post-init-ggtags ()$/;"	f
ofd	conf/zsh/.oh-my-zsh/plugins/macos/macos.plugin.zsh	/^function ofd {$/;"	f
oloredlogs	conf/vim/.vim/plugged/vim-markdown/Makefile	/^	build\/html2vimdoc\/bin\/pip install beautifulsoup coloredlogs==4.0 markdown$/;"	m
omz	conf/zsh/.oh-my-zsh/lib/cli.zsh	/^function omz {$/;"	f
omz_codes	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^        omz_codes = code_to_omz(code_points)$/;"	v
omz_diagnostic_dump	conf/zsh/.oh-my-zsh/lib/diagnostics.zsh	/^function omz_diagnostic_dump() {$/;"	f
omz_f	conf/zsh/.oh-my-zsh/oh-my-zsh.sh	/^omz_f() {$/;"	f
omz_history	conf/zsh/.oh-my-zsh/lib/history.zsh	/^function omz_history {$/;"	f
omz_name	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^            omz_name = increment_name(short_name_buffer)$/;"	v
omz_name	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^        omz_name = name_to_omz(name, group, subgroup, status)$/;"	v
omz_ptree	conf/zsh/.oh-my-zsh/oh-my-zsh.sh	/^  omz_ptree() {$/;"	f
omz_termsupport_cwd	conf/zsh/.oh-my-zsh/lib/termsupport.zsh	/^function omz_termsupport_cwd {$/;"	f
omz_termsupport_precmd	conf/zsh/.oh-my-zsh/lib/termsupport.zsh	/^function omz_termsupport_precmd {$/;"	f
omz_termsupport_preexec	conf/zsh/.oh-my-zsh/lib/termsupport.zsh	/^function omz_termsupport_preexec {$/;"	f
omz_urldecode	conf/zsh/.oh-my-zsh/lib/functions.zsh	/^function omz_urldecode {$/;"	f
omz_urlencode	conf/zsh/.oh-my-zsh/lib/functions.zsh	/^function omz_urlencode() {$/;"	f
on_action	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^function! s:on_action(err, idx, winid) abort$/;"	f
on_async_response	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:on_async_response(id, resp, isErr) dict$/;"	f
on_bufenter	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! s:on_bufenter()$/;"	f
on_buffilepost	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! s:on_buffilepost(bufnr)$/;"	f
on_buffilepre	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! s:on_buffilepre(bufnr)$/;"	f
on_channel_close	conf/vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^function! s:on_channel_close() abort$/;"	f
on_complete_done	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:on_complete_done() abort$/;"	f
on_data	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:on_data(ch, data, ...) dict abort$/;"	f
on_error	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:on_error(name, msgs) abort$/;"	f
on_event	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def on_event(self, context: Context) -> None:$/;"	m	class:DeopleteHandlers
on_event	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/base/filter.py	/^    def on_event(self, context: UserContext) -> None:$/;"	m	class:Base
on_event	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/base/source.py	/^    def on_event(self, context: UserContext) -> None:$/;"	m	class:Base
on_event	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def on_event(self, user_context: UserContext) -> None:$/;"	m	class:Deoplete
on_event	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^    def on_event(self, context: UserContext) -> None:$/;"	m	class:Filter
on_event	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def on_event(self, context: UserContext) -> None:$/;"	m	class:_Parent
on_event	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^    def on_event(self, context: UserContext) -> None:$/;"	m	class:Source
on_event	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def on_event(self, context: UserContext) -> None:$/;"	m	class:Source
on_exit	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:on_exit(name, code) abort$/;"	f
on_exit	conf/vim/.vim/plugged/coc.nvim/autoload/coc/task.vim	/^function! s:on_exit(id, code) abort$/;"	f
on_exit	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^function! s:on_exit(jobid, exitval, event) dict$/;"	f
on_exit	conf/vim/.vim/plugged/vim-go/autoload/go/term.vim	/^function! s:on_exit(job_id, exit_status, event) dict abort$/;"	f
on_exit_nvim	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_exit_nvim(_job_id, exit_code, _event) dict abort$/;"	f
on_exit_vim	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_exit_vim(channel) dict abort$/;"	f
on_insert_leave	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:on_insert_leave() abort$/;"	f
on_pum_change	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! s:on_pum_change(move) abort$/;"	f
on_stderr	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:on_stderr(name, msgs)$/;"	f
on_stderr	conf/vim/.vim/plugged/coc.nvim/autoload/coc/task.vim	/^function! s:on_stderr(id, msgs)$/;"	f
on_stderr	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^function! s:on_stderr(mode, ch, data, event) dict$/;"	f
on_stderr_nvim	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stderr_nvim(_job_id, data, _event) dict abort$/;"	f
on_stderr_vim	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stderr_vim(channel, _data) dict abort$/;"	f
on_stdout	conf/vim/.vim/plugged/coc.nvim/autoload/coc/task.vim	/^function! s:on_stdout(id, msgs)$/;"	f
on_stdout	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^function! s:on_stdout(mode, ch, data, event) dict$/;"	f
on_stdout	conf/vim/.vim/plugged/vim-go/autoload/go/term.vim	/^function! s:on_stdout(job_id, data, event) dict abort$/;"	f
on_stdout_nvim	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stdout_nvim(_job_id, data, _event) dict abort$/;"	f
on_stdout_vim	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stdout_vim(_channel, data) dict abort$/;"	f
on_textchange	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:on_textchange(bufnr) abort$/;"	f
open	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:open(target)$/;"	f
openExplorer	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openExplorer(node) abort$/;"	f
openHSplit	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplit(target) abort$/;"	f
openHSplitBookmark	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplitBookmark(bm) abort$/;"	f
openInNewTab	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTab(target) abort$/;"	f
openInNewTabSilent	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTabSilent(target) abort$/;"	f
openNodeRecursively	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openNodeRecursively(node) abort$/;"	f
openVSplit	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplit(target) abort$/;"	f
openVSplitBookmark	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplitBookmark(bm) abort$/;"	f
open_cachedir	workflows/Ariafred/src/workflow/workflow.py	/^    def open_cachedir(self):$/;"	m	class:Workflow
open_command	conf/zsh/.oh-my-zsh/lib/functions.zsh	/^function open_command() {$/;"	f
open_datadir	workflows/Ariafred/src/workflow/workflow.py	/^    def open_datadir(self):$/;"	m	class:Workflow
open_help	workflows/Ariafred/src/workflow/workflow.py	/^    def open_help(self):$/;"	m	class:Workflow
open_hunk_preview_window	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:open_hunk_preview_window()$/;"	f
open_lighthouse_ticket	conf/zsh/.oh-my-zsh/plugins/lighthouse/lighthouse.plugin.zsh	/^open_lighthouse_ticket () {$/;"	f
open_log	workflows/Ariafred/src/workflow/workflow.py	/^    def open_log(self):$/;"	m	class:Workflow
open_terminal	workflows/Ariafred/src/workflow/workflow.py	/^    def open_terminal(self):$/;"	m	class:Workflow
open_workflowdir	workflows/Ariafred/src/workflow/workflow.py	/^    def open_workflowdir(self):$/;"	m	class:Workflow
openai-packages	conf/emacs/.emacs.d/layers/+web-services/openai/packages.el	/^(defconst openai-packages$/;"	f
openai/init-chatgpt	conf/emacs/.emacs.d/layers/+web-services/openai/packages.el	/^(defun openai\/init-chatgpt ()$/;"	f
openai/init-codegpt	conf/emacs/.emacs.d/layers/+web-services/openai/packages.el	/^(defun openai\/init-codegpt ()$/;"	f
openai/init-dall-e	conf/emacs/.emacs.d/layers/+web-services/openai/packages.el	/^(defun openai\/init-dall-e ()$/;"	f
openai/init-openai	conf/emacs/.emacs.d/layers/+web-services/openai/packages.el	/^(defun openai\/init-openai ()$/;"	f
operator#clang_format#do	conf/vim/.vim/plugged/vim-clang-format/autoload/operator/clang_format.vim	/^function! operator#clang_format#do(motion_wise) abort$/;"	f
operator#user#_define	conf/vim/.vim/plugged/vim-operator-user/autoload/operator/user.vim	/^function! operator#user#_define(operator_keyseq, function_name, ...)$/;"	f
operator#user#_do_ex_command	conf/vim/.vim/plugged/vim-operator-user/autoload/operator/user.vim	/^function! operator#user#_do_ex_command(motion_wiseness)$/;"	f
operator#user#_set_ex_command	conf/vim/.vim/plugged/vim-operator-user/autoload/operator/user.vim	/^function! operator#user#_set_ex_command(ex_command)$/;"	f
operator#user#_set_up	conf/vim/.vim/plugged/vim-operator-user/autoload/operator/user.vim	/^function! operator#user#_set_up(operator_function_name)$/;"	f
operator#user#_sid_prefix	conf/vim/.vim/plugged/vim-operator-user/autoload/operator/user.vim	/^function! operator#user#_sid_prefix()$/;"	f
operator#user#define	conf/vim/.vim/plugged/vim-operator-user/autoload/operator/user.vim	/^function! operator#user#define(name, function_name, ...)  "{{{2$/;"	f
operator#user#define_ex_command	conf/vim/.vim/plugged/vim-operator-user/autoload/operator/user.vim	/^function! operator#user#define_ex_command(name, ex_command)  "{{{2$/;"	f
operator#user#register	conf/vim/.vim/plugged/vim-operator-user/autoload/operator/user.vim	/^function! operator#user#register()  "{{{2$/;"	f
operator#user#visual_command_from_wise_name	conf/vim/.vim/plugged/vim-operator-user/autoload/operator/user.vim	/^function! operator#user#visual_command_from_wise_name(wise_name)  "{{{2$/;"	f
opt	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def opt(self, option, default=None):  # pylint:disable=no-self-use$/;"	m	class:SnippetUtil
option	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:option(name)$/;"	f
option_set_to	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def option_set_to(name, new_value):$/;"	f
option_value_not_changed	conf/tmux/.tmux/plugins/tmux-sensible/sensible.tmux	/^option_value_not_changed() {$/;"	f
opts	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^  let opts['sink*'] = remove(opts, 'sink')$/;"	v
org-clocks-prefix	conf/emacs/.emacs.d/layers/+emacs/org/funcs.el	/^(defun org-clocks-prefix ()$/;"	f
org-contacts-find-file	conf/emacs/.emacs.d/layers/+emacs/org/funcs.el	/^(defun org-contacts-find-file ()$/;"	f
org-enable-appear-support	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-enable-appear-support nil$/;"	f
org-enable-asciidoc-support	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-enable-asciidoc-support nil$/;"	f
org-enable-bootstrap-support	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-enable-bootstrap-support nil$/;"	f
org-enable-epub-support	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-enable-epub-support nil$/;"	f
org-enable-github-support	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-enable-github-support nil$/;"	f
org-enable-hugo-support	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-enable-hugo-support nil$/;"	f
org-enable-jira-support	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-enable-jira-support nil$/;"	f
org-enable-modern-support	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-enable-modern-support nil$/;"	f
org-enable-notifications	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-enable-notifications nil$/;"	f
org-enable-org-brain-support	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-enable-org-brain-support nil$/;"	f
org-enable-org-contacts-support	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-enable-org-contacts-support nil$/;"	f
org-enable-org-journal-support	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-enable-org-journal-support nil$/;"	f
org-enable-reveal-js-support	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-enable-reveal-js-support nil$/;"	f
org-enable-roam-protocol	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-enable-roam-protocol nil$/;"	f
org-enable-roam-support	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-enable-roam-support (bound-and-true-p org-enable-roam-ui)$/;"	f
org-enable-roam-ui	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-enable-roam-ui nil$/;"	f
org-enable-sticky-header	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-enable-sticky-header nil$/;"	f
org-enable-transclusion-support	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-enable-transclusion-support nil$/;"	f
org-enable-trello-support	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-enable-trello-support nil$/;"	f
org-enable-valign	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-enable-valign nil$/;"	f
org-enable-verb-support	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-enable-verb-support nil$/;"	f
org-insert-todo-return	conf/emacs/.spacemacs.d/load.d/functions.el	/^(defun org-insert-todo-return (&optional ARG INVISIBLE-OK TOP)$/;"	f
org-kbd	conf/emacs/.emacs.d/core/core-themes-support.el	/^(defface org-kbd$/;"	f
org-packages	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defconst org-packages$/;"	f
org-persp-startup-org-file	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-persp-startup-org-file nil$/;"	f
org-persp-startup-with-agenda	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-persp-startup-with-agenda nil$/;"	f
org-project-capture-projects-file	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-project-capture-projects-file "TODOs.org"$/;"	f
org-projectile/goto-changelog	conf/emacs/.spacemacs.d/load.d/functions.el	/^(defun org-projectile\/goto-changelog()$/;"	f
org-start-notification-daemon-on-startup	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-start-notification-daemon-on-startup nil$/;"	f
org-todo-dependencies-strategy	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-todo-dependencies-strategy nil$/;"	f
org-want-todo-bindings	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defvar org-want-todo-bindings nil$/;"	f
org/init-evil-org	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-evil-org ()$/;"	f
org/init-gnuplot	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-gnuplot ()$/;"	f
org/init-helm-org-rifle	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-helm-org-rifle ()$/;"	f
org/init-htmlize	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-htmlize ()$/;"	f
org/init-ob	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-ob ()$/;"	f
org/init-org	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org ()$/;"	f
org/init-org-agenda	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org-agenda ()$/;"	f
org/init-org-appear	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org-appear ()$/;"	f
org/init-org-brain	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org-brain ()$/;"	f
org/init-org-cliplink	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org-cliplink ()$/;"	f
org/init-org-contacts	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org-contacts ()$/;"	f
org/init-org-contrib	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org-contrib ()$/;"	f
org/init-org-download	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org-download ()$/;"	f
org/init-org-expiry	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org-expiry ()$/;"	f
org/init-org-jira	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org-jira ()$/;"	f
org/init-org-journal	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org-journal ()$/;"	f
org/init-org-mime	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org-mime ()$/;"	f
org/init-org-modern	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org-modern ()$/;"	f
org/init-org-pomodoro	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org-pomodoro ()$/;"	f
org/init-org-present	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org-present ()$/;"	f
org/init-org-project-capture	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org-project-capture ()$/;"	f
org/init-org-projectile	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org-projectile ()$/;"	f
org/init-org-re-reveal	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org-re-reveal ())$/;"	f
org/init-org-rich-yank	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org-rich-yank ()$/;"	f
org/init-org-roam	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org-roam ()$/;"	f
org/init-org-roam-ui	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org-roam-ui ()$/;"	f
org/init-org-sticky-header	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org-sticky-header ()$/;"	f
org/init-org-transclusion	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org-transclusion ()$/;"	f
org/init-org-trello	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org-trello ()$/;"	f
org/init-org-vcard	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org-vcard ()$/;"	f
org/init-org-wild-notifier	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-org-wild-notifier ()$/;"	f
org/init-ox-asciidoc	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-ox-asciidoc ()$/;"	f
org/init-ox-epub	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-ox-epub ())$/;"	f
org/init-ox-gfm	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-ox-gfm ())$/;"	f
org/init-ox-hugo	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-ox-hugo ()$/;"	f
org/init-ox-jira	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-ox-jira ()$/;"	f
org/init-ox-twbs	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-ox-twbs ())$/;"	f
org/init-valign	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-valign ()$/;"	f
org/init-verb	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/init-verb ()$/;"	f
org/post-init-company	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/post-init-company ()$/;"	f
org/post-init-company-emoji	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/post-init-company-emoji ()$/;"	f
org/post-init-emoji-cheat-sheet-plus	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/post-init-emoji-cheat-sheet-plus ()$/;"	f
org/post-init-evil-surround	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/post-init-evil-surround ()$/;"	f
org/post-init-helm	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/post-init-helm ()$/;"	f
org/post-init-persp-mode	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/post-init-persp-mode ()$/;"	f
org/pre-dump	conf/emacs/.emacs.d/layers/+emacs/org/config.el	/^(defun org\/pre-dump ()$/;"	f
org/pre-init-org-re-reveal	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/pre-init-org-re-reveal ()$/;"	f
org/pre-init-ox-epub	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/pre-init-ox-epub ()$/;"	f
org/pre-init-ox-gfm	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/pre-init-ox-gfm ()$/;"	f
org/pre-init-ox-twbs	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/pre-init-ox-twbs ()$/;"	f
org/pre-init-verb	conf/emacs/.emacs.d/layers/+emacs/org/packages.el	/^(defun org\/pre-init-verb ()$/;"	f
osascript	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! s:osascript(...) abort$/;"	f
osx-command-as	conf/emacs/.emacs.d/layers/+os/osx/config.el	/^(defvar osx-command-as 'hyper$/;"	f
osx-control-as	conf/emacs/.emacs.d/layers/+os/osx/config.el	/^(defvar osx-control-as 'control$/;"	f
osx-function-as	conf/emacs/.emacs.d/layers/+os/osx/config.el	/^(defvar osx-function-as nil$/;"	f
osx-option-as	conf/emacs/.emacs.d/layers/+os/osx/config.el	/^(defvar osx-option-as 'meta$/;"	f
osx-right-command-as	conf/emacs/.emacs.d/layers/+os/osx/config.el	/^(defvar osx-right-command-as 'left$/;"	f
osx-right-control-as	conf/emacs/.emacs.d/layers/+os/osx/config.el	/^(defvar osx-right-control-as 'left$/;"	f
osx-right-option-as	conf/emacs/.emacs.d/layers/+os/osx/config.el	/^(defvar osx-right-option-as 'left$/;"	f
osx-swap-option-and-command	conf/emacs/.emacs.d/layers/+os/osx/config.el	/^(defvar osx-swap-option-and-command nil$/;"	f
osx-use-dictionary-app	conf/emacs/.emacs.d/layers/+os/osx/config.el	/^(defvar osx-use-dictionary-app (spacemacs\/system-is-mac)$/;"	f
osx/init-launchctl	conf/emacs/.emacs.d/layers/+os/osx/packages.el	/^(defun osx\/init-launchctl ()$/;"	f
osx/init-osx-clipboard	conf/emacs/.emacs.d/layers/+os/osx/packages.el	/^(defun osx\/init-osx-clipboard ()$/;"	f
osx/init-osx-dictionary	conf/emacs/.emacs.d/layers/+os/osx/packages.el	/^(defun osx\/init-osx-dictionary ()$/;"	f
osx/init-osx-trash	conf/emacs/.emacs.d/layers/+os/osx/packages.el	/^(defun osx\/init-osx-trash ()$/;"	f
osx/init-reveal-in-osx-finder	conf/emacs/.emacs.d/layers/+os/osx/packages.el	/^(defun osx\/init-reveal-in-osx-finder ()$/;"	f
osx/list-available-dictionaries	conf/emacs/.emacs.d/layers/+os/osx/funcs.el	/^(defun osx\/list-available-dictionaries ()$/;"	f
osx/post-init-term	conf/emacs/.emacs.d/layers/+os/osx/packages.el	/^(defun osx\/post-init-term ()$/;"	f
osx/pre-init-helm	conf/emacs/.emacs.d/layers/+os/osx/packages.el	/^(defun osx\/pre-init-helm ()$/;"	f
ot	conf/zsh/.oh-my-zsh/plugins/otp/otp.plugin.zsh	/^function ot () {$/;"	f
other-window-or-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun other-window-or-frame (arg)$/;"	f
otp_add_device	conf/zsh/.oh-my-zsh/plugins/otp/otp.plugin.zsh	/^function otp_add_device () {$/;"	f
otp_devices	conf/zsh/.oh-my-zsh/plugins/otp/otp.plugin.zsh	/^function otp_devices () {$/;"	f
out	conf/zsh/.oh-my-zsh/plugins/git-prompt/gitstatus.py	/^out = ' '.join([$/;"	v
out_cb	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:out_cb(ch, msg) abort$/;"	f
out_cb	conf/vim/.vim/plugged/vim-go/autoload/go/term.vim	/^func! s:out_cb(channel, msg) dict abort$/;"	f
output	conf/vim/.vim/plugged/ultisnips/test/vim_test_case.py	/^    output = ""$/;"	v	class:VimTestCase
output	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:output(text)$/;"	f
output	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^output = open("emoji-char-definitions.zsh", "w")$/;"	v
outshine-packages	conf/emacs/.emacs.d/layers/+emacs/outshine/packages.el	/^(defconst outshine-packages$/;"	f
outshine/init-outorg	conf/emacs/.emacs.d/layers/+emacs/outshine/packages.el	/^(defun outshine\/init-outorg ()$/;"	f
outshine/init-outshine	conf/emacs/.emacs.d/layers/+emacs/outshine/packages.el	/^(defun outshine\/init-outshine ()$/;"	f
overlap_length	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^def overlap_length(left: str, next_input_words: typing.List[str]) -> int:$/;"	f
overwrite	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def overwrite(self, buf, gtext):$/;"	m	class:TextObject
overwrite_with_initial_text	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def overwrite_with_initial_text(self, buf):$/;"	m	class:TextObject
p	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def p(self):$/;"	m	class:SnippetUtil
p	workflows/Ariafred/src/workflow/notify.py	/^    p = argparse.ArgumentParser()$/;"	v
pacdisowned	conf/zsh/.oh-my-zsh/plugins/archlinux/archlinux.plugin.zsh	/^function pacdisowned() {$/;"	f
package	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:package(args)$/;"	f
package-build	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defgroup package-build nil$/;"	f
package-build--archive-alist-for-json	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--archive-alist-for-json ()$/;"	f
package-build--archive-entry-file	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--archive-entry-file (archive-entry)$/;"	f
package-build--artifact-file	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--artifact-file (archive-entry)$/;"	f
package-build--build-multi-file-package	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--build-multi-file-package (rcp files)$/;"	f
package-build--build-package	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--build-package (rcp files)$/;"	f
package-build--build-single-file-package	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--build-single-file-package (rcp files)$/;"	f
package-build--call-process	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--call-process (package command &rest args)$/;"	f
package-build--call-sandboxed	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--call-sandboxed (package command &rest args)$/;"	f
package-build--cleanup	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--cleanup (rcp)$/;"	f
package-build--copy-package-files	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--copy-package-files (files target-dir)$/;"	f
package-build--create-tar	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--create-tar (rcp directory)$/;"	f
package-build--ensure-count-increase	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--ensure-count-increase (rcp version ahead)$/;"	f
package-build--error	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--error (package format-string &rest args)$/;"	f
package-build--expand-files-spec-1	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--expand-files-spec-1 (spec)$/;"	f
package-build--expand-files-spec-2	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--expand-files-spec-2 (spec &optional subdir)$/;"	f
package-build--extract-from-library	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--extract-from-library (rcp files)$/;"	f
package-build--extract-from-package	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--extract-from-package (rcp files)$/;"	f
package-build--extras	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defvar package-build--extras$/;"	f
package-build--generate-info-files	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--generate-info-files (rcp files target-dir)$/;"	f
package-build--inhibit-build	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defvar package-build--inhibit-build nil$/;"	f
package-build--inhibit-checkout	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defvar package-build--inhibit-checkout nil$/;"	f
package-build--inhibit-fetch	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defvar package-build--inhibit-fetch nil$/;"	f
package-build--inhibit-update	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defvar package-build--inhibit-update nil$/;"	f
package-build--main-library	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--main-library (rcp)$/;"	f
package-build--match-library	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--match-library (rcp &optional filename)$/;"	f
package-build--melpa-base	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defvar package-build--melpa-base$/;"	f
package-build--message	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--message (format-string &rest args)$/;"	f
package-build--normalize-summary	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--normalize-summary (summary)$/;"	f
package-build--package	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--package (rcp)$/;"	f
package-build--pkg-info-for-json	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--pkg-info-for-json (info)$/;"	f
package-build--pkgfile	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--pkgfile (rcp)$/;"	f
package-build--remove-archive-files	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--remove-archive-files (archive-entry)$/;"	f
package-build--run-process	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--run-process (command &rest args)$/;"	f
package-build--sandbox-args	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defvar package-build--sandbox-args$/;"	f
package-build--sandbox-readonly-binds	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defvar package-build--sandbox-readonly-binds$/;"	f
package-build--select-version	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--select-version (rcp)$/;"	f
package-build--set-version-headers	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--set-version-headers (rcp file-or-dir)$/;"	f
package-build--spec-globs	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--spec-globs (rcp)$/;"	f
package-build--tar-type	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--tar-type ()$/;"	f
package-build--tar-type	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defvar package-build--tar-type nil$/;"	f
package-build--use-sandbox	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defvar package-build--use-sandbox (eq system-type 'gnu\/linux)$/;"	f
package-build--version-regexp	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--version-regexp (rcp)$/;"	f
package-build--write-archive-entry	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--write-archive-entry (rcp)$/;"	f
package-build--write-badge-image	conf/emacs/.emacs.d/core/libs/package-build-badges.el	/^(defun package-build--write-badge-image ( name version target-dir$/;"	f
package-build--write-pkg-file	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--write-pkg-file (rcp dir)$/;"	f
package-build--write-pkg-readme	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build--write-pkg-readme (pkg files)$/;"	f
package-build-all	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build-all ()$/;"	f
package-build-all-publishable	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defcustom package-build-all-publishable (not package-build-stable)$/;"	f
package-build-allowed-git-protocols	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defcustom package-build-allowed-git-protocols '("https" "file" "ssh")$/;"	f
package-build-archive	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build-archive (name &optional dump-archive-contents)$/;"	f
package-build-archive-alist	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build-archive-alist ()$/;"	f
package-build-archive-alist-as-json	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build-archive-alist-as-json (file)$/;"	f
package-build-archive-dir	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defcustom package-build-archive-dir$/;"	f
package-build-badge--string-width	conf/emacs/.emacs.d/core/libs/package-build-badges.el	/^(defun package-build-badge--string-width (str)$/;"	f
package-build-badge-data	conf/emacs/.emacs.d/core/libs/package-build-badges.el	/^(defvar package-build-badge-data)$/;"	f
package-build-badge-data	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defcustom package-build-badge-data nil$/;"	f
package-build-build-function	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defcustom package-build-build-function$/;"	f
package-build-cleanup	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build-cleanup ()$/;"	f
package-build-create-recipe	conf/emacs/.emacs.d/core/libs/package-recipe-mode.el	/^(defun package-build-create-recipe (name fetcher)$/;"	f
package-build-current-recipe	conf/emacs/.emacs.d/core/libs/package-recipe-mode.el	/^(defun package-build-current-recipe ()$/;"	f
package-build-default-files-spec	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defconst package-build-default-files-spec$/;"	f
package-build-dump-archive-contents	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build-dump-archive-contents (&optional file pretty-print)$/;"	f
package-build-expand-files-spec	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build-expand-files-spec (rcp &optional assert repo spec)$/;"	f
package-build-fallback-count-version	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build-fallback-count-version (rcp)$/;"	f
package-build-get-snapshot-version	conf/emacs/.emacs.d/core/libs/package-build.el	/^(define-obsolete-function-alias 'package-build-get-snapshot-version$/;"	f
package-build-get-tag-version	conf/emacs/.emacs.d/core/libs/package-build.el	/^(define-obsolete-function-alias 'package-build-get-tag-version$/;"	f
package-build-get-version-function	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defvar package-build-get-version-function nil$/;"	f
package-build-header-version	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build-header-version (rcp)$/;"	f
package-build-pkg-version	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build-pkg-version (rcp)$/;"	f
package-build-predicate-function	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defcustom package-build-predicate-function nil$/;"	f
package-build-recipe-alist-as-json	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build-recipe-alist-as-json (file)$/;"	f
package-build-recipes-dir	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defcustom package-build-recipes-dir$/;"	f
package-build-recipes-dir	conf/emacs/.emacs.d/core/libs/package-recipe.el	/^(defvar package-build-recipes-dir)$/;"	f
package-build-release+count-version	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build-release+count-version (rcp &optional single-count)$/;"	f
package-build-release+timestamp-version	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build-release+timestamp-version (rcp)$/;"	f
package-build-release-version-functions	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defcustom package-build-release-version-functions$/;"	f
package-build-run-recipe-make-targets	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defcustom package-build-run-recipe-make-targets nil$/;"	f
package-build-run-recipe-org-exports	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defcustom package-build-run-recipe-org-exports nil$/;"	f
package-build-run-recipe-shell-command	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defcustom package-build-run-recipe-shell-command nil$/;"	f
package-build-snapshot-version-functions	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defcustom package-build-snapshot-version-functions$/;"	f
package-build-stable	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defcustom package-build-stable nil$/;"	f
package-build-tag-version	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build-tag-version (rcp)$/;"	f
package-build-tar-executable	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defcustom package-build-tar-executable "tar"$/;"	f
package-build-timeout-executable	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defcustom package-build-timeout-executable "timeout"$/;"	f
package-build-timeout-secs	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defcustom package-build-timeout-secs nil$/;"	f
package-build-timestamp-version	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defun package-build-timestamp-version (rcp)$/;"	f
package-build-use-git-remote-hg	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defvar package-build-use-git-remote-hg nil$/;"	f
package-build-use-git-remote-hg	conf/emacs/.emacs.d/core/libs/package-recipe.el	/^(defvar package-build-use-git-remote-hg)$/;"	f
package-build-verbose	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defcustom package-build-verbose t$/;"	f
package-build-version-regexp	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defcustom package-build-version-regexp$/;"	f
package-build-working-dir	conf/emacs/.emacs.d/core/libs/package-build.el	/^(defcustom package-build-working-dir$/;"	f
package-build-working-dir	conf/emacs/.emacs.d/core/libs/package-recipe.el	/^(defvar package-build-working-dir)$/;"	f
package-build-write-melpa-badge-images	conf/emacs/.emacs.d/core/libs/package-build.el	/^(define-obsolete-variable-alias 'package-build-write-melpa-badge-images$/;"	f
package-codeberg-recipe	conf/emacs/.emacs.d/core/libs/package-recipe.el	/^(defclass package-codeberg-recipe (package-git-recipe)$/;"	f
package-git-recipe	conf/emacs/.emacs.d/core/libs/package-recipe.el	/^(defclass package-git-recipe (package-recipe) ())$/;"	f
package-git-remote-hg-recipe	conf/emacs/.emacs.d/core/libs/package-recipe.el	/^(defclass package-git-remote-hg-recipe (package-git-recipe) ())$/;"	f
package-github-recipe	conf/emacs/.emacs.d/core/libs/package-recipe.el	/^(defclass package-github-recipe (package-git-recipe)$/;"	f
package-gitlab-recipe	conf/emacs/.emacs.d/core/libs/package-recipe.el	/^(defclass package-gitlab-recipe (package-git-recipe)$/;"	f
package-hg-recipe	conf/emacs/.emacs.d/core/libs/package-recipe.el	/^(defclass package-hg-recipe (package-recipe) ())$/;"	f
package-recipe	conf/emacs/.emacs.d/core/libs/package-recipe.el	/^(defclass package-recipe ()$/;"	f
package-recipe--fetchers	conf/emacs/.emacs.d/core/libs/package-recipe.el	/^(defconst package-recipe--fetchers$/;"	f
package-recipe--forge-fetchers	conf/emacs/.emacs.d/core/libs/package-recipe.el	/^(defconst package-recipe--forge-fetchers$/;"	f
package-recipe--validate	conf/emacs/.emacs.d/core/libs/package-recipe.el	/^(defun package-recipe--validate (recipe name)$/;"	f
package-recipe-lookup	conf/emacs/.emacs.d/core/libs/package-recipe.el	/^(defun package-recipe-lookup (name)$/;"	f
package-recipe-mode--enable	conf/emacs/.emacs.d/core/libs/package-recipe-mode.el	/^(defun package-recipe-mode--enable ()$/;"	f
package-recipe-mode-map	conf/emacs/.emacs.d/core/libs/package-recipe-mode.el	/^(defvar package-recipe-mode-map$/;"	f
package-recipe-read-name	conf/emacs/.emacs.d/core/libs/package-recipe.el	/^(defun package-recipe-read-name ()$/;"	f
package-recipe-recipes	conf/emacs/.emacs.d/core/libs/package-recipe.el	/^(defun package-recipe-recipes ()$/;"	f
package-recipe-validate-all	conf/emacs/.emacs.d/core/libs/package-recipe.el	/^(defun package-recipe-validate-all ()$/;"	f
package-sourcehut-recipe	conf/emacs/.emacs.d/core/libs/package-recipe.el	/^(defclass package-sourcehut-recipe (package-git-recipe)$/;"	f
paclist	conf/zsh/.oh-my-zsh/plugins/archlinux/archlinux.plugin.zsh	/^function paclist() {$/;"	f
pacmansignkeys	conf/zsh/.oh-my-zsh/plugins/archlinux/archlinux.plugin.zsh	/^function pacmansignkeys() {$/;"	f
pact-packages	conf/emacs/.emacs.d/layers/+lang/pact/packages.el	/^(defconst pact-packages$/;"	f
pact/init-flycheck-pact	conf/emacs/.emacs.d/layers/+lang/pact/packages.el	/^(defun pact\/init-flycheck-pact ()$/;"	f
pact/init-pact-mode	conf/emacs/.emacs.d/layers/+lang/pact/packages.el	/^(defun pact\/init-pact-mode ()$/;"	f
pact/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/pact/packages.el	/^(defun pact\/post-init-flycheck ()$/;"	f
pacweb	conf/zsh/.oh-my-zsh/plugins/archlinux/archlinux.plugin.zsh	/^  function pacweb() {$/;"	f
page-break-lines	conf/emacs/.emacs.d/core/libs/page-break-lines.el	/^(defface page-break-lines$/;"	f
page-break-lines	conf/emacs/.emacs.d/core/libs/page-break-lines.el	/^(defgroup page-break-lines nil$/;"	f
page-break-lines--update-display-table	conf/emacs/.emacs.d/core/libs/page-break-lines.el	/^(defun page-break-lines--update-display-table (window)$/;"	f
page-break-lines--update-display-tables	conf/emacs/.emacs.d/core/libs/page-break-lines.el	/^(defun page-break-lines--update-display-tables  (&optional frame)$/;"	f
page-break-lines-char	conf/emacs/.emacs.d/core/libs/page-break-lines.el	/^(defcustom page-break-lines-char ?─$/;"	f
page-break-lines-lighter	conf/emacs/.emacs.d/core/libs/page-break-lines.el	/^(defcustom page-break-lines-lighter " PgLn"$/;"	f
page-break-lines-max-width	conf/emacs/.emacs.d/core/libs/page-break-lines.el	/^(defcustom page-break-lines-max-width nil$/;"	f
page-break-lines-mode	conf/emacs/.emacs.d/core/libs/page-break-lines.el	/^(define-minor-mode page-break-lines-mode$/;"	f
page-break-lines-mode-maybe	conf/emacs/.emacs.d/core/libs/page-break-lines.el	/^(defun page-break-lines-mode-maybe ()$/;"	f
page-break-lines-modes	conf/emacs/.emacs.d/core/libs/page-break-lines.el	/^(defcustom page-break-lines-modes$/;"	f
pandoc-packages	conf/emacs/.emacs.d/layers/+tools/pandoc/packages.el	/^(defconst pandoc-packages$/;"	f
pandoc/init-ox-pandoc	conf/emacs/.emacs.d/layers/+tools/pandoc/packages.el	/^(defun pandoc\/init-ox-pandoc ()$/;"	f
pandoc/init-pandoc-mode	conf/emacs/.emacs.d/layers/+tools/pandoc/packages.el	/^(defun pandoc\/init-pandoc-mode ()$/;"	f
parinfer-packages	conf/emacs/.emacs.d/layers/+misc/parinfer/packages.el	/^(defconst parinfer-packages$/;"	f
parinfer/init-parinfer-rust-mode	conf/emacs/.emacs.d/layers/+misc/parinfer/packages.el	/^(defun parinfer\/init-parinfer-rust-mode ()$/;"	f
parse	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func (p *parser) parse() error {$/;"	f
parse	conf/zsh/.oh-my-zsh/plugins/aliases/cheatsheet.py	/^def parse(line):$/;"	f
parse	conf/zsh/.oh-my-zsh/tools/changelog.sh	/^function parse-commit {$/;"	f
parseCurrentToken	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func (p *parser) parseCurrentToken() {$/;"	f
parseForeignContent	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func parseForeignContent(p *parser) bool {$/;"	f
parseImpliedToken	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func (p *parser) parseImpliedToken(t TokenType, dataAtom a.Atom, data string) {$/;"	f
parse_and_instantiate	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^def parse_and_instantiate(parent_to, text, indent):$/;"	f
parse_and_instantiate	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^def parse_and_instantiate(parent_to, text, indent):$/;"	f
parse_args	conf/vim/.vim/plugged/ultisnips/test_all.py	/^    def parse_args():$/;"	f	function:setup_other_plugins
parse_arguments	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/run_tests	/^parse_arguments() {$/;"	f
parse_buffer_pattern	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def parse_buffer_pattern(b: Buffer, pattern: str) -> typing.List[str]:$/;"	f
parse_errors	conf/vim/.vim/plugged/vim-go/autoload/go/mod.vim	/^function! s:parse_errors(filename, content) abort$/;"	f
parse_errors	conf/vim/.vim/plugged/vim-go/autoload/go/rename.vim	/^function s:parse_errors(exit_val, bang, out)$/;"	f
parse_file_pattern	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def parse_file_pattern(f: typing.Iterable[str],$/;"	f
parse_git_dirty	conf/zsh/.oh-my-zsh/lib/git.zsh	/^function parse_git_dirty() {$/;"	f
parse_options	conf/vim/.vim/autoload/plug.vim	/^function! s:parse_options(arg)$/;"	f
parse_output	conf/vim/.vim/plugged/vim-go/autoload/go/calls.vim	/^function! s:parse_output(mode, output) abort$/;"	f
parse_output	conf/vim/.vim/plugged/vim-go/autoload/go/implements.vim	/^function! s:parse_output(exit_val, output) abort$/;"	f
parse_output	conf/vim/.vim/plugged/vim-go/autoload/go/referrers.vim	/^function! s:parse_output(exit_val, output) abort$/;"	f
parsed	conf/zsh/.oh-my-zsh/plugins/shell-proxy/ssh-proxy.py	/^parsed = urlparse(proxy)$/;"	v
parser	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^    parser = optparse.OptionParser(__doc__.strip())$/;"	v
parser	conf/vim/.vim/plugged/vim-go/test/parse.go	/^type parser struct {$/;"	t
parser	conf/zsh/.oh-my-zsh/plugins/aliases/cheatsheet.py	/^    parser = argparse.ArgumentParser(description="Pretty print aliases.", prog="als")$/;"	v
part_of_diff	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:part_of_diff(hunk_diff, first, last)$/;"	f
pass-packages	conf/emacs/.emacs.d/layers/+tools/pass/packages.el	/^(defconst pass-packages$/;"	f
pass/init-auth-source-pass	conf/emacs/.emacs.d/layers/+tools/pass/packages.el	/^(defun pass\/init-auth-source-pass ()$/;"	f
pass/init-helm-pass	conf/emacs/.emacs.d/layers/+tools/pass/packages.el	/^(defun pass\/init-helm-pass ()$/;"	f
pass/init-ivy-pass	conf/emacs/.emacs.d/layers/+tools/pass/packages.el	/^(defun pass\/init-ivy-pass ()$/;"	f
pass/init-password-store	conf/emacs/.emacs.d/layers/+tools/pass/packages.el	/^(defun pass\/init-password-store ()$/;"	f
pass/init-password-store-otp	conf/emacs/.emacs.d/layers/+tools/pass/packages.el	/^(defun pass\/init-password-store-otp ()$/;"	f
paste_string	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/spec/terminal_session.rb	/^  def paste_string(str)$/;"	f	class:TerminalSession
paste_string	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/spec/terminal_session.rb	/^  def paste_string(str)$/;"	f	class:TerminalSession
path	conf/vim/.vim/autoload/plug.vim	/^  function! s:path(path)$/;"	f
paths	conf/vim/.vim/plugged/vim-go/autoload/go/package.vim	/^function! s:paths() abort$/;"	f
pause_all	workflows/Ariafred/src/aria_actions.py	/^def pause_all():$/;"	f
pdf/init-pdf-tools	conf/emacs/.emacs.d/layers/+readers/pdf/packages.el	/^(defun pdf\/init-pdf-tools ()$/;"	f
pdf/init-pdf-view-restore	conf/emacs/.emacs.d/layers/+readers/pdf/packages.el	/^(defun pdf\/init-pdf-view-restore ()$/;"	f
peek	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def peek(self, count=1):$/;"	m	class:_TextIterator
peek	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def peek(self):$/;"	m	class:LineIterator
per	conf/zsh/.oh-my-zsh/plugins/per-directory-history/per-directory-history.plugin.zsh	/^function per-directory-history-toggle-history() {$/;"	f
per	conf/zsh/.oh-my-zsh/plugins/per-directory-history/per-directory-history.zsh	/^function per-directory-history-toggle-history() {$/;"	f
percol_select_history	conf/zsh/.oh-my-zsh/plugins/percol/percol.plugin.zsh	/^function percol_select_history() {$/;"	f
percol_select_marks	conf/zsh/.oh-my-zsh/plugins/percol/percol.plugin.zsh	/^  function percol_select_marks() {$/;"	f
perforce-packages	conf/emacs/.emacs.d/layers/+source-control/perforce/packages.el	/^(defconst perforce-packages$/;"	f
perforce/init-p4	conf/emacs/.emacs.d/layers/+source-control/perforce/packages.el	/^(defun perforce\/init-p4 ()$/;"	f
perl5-backend	conf/emacs/.emacs.d/layers/+lang/perl5/config.el	/^(defvar perl5-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'company-plsense)$/;"	f
perl5-packages	conf/emacs/.emacs.d/layers/+lang/perl5/packages.el	/^(defconst perl5-packages$/;"	f
perl5-perltidy-executable	conf/emacs/.emacs.d/layers/+lang/perl5/config.el	/^(defvar perl5-perltidy-executable "perltidy"$/;"	f
perl5-perltidy-options	conf/emacs/.emacs.d/layers/+lang/perl5/config.el	/^(defvar perl5-perltidy-options '()$/;"	f
perl5/init-company-plsense	conf/emacs/.emacs.d/layers/+lang/perl5/packages.el	/^(defun perl5\/init-company-plsense ()$/;"	f
perl5/init-cperl-mode	conf/emacs/.emacs.d/layers/+lang/perl5/packages.el	/^(defun perl5\/init-cperl-mode ()$/;"	f
perl5/post-init-company	conf/emacs/.emacs.d/layers/+lang/perl5/packages.el	/^(defun perl5\/post-init-company ()$/;"	f
perl5/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/perl5/packages.el	/^(defun perl5\/post-init-flycheck ()$/;"	f
perl5/post-init-realgud	conf/emacs/.emacs.d/layers/+lang/perl5/packages.el	/^(defun perl5\/post-init-realgud ()$/;"	f
perl5/post-init-smartparens	conf/emacs/.emacs.d/layers/+lang/perl5/packages.el	/^(defun perl5\/post-init-smartparens ()$/;"	f
perl5/pre-init-dap-mode	conf/emacs/.emacs.d/layers/+lang/perl5/packages.el	/^(defun perl5\/pre-init-dap-mode ()$/;"	f
perl5/pre-init-org	conf/emacs/.emacs.d/layers/+lang/perl5/packages.el	/^(defun perl5\/pre-init-org ()$/;"	f
permission_check	sh/kcptun.sh	/^permission_check() {$/;"	f
pfd	conf/zsh/.oh-my-zsh/plugins/macos/macos.plugin.zsh	/^function pfd() {$/;"	f
pfs	conf/zsh/.oh-my-zsh/plugins/macos/macos.plugin.zsh	/^function pfs() {$/;"	f
pgs	conf/zsh/.oh-my-zsh/plugins/perl/perl.plugin.zsh	/^pgs() { # [find] [replace] [filename]$/;"	f
phoenix-packages	conf/emacs/.emacs.d/layers/+frameworks/phoenix/packages.el	/^(defconst phoenix-packages '(alchemist))$/;"	f
phoenix/post-init-alchemist	conf/emacs/.emacs.d/layers/+frameworks/phoenix/packages.el	/^(defun phoenix\/post-init-alchemist ()$/;"	f
php-backend	conf/emacs/.emacs.d/layers/+lang/php/config.el	/^(defvar php-backend 'nil$/;"	f
php-packages	conf/emacs/.emacs.d/layers/+lang/php/packages.el	/^(defconst php-packages$/;"	f
php/init-company-php	conf/emacs/.emacs.d/layers/+lang/php/packages.el	/^(defun php\/init-company-php ()$/;"	f
php/init-company-phpactor	conf/emacs/.emacs.d/layers/+lang/php/packages.el	/^(defun php\/init-company-phpactor ()$/;"	f
php/init-drupal-mode	conf/emacs/.emacs.d/layers/+lang/php/packages.el	/^(defun php\/init-drupal-mode ()$/;"	f
php/init-geben	conf/emacs/.emacs.d/layers/+lang/php/packages.el	/^(defun php\/init-geben ()$/;"	f
php/init-php-auto-yasnippets	conf/emacs/.emacs.d/layers/+lang/php/packages.el	/^(defun php\/init-php-auto-yasnippets ()$/;"	f
php/init-php-extras	conf/emacs/.emacs.d/layers/+lang/php/packages.el	/^(defun php\/init-php-extras ()$/;"	f
php/init-php-mode	conf/emacs/.emacs.d/layers/+lang/php/packages.el	/^(defun php\/init-php-mode ()$/;"	f
php/init-phpactor	conf/emacs/.emacs.d/layers/+lang/php/packages.el	/^(defun php\/init-phpactor ()$/;"	f
php/init-phpunit	conf/emacs/.emacs.d/layers/+lang/php/packages.el	/^(defun php\/init-phpunit ()$/;"	f
php/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/php/packages.el	/^(defun php\/post-init-counsel-gtags nil)$/;"	f
php/post-init-eldoc	conf/emacs/.emacs.d/layers/+lang/php/packages.el	/^(defun php\/post-init-eldoc ()$/;"	f
php/post-init-evil-matchit	conf/emacs/.emacs.d/layers/+lang/php/packages.el	/^(defun php\/post-init-evil-matchit ()$/;"	f
php/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/php/packages.el	/^(defun php\/post-init-flycheck ()$/;"	f
php/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/php/packages.el	/^(defun php\/post-init-ggtags ()$/;"	f
php/pre-init-dap-mode	conf/emacs/.emacs.d/layers/+lang/php/packages.el	/^(defun php\/pre-init-dap-mode ()$/;"	f
pianobar-command	conf/emacs/.emacs.d/layers/+music/pianobar/config.el	/^(defvar pianobar-command "pianobar"$/;"	f
pianobar-config	conf/emacs/.emacs.d/layers/+music/pianobar/config.el	/^(defvar pianobar-config 'nil$/;"	f
pianobar-packages	conf/emacs/.emacs.d/layers/+music/pianobar/packages.el	/^(defconst pianobar-packages$/;"	f
pianobar-station	conf/emacs/.emacs.d/layers/+music/pianobar/config.el	/^(defvar pianobar-station 'nil$/;"	f
pianobar/init-pianobar	conf/emacs/.emacs.d/layers/+music/pianobar/packages.el	/^(defun pianobar\/init-pianobar ()$/;"	f
pipe_data_received	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^    def pipe_data_received(self, fd: int, data: typing.Any) -> None:$/;"	m	class:Process
pipig	conf/zsh/.oh-my-zsh/plugins/pip/pip.plugin.zsh	/^function pipig {$/;"	f
pipigb	conf/zsh/.oh-my-zsh/plugins/pip/pip.plugin.zsh	/^function pipigb {$/;"	f
pipigp	conf/zsh/.oh-my-zsh/plugins/pip/pip.plugin.zsh	/^function pipigp {$/;"	f
pipunall	conf/zsh/.oh-my-zsh/plugins/pip/pip.plugin.zsh	/^function pipunall {$/;"	f
pipupall	conf/zsh/.oh-my-zsh/plugins/pip/pip.plugin.zsh	/^function pipupall {$/;"	f
pj	conf/zsh/.oh-my-zsh/plugins/pj/pj.plugin.zsh	/^function pj() {$/;"	f
pl/get-vim-face	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/local/vim-powerline/vim-powerline-theme.el	/^(defun pl\/get-vim-face (face)$/;"	f
pl/vim-face	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/local/vim-powerline/vim-powerline-theme.el	/^(defmacro pl\/vim-face (name state)$/;"	f
placeholder	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def placeholder(self):$/;"	m	class:VisualContentPreserver
plantuml-packages	conf/emacs/.emacs.d/layers/+lang/plantuml/packages.el	/^(defconst plantuml-packages$/;"	f
plantuml/init-plantuml-mode	conf/emacs/.emacs.d/layers/+lang/plantuml/packages.el	/^(defun plantuml\/init-plantuml-mode ()$/;"	f
plantuml/pre-init-org	conf/emacs/.emacs.d/layers/+lang/plantuml/packages.el	/^(defun plantuml\/pre-init-org ()$/;"	f
play	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/test/src/play/play_test.go	/^package play$/;"	p
pluck	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:pluck(dict, key, default)$/;"	f
plug#	conf/vim/.vim/autoload/plug.vim	/^function! plug#(repo, ...)$/;"	f
plug#begin	conf/vim/.vim/autoload/plug.vim	/^function! plug#begin(...)$/;"	f
plug#end	conf/vim/.vim/autoload/plug.vim	/^function! plug#end()$/;"	f
plug#helptags	conf/vim/.vim/autoload/plug.vim	/^function! plug#helptags()$/;"	f
plug#load	conf/vim/.vim/autoload/plug.vim	/^function! plug#load(...)$/;"	f
plug#shellescape	conf/vim/.vim/autoload/plug.vim	/^function! plug#shellescape(arg, ...)$/;"	f
plug_call	conf/vim/.vim/autoload/plug.vim	/^  function! s:plug_call(fn, ...)$/;"	f
plug_expand	conf/vim/.vim/autoload/plug.vim	/^function! s:plug_expand(fmt)$/;"	f
plug_fnamemodify	conf/vim/.vim/autoload/plug.vim	/^function! s:plug_fnamemodify(fname, mods)$/;"	f
plug_getcwd	conf/vim/.vim/autoload/plug.vim	/^function! s:plug_getcwd()$/;"	f
plug_tempname	conf/vim/.vim/autoload/plug.vim	/^function! s:plug_tempname()$/;"	f
plug_window_exists	conf/vim/.vim/autoload/plug.vim	/^function! s:plug_window_exists()$/;"	f
plugin	conf/vim/.vim/plugged/vim-clang-format/plugin/clang_format.vim	/^augroup plugin-clang-format-auto-format$/;"	a
plugin_already_installed	conf/tmux/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^plugin_already_installed() {$/;"	f
plugin_cache_dir	conf/vim/.vim/plugged/ultisnips/test/vim_test_case.py	/^def plugin_cache_dir():$/;"	f
plugin_cache_dir	conf/vim/.vim/plugged/ultisnips/test_all.py	/^def plugin_cache_dir():$/;"	f
plugin_dir_exists	conf/tmux/.tmux/plugins/tpm/scripts/source_plugins.sh	/^plugin_dir_exists() {$/;"	f
plugin_name_helper	conf/tmux/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^plugin_name_helper() {$/;"	f
plugin_path_helper	conf/tmux/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^plugin_path_helper() {$/;"	f
plugins	conf/vim/.vim/plugged/ultisnips/test/test_Plugin.py	/^    plugins = ["ervandew\/supertab"]$/;"	v	class:Plugin_SuperTab_SimpleTest
plugins	conf/vim/.vim/plugged/ultisnips/test/vim_test_case.py	/^    plugins = []$/;"	v	class:VimTestCase
pm	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^    def pm(cls):$/;"	m	class:RemotePDB
png_to_icns	workflows/Ariafred/src/workflow/notify.py	/^def png_to_icns(png_path, icns_path):$/;"	f
po	conf/zsh/.oh-my-zsh/plugins/git-prompt/gitstatus.py	/^po = Popen(['git', 'status', '--porcelain', '--branch'], env=dict(os.environ, LANG="C"), stdout=PIPE, stderr=PIPE)$/;"	v
pocket-packages	conf/emacs/.emacs.d/layers/+web-services/pocket/packages.el	/^(defconst pocket-packages$/;"	f
pocket/init-pocket-reader	conf/emacs/.emacs.d/layers/+web-services/pocket/packages.el	/^(defun pocket\/init-pocket-reader ()$/;"	f
popUntil	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func (p *parser) popUntil(s scope, matchTags ...a.Atom) bool {$/;"	f
pop_future	conf/zsh/.oh-my-zsh/plugins/dirhistory/dirhistory.plugin.zsh	/^function pop_future() {$/;"	f
pop_past	conf/zsh/.oh-my-zsh/plugins/dirhistory/dirhistory.plugin.zsh	/^function pop_past() {$/;"	f
populate_hunk_preview_window	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:populate_hunk_preview_window(header, body)$/;"	f
popup_cursor	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:popup_cursor(n) abort$/;"	f
popup_position	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:popup_position(config) abort$/;"	f
popup_visible	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:popup_visible(id) abort$/;"	f
port_pro	conf/zsh/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function port_pro() {$/;"	f
pos	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def pos(self):$/;"	m	class:_TextIterator
pos	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def pos(self):$/;"	m	class:VimState
pos	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let pos = getpos('.')$/;"	v
pos	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let pos = getpos('.')$/;"	v
position	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! s:position(line, col) abort$/;"	f
positive	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    positive = "yes xxx"$/;"	v	class:ContextSnippets_ContextHasAccessToReMatch
post	workflows/Ariafred/src/workflow/web.py	/^def post(url, params=None, data=None, headers=None, cookies=None, files=None,$/;"	f
powed	conf/zsh/.oh-my-zsh/plugins/pow/pow.plugin.zsh	/^powed(){$/;"	f
powerline--build-face	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/local/vim-powerline/vim-colors.el	/^(defun powerline--build-face (fg &optional bg bold)$/;"	f
powerline--expand-alist	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/local/vim-powerline/vim-colors.el	/^(defun powerline--expand-alist (alist)$/;"	f
powerline--gen-facedef	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/local/vim-powerline/vim-colors.el	/^(defun powerline--gen-facedef (feature mode args)$/;"	f
powerline--generate-facedefs	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/local/vim-powerline/vim-colors.el	/^(defun powerline--generate-facedefs (alist)$/;"	f
powerline-active3	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/local/vim-powerline/vim-powerline-theme.el	/^(defface powerline-active3 '((t (:background "#afd700"$/;"	f
powerline-inactive3	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/local/vim-powerline/vim-powerline-theme.el	/^(defface powerline-inactive3 '((t (:foreground "grey90" :background "grey30" :inherit mode-line)))$/;"	f
powerline-vimish-theme	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/local/vim-powerline/vim-powerline-theme.el	/^(defun powerline-vimish-theme ()$/;"	f
powerlineBlockNames	conf/tmux/.tmux/plugins/tmux-themepack/test/powerline_block_test.go	/^var powerlineBlockNames = []string{$/;"	v
powerlineColors	conf/tmux/.tmux/plugins/tmux-themepack/test/powerline_test.go	/^var powerlineColors = map[string]struct {$/;"	v
powerlineDefaultNames	conf/tmux/.tmux/plugins/tmux-themepack/test/powerline_default_test.go	/^var powerlineDefaultNames = []string{$/;"	v
powerlineDoubleNames	conf/tmux/.tmux/plugins/tmux-themepack/test/powerline_double_test.go	/^var powerlineDoubleNames = []string{$/;"	v
powit	conf/zsh/.oh-my-zsh/plugins/pow/pow.plugin.zsh	/^powit(){$/;"	f
pp_json	conf/zsh/.oh-my-zsh/plugins/jsontools/jsontools.plugin.zsh	/^    function pp_json() {$/;"	f
ppos	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def ppos(self):$/;"	m	class:VimState
pre_install	sh/shadowsocks.sh	/^pre_install(){$/;"	f
precmd	conf/zsh/.oh-my-zsh/plugins/screen/screen.plugin.zsh	/^  function precmd()$/;"	f
precmd_update_git_vars	conf/zsh/.oh-my-zsh/plugins/git-prompt/git-prompt.plugin.zsh	/^function precmd_update_git_vars() {$/;"	f
preexec	conf/zsh/.oh-my-zsh/plugins/screen/screen.plugin.zsh	/^  function preexec()$/;"	f
preexec_update_git_vars	conf/zsh/.oh-my-zsh/plugins/git-prompt/git-prompt.plugin.zsh	/^function preexec_update_git_vars() {$/;"	f
prefix	conf/tmux/.tmux/plugins/tmux-sensible/sensible.tmux	/^prefix() {$/;"	f
prefix_without_ctrl	conf/tmux/.tmux/plugins/tmux-sensible/sensible.tmux	/^prefix_without_ctrl() {$/;"	f
prep	conf/zsh/.oh-my-zsh/plugins/perl/perl.plugin.zsh	/^prep() { # [pattern] [filename unless STDOUT]$/;"	f
prepare	conf/vim/.vim/autoload/plug.vim	/^function! s:prepare(...)$/;"	f
prepareCallHierarchyHandler	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:prepareCallHierarchyHandler(next, msg) abort dict$/;"	f
prepend_opts	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:prepend_opts(dict, eopts)$/;"	f
prereleases	workflows/Ariafred/src/workflow/update.py	/^    prereleases = '--prereleases' in argv$/;"	v
prereleases	workflows/Ariafred/src/workflow/workflow.py	/^    def prereleases(self):$/;"	m	class:Workflow
prereleases_off	workflows/Ariafred/src/workflow/workflow.py	/^        def prereleases_off():$/;"	f	function:Workflow._register_default_magic
prereleases_on	workflows/Ariafred/src/workflow/workflow.py	/^        def prereleases_on():$/;"	f	function:Workflow._register_default_magic
preserve	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def preserve(self):$/;"	m	class:_SnippetUtilCursor
preserveerrors	conf/vim/.vim/plugged/vim-go/autoload/go/lint.vim	/^function! s:preserveerrors(autosave, listtype) abort$/;"	f
prettier/init-prettier-js	conf/emacs/.emacs.d/layers/+tools/prettier/packages.el	/^(defun prettier\/init-prettier-js ()$/;"	f
pretty_print	conf/zsh/.oh-my-zsh/plugins/aliases/cheatsheet.py	/^def pretty_print(cheatsheet, wfilter, group_list=None, groups_only=False):$/;"	f
pretty_print_group	conf/zsh/.oh-my-zsh/plugins/aliases/cheatsheet.py	/^def pretty_print_group(key, aliases, highlight=None, only_groupname=False):$/;"	f
prev	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let prev = line('w0')$/;"	v
prev	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let prev = GetBuffer()$/;"	v
prev_default_command	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^    let prev_default_command = $FZF_DEFAULT_COMMAND$/;"	v
preview	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:preview(hunk_diff)$/;"	f
previewBookmark	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewBookmark(bookmark) abort$/;"	f
previewNodeCurrent	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeCurrent(node) abort$/;"	f
previewNodeHSplit	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplit(node) abort$/;"	f
previewNodeHSplitBookmark	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplitBookmark(bookmark) abort$/;"	f
previewNodeVSplit	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplit(node) abort$/;"	f
previewNodeVSplitBookmark	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplitBookmark(bookmark) abort$/;"	f
preview_commit	conf/vim/.vim/autoload/plug.vim	/^function! s:preview_commit()$/;"	f
preview_highlights	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! s:preview_highlights(winid, bufnr, config, float) abort$/;"	f
print	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/base/source.py	/^    def print(self, expr: typing.Any) -> None:$/;"	m	class:Base
print_error	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/base/filter.py	/^    def print_error(self, expr: typing.Any) -> None:$/;"	m	class:Base
print_error	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/base/source.py	/^    def print_error(self, expr: typing.Any) -> None:$/;"	m	class:Base
print_stack	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/debug.py	/^def print_stack():$/;"	f
print_success	conf/zsh/.oh-my-zsh/tools/install.sh	/^print_success() {$/;"	f
priority	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def priority(self):$/;"	m	class:SnippetDefinition
problems	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/lint/golangci-lint/problems/importabs/ok.go	/^package problems$/;"	p
problems	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/lint/golangci-lint/problems/importabs/problems.go	/^package problems$/;"	p
problems	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/lint/golangci-lint/problems/multiple/problems.go	/^package problems$/;"	p
problems	conf/vim/.vim/plugged/vim-go/autoload/go/test-fixtures/lint/src/lint/golangci-lint/problems/shadow/problems.go	/^package problems$/;"	p
processDiagnostic	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:processDiagnostic(diagnostic, bufname, fname) abort$/;"	f
process_added	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_added(modifications, from_count, to_count, to_line) abort$/;"	f
process_exited	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^    def process_exited(self) -> None:$/;"	m	class:Process
process_hunk	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_hunk(bufnr, hunk) abort$/;"	f
process_modified	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified(modifications, from_count, to_count, to_line) abort$/;"	f
process_modified_and_added	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified_and_added(modifications, from_count, to_count, to_line) abort$/;"	f
process_modified_and_removed	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified_and_removed(modifications, from_count, to_count, to_line) abort$/;"	f
process_removed	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_removed(modifications, from_count, to_count, to_line) abort$/;"	f
prodigy/init-prodigy	conf/emacs/.emacs.d/layers/+tools/prodigy/packages.el	/^(defun prodigy\/init-prodigy ()$/;"	f
program_exists	sh/spf13-vim.sh	/^program_exists() {$/;"	f
program_must_exist	sh/spf13-vim.sh	/^program_must_exist() {$/;"	f
progress	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^function! s:progress(winid, total, curr, index) abort$/;"	f
progress_bar	conf/vim/.vim/autoload/plug.vim	/^function! s:progress_bar(line, bar, total)$/;"	f
progress_opt	conf/vim/.vim/autoload/plug.vim	/^function! s:progress_opt(base)$/;"	f
projectdir	conf/vim/.vim/plugged/vim-go/autoload/gotest.vim	/^func! s:projectdir(path) abort$/;"	f
projectile-multi-term-in-root	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun projectile-multi-term-in-root ()$/;"	f
prolog-packages	conf/emacs/.emacs.d/layers/+lang/prolog/packages.el	/^(defconst prolog-packages$/;"	f
prolog-system	conf/emacs/.emacs.d/layers/+lang/prolog/config.el	/^(defvar prolog-system `swi$/;"	f
prolog/init-ediprolog	conf/emacs/.emacs.d/layers/+lang/prolog/packages.el	/^(defun prolog\/init-ediprolog ()$/;"	f
prolog/init-prolog	conf/emacs/.emacs.d/layers/+lang/prolog/packages.el	/^(defun prolog\/init-prolog ()$/;"	f
promptToDelBuffer	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
prompt_source_target_mappings	sh/monitor_rsync_multi.sh	/^prompt_source_target_mappings() {$/;"	f
prompt_source_target_mappings	sh/monitor_rsync_multi.sh.orig	/^prompt_source_target_mappings() {$/;"	f
prop_type_hlgroup	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! s:prop_type_hlgroup(type) abort$/;"	f
protobuf-packages	conf/emacs/.emacs.d/layers/+lang/protobuf/packages.el	/^(defconst protobuf-packages$/;"	f
protobuf/init-protobuf-mode	conf/emacs/.emacs.d/layers/+lang/protobuf/packages.el	/^(defun protobuf\/init-protobuf-mode ()$/;"	f
protobuf/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/protobuf/packages.el	/^(defun protobuf\/post-init-flycheck ()$/;"	f
proxies	conf/zsh/.oh-my-zsh/plugins/shell-proxy/proxy.py	/^    proxies = make_proxies(*get_http_proxy())$/;"	v	class:CommandSet
proxy	conf/zsh/.oh-my-zsh/plugins/shell-proxy/shell-proxy.plugin.zsh	/^  proxy() {$/;"	f
proxy	conf/zsh/.oh-my-zsh/plugins/shell-proxy/ssh-proxy.py	/^proxy = next(os.environ[_] for _ in ("HTTP_PROXY", "HTTPS_PROXY") if _ in os.environ)$/;"	v
proxy_config	conf/zsh/.oh-my-zsh/plugins/shell-proxy/proxy.py	/^proxy_config = os.environ.get("SHELLPROXY_CONFIG") or os.path.expandvars("$HOME\/.config\/proxy")$/;"	v
proxy_env	conf/zsh/.oh-my-zsh/plugins/shell-proxy/proxy.py	/^proxy_env = "SHELLPROXY_URL"$/;"	v
proxy_protocols	conf/zsh/.oh-my-zsh/plugins/shell-proxy/ssh-proxy.py	/^proxy_protocols = {$/;"	v
psgrep	conf/zsh/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function psgrep() {$/;"	f
pull_changes	conf/tmux/.tmux/plugins/tpm/scripts/update_plugin.sh	/^pull_changes() {$/;"	f
pupo--auto-windows	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/local/spacemacs-purpose-popwin/spacemacs-purpose-popwin.el	/^(defvar pupo--auto-windows nil$/;"	f
pupo--direction-to-purpose	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/local/spacemacs-purpose-popwin/spacemacs-purpose-popwin.el	/^(defconst pupo--direction-to-purpose '((left . popl)$/;"	f
pupo--purposes	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/local/spacemacs-purpose-popwin/spacemacs-purpose-popwin.el	/^(defconst pupo--purposes$/;"	f
pupo--saved-auto-buffers	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/local/spacemacs-purpose-popwin/spacemacs-purpose-popwin.el	/^(defvar pupo--saved-auto-buffers nil$/;"	f
pupo--saved-buffers	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/local/spacemacs-purpose-popwin/spacemacs-purpose-popwin.el	/^(defvar pupo--saved-buffers nil$/;"	f
pupo--windows	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/local/spacemacs-purpose-popwin/spacemacs-purpose-popwin.el	/^(defvar pupo--windows nil$/;"	f
pupo-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/local/spacemacs-purpose-popwin/spacemacs-purpose-popwin.el	/^(define-minor-mode pupo-mode$/;"	f
pupo-split-active-window	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/local/spacemacs-purpose-popwin/spacemacs-purpose-popwin.el	/^(defcustom pupo-split-active-window nil$/;"	f
pupo//actions	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/local/spacemacs-purpose-popwin/spacemacs-purpose-popwin.el	/^(defun pupo\/\/actions (settings)$/;"	f
pupo//popup-function	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/local/spacemacs-purpose-popwin/spacemacs-purpose-popwin.el	/^(defun pupo\/\/popup-function (position size)$/;"	f
pupo//position-to-display-function	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/local/spacemacs-purpose-popwin/spacemacs-purpose-popwin.el	/^(defun pupo\/\/position-to-display-function (position width height)$/;"	f
pupo//position-to-purpose	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/local/spacemacs-purpose-popwin/spacemacs-purpose-popwin.el	/^(defun pupo\/\/position-to-purpose (position)$/;"	f
pupo//safe-delete-window	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/local/spacemacs-purpose-popwin/spacemacs-purpose-popwin.el	/^(defun pupo\/\/safe-delete-window (&optional window)$/;"	f
pupo/after-display	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/local/spacemacs-purpose-popwin/spacemacs-purpose-popwin.el	/^(defun pupo\/after-display (window)$/;"	f
pupo/after-popwin-create	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/local/spacemacs-purpose-popwin/spacemacs-purpose-popwin.el	/^(defun pupo\/after-popwin-create (&rest args)$/;"	f
pupo/auto-delete-windows	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/local/spacemacs-purpose-popwin/spacemacs-purpose-popwin.el	/^(defun pupo\/auto-delete-windows (window)$/;"	f
pupo/before-popwin-create	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/local/spacemacs-purpose-popwin/spacemacs-purpose-popwin.el	/^(defun pupo\/before-popwin-create (&rest args)$/;"	f
pupo/close-all-windows	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/local/spacemacs-purpose-popwin/spacemacs-purpose-popwin.el	/^(defun pupo\/close-all-windows ()$/;"	f
pupo/close-window	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/local/spacemacs-purpose-popwin/spacemacs-purpose-popwin.el	/^(defun pupo\/close-window ()$/;"	f
pupo/display-condition	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/local/spacemacs-purpose-popwin/spacemacs-purpose-popwin.el	/^(defun pupo\/display-condition (_purpose buffer _alist)$/;"	f
pupo/display-function	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/local/spacemacs-purpose-popwin/spacemacs-purpose-popwin.el	/^(defun pupo\/display-function (buffer alist)$/;"	f
pupo/popwin-config-to-purpose-config	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/local/spacemacs-purpose-popwin/spacemacs-purpose-popwin.el	/^(defun pupo\/popwin-config-to-purpose-config ()$/;"	f
pupo/sync-advices	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/local/spacemacs-purpose-popwin/spacemacs-purpose-popwin.el	/^(defun pupo\/sync-advices ()$/;"	f
pupo/update-purpose-config	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/local/spacemacs-purpose-popwin/spacemacs-purpose-popwin.el	/^(defun pupo\/update-purpose-config ()$/;"	f
puppet/init-puppet-mode	conf/emacs/.emacs.d/layers/+tools/puppet/packages.el	/^(defun puppet\/init-puppet-mode ()$/;"	f
puppet/post-init-company	conf/emacs/.emacs.d/layers/+tools/puppet/packages.el	/^(defun puppet\/post-init-company ()$/;"	f
puppet/post-init-flycheck	conf/emacs/.emacs.d/layers/+tools/puppet/packages.el	/^(defun puppet\/post-init-flycheck ()$/;"	f
purescript-add-import-on-completion	conf/emacs/.emacs.d/layers/+lang/purescript/config.el	/^(defvar purescript-add-import-on-completion t$/;"	f
purescript-backend	conf/emacs/.emacs.d/layers/+lang/purescript/config.el	/^(defvar purescript-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'psc-ide)$/;"	f
purescript-enable-rebuild-on-save	conf/emacs/.emacs.d/layers/+lang/purescript/config.el	/^(defvar purescript-enable-rebuild-on-save nil$/;"	f
purescript-fmt-on-save	conf/emacs/.emacs.d/layers/+lang/purescript/config.el	/^(defvar purescript-fmt-on-save nil$/;"	f
purescript-fmt-tool	conf/emacs/.emacs.d/layers/+lang/purescript/config.el	/^(defvar purescript-fmt-tool 'purs-tidy$/;"	f
purescript/init-psc-ide	conf/emacs/.emacs.d/layers/+lang/purescript/packages.el	/^(defun purescript\/init-psc-ide ()$/;"	f
purescript/init-psci	conf/emacs/.emacs.d/layers/+lang/purescript/packages.el	/^(defun purescript\/init-psci ()$/;"	f
purescript/init-purescript-mode	conf/emacs/.emacs.d/layers/+lang/purescript/packages.el	/^(defun purescript\/init-purescript-mode ()$/;"	f
purescript/post-init-add-node-modules-path	conf/emacs/.emacs.d/layers/+lang/purescript/packages.el	/^(defun purescript\/post-init-add-node-modules-path ()$/;"	f
purescript/post-init-company	conf/emacs/.emacs.d/layers/+lang/purescript/packages.el	/^(defun purescript\/post-init-company ()$/;"	f
purescript/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/purescript/packages.el	/^(defun purescript\/post-init-flycheck ()$/;"	f
purescript/pre-init-popwin	conf/emacs/.emacs.d/layers/+lang/purescript/packages.el	/^(defun purescript\/pre-init-popwin ()$/;"	f
push	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^    def push(branch: str):$/;"	m	class:Git
push-agenda	conf/emacs/.spacemacs.d/load.d/variable.el	/^(defun push-agenda (file)$/;"	f
push_future	conf/zsh/.oh-my-zsh/plugins/dirhistory/dirhistory.plugin.zsh	/^function push_future() {$/;"	f
push_past	conf/zsh/.oh-my-zsh/plugins/dirhistory/dirhistory.plugin.zsh	/^function push_past() {$/;"	f
pushdf	conf/zsh/.oh-my-zsh/plugins/macos/macos.plugin.zsh	/^function pushdf() {$/;"	f
pxd	conf/zsh/.oh-my-zsh/plugins/macos/macos.plugin.zsh	/^function pxd() {$/;"	f
pyclean	conf/zsh/.oh-my-zsh/plugins/python/python.plugin.zsh	/^function pyclean() {$/;"	f
pycscope-binary	conf/emacs/.emacs.d/layers/+tags/cscope/config.el	/^(defvar pycscope-binary "pycscope"$/;"	f
pyenv_config_warning	conf/zsh/.oh-my-zsh/plugins/pyenv/pyenv.plugin.zsh	/^pyenv_config_warning() {$/;"	f
pyenv_prompt_info	conf/zsh/.oh-my-zsh/plugins/pyenv/pyenv.plugin.zsh	/^  function pyenv_prompt_info() {$/;"	f
pylookup-cache	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.el	/^(defvar pylookup-cache nil)$/;"	f
pylookup-completing-read	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.el	/^(defvar pylookup-completing-read$/;"	f
pylookup-db-file	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.el	/^(defvar pylookup-db-file "pylookup.db" "Pylookup database file")$/;"	f
pylookup-exec-get-cache	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.el	/^(defun pylookup-exec-get-cache ()$/;"	f
pylookup-exec-lookup	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.el	/^(defun pylookup-exec-lookup (search-term)$/;"	f
pylookup-history	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.el	/^(defvar pylookup-history nil)$/;"	f
pylookup-html-locations	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.el	/^(defvar pylookup-html-locations '("http:\/\/docs.python.org"))$/;"	f
pylookup-lookup	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.el	/^(defun pylookup-lookup (search-term)$/;"	f
pylookup-lookup-at-point	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.el	/^(defun pylookup-lookup-at-point ()$/;"	f
pylookup-mode	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.el	/^(defun pylookup-mode ()$/;"	f
pylookup-mode-lookup	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.el	/^(defun pylookup-mode-lookup ()$/;"	f
pylookup-mode-lookup-and-leave	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.el	/^(defun pylookup-mode-lookup-and-leave ()$/;"	f
pylookup-mode-map	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.el	/^(defvar pylookup-mode-map$/;"	f
pylookup-mode-next-line	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.el	/^(defun pylookup-mode-next-line ()$/;"	f
pylookup-mode-quit-window	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.el	/^(defun pylookup-mode-quit-window ()$/;"	f
pylookup-move-prev-line	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.el	/^(defun pylookup-move-prev-line ()$/;"	f
pylookup-program	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.el	/^(defvar pylookup-program "pylookup.py" "Pylookup execution file")$/;"	f
pylookup-return-window-config	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.el	/^(defvar pylookup-return-window-config nil)$/;"	f
pylookup-search-options	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.el	/^(defvar pylookup-search-options nil$/;"	f
pylookup-set-search-option	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.el	/^(defun pylookup-set-search-option (option-string)$/;"	f
pylookup-temp-buffer-name	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.el	/^(defvar pylookup-temp-buffer-name "*Pylookup Completions*")$/;"	f
pylookup-trim	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.el	/^(defun pylookup-trim (desc n)$/;"	f
pylookup-update	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.el	/^(defun pylookup-update (src &optional append)$/;"	f
pylookup-update-all	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.el	/^(defun pylookup-update-all ()$/;"	f
python-auto-set-local-pyenv-version	conf/emacs/.emacs.d/layers/+lang/python/config.el	/^(defvar python-auto-set-local-pyenv-version 'on-visit$/;"	f
python-auto-set-local-pyvenv-virtualenv	conf/emacs/.emacs.d/layers/+lang/python/config.el	/^(defvar python-auto-set-local-pyvenv-virtualenv 'on-visit$/;"	f
python-backend	conf/emacs/.emacs.d/layers/+lang/python/config.el	/^(defvar python-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'anaconda)$/;"	f
python-fill-column	conf/emacs/.emacs.d/layers/+lang/python/config.el	/^(defvar python-fill-column 79$/;"	f
python-format-on-save	conf/emacs/.emacs.d/layers/+lang/python/config.el	/^(defvar python-format-on-save nil$/;"	f
python-formatter	conf/emacs/.emacs.d/layers/+lang/python/config.el	/^(defvar python-formatter (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'yapf)$/;"	f
python-lsp-git-root	conf/emacs/.emacs.d/layers/+lang/python/config.el	/^(defvar python-lsp-git-root nil$/;"	f
python-lsp-server	conf/emacs/.emacs.d/layers/+lang/python/config.el	/^(defvar python-lsp-server 'pylsp$/;"	f
python-packages	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defconst python-packages$/;"	f
python-pipenv-activate	conf/emacs/.emacs.d/layers/+lang/python/config.el	/^(defvar python-pipenv-activate nil$/;"	f
python-poetry-activate	conf/emacs/.emacs.d/layers/+lang/python/config.el	/^(defvar python-poetry-activate nil$/;"	f
python-save-before-test	conf/emacs/.emacs.d/layers/+lang/python/config.el	/^(defvar python-save-before-test t$/;"	f
python-shell--interpreter	conf/emacs/.emacs.d/layers/+lang/python/config.el	/^(defvar python-shell--interpreter nil)$/;"	f
python-shell--interpreter-args	conf/emacs/.emacs.d/layers/+lang/python/config.el	/^(defvar python-shell--interpreter-args nil)$/;"	f
python-sort-imports-on-save	conf/emacs/.emacs.d/layers/+lang/python/config.el	/^(defvar python-sort-imports-on-save nil$/;"	f
python-spacemacs-indent-guess	conf/emacs/.emacs.d/layers/+lang/python/config.el	/^(defvar python-spacemacs-indent-guess t$/;"	f
python-tab-width	conf/emacs/.emacs.d/layers/+lang/python/config.el	/^(defvar python-tab-width 4$/;"	f
python-test-runner	conf/emacs/.emacs.d/layers/+lang/python/config.el	/^(defvar python-test-runner 'pytest$/;"	f
python/init-anaconda-mode	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/init-anaconda-mode ()$/;"	f
python/init-blacken	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/init-blacken ()$/;"	f
python/init-code-cells	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/init-code-cells ()$/;"	f
python/init-company-anaconda	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/init-company-anaconda ()$/;"	f
python/init-cython-mode	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/init-cython-mode ()$/;"	f
python/init-helm-pydoc	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/init-helm-pydoc ()$/;"	f
python/init-importmagic	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/init-importmagic ()$/;"	f
python/init-live-py-mode	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/init-live-py-mode ()$/;"	f
python/init-lsp-pyright	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/init-lsp-pyright ()$/;"	f
python/init-nose	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/init-nose ()$/;"	f
python/init-pip-requirements	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/init-pip-requirements ()$/;"	f
python/init-pipenv	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/init-pipenv ()$/;"	f
python/init-pippel	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/init-pippel ()$/;"	f
python/init-poetry	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/init-poetry ()$/;"	f
python/init-py-isort	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/init-py-isort ()$/;"	f
python/init-pydoc	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/init-pydoc ()$/;"	f
python/init-pyenv-mode	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/init-pyenv-mode ()$/;"	f
python/init-pylookup	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/init-pylookup ()$/;"	f
python/init-pytest	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/init-pytest ()$/;"	f
python/init-python	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/init-python ()$/;"	f
python/init-pyvenv	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/init-pyvenv ()$/;"	f
python/init-sphinx-doc	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/init-sphinx-doc ()$/;"	f
python/init-yapfify	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/init-yapfify ()$/;"	f
python/post-init-company	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/post-init-company ()$/;"	f
python/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/post-init-counsel-gtags nil)$/;"	f
python/post-init-eldoc	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/post-init-eldoc ()$/;"	f
python/post-init-evil-matchit	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/post-init-evil-matchit ()$/;"	f
python/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/post-init-flycheck ()$/;"	f
python/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/post-init-ggtags ()$/;"	f
python/post-init-semantic	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/post-init-semantic ()$/;"	f
python/post-init-smartparens	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/post-init-smartparens ()$/;"	f
python/post-init-window-purpose	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/post-init-window-purpose ()$/;"	f
python/pre-init-dap-mode	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/pre-init-dap-mode ()$/;"	f
python/pre-init-helm-cscope	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/pre-init-helm-cscope ()$/;"	f
python/pre-init-org	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/pre-init-org ()$/;"	f
python/pre-init-pipenv	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/pre-init-pipenv ()$/;"	f
python/pre-init-poetry	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/pre-init-poetry ()$/;"	f
python/pre-init-pyenv-mode	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/pre-init-pyenv-mode ()$/;"	f
python/pre-init-pyvenv	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/pre-init-pyvenv ()$/;"	f
python/pre-init-smartparens	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/pre-init-smartparens ()$/;"	f
python/pre-init-xcscope	conf/emacs/.emacs.d/layers/+lang/python/packages.el	/^(defun python\/pre-init-xcscope ()$/;"	f
pyuserpaths	conf/zsh/.oh-my-zsh/plugins/python/python.plugin.zsh	/^function pyuserpaths() {$/;"	f
qrcode	conf/zsh/.oh-my-zsh/plugins/qrcode/qrcode.plugin.zsh	/^qrcode () {$/;"	f
qrsvg	conf/zsh/.oh-my-zsh/plugins/qrcode/qrcode.plugin.zsh	/^qrsvg () {$/;"	f
quelpa	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defgroup quelpa nil$/;"	f
quelpa	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa (arg &rest plist)$/;"	f
quelpa--delete-obsoleted-package	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa--delete-obsoleted-package (name &optional new-version)$/;"	f
quelpa--git-version	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defvar quelpa--git-version :uninitialized)$/;"	f
quelpa--min-ver	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defconst quelpa--min-ver '(0 -10) "Smallest possible version.")$/;"	f
quelpa--override-version-check	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defvar quelpa--override-version-check nil)$/;"	f
quelpa--package-installed-p	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa--package-installed-p (package &optional min-version)$/;"	f
quelpa--tar-type	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa--tar-type ()$/;"	f
quelpa--tar-type	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defvar quelpa--tar-type nil$/;"	f
quelpa-after-hook	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-after-hook nil$/;"	f
quelpa-archive-file-name	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-archive-file-name (archive-entry)$/;"	f
quelpa-arg-rcp	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-arg-rcp (arg)$/;"	f
quelpa-autoremove-p	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-autoremove-p t$/;"	f
quelpa-before-hook	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-before-hook nil$/;"	f
quelpa-build	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build (rcp)$/;"	f
quelpa-build--archive-entry	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--archive-entry (pkg-info type)$/;"	f
quelpa-build--build-multi-file-package	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--build-multi-file-package$/;"	f
quelpa-build--build-single-file-package	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--build-single-file-package$/;"	f
quelpa-build--bzr-repo	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--bzr-repo (dir)$/;"	f
quelpa-build--checkout-bitbucket	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--checkout-bitbucket (name config dir)$/;"	f
quelpa-build--checkout-bzr	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--checkout-bzr (name config dir)$/;"	f
quelpa-build--checkout-codeberg	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--checkout-codeberg (name config dir)$/;"	f
quelpa-build--checkout-cvs	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--checkout-cvs (name config dir)$/;"	f
quelpa-build--checkout-darcs	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--checkout-darcs (name config dir)$/;"	f
quelpa-build--checkout-file	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--checkout-file (name config dir)$/;"	f
quelpa-build--checkout-fossil	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--checkout-fossil (name config dir)$/;"	f
quelpa-build--checkout-git	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--checkout-git (name config dir)$/;"	f
quelpa-build--checkout-github	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--checkout-github (name config dir)$/;"	f
quelpa-build--checkout-github-ssh	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--checkout-github-ssh (name config dir)$/;"	f
quelpa-build--checkout-gitlab	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--checkout-gitlab (name config dir)$/;"	f
quelpa-build--checkout-hg	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--checkout-hg (name config dir)$/;"	f
quelpa-build--checkout-sourcehut	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--checkout-sourcehut (name config dir)$/;"	f
quelpa-build--checkout-svn	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--checkout-svn (name config dir)$/;"	f
quelpa-build--checkout-url	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--checkout-url (name config dir)$/;"	f
quelpa-build--checkout-wiki	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--checkout-wiki (name config dir)$/;"	f
quelpa-build--config-file-list	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--config-file-list (config)$/;"	f
quelpa-build--copy-file	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--copy-file (file newname)$/;"	f
quelpa-build--copy-package-files	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--copy-package-files (files source-dir target-dir)$/;"	f
quelpa-build--create-tar	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--create-tar (file dir &optional files)$/;"	f
quelpa-build--cvs-repo	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--cvs-repo (dir)$/;"	f
quelpa-build--darcs-repo	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--darcs-repo (dir)$/;"	f
quelpa-build--dump	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--dump (data file &optional pretty-print)$/;"	f
quelpa-build--ensure-ends-here-line	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--ensure-ends-here-line (file-path)$/;"	f
quelpa-build--expand-source-file-list	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--expand-source-file-list (dir config)$/;"	f
quelpa-build--find-package-commentary	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--find-package-commentary (file-path)$/;"	f
quelpa-build--find-parse-time	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--find-parse-time (regexp &optional bound)$/;"	f
quelpa-build--find-parse-time-newest	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--find-parse-time-newest (regexp &optional bound)$/;"	f
quelpa-build--find-source-file	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--find-source-file (target files)$/;"	f
quelpa-build--find-version-newest	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--find-version-newest (regexp &optional bound)$/;"	f
quelpa-build--fossil-repo	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--fossil-repo (dir)$/;"	f
quelpa-build--generate-dir-file	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--generate-dir-file (files target-dir)$/;"	f
quelpa-build--generate-info-files	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--generate-info-files (files source-dir target-dir)$/;"	f
quelpa-build--get-package-info	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--get-package-info (file-path &optional keep-version)$/;"	f
quelpa-build--get-pkg-file-info	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--get-pkg-file-info (file-path)$/;"	f
quelpa-build--git-head-branch	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--git-head-branch (dir)$/;"	f
quelpa-build--git-head-sha	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--git-head-sha (dir)$/;"	f
quelpa-build--git-repo	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--git-repo (dir remote)$/;"	f
quelpa-build--grab-wiki-file	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--grab-wiki-file (filename)$/;"	f
quelpa-build--hg-repo	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--hg-repo (dir)$/;"	f
quelpa-build--last-wiki-fetch-time	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defvar quelpa-build--last-wiki-fetch-time 0$/;"	f
quelpa-build--merge-package-info	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--merge-package-info (pkg-info name version)$/;"	f
quelpa-build--message	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--message (format-string &rest args)$/;"	f
quelpa-build--package-buffer-info-vec	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--package-buffer-info-vec ()$/;"	f
quelpa-build--parse-time	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--parse-time (str)$/;"	f
quelpa-build--pkg-info	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--pkg-info (package-name files source-dir)$/;"	f
quelpa-build--princ-checkout	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--princ-checkout (repo dir)$/;"	f
quelpa-build--princ-exists	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--princ-exists (dir)$/;"	f
quelpa-build--read-from-file	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--read-from-file (file)$/;"	f
quelpa-build--readme-file-name	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--readme-file-name (target-dir file-name)$/;"	f
quelpa-build--run-process	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--run-process (dir command &rest args)$/;"	f
quelpa-build--run-process-match	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--run-process-match (regexp dir prog &rest args)$/;"	f
quelpa-build--slurp-file	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--slurp-file (file)$/;"	f
quelpa-build--string-rtrim	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--string-rtrim (str)$/;"	f
quelpa-build--svn-repo	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--svn-repo (dir)$/;"	f
quelpa-build--trim	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--trim (str &optional chr)$/;"	f
quelpa-build--update-git-to-ref	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--update-git-to-ref (dir ref &optional force)$/;"	f
quelpa-build--update-or-insert-version	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--update-or-insert-version (version)$/;"	f
quelpa-build--url-copy-file	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--url-copy-file (url newname &optional ok-if-already-exists)$/;"	f
quelpa-build--valid-version	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--valid-version (str &optional regexp)$/;"	f
quelpa-build--wiki-min-request-interval	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defvar quelpa-build--wiki-min-request-interval 3$/;"	f
quelpa-build--with-wiki-rate-limit	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defmacro quelpa-build--with-wiki-rate-limit (&rest body)$/;"	f
quelpa-build--write-pkg-file	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--write-pkg-file (pkg-file pkg-info)$/;"	f
quelpa-build--write-pkg-readme	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build--write-pkg-readme (target-dir commentary file-name)$/;"	f
quelpa-build-checkout	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build-checkout (package-name config working-dir)$/;"	f
quelpa-build-default-files-spec	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defconst quelpa-build-default-files-spec$/;"	f
quelpa-build-dir	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-build-dir (expand-file-name "build" quelpa-dir)$/;"	f
quelpa-build-expand-file-specs	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build-expand-file-specs (dir specs &optional subdir allow-empty)$/;"	f
quelpa-build-explicit-tar-format-p	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-build-explicit-tar-format-p nil$/;"	f
quelpa-build-package	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-build-package (package-name version file-specs source-dir target-dir)$/;"	f
quelpa-build-stable	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defvar quelpa-build-stable nil$/;"	f
quelpa-build-tar-executable	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-build-tar-executable$/;"	f
quelpa-build-timeout-executable	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-build-timeout-executable$/;"	f
quelpa-build-timeout-secs	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-build-timeout-secs 600$/;"	f
quelpa-build-verbose	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-build-verbose t$/;"	f
quelpa-build-version-regexp	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-build-version-regexp "^[rRvV]?\\\\(.*\\\\)$"$/;"	f
quelpa-cache	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defvar quelpa-cache nil$/;"	f
quelpa-check-hash	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-check-hash (name config file-path dir &optional fetcher)$/;"	f
quelpa-checkout	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-checkout (rcp dir)$/;"	f
quelpa-checkout-melpa	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-checkout-melpa (&optional force)$/;"	f
quelpa-checkout-melpa-p	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-checkout-melpa-p t$/;"	f
quelpa-dir	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-dir (expand-file-name "quelpa" user-emacs-directory)$/;"	f
quelpa-directory-files	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-directory-files (path)$/;"	f
quelpa-expand-recipe	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-expand-recipe (recipe)$/;"	f
quelpa-expand-source-file-list	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-expand-source-file-list (file-path config)$/;"	f
quelpa-file-version	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-file-version (file-path type version time-stamp)$/;"	f
quelpa-get-melpa-recipe	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-get-melpa-recipe (name)$/;"	f
quelpa-get-package-desc	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-get-package-desc (file)$/;"	f
quelpa-git-clone-depth	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-git-clone-depth nil$/;"	f
quelpa-git-clone-partial	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-git-clone-partial :blobless$/;"	f
quelpa-initialized-p	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defvar quelpa-initialized-p nil$/;"	f
quelpa-interactive-candidate	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-interactive-candidate ()$/;"	f
quelpa-melpa-dir	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-melpa-dir (expand-file-name "melpa" quelpa-dir)$/;"	f
quelpa-melpa-recipe-stores	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-melpa-recipe-stores (list (expand-file-name$/;"	f
quelpa-melpa-repo-url	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-melpa-repo-url "https:\/\/github.com\/melpa\/melpa.git"$/;"	f
quelpa-message	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-message (wait format-string &rest args)$/;"	f
quelpa-package-install	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-package-install (arg &rest plist)$/;"	f
quelpa-package-install-file	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-package-install-file (file)$/;"	f
quelpa-package-type	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-package-type (file)$/;"	f
quelpa-packages-dir	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-packages-dir (expand-file-name "packages" quelpa-dir)$/;"	f
quelpa-parse-plist	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-parse-plist (plist)$/;"	f
quelpa-parse-stable	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-parse-stable (cache-item)$/;"	f
quelpa-persistent-cache-file	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-persistent-cache-file (expand-file-name "cache" quelpa-dir)$/;"	f
quelpa-persistent-cache-p	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-persistent-cache-p t$/;"	f
quelpa-read-cache	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-read-cache ()$/;"	f
quelpa-recipe	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defvar quelpa-recipe '(quelpa :repo "quelpa\/quelpa" :fetcher github)$/;"	f
quelpa-save-cache	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-save-cache ()$/;"	f
quelpa-self-upgrade	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-self-upgrade (&optional args)$/;"	f
quelpa-self-upgrade-p	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-self-upgrade-p t$/;"	f
quelpa-setup-p	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-setup-p ()$/;"	f
quelpa-shutdown	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-shutdown ()$/;"	f
quelpa-slurp-file	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-slurp-file (file)$/;"	f
quelpa-stable-p	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-stable-p nil$/;"	f
quelpa-update-cache	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-update-cache (cache-item)$/;"	f
quelpa-update-melpa-p	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-update-melpa-p t$/;"	f
quelpa-upgrade	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-upgrade (rcp &optional action)$/;"	f
quelpa-upgrade-all	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-upgrade-all (&optional force)$/;"	f
quelpa-upgrade-all-maybe	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-upgrade-all-maybe (&optional force)$/;"	f
quelpa-upgrade-interval	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-upgrade-interval nil$/;"	f
quelpa-upgrade-p	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar quelpa-upgrade-p)$/;"	f
quelpa-upgrade-p	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-upgrade-p nil$/;"	f
quelpa-verbose	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defcustom quelpa-verbose t$/;"	f
quelpa-version-cmp	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defun quelpa-version-cmp (name version op)$/;"	f
quelpa-version<-p	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defmacro quelpa-version<-p (name version)$/;"	f
quelpa-version=-p	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defmacro quelpa-version=-p (name version)$/;"	f
quelpa-version>-p	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defmacro quelpa-version>-p (name version)$/;"	f
queueneocb	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^function! s:queueneocb(fn) abort$/;"	f
quick	conf/zsh/.oh-my-zsh/plugins/macos/macos.plugin.zsh	/^function quick-look() {$/;"	f
quickurl-packages	conf/emacs/.emacs.d/layers/+tools/quickurl/packages.el	/^(defconst quickurl-packages$/;"	f
quickurl/init-quickurl	conf/emacs/.emacs.d/layers/+tools/quickurl/packages.el	/^(defun quickurl\/init-quickurl ()$/;"	f
quit_aria	workflows/Ariafred/src/aria_actions.py	/^def quit_aria():$/;"	f
quote	conf/zsh/.oh-my-zsh/plugins/rand-quote/rand-quote.plugin.zsh	/^function quote {$/;"	f
rack_root	conf/zsh/.oh-my-zsh/plugins/pow/pow.plugin.zsh	/^rack_root(){$/;"	f
rack_root_detect	conf/zsh/.oh-my-zsh/plugins/pow/pow.plugin.zsh	/^rack_root_detect(){$/;"	f
racket/init-racket-mode	conf/emacs/.emacs.d/layers/+lang/racket/packages.el	/^(defun racket\/init-racket-mode ()$/;"	f
racket/post-init-company	conf/emacs/.emacs.d/layers/+lang/racket/packages.el	/^(defun racket\/post-init-company ()$/;"	f
racket/post-init-company-quickhelp	conf/emacs/.emacs.d/layers/+lang/racket/packages.el	/^(defun racket\/post-init-company-quickhelp ()$/;"	f
racket/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/racket/packages.el	/^(defun racket\/post-init-counsel-gtags nil)$/;"	f
racket/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/racket/packages.el	/^(defun racket\/post-init-ggtags ()$/;"	f
racket/pre-init-evil-cleverparens	conf/emacs/.emacs.d/layers/+lang/racket/packages.el	/^(defun racket\/pre-init-evil-cleverparens ()$/;"	f
raise_for_status	workflows/Ariafred/src/workflow/web.py	/^    def raise_for_status(self):$/;"	m	class:Response
rake_refresh	conf/zsh/.oh-my-zsh/plugins/rake-fast/rake-fast.plugin.zsh	/^rake_refresh () {$/;"	f
raku-packages	conf/emacs/.emacs.d/layers/+lang/raku/packages.el	/^(defconst raku-packages$/;"	f
raku/init-flycheck-raku	conf/emacs/.emacs.d/layers/+lang/raku/packages.el	/^(defun raku\/init-flycheck-raku ()$/;"	f
raku/init-raku-mode	conf/emacs/.emacs.d/layers/+lang/raku/packages.el	/^(defun raku\/init-raku-mode ()$/;"	f
raku/post-init-company	conf/emacs/.emacs.d/layers/+lang/raku/packages.el	/^(defun raku\/post-init-company ()$/;"	f
raku/post-init-evil	conf/emacs/.emacs.d/layers/+lang/raku/packages.el	/^(defun raku\/post-init-evil ()$/;"	f
raku/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/raku/packages.el	/^(defun raku\/post-init-flycheck ()$/;"	f
random_emoji	conf/zsh/.oh-my-zsh/plugins/emoji/emoji.plugin.zsh	/^function random_emoji() {$/;"	f
ranger-enter-with-minus	conf/emacs/.emacs.d/layers/+tools/ranger/config.el	/^(defvar ranger-enter-with-minus 'deer$/;"	f
ranger-packages	conf/emacs/.emacs.d/layers/+tools/ranger/packages.el	/^(defconst ranger-packages$/;"	f
ranger//set-leader-keys	conf/emacs/.emacs.d/layers/+tools/ranger/packages.el	/^(defun ranger\/\/set-leader-keys ()$/;"	f
ranger/init-ranger	conf/emacs/.emacs.d/layers/+tools/ranger/packages.el	/^(defun ranger\/init-ranger ()$/;"	f
ranger/post-init-dired	conf/emacs/.emacs.d/layers/+tools/ranger/packages.el	/^(defun ranger\/post-init-dired ()$/;"	f
ranger/post-init-golden-ratio	conf/emacs/.emacs.d/layers/+tools/ranger/packages.el	/^(defun ranger\/post-init-golden-ratio ()$/;"	f
rbenv_prompt_info	conf/zsh/.oh-my-zsh/plugins/rbenv/rbenv.plugin.zsh	/^  function rbenv_prompt_info() {$/;"	f
rbfu	conf/zsh/.oh-my-zsh/plugins/rbfu/rbfu.plugin.zsh	/^function rbfu-rubies() {$/;"	f
rbwpw	conf/zsh/.oh-my-zsh/plugins/rbw/rbw.plugin.zsh	/^function rbwpw {$/;"	f
rcirc-enable-authinfo-support	conf/emacs/.emacs.d/layers/+chat/rcirc/config.el	/^(defvar rcirc-enable-authinfo-support nil$/;"	f
rcirc-enable-emojify	conf/emacs/.emacs.d/layers/+chat/rcirc/config.el	/^(defvar rcirc-enable-emojify nil$/;"	f
rcirc-enable-erc-image	conf/emacs/.emacs.d/layers/+chat/rcirc/config.el	/^(defvar rcirc-enable-erc-image nil$/;"	f
rcirc-enable-erc-tweet	conf/emacs/.emacs.d/layers/+chat/rcirc/config.el	/^(defvar rcirc-enable-erc-tweet nil$/;"	f
rcirc-enable-erc-yt	conf/emacs/.emacs.d/layers/+chat/rcirc/config.el	/^(defvar rcirc-enable-erc-yt nil$/;"	f
rcirc-enable-late-fix	conf/emacs/.emacs.d/layers/+chat/rcirc/config.el	/^(defvar rcirc-enable-late-fix nil$/;"	f
rcirc-enable-styles	conf/emacs/.emacs.d/layers/+chat/rcirc/config.el	/^(defvar rcirc-enable-styles nil$/;"	f
rcirc-enable-znc-support	conf/emacs/.emacs.d/layers/+chat/rcirc/config.el	/^(defvar rcirc-enable-znc-support nil$/;"	f
rcirc-packages	conf/emacs/.emacs.d/layers/+chat/rcirc/packages.el	/^(defconst rcirc-packages$/;"	f
rcirc-spacemacs-layout-binding	conf/emacs/.emacs.d/layers/+chat/rcirc/config.el	/^(defvar rcirc-spacemacs-layout-binding "i"$/;"	f
rcirc-spacemacs-layout-name	conf/emacs/.emacs.d/layers/+chat/rcirc/config.el	/^(defvar rcirc-spacemacs-layout-name "@RCIRC"$/;"	f
rcirc/init-helm-rcirc	conf/emacs/.emacs.d/layers/+chat/rcirc/packages.el	/^(defun rcirc\/init-helm-rcirc ()$/;"	f
rcirc/init-rcirc	conf/emacs/.emacs.d/layers/+chat/rcirc/packages.el	/^(defun rcirc\/init-rcirc ()$/;"	f
rcirc/init-rcirc-color	conf/emacs/.emacs.d/layers/+chat/rcirc/packages.el	/^(defun rcirc\/init-rcirc-color ()$/;"	f
rcirc/init-rcirc-late-fix	conf/emacs/.emacs.d/layers/+chat/rcirc/packages.el	/^(defun rcirc\/init-rcirc-late-fix ()$/;"	f
rcirc/init-rcirc-notify	conf/emacs/.emacs.d/layers/+chat/rcirc/packages.el	/^(defun rcirc\/init-rcirc-notify ()$/;"	f
rcirc/init-rcirc-styles	conf/emacs/.emacs.d/layers/+chat/rcirc/packages.el	/^(defun rcirc\/init-rcirc-styles ()$/;"	f
rcirc/post-init-company	conf/emacs/.emacs.d/layers/+chat/rcirc/packages.el	/^(defun rcirc\/post-init-company ()$/;"	f
rcirc/post-init-company-emoji	conf/emacs/.emacs.d/layers/+chat/rcirc/packages.el	/^(defun rcirc\/post-init-company-emoji ()$/;"	f
rcirc/post-init-emoji-cheat-sheet-plus	conf/emacs/.emacs.d/layers/+chat/rcirc/packages.el	/^(defun rcirc\/post-init-emoji-cheat-sheet-plus ()$/;"	f
rcirc/post-init-emojify	conf/emacs/.emacs.d/layers/+chat/rcirc/packages.el	/^(defun rcirc\/post-init-emojify ()$/;"	f
rcirc/post-init-erc-image	conf/emacs/.emacs.d/layers/+chat/rcirc/packages.el	/^(defun rcirc\/post-init-erc-image ()$/;"	f
rcirc/post-init-erc-tweet	conf/emacs/.emacs.d/layers/+chat/rcirc/packages.el	/^(defun rcirc\/post-init-erc-tweet ()$/;"	f
rcirc/post-init-erc-yt	conf/emacs/.emacs.d/layers/+chat/rcirc/packages.el	/^(defun rcirc\/post-init-erc-yt ()$/;"	f
rcirc/post-init-flyspell	conf/emacs/.emacs.d/layers/+chat/rcirc/packages.el	/^(defun rcirc\/post-init-flyspell ()$/;"	f
rcirc/post-init-window-purpose	conf/emacs/.emacs.d/layers/+chat/rcirc/packages.el	/^(defun rcirc\/post-init-window-purpose ()$/;"	f
rcirc/pre-init-persp-mode	conf/emacs/.emacs.d/layers/+chat/rcirc/packages.el	/^(defun rcirc\/pre-init-persp-mode ()$/;"	f
react-packages	conf/emacs/.emacs.d/layers/+frameworks/react/packages.el	/^(defconst react-packages$/;"	f
react/init-rjsx-mode	conf/emacs/.emacs.d/layers/+frameworks/react/packages.el	/^(defun react\/init-rjsx-mode ()$/;"	f
react/post-init-add-node-modules-path	conf/emacs/.emacs.d/layers/+frameworks/react/packages.el	/^(defun react\/post-init-add-node-modules-path ()$/;"	f
react/post-init-company	conf/emacs/.emacs.d/layers/+frameworks/react/packages.el	/^(defun react\/post-init-company ()$/;"	f
react/post-init-emmet-mode	conf/emacs/.emacs.d/layers/+frameworks/react/packages.el	/^(defun react\/post-init-emmet-mode ()$/;"	f
react/post-init-evil-matchit	conf/emacs/.emacs.d/layers/+frameworks/react/packages.el	/^(defun react\/post-init-evil-matchit ()$/;"	f
react/post-init-flycheck	conf/emacs/.emacs.d/layers/+frameworks/react/packages.el	/^(defun react\/post-init-flycheck ()$/;"	f
react/post-init-js-doc	conf/emacs/.emacs.d/layers/+frameworks/react/packages.el	/^(defun react\/post-init-js-doc ()$/;"	f
react/post-init-smartparens	conf/emacs/.emacs.d/layers/+frameworks/react/packages.el	/^(defun react\/post-init-smartparens ()$/;"	f
react/post-init-tern	conf/emacs/.emacs.d/layers/+frameworks/react/packages.el	/^(defun react\/post-init-tern ()$/;"	f
react/post-init-yasnippet	conf/emacs/.emacs.d/layers/+frameworks/react/packages.el	/^(defun react\/post-init-yasnippet ()$/;"	f
react/pre-init-import-js	conf/emacs/.emacs.d/layers/+frameworks/react/packages.el	/^(defun react\/pre-init-import-js ()$/;"	f
react/pre-init-prettier-js	conf/emacs/.emacs.d/layers/+frameworks/react/packages.el	/^(defun react\/pre-init-prettier-js ()$/;"	f
react/pre-init-web-beautify	conf/emacs/.emacs.d/layers/+frameworks/react/packages.el	/^(defun react\/pre-init-web-beautify ()$/;"	f
read-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-fns.el	/^(defun read-frame (prompt &optional default existing)$/;"	f
read_block	sh/restore_mac_trash.pl	/^sub read_block($$) {$/;"	s
read_file	sh/restore_mac_trash.pl	/^sub read_file($) { local $\/; open FD, $_[0] or die $_[0]; binmode FD; <FD>; }$/;"	s
reap	conf/vim/.vim/autoload/plug.vim	/^function! s:reap(name)$/;"	f
reason-auto-refmt	conf/emacs/.emacs.d/layers/+lang/reasonml/config.el	/^(defvar-local reason-auto-refmt nil$/;"	f
reason/refmt-ml-to-re	conf/emacs/.emacs.d/layers/+lang/reasonml/funcs.el	/^(defun reason\/refmt-ml-to-re ()$/;"	f
reason/refmt-re-to-ml	conf/emacs/.emacs.d/layers/+lang/reasonml/funcs.el	/^(defun reason\/refmt-re-to-ml ()$/;"	f
reason/rtop-prompt	conf/emacs/.emacs.d/layers/+lang/reasonml/funcs.el	/^(defun reason\/rtop-prompt ()$/;"	f
reasonml-packages	conf/emacs/.emacs.d/layers/+lang/reasonml/packages.el	/^(defconst reasonml-packages$/;"	f
reasonml/init-reason-mode	conf/emacs/.emacs.d/layers/+lang/reasonml/packages.el	/^(defun reasonml\/init-reason-mode ()$/;"	f
reasonml/post-init-company	conf/emacs/.emacs.d/layers/+lang/reasonml/packages.el	/^(defun reasonml\/post-init-company ()$/;"	f
reasonml/post-init-evil-matchit	conf/emacs/.emacs.d/layers/+lang/reasonml/packages.el	/^(defun reasonml\/post-init-evil-matchit ()$/;"	f
reasonml/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/reasonml/packages.el	/^(defun reasonml\/post-init-flycheck ()$/;"	f
reasonml/post-init-flycheck-ocaml	conf/emacs/.emacs.d/layers/+lang/reasonml/packages.el	/^(defun reasonml\/post-init-flycheck-ocaml ()$/;"	f
reasonml/post-init-merlin	conf/emacs/.emacs.d/layers/+lang/reasonml/packages.el	/^(defun reasonml\/post-init-merlin ()$/;"	f
reasonml/pre-init-popwin	conf/emacs/.emacs.d/layers/+lang/reasonml/packages.el	/^(defun reasonml\/pre-init-popwin ()$/;"	f
reasonml/pre-init-utop	conf/emacs/.emacs.d/layers/+lang/reasonml/packages.el	/^(defun reasonml\/pre-init-utop ()$/;"	f
rebox-enable-hook	conf/emacs/.emacs.d/layers/+tools/rebox/funcs.el	/^(defun rebox-enable-hook ()$/;"	f
rebox-enable-in-text-mode	conf/emacs/.emacs.d/layers/+tools/rebox/config.el	/^(defvar rebox-enable-in-text-mode nil$/;"	f
rebox-packages	conf/emacs/.emacs.d/layers/+tools/rebox/packages.el	/^(defconst rebox-packages '(rebox2))$/;"	f
rebox/init-rebox2	conf/emacs/.emacs.d/layers/+tools/rebox/packages.el	/^(defun rebox\/init-rebox2 ()$/;"	f
receiverHighlightGroup	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! s:receiverHighlightGroup(testname, value)$/;"	f
reconfig_instance	sh/kcptun.sh	/^reconfig_instance() {$/;"	f
reconstructActiveFormattingElements	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func (p *parser) reconstructActiveFormattingElements() {$/;"	f
reddit-packages	conf/emacs/.emacs.d/layers/+web-services/reddit/packages.el	/^(defconst reddit-packages$/;"	f
reddit/init-reddigg	conf/emacs/.emacs.d/layers/+web-services/reddit/packages.el	/^(defun reddit\/init-reddigg ()$/;"	f
redirect_request	workflows/Ariafred/src/workflow/web.py	/^    def redirect_request(self, *args):$/;"	m	class:NoRedirectHandler
reduce_line	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:reduce_line(lines)$/;"	f
reflect_kind	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:reflect_kind(k)$/;"	f
refresh	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def refresh(self):$/;"	m	class:SnippetSource
refresh	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/base.py	/^    def refresh(self):$/;"	m	class:SnippetFileSource
refreshCurrent	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshCurrent(node) abort$/;"	f
refreshRoot	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshRoot() abort$/;"	f
regex_emoji	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^regex_emoji = r"^([\\w ].*?\\S)\\s*;\\s*([\\w-]+)\\s*#\\s*(.*?)\\s(\\S.*).*$"$/;"	v
regex_group	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^regex_group = r"^#\\s*(group|subgroup):\\s*(.*)$"$/;"	v
register	conf/vim/.vim/plugged/vim-go/plugin/go.vim	/^function! s:register()$/;"	f
register	conf/vim/.vim/plugged/vim-operator-user/autoload/operator/user.vim	/^function! s:register()$/;"	f
register	workflows/Ariafred/src/workflow/workflow.py	/^    def register(self, name, serializer):$/;"	m	class:SerializerManager
register_failing_tests	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/run_tests	/^register_failing_tests() {$/;"	f
register_snippet_source	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def register_snippet_source(self, name, snippet_source):$/;"	m	class:SnippetManager
regress_bar	conf/vim/.vim/autoload/plug.vim	/^function! s:regress_bar()$/;"	f
release	workflows/Ariafred/src/workflow/util.py	/^    def release(self):$/;"	m	class:LockFile
reload_changed	conf/vim/.vim/plugged/vim-go/autoload/go/rename.vim	/^function! s:reload_changed() abort$/;"	f
reload_plugins	conf/vim/.vim/autoload/plug.vim	/^function! s:reload_plugins()$/;"	f
reload_tmux_environment	conf/tmux/.tmux/plugins/tpm/scripts/helpers/tmux_utils.sh	/^reload_tmux_environment() {$/;"	f
remember_buffer	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remember_buffer(self, to):$/;"	m	class:VimState
remember_position	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remember_position(self):$/;"	m	class:VimState
remember_unnamed_register	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remember_unnamed_register(self, text_to_expect):$/;"	m	class:VimState
remembered_buffer	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remembered_buffer(self):$/;"	m	class:VimState
remote_console	conf/zsh/.oh-my-zsh/plugins/rails/rails.plugin.zsh	/^function remote_console() {$/;"	f
remove-window	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defalias 'remove-window 'delete-window)$/;"	f
remove-windows-on	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun remove-windows-on (buffer &optional all-frames)$/;"	f
remove_from_gitignore	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/setup	/^remove_from_gitignore() {$/;"	f
remove_layout	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:remove_layout(opts)$/;"	f
remove_rtp	conf/vim/.vim/autoload/plug.vim	/^function! s:remove_rtp()$/;"	f
remove_signs	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:remove_signs(bufnr, sign_ids, all_signs) abort$/;"	f
remove_task	workflows/Ariafred/src/aria_actions.py	/^def remove_task(gid):$/;"	f
remove_triggers	conf/vim/.vim/autoload/plug.vim	/^function! s:remove_triggers(name)$/;"	f
rename	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:rename(fname, line, col, newName, msg) abort dict$/;"	f
rename-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun rename-frame (&optional old-name new-name all-named)$/;"	f
rename-frame-when-iconify-flag	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defcustom rename-frame-when-iconify-flag t$/;"	f
rename-non-minibuffer-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun rename-non-minibuffer-frame (&optional old-name new-name all-named)$/;"	f
renameBuffer	conf/vim/.vim/plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:renameBuffer(bufNum, newNodeName, isDirectory)$/;"	f
renameEvalReturnValue	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:renameEvalReturnValue(key, val) abort$/;"	f
rename_job	conf/vim/.vim/plugged/vim-go/autoload/go/rename.vim	/^function s:rename_job(args)$/;"	f
reorg_rtp	conf/vim/.vim/autoload/plug.vim	/^function! s:reorg_rtp()$/;"	f
replace	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/transformation.py	/^    def replace(self, match):$/;"	m	class:_CleverReplace
replace_filename	conf/vim/.vim/plugged/vim-go/autoload/go/fmt.vim	/^function! s:replace_filename(filename, content) abort$/;"	f
replace_initial_text	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def replace_initial_text(self, buf):$/;"	m	class:SnippetInstance
replay_user_edits	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def replay_user_edits(self, cmds, ctab=None):$/;"	m	class:SnippetInstance
report_error	conf/vim/.vim/plugged/coc.nvim/autoload/health/coc.vim	/^function! s:report_error(report) abort$/;"	f
report_error	conf/vim/.vim/plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:report_error(report) abort$/;"	f
report_info	conf/vim/.vim/plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:report_info(report) abort$/;"	f
report_ok	conf/vim/.vim/plugged/coc.nvim/autoload/health/coc.vim	/^function! s:report_ok(report) abort$/;"	f
report_ok	conf/vim/.vim/plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:report_ok(report) abort$/;"	f
report_start	conf/vim/.vim/plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:report_start(report) abort$/;"	f
report_warn	conf/vim/.vim/plugged/coc.nvim/autoload/health/coc.vim	/^function! s:report_warn(report) abort$/;"	f
report_warn	conf/vim/.vim/plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:report_warn(report) abort$/;"	f
repow	conf/zsh/.oh-my-zsh/plugins/pow/pow.plugin.zsh	/^repow(){$/;"	f
req20	conf/zsh/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function req20() {$/;"	f
request	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:request(method, args) dict$/;"	f
request	workflows/Ariafred/src/workflow/web.py	/^def request(method, url, params=None, data=None, headers=None, cookies=None,$/;"	f
requestComplete	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:requestComplete(ok) abort dict$/;"	f
request_async	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:request_async(method, args, cb) dict$/;"	f
require_escape	conf/vim/.vim/plugged/coc.nvim/build/index.js	/^var require_escape = __commonJS({$/;"	v
require_tool	conf/zsh/.oh-my-zsh/tools/require_tool.sh	/^require_tool ()$/;"	f
rerun	workflows/Ariafred/src/workflow/workflow3.py	/^    def rerun(self):$/;"	m	class:Workflow3
rerun	workflows/Ariafred/src/workflow/workflow3.py	/^    def rerun(self, seconds):$/;"	m	class:Workflow3
res	conf/vim/.vim/plugged/coc.nvim/autoload/coc/terminal.vim	/^    let res = term_start(cmd, {$/;"	v
res	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^    let res = inputlist([a:title] + a:items)$/;"	v
reset	conf/vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! s:reset() abort$/;"	f
reset	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def reset(self):$/;"	m	class:IndentUtil
reset	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def reset(self):$/;"	m	class:VisualContentPreserver
reset	workflows/Ariafred/src/workflow/workflow.py	/^    def reset(self):$/;"	m	class:Workflow
resetInsertionMode	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func (p *parser) resetInsertionMode() {$/;"	f
reset_indent	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def reset_indent(self):$/;"	m	class:SnippetUtil
reset_summary	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:reset_summary(bufnr) abort$/;"	f
reset_tick	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:reset_tick(bufnr) abort$/;"	f
resetperms	conf/zsh/.oh-my-zsh/plugins/perms/perms.plugin.zsh	/^function resetperms {$/;"	f
resolve_ambiguity	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^def resolve_ambiguity(all_tokens, seen_ts):$/;"	f
restart	sh/aria2.sh	/^restart(){$/;"	f
restart_supervisor	sh/kcptun.sh	/^restart_supervisor() {$/;"	f
restclient-use-org	conf/emacs/.emacs.d/layers/+tools/restclient/config.el	/^(defvar restclient-use-org nil$/;"	f
restclient/init-company-restclient	conf/emacs/.emacs.d/layers/+tools/restclient/packages.el	/^(defun restclient\/init-company-restclient ()$/;"	f
restclient/init-ob-http	conf/emacs/.emacs.d/layers/+tools/restclient/packages.el	/^(defun restclient\/init-ob-http ()$/;"	f
restclient/init-ob-restclient	conf/emacs/.emacs.d/layers/+tools/restclient/packages.el	/^(defun restclient\/init-ob-restclient ())$/;"	f
restclient/init-restclient	conf/emacs/.emacs.d/layers/+tools/restclient/packages.el	/^(defun restclient\/init-restclient ()$/;"	f
restclient/init-restclient-helm	conf/emacs/.emacs.d/layers/+tools/restclient/packages.el	/^(defun restclient\/init-restclient-helm ()$/;"	f
restclient/pre-init-golden-ratio	conf/emacs/.emacs.d/layers/+tools/restclient/packages.el	/^(defun restclient\/pre-init-golden-ratio ()$/;"	f
restclient/pre-init-ob-http	conf/emacs/.emacs.d/layers/+tools/restclient/packages.el	/^(defun restclient\/pre-init-ob-http ()$/;"	f
restclient/pre-init-ob-restclient	conf/emacs/.emacs.d/layers/+tools/restclient/packages.el	/^(defun restclient\/pre-init-ob-restclient ()$/;"	f
restore	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/setup	/^restore() {$/;"	f
restoreMappings	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:restoreMappings() abort$/;"	f
restore_fold_state	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! s:restore_fold_state()$/;"	f
restore_indentkeys	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! s:restore_indentkeys() abort$/;"	f
restore_mapping	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:restore_mapping(maparg)$/;"	f
restore_shell	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:restore_shell() abort$/;"	f
restore_unnamed_register	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def restore_unnamed_register(self):$/;"	m	class:VimState
restore_views	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! s:restore_views() abort$/;"	f
restoremappingfor	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:restoremappingfor(bufname) abort$/;"	f
restructuredtext-packages	conf/emacs/.emacs.d/layers/+lang/restructuredtext/packages.el	/^(defconst restructuredtext-packages$/;"	f
restructuredtext/init-rst	conf/emacs/.emacs.d/layers/+lang/restructuredtext/packages.el	/^(defun restructuredtext\/init-rst ()$/;"	f
restructuredtext/init-rst-directives	conf/emacs/.emacs.d/layers/+lang/restructuredtext/packages.el	/^(defun restructuredtext\/init-rst-directives ()$/;"	f
restructuredtext/init-rst-lists	conf/emacs/.emacs.d/layers/+lang/restructuredtext/packages.el	/^(defun restructuredtext\/init-rst-lists ()$/;"	f
restructuredtext/post-init-auto-complete	conf/emacs/.emacs.d/layers/+lang/restructuredtext/packages.el	/^(defun restructuredtext\/post-init-auto-complete ()$/;"	f
restructuredtext/post-init-flyspell	conf/emacs/.emacs.d/layers/+lang/restructuredtext/packages.el	/^(defun restructuredtext\/post-init-flyspell ()$/;"	f
restructuredtext/post-init-smartparens	conf/emacs/.emacs.d/layers/+lang/restructuredtext/packages.el	/^(defun restructuredtext\/post-init-smartparens ()$/;"	f
restructuredtext/post-init-yasnippet	conf/emacs/.emacs.d/layers/+lang/restructuredtext/packages.el	/^(defun restructuredtext\/post-init-yasnippet ()$/;"	f
resume_all	workflows/Ariafred/src/aria_actions.py	/^def resume_all():$/;"	f
retlog	conf/zsh/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function retlog() {$/;"	f
retrieve_releases	workflows/Ariafred/src/workflow/update.py	/^    def retrieve_releases():$/;"	f	function:get_valid_releases
retry	conf/vim/.vim/autoload/plug.vim	/^function! s:retry()$/;"	f
reuseWin	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^function! s:reuseWin(dir) abort$/;"	f
reveal	workflows/Ariafred/src/aria_actions.py	/^def reveal(gid, alfred=False):$/;"	f
reverse_list	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:reverse_list(opts)$/;"	f
revert	conf/vim/.vim/autoload/plug.vim	/^function! s:revert()$/;"	f
rgb_colour	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:rgb_colour(x, y, z)$/;"	f
rgb_level	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:rgb_level(n)$/;"	f
rgb_number	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^fun! s:rgb_number(x)$/;"	f
rm_rf	conf/vim/.vim/autoload/plug.vim	/^function! s:rm_rf(dir)$/;"	f
rmdsstore	conf/zsh/.oh-my-zsh/plugins/macos/macos.plugin.zsh	/^function rmdsstore() {$/;"	f
root	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^root = logging.getLogger('deoplete')$/;"	v
root_dirs	conf/vim/.vim/plugged/vim-go/autoload/go/impl.vim	/^function! s:root_dirs() abort$/;"	f
rootness	sh/shadowsocks.sh	/^rootness(){$/;"	f
rpc_path	workflows/Ariafred/src/aria_actions.py	/^    rpc_path = wf.settings['rpc_path']$/;"	v
rpc_path	workflows/Ariafred/src/notifier.py	/^    rpc_path = wf.settings['rpc_path']$/;"	v
rpc_response	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:rpc_response(check_errors, res) abort$/;"	f
rst-directive	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defgroup rst-directive nil$/;"	f
rst-directive-add-type	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-add-type (type directfunc optalist content)$/;"	f
rst-directive-append	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-append (directlist)$/;"	f
rst-directive-direct-format	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-direct-format (type &optional argument)$/;"	f
rst-directive-insert	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert ()$/;"	f
rst-directive-insert-admonition	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-admonition ()$/;"	f
rst-directive-insert-algorithm	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-algorithm ()$/;"	f
rst-directive-insert-blog	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-blog ()$/;"	f
rst-directive-insert-centered	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-centered ()$/;"	f
rst-directive-insert-code-block	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-code-block ()$/;"	f
rst-directive-insert-compound	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-compound ()$/;"	f
rst-directive-insert-container	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-container ()$/;"	f
rst-directive-insert-contents	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-contents ()$/;"	f
rst-directive-insert-csv-table	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-csv-table ()$/;"	f
rst-directive-insert-date	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-date ()$/;"	f
rst-directive-insert-definition	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-definition ()$/;"	f
rst-directive-insert-digraph	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-digraph ()$/;"	f
rst-directive-insert-epigraph	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-epigraph ()$/;"	f
rst-directive-insert-field	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-field ()$/;"	f
rst-directive-insert-figure	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-figure ()$/;"	f
rst-directive-insert-glossary	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-glossary ()$/;"	f
rst-directive-insert-graph	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-graph ()$/;"	f
rst-directive-insert-graphviz	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-graphviz ()$/;"	f
rst-directive-insert-highlight	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-highlight ()$/;"	f
rst-directive-insert-highlights	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-highlights ()$/;"	f
rst-directive-insert-hlist	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-hlist ()$/;"	f
rst-directive-insert-image	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-image ()$/;"	f
rst-directive-insert-include	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-include ()$/;"	f
rst-directive-insert-index	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-index ()$/;"	f
rst-directive-insert-lilypond	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-lilypond ()$/;"	f
rst-directive-insert-line-block	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-line-block ()$/;"	f
rst-directive-insert-list-table	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-list-table ()$/;"	f
rst-directive-insert-math	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-math ()$/;"	f
rst-directive-insert-metapost	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-metapost ()$/;"	f
rst-directive-insert-note	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-note ()$/;"	f
rst-directive-insert-parsed-literal	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-parsed-literal ()$/;"	f
rst-directive-insert-pull-quote	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-pull-quote ()$/;"	f
rst-directive-insert-raw	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-raw ()$/;"	f
rst-directive-insert-replace	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-replace ()$/;"	f
rst-directive-insert-rubric	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-rubric ()$/;"	f
rst-directive-insert-sectnum	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-sectnum ()$/;"	f
rst-directive-insert-sidebar	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-sidebar ()$/;"	f
rst-directive-insert-table	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-table ()$/;"	f
rst-directive-insert-tabularcolumns	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-tabularcolumns ()$/;"	f
rst-directive-insert-testcode	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-testcode ()$/;"	f
rst-directive-insert-testoutput	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-testoutput ()$/;"	f
rst-directive-insert-tex-table	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-tex-table ()$/;"	f
rst-directive-insert-tikz	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-tikz ()$/;"	f
rst-directive-insert-todo	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-todo ()$/;"	f
rst-directive-insert-todolist	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-todolist ()$/;"	f
rst-directive-insert-topic	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-topic ()$/;"	f
rst-directive-insert-unicode	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-insert-unicode ()$/;"	f
rst-directive-option	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-option (optalist)$/;"	f
rst-directive-option-algorithm	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-option-algorithm$/;"	f
rst-directive-option-blog	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-option-blog$/;"	f
rst-directive-option-code-block	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-option-code-block$/;"	f
rst-directive-option-contents	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-option-contents$/;"	f
rst-directive-option-csv-table	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-option-csv-table$/;"	f
rst-directive-option-figure	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-option-figure$/;"	f
rst-directive-option-format	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-option-format (option &optional value)$/;"	f
rst-directive-option-highlight	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-option-highlight$/;"	f
rst-directive-option-hlist	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-option-hlist$/;"	f
rst-directive-option-image	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-option-image$/;"	f
rst-directive-option-include	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-option-include$/;"	f
rst-directive-option-index	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-option-index$/;"	f
rst-directive-option-insert	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defun rst-directive-option-insert ()$/;"	f
rst-directive-option-lilypond	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-option-lilypond$/;"	f
rst-directive-option-list	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-option-list$/;"	f
rst-directive-option-list-table	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-option-list-table$/;"	f
rst-directive-option-math	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-option-math$/;"	f
rst-directive-option-metapost	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-option-metapost$/;"	f
rst-directive-option-raw	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-option-raw$/;"	f
rst-directive-option-sectnum	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-option-sectnum$/;"	f
rst-directive-option-sidebar	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-option-sidebar$/;"	f
rst-directive-option-testcode	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-option-testcode$/;"	f
rst-directive-option-testoutput	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-option-testoutput$/;"	f
rst-directive-option-tex-table	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-option-tex-table$/;"	f
rst-directive-option-tikz	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-option-tikz$/;"	f
rst-directive-option-unicode	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-option-unicode$/;"	f
rst-directive-type-alist	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-type-alist$/;"	f
rst-directive-types	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-directives/rst-directives.el	/^(defvar rst-directive-types$/;"	f
rst-list	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-lists/rst-lists.el	/^(defgroup rst-list nil$/;"	f
rst-list-bullets	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-lists/rst-lists.el	/^(defconst rst-list-bullets$/;"	f
rst-list-initial-enums	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-lists/rst-lists.el	/^(defvar rst-list-initial-enums$/;"	f
rst-list-initial-items	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-lists/rst-lists.el	/^(defvar rst-list-initial-items$/;"	f
rst-list-insert	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-lists/rst-lists.el	/^(defun rst-list-insert (itemno)$/;"	f
rst-list-insert-list-continue	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-lists/rst-lists.el	/^(defun rst-list-insert-list-continue ()$/;"	f
rst-list-insert-list-new-bullet	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-lists/rst-lists.el	/^(defun rst-list-insert-list-new-bullet ()$/;"	f
rst-list-insert-list-new-item	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-lists/rst-lists.el	/^(defun rst-list-insert-list-new-item (itemno)$/;"	f
rst-list-insert-list-pos	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-lists/rst-lists.el	/^(defun rst-list-insert-list-pos (newitem)$/;"	f
rst-list-letter-list	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-lists/rst-lists.el	/^(defconst rst-list-letter-list$/;"	f
rst-list-match-string	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-lists/rst-lists.el	/^(defun rst-list-match-string (reg)$/;"	f
rst-list-re-bullets	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-lists/rst-lists.el	/^(defvar rst-list-re-bullets$/;"	f
rst-list-re-enumerates	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-lists/rst-lists.el	/^(defvar rst-list-re-enumerates$/;"	f
rst-list-re-items	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-lists/rst-lists.el	/^(defvar rst-list-re-items$/;"	f
rst-list-roman-number-list	conf/emacs/.emacs.d/layers/+lang/restructuredtext/local/rst-lists/rst-lists.el	/^(defconst rst-list-roman-number-list$/;"	f
rst-sphinx	conf/emacs/.emacs.d/layers/+tools/sphinx/local/rst-sphinx/rst-sphinx.el	/^(defgroup rst-sphinx nil$/;"	f
rst-sphinx-builder	conf/emacs/.emacs.d/layers/+tools/sphinx/local/rst-sphinx/rst-sphinx.el	/^(defvar rst-sphinx-builder$/;"	f
rst-sphinx-clean	conf/emacs/.emacs.d/layers/+tools/sphinx/local/rst-sphinx/rst-sphinx.el	/^(defun rst-sphinx-clean ()$/;"	f
rst-sphinx-command	conf/emacs/.emacs.d/layers/+tools/sphinx/local/rst-sphinx/rst-sphinx.el	/^(defvar rst-sphinx-command "sphinx-build -b"$/;"	f
rst-sphinx-compile	conf/emacs/.emacs.d/layers/+tools/sphinx/local/rst-sphinx/rst-sphinx.el	/^(defun rst-sphinx-compile (&optional clean)$/;"	f
rst-sphinx-find-conf-py-path	conf/emacs/.emacs.d/layers/+tools/sphinx/local/rst-sphinx/rst-sphinx.el	/^(defun rst-sphinx-find-conf-py-path ()$/;"	f
rst-sphinx-open-conf	conf/emacs/.emacs.d/layers/+tools/sphinx/local/rst-sphinx/rst-sphinx.el	/^(defun rst-sphinx-open-conf ()$/;"	f
rst-sphinx-project	conf/emacs/.emacs.d/layers/+tools/sphinx/local/rst-sphinx/rst-sphinx.el	/^(defvar rst-sphinx-project nil$/;"	f
rst-sphinx-rebuild	conf/emacs/.emacs.d/layers/+tools/sphinx/local/rst-sphinx/rst-sphinx.el	/^(defun rst-sphinx-rebuild ()$/;"	f
rst-sphinx-set-variables	conf/emacs/.emacs.d/layers/+tools/sphinx/local/rst-sphinx/rst-sphinx.el	/^(defun rst-sphinx-set-variables ()$/;"	f
rst-sphinx-source	conf/emacs/.emacs.d/layers/+tools/sphinx/local/rst-sphinx/rst-sphinx.el	/^(defvar rst-sphinx-source nil$/;"	f
rst-sphinx-source-buffer	conf/emacs/.emacs.d/layers/+tools/sphinx/local/rst-sphinx/rst-sphinx.el	/^(defvar rst-sphinx-source-buffer nil$/;"	f
rst-sphinx-source-file	conf/emacs/.emacs.d/layers/+tools/sphinx/local/rst-sphinx/rst-sphinx.el	/^(defvar rst-sphinx-source-file nil$/;"	f
rst-sphinx-switch-buffer	conf/emacs/.emacs.d/layers/+tools/sphinx/local/rst-sphinx/rst-sphinx.el	/^(defun rst-sphinx-switch-buffer ()$/;"	f
rst-sphinx-target	conf/emacs/.emacs.d/layers/+tools/sphinx/local/rst-sphinx/rst-sphinx.el	/^(defvar rst-sphinx-target nil$/;"	f
rst-sphinx-target-open	conf/emacs/.emacs.d/layers/+tools/sphinx/local/rst-sphinx/rst-sphinx.el	/^(defun rst-sphinx-target-open ()$/;"	f
rst-sphinx-target-parent	conf/emacs/.emacs.d/layers/+tools/sphinx/local/rst-sphinx/rst-sphinx.el	/^(defcustom rst-sphinx-target-parent nil$/;"	f
rst-sphinx-target-projects	conf/emacs/.emacs.d/layers/+tools/sphinx/local/rst-sphinx/rst-sphinx.el	/^(defcustom rst-sphinx-target-projects nil$/;"	f
rstrip	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:rstrip(str)$/;"	f
rtp	conf/vim/.vim/autoload/plug.vim	/^function! s:rtp(spec)$/;"	f
ruby-backend	conf/emacs/.emacs.d/layers/+lang/ruby/config.el	/^(defvar ruby-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'robe)$/;"	f
ruby-enable-enh-ruby-mode	conf/emacs/.emacs.d/layers/+lang/ruby/config.el	/^(defvar ruby-enable-enh-ruby-mode nil$/;"	f
ruby-highlight-debugger-keywords	conf/emacs/.emacs.d/layers/+lang/ruby/config.el	/^(defvar ruby-highlight-debugger-keywords t$/;"	f
ruby-on-rails/init-feature-mode	conf/emacs/.emacs.d/layers/+frameworks/ruby-on-rails/packages.el	/^(defun ruby-on-rails\/init-feature-mode ()$/;"	f
ruby-on-rails/init-projectile-rails	conf/emacs/.emacs.d/layers/+frameworks/ruby-on-rails/packages.el	/^(defun ruby-on-rails\/init-projectile-rails ()$/;"	f
ruby-on-rails/post-init-which-key	conf/emacs/.emacs.d/layers/+frameworks/ruby-on-rails/packages.el	/^(defun ruby-on-rails\/post-init-which-key ()$/;"	f
ruby-packages	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defconst ruby-packages$/;"	f
ruby-prettier-on-save	conf/emacs/.emacs.d/layers/+lang/ruby/config.el	/^(defvar ruby-prettier-on-save nil$/;"	f
ruby-test-runner	conf/emacs/.emacs.d/layers/+lang/ruby/config.el	/^(defvar ruby-test-runner 'ruby-test$/;"	f
ruby-version-manager	conf/emacs/.emacs.d/layers/+lang/ruby/config.el	/^(defvar ruby-version-manager nil$/;"	f
ruby/init-bundler	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/init-bundler ()$/;"	f
ruby/init-chruby	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/init-chruby ()$/;"	f
ruby/init-enh-ruby-mode	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/init-enh-ruby-mode ()$/;"	f
ruby/init-minitest	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/init-minitest ()$/;"	f
ruby/init-rake	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/init-rake ()$/;"	f
ruby/init-rbenv	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/init-rbenv ()$/;"	f
ruby/init-robe	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/init-robe ()$/;"	f
ruby/init-rspec-mode	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/init-rspec-mode ()$/;"	f
ruby/init-rubocop	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/init-rubocop ()$/;"	f
ruby/init-rubocopfmt	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/init-rubocopfmt ()$/;"	f
ruby/init-ruby-hash-syntax	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/init-ruby-hash-syntax ()$/;"	f
ruby/init-ruby-mode	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/init-ruby-mode ()$/;"	f
ruby/init-ruby-refactor	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/init-ruby-refactor ()$/;"	f
ruby/init-ruby-test-mode	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/init-ruby-test-mode ()$/;"	f
ruby/init-ruby-tools	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/init-ruby-tools ()$/;"	f
ruby/init-rvm	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/init-rvm ()$/;"	f
ruby/init-seeing-is-believing	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/init-seeing-is-believing ()$/;"	f
ruby/post-init-add-node-modules-path	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/post-init-add-node-modules-path ()$/;"	f
ruby/post-init-company	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/post-init-company ()$/;"	f
ruby/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/post-init-counsel-gtags nil)$/;"	f
ruby/post-init-evil-matchit	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/post-init-evil-matchit ()$/;"	f
ruby/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/post-init-flycheck ()$/;"	f
ruby/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/post-init-ggtags ()$/;"	f
ruby/pre-init-dap-mode	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/pre-init-dap-mode ()$/;"	f
ruby/pre-init-org	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/pre-init-org ()$/;"	f
ruby/pre-init-popwin	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/pre-init-popwin ()$/;"	f
ruby/pre-init-prettier-js	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/pre-init-prettier-js ()$/;"	f
ruby/pre-init-smartparens	conf/emacs/.emacs.d/layers/+lang/ruby/packages.el	/^(defun ruby\/pre-init-smartparens ()$/;"	f
ruby/rspec-verify-directory	conf/emacs/.emacs.d/layers/+lang/ruby/funcs.el	/^(defun ruby\/rspec-verify-directory (dir)$/;"	f
ruby_prompt_info	conf/zsh/.oh-my-zsh/lib/prompt_info_functions.zsh	/^function ruby_prompt_info() {$/;"	f
run	workflows/Ariafred/src/workflow/workflow.py	/^    def run(self, func, text_errors=False):$/;"	m	class:Workflow
runTest	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    def runTest(self):$/;"	m	class:_Base
runTest	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    def runTest(self):$/;"	m	class:_BaseGuessing
runTest	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    def runTest(self):$/;"	m	class:_MPBase
runTest	conf/vim/.vim/plugged/ultisnips/test/vim_test_case.py	/^    def runTest(self):$/;"	m	class:VimTestCase
run_applescript	workflows/Ariafred/src/workflow/util.py	/^def run_applescript(script, *args, **kwargs):$/;"	f
run_aria	workflows/Ariafred/src/aria_actions.py	/^def run_aria():$/;"	f
run_awk	conf/zsh/.oh-my-zsh/lib/tests/cli.test.zsh	/^run_awk() {$/;"	f
run_awk_and_test	conf/zsh/.oh-my-zsh/lib/tests/cli.test.zsh	/^run_awk_and_test() {$/;"	f
run_command	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/spec/terminal_session.rb	/^  def run_command(command)$/;"	f	class:TerminalSession
run_command	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/spec/terminal_session.rb	/^  def run_command(command)$/;"	f	class:TerminalSession
run_command	workflows/Ariafred/src/workflow/util.py	/^def run_command(cmd, **kwargs):$/;"	f
run_in_background	workflows/Ariafred/src/workflow/background.py	/^def run_in_background(name, args, **kwargs):$/;"	f
run_jxa	workflows/Ariafred/src/workflow/util.py	/^def run_jxa(script, *args):$/;"	f
run_or_fail	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^    def run_or_fail(command: list[str], stage: str, *args, **kwargs):$/;"	m	class:CommandRunner
run_test	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/tests/test-highlighting.zsh	/^run_test() {$/;"	f
run_test	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/tests/test-perfs.zsh	/^run_test() {$/;"	f
run_test	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/tests/test-zprof.zsh	/^run_test() {$/;"	f
run_test	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/tests/test-highlighting.zsh	/^run_test() {$/;"	f
run_test	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/tests/test-perfs.zsh	/^run_test() {$/;"	f
run_test	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/tests/test-zprof.zsh	/^run_test() {$/;"	f
run_test_internal	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/tests/test-highlighting.zsh	/^run_test_internal() {$/;"	f
run_test_internal	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/tests/test-perfs.zsh	/^run_test_internal() {$/;"	f
run_test_internal	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/tests/test-zprof.zsh	/^run_test_internal() {$/;"	f
run_test_internal	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/tests/test-highlighting.zsh	/^run_test_internal() {$/;"	f
run_test_internal	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/tests/test-perfs.zsh	/^run_test_internal() {$/;"	f
run_test_internal	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/tests/test-zprof.zsh	/^run_test_internal() {$/;"	f
run_tests	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/run_tests	/^run_tests() {$/;"	f
run_tests	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^run_tests() {$/;"	f
run_tests	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/tests/run_tests_in_isolation	/^run_tests() {$/;"	f
run_tests_on_virtual_machines	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/run_tests	/^run_tests_on_virtual_machines() {$/;"	f
run_tests_on_vm	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/run_tests	/^run_tests_on_vm() {$/;"	f
run_trigger	workflows/Ariafred/src/workflow/util.py	/^def run_trigger(name, bundleid=None, arg=None):$/;"	f
run_vagrant	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/run_tests	/^run_vagrant() {$/;"	f
runerrorformat	conf/vim/.vim/plugged/vim-go/autoload/go/cmd.vim	/^function! s:runerrorformat()$/;"	f
running_on_windows	conf/vim/.vim/plugged/ultisnips/test/util.py	/^def running_on_windows():$/;"	f
rust-backend	conf/emacs/.emacs.d/layers/+lang/rust/config.el	/^(defvar rust-backend (and (configuration-layer\/layer-used-p 'lsp) 'lsp)$/;"	f
rust-packages	conf/emacs/.emacs.d/layers/+lang/rust/packages.el	/^(defconst rust-packages$/;"	f
rust/init-ron-mode	conf/emacs/.emacs.d/layers/+lang/rust/packages.el	/^(defun rust\/init-ron-mode ()$/;"	f
rust/init-rustic	conf/emacs/.emacs.d/layers/+lang/rust/packages.el	/^(defun rust\/init-rustic ()$/;"	f
rust/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/rust/packages.el	/^(defun rust\/post-init-counsel-gtags nil)$/;"	f
rust/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/rust/packages.el	/^(defun rust\/post-init-ggtags ()$/;"	f
rust/post-init-smartparens	conf/emacs/.emacs.d/layers/+lang/rust/packages.el	/^(defun rust\/post-init-smartparens ()$/;"	f
rust/pre-init-dap-mode	conf/emacs/.emacs.d/layers/+lang/rust/packages.el	/^(defun rust\/pre-init-dap-mode ()$/;"	f
rv	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def rv(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
rv	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def rv(self, value):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
rvm	conf/zsh/.oh-my-zsh/plugins/rvm/rvm.plugin.zsh	/^function rvm-update {$/;"	f
rvm_prompt_info	conf/zsh/.oh-my-zsh/lib/prompt_info_functions.zsh	/^function rvm_prompt_info() {$/;"	f
rvm_prompt_info	conf/zsh/.oh-my-zsh/plugins/rbfu/rbfu.plugin.zsh	/^function rvm_prompt_info() { echo "${${RBFU_RUBY_VERSION:=system}:gs\/%\/%%}" }$/;"	f
s:Bookmark	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:Class	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:Class = 7$/;"	v
s:Color	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:Color = 16$/;"	v
s:Constant	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:Constant = 21$/;"	v
s:Constructor	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:Constructor = 4$/;"	v
s:Creator	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:Enum	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:Enum = 13$/;"	v
s:EnumMember	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:EnumMember = 20$/;"	v
s:Event	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/event.vim	/^let s:Event = {}$/;"	v
s:Event	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:Event = 23$/;"	v
s:Field	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:Field = 5$/;"	v
s:File	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:File = 17$/;"	v
s:FlagSet	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/flag_set.vim	/^let s:FlagSet = {}$/;"	v
s:Folder	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:Folder = 19$/;"	v
s:Function	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:Function = 3$/;"	v
s:Interface	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:Interface = 8$/;"	v
s:KeyMap	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:Keyword	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:Keyword = 14$/;"	v
s:MenuController	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:Method	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:Method = 2$/;"	v
s:Module	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:Module = 9$/;"	v
s:NERDTree	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^let s:NERDTree = {}$/;"	v
s:Notifier	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/notifier.vim	/^let s:Notifier = {}$/;"	v
s:Opener	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:Operator	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:Operator = 24$/;"	v
s:Path	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:Property	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:Property = 10$/;"	v
s:Reference	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:Reference = 18$/;"	v
s:Snippet	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:Snippet = 15$/;"	v
s:SourcedFile	conf/vim/.vim/plugged/vim-snippets/plugin/vimsnippets.vim	/^let s:SourcedFile=expand("<sfile>")$/;"	v
s:Strlen	conf/vim/.vim/plugged/tabular/autoload/tabular.vim	/^  let s:Strlen = function("strdisplaywidth")$/;"	v
s:Struct	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:Struct = 22$/;"	v
s:TYPE	conf/vim/.vim/autoload/plug.vim	/^let s:TYPE = {$/;"	v
s:TYPE	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:TYPE = {'bool': type(0), 'dict': type({}), 'funcref': type(function('call')), 'string': type(''), 'list': type([])}$/;"	v
s:TabularCommands	conf/vim/.vim/plugged/tabular/plugin/Tabular.vim	/^let s:TabularCommands = {}$/;"	v
s:Text	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:Text = 1$/;"	v
s:TreeDirNode	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeFileNode	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:TypeParameter	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:TypeParameter = 25$/;"	v
s:UI	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/ui.vim	/^let s:UI = {}$/;"	v
s:Unit	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:Unit = 11$/;"	v
s:Value	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:Value = 12$/;"	v
s:Variable	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:Variable = 6$/;"	v
s:activate	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^  let s:activate = 'activate'$/;"	v
s:activate	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^let s:activate = ""$/;"	v
s:activated	conf/vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:activated = 0$/;"	v
s:ansi	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:ansi = {'black': 30, 'red': 31, 'green': 32, 'yellow': 33, 'blue': 34, 'magenta': 35, 'cyan': 36}$/;"	v
s:app	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^  let s:app = "MacVim"$/;"	v
s:app	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^  let s:app = "System Events"$/;"	v
s:app	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^  let s:app = "Terminal"$/;"	v
s:app	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^  let s:app = "iTerm2"$/;"	v
s:assert	conf/vim/.vim/plugged/deoplete.nvim/test/autoload/deoplete/custom.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	conf/vim/.vim/plugged/deoplete.nvim/test/autoload/deoplete/util.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:available	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^let s:available = has('nvim') || ($/;"	v
s:base_spec	conf/vim/.vim/autoload/plug.vim	/^let s:base_spec = { 'branch': '', 'frozen': 0 }$/;"	v
s:bin	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:bin = {$/;"	v
s:bin_dir	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:bin_dir = expand('<sfile>:p:h:h:h').'\/bin\/'$/;"	v
s:bool_t	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^    let s:bool_t = -1$/;"	v
s:bool_t	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^    let s:bool_t = type(v:true)$/;"	v
s:borderchars	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^let s:borderchars = get(g:, 'coc_borderchars', ['─', '│', '─', '│', '┌', '┐', '┘', '└'])$/;"	v
s:borderjoinchars	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^let s:borderjoinchars = get(g:, 'coc_border_joinchars', ['┬', '┤', '┴', '├'])$/;"	v
s:buf_nr	conf/vim/.vim/plugged/vim-go/autoload/go/doc.vim	/^let s:buf_nr = -1$/;"	v
s:buf_nr	conf/vim/.vim/plugged/vim-go/autoload/go/ui.vim	/^let s:buf_nr = -1$/;"	v
s:buffer_id	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^let s:buffer_id = {}$/;"	v
s:bufnameprefix	conf/vim/.vim/plugged/vim-go/autoload/go/term.vim	/^let s:bufnameprefix = 'goterm:\/\/'$/;"	v
s:bufnr	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^let s:bufnr       = bufnr('')$/;"	v
s:callbacks	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^let s:callbacks = {}$/;"	v
s:chan_id	conf/vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:chan_id = 0$/;"	v
s:channel_log	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:channel_log = s:plugin_dir.'channel.log'$/;"	v
s:channel_map	conf/vim/.vim/plugged/coc.nvim/autoload/coc/terminal.vim	/^    let s:channel_map[bufnr] = job_getchannel(job)$/;"	v
s:channel_map	conf/vim/.vim/plugged/coc.nvim/autoload/coc/terminal.vim	/^    let s:channel_map[bufnr] = job_id$/;"	v
s:channel_map	conf/vim/.vim/plugged/coc.nvim/autoload/coc/terminal.vim	/^let s:channel_map = {}$/;"	v
s:char_map	conf/vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:char_map = {$/;"	v
s:check_hl_group	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^let s:check_hl_group = 0$/;"	v
s:checked	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:checked = 0$/;"	v
s:client	conf/vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:client = v:null$/;"	v
s:clients	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^let s:clients = {}$/;"	v
s:cmd_tmp	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let s:cmd_tmp = g:clang_format#command$/;"	v
s:completions	conf/vim/.vim/plugged/vim-go/autoload/go/complete.vim	/^    let s:completions = l:state.matches$/;"	v
s:conceal	conf/vim/.vim/plugged/vim-markdown/syntax/markdown.vim	/^  let s:conceal = ' conceal'$/;"	v
s:conceal	conf/vim/.vim/plugged/vim-markdown/syntax/markdown.vim	/^let s:conceal = ''$/;"	v
s:concealcode	conf/vim/.vim/plugged/vim-markdown/syntax/markdown.vim	/^  let s:concealcode = ' concealends'$/;"	v
s:concealcode	conf/vim/.vim/plugged/vim-markdown/syntax/markdown.vim	/^let s:concealcode = ''$/;"	v
s:concealends	conf/vim/.vim/plugged/vim-markdown/syntax/markdown.vim	/^  let s:concealends = ' concealends'$/;"	v
s:concealends	conf/vim/.vim/plugged/vim-markdown/syntax/markdown.vim	/^let s:concealends = ''$/;"	v
s:counter	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:counter = 0$/;"	v
s:cpo_save	conf/vim/.vim/autoload/plug.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/ctrlp/decls.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/fzf/decls.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/alternate.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/asmfmt.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/auto.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/calls.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/calls_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/cmd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/cmd_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/complete.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/complete_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/config_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/coverage.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/debug_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/decls.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/def.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/def_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/doc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/extract.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/extract_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/fillstruct.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/fillstruct_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/fmt.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/fmt_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/iferr.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/impl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/impl_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/implements.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/import.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/import_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/indent_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/issue.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/job_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/lint.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/lint_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/list.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/completionitemkind.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/filechangetype.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/lsp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/lsp_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/lsp_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/mod.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/package.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/package_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/path.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/play.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/promise.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/promise_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/referrers.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/rename.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/sameids.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/statusline.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/tags.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/tags_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/template.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/template_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/term.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/term_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/test_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/textobj.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/tool.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/tool_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/ui.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/uri.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/uri_test.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/autoload/gotest.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/compiler/go.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/ftdetect/gofiletype.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/ftplugin/asm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/ftplugin/go.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/ftplugin/go/snippets.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/ftplugin/go/tagbar.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/ftplugin/godoc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/ftplugin/gomod.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/indent/go.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/indent/gohtmltmpl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/plugin/go.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/scripts/runbench.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	conf/vim/.vim/plugged/vim-go/scripts/runtest.vim	/^let s:cpo_save = &cpo$/;"	v
s:current_dir	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^let s:current_dir = expand('%:p:h')$/;"	v
s:current_file	conf/vim/.vim/plugged/vim-go/autoload/go/template.vim	/^let s:current_file = resolve(expand("<sfile>"))$/;"	v
s:current_fileencodings	conf/vim/.vim/plugged/vim-go/plugin/go.vim	/^let s:current_fileencodings = ''$/;"	v
s:current_fileformats	conf/vim/.vim/plugged/vim-go/plugin/go.vim	/^let s:current_fileformats = ''$/;"	v
s:current_line_hl	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^let s:current_line_hl = 'CocListCurrent'$/;"	v
s:default_action	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:default_action = {$/;"	v
s:default_list_type_commands	conf/vim/.vim/plugged/vim-go/autoload/go/list.vim	/^let s:default_list_type_commands = {$/;"	v
s:default_metalinter	conf/vim/.vim/plugged/vim-go/autoload/go/config.vim	/^let s:default_metalinter = 'staticcheck'$/;"	v
s:detail_bufnr	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^let s:detail_bufnr = 0$/;"	v
s:diagnostic_hlgroups	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^let s:diagnostic_hlgroups = ['CocErrorHighlight', 'CocWarningHighlight', 'CocInfoHighlight', 'CocHintHighlight', 'CocDeprecatedHighlight', 'CocUnusedHighlight']$/;"	v
s:dict_t	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^let s:dict_t = type({})$/;"	v
s:dir	conf/vim/.vim/plugged/vim-go/scripts/runtest.vim	/^let s:dir = expand('%:p:h')$/;"	v
s:dirArrows	conf/vim/.vim/plugged/nerdtree/syntax/nerdtree.vim	/^    let s:dirArrows = escape(g:NERDTreeDirArrowCollapsible, '~]\\-').escape(g:NERDTreeDirArrowExpandable, '~]\\-')$/;"	v
s:done	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^  let s:done += 1$/;"	v
s:done	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^let s:done = 0$/;"	v
s:done	conf/vim/.vim/plugged/vim-go/scripts/runtest.vim	/^  let s:done += 1$/;"	v
s:done	conf/vim/.vim/plugged/vim-go/scripts/runtest.vim	/^let s:done = 0$/;"	v
s:duration	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^let s:duration = 300.0$/;"	v
s:efm	conf/vim/.vim/plugged/vim-go/autoload/go/test.vim	/^let s:efm = ""$/;"	v
s:elapsed_time	conf/vim/.vim/plugged/vim-go/scripts/runtest.vim	/^  let s:elapsed_time = substitute(reltimestr(reltime(s:started)), '^\\s*\\(.\\{-}\\)\\s*$', '\\1', '')$/;"	v
s:engine	conf/vim/.vim/plugged/vim-go/ftplugin/go/snippets.vim	/^let s:engine = go#config#SnippetEngine()$/;"	v
s:env_cache	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^let s:env_cache = {}$/;"	v
s:err_remain_text	conf/vim/.vim/plugged/coc.nvim/autoload/coc/task.vim	/^let s:err_remain_text = {}$/;"	v
s:error_icon	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^let s:error_icon = get(g:, 'coc_notify_error_icon', s:utf ? "\\uf057" : 'E')$/;"	v
s:error_sign	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^let s:error_sign = get(g:, 'coc_status_error_sign', has('mac') && s:utf ? "\\u274c " : 'E ')$/;"	v
s:errored	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^      let s:errored = 0$/;"	v
s:errored	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^let s:errored = 0$/;"	v
s:errors	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^      let s:errors += 1$/;"	v
s:errors	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^  let s:errors += 1$/;"	v
s:errors	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^let s:errors = 0$/;"	v
s:fail	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^      let s:fail += 1$/;"	v
s:fail	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^let s:fail = 0$/;"	v
s:fail	conf/vim/.vim/plugged/vim-go/scripts/runtest.vim	/^    let s:fail += 1$/;"	v
s:fail	conf/vim/.vim/plugged/vim-go/scripts/runtest.vim	/^let s:fail = 0$/;"	v
s:fct	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/filechangetype.vim	/^let s:fct = {$/;"	v
s:filetype_dict	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^        let s:filetype_dict[key] = val$/;"	v
s:filetype_dict	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^    let s:filetype_dict = {$/;"	v
s:filetype_dict	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^    let s:filetype_dict = {}$/;"	v
s:filetype_map	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^let s:filetype_map = {$/;"	v
s:first_rtp	conf/vim/.vim/autoload/plug.vim	/^let s:first_rtp = s:escrtp(get(s:split_rtp(), 0, ''))$/;"	v
s:first_sign_id	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:first_sign_id = 3000$/;"	v
s:fmt_excmd	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:fmt_excmd = '   '.s:blue('%-38s', 'Statement').'%s'$/;"	v
s:focus_was_lost	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let s:focus_was_lost = 0$/;"	v
s:formatelempat	conf/vim/.vim/plugged/tabular/autoload/tabular.vim	/^let s:formatelempat = '\\%([lrc]\\d\\+\\)'$/;"	v
s:frames	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^let s:frames = ['·  ', '·· ', '···', ' ··', '  ·', '   ']$/;"	v
s:funcs	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^let s:funcs = {}$/;"	v
s:gap_between_regions	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^let s:gap_between_regions = 5$/;"	v
s:go_decls_var	conf/vim/.vim/plugged/vim-go/autoload/ctrlp/decls.vim	/^let s:go_decls_var = {$/;"	v
s:go_major_version	conf/vim/.vim/plugged/vim-go/autoload/go/mod.vim	/^let s:go_major_version = ""$/;"	v
s:go_stack	conf/vim/.vim/plugged/vim-go/autoload/go/def.vim	/^let s:go_stack = []$/;"	v
s:go_stack_level	conf/vim/.vim/plugged/vim-go/autoload/go/def.vim	/^let s:go_stack_level = 0$/;"	v
s:go_test_show_name	conf/vim/.vim/plugged/vim-go/autoload/go/test.vim	/^let s:go_test_show_name = 0$/;"	v
s:goarch	conf/vim/.vim/plugged/vim-go/autoload/go/package.vim	/^    let s:goarch = '*'$/;"	v
s:goarch	conf/vim/.vim/plugged/vim-go/autoload/go/package.vim	/^    let s:goarch = g:golang_goarch$/;"	v
s:goarch	conf/vim/.vim/plugged/vim-go/autoload/go/package.vim	/^let s:goarch = $GOARCH$/;"	v
s:goos	conf/vim/.vim/plugged/vim-go/autoload/go/package.vim	/^    let s:goos = '*'$/;"	v
s:goos	conf/vim/.vim/plugged/vim-go/autoload/go/package.vim	/^    let s:goos = 'darwin'$/;"	v
s:goos	conf/vim/.vim/plugged/vim-go/autoload/go/package.vim	/^    let s:goos = 'windows'$/;"	v
s:goos	conf/vim/.vim/plugged/vim-go/autoload/go/package.vim	/^    let s:goos = g:golang_goos$/;"	v
s:goos	conf/vim/.vim/plugged/vim-go/autoload/go/package.vim	/^let s:goos = $GOOS$/;"	v
s:gopath	conf/vim/.vim/plugged/vim-go/scripts/runtest.vim	/^let s:gopath = $GOPATH$/;"	v
s:got_fmt_error	conf/vim/.vim/plugged/vim-go/autoload/go/asmfmt.vim	/^let s:got_fmt_error = 0$/;"	v
s:gui	conf/vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:gui = has('gui_running') || has('nvim')$/;"	v
s:headersRegexp	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^let s:headersRegexp = '\\v^(#|.+\\n(\\=+|-+)$)'$/;"	v
s:hunk_re	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:hunk_re = '^@@ -\\(\\d\\+\\),\\?\\(\\d*\\) +\\(\\d\\+\\),\\?\\(\\d*\\) @@'$/;"	v
s:id	conf/vim/.vim/plugged/vim-go/autoload/ctrlp/decls.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id_types	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^let s:id_types = {}$/;"	v
s:import_paths	conf/vim/.vim/plugged/vim-go/autoload/go/package.vim	/^let s:import_paths = {}$/;"	v
s:in_gopath	conf/vim/.vim/plugged/vim-go/autoload/go/package.vim	/^let s:in_gopath = {}$/;"	v
s:indent	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^let s:indent = ''$/;"	v
s:indent	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^let s:indent = max(map(copy(s:tests), {_, val -> len(FriendlyName(val))}))$/;"	v
s:info_icon	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^let s:info_icon = get(g:, 'coc_notify_info_icon', s:utf ? "\\uf06a" : 'I')$/;"	v
s:initial_go_path	conf/vim/.vim/plugged/vim-go/autoload/go/path.vim	/^let s:initial_go_path = ""$/;"	v
s:inserted	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^let s:inserted = 0$/;"	v
s:interval	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^let s:interval = get(g:, 'coc_notify_interval', s:is_vim ? 50 : 20)$/;"	v
s:is_gvim	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^let s:is_gvim = s:is_vim && has("gui_running")$/;"	v
s:is_handler_enabled	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/init.vim	/^  let s:is_handler_enabled = 0$/;"	v
s:is_mac	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^let s:is_mac = has('mac')$/;"	v
s:is_vim	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	conf/vim/.vim/plugged/coc.nvim/autoload/coc/compat.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	conf/vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	conf/vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	conf/vim/.vim/plugged/coc.nvim/autoload/coc/snippet.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	conf/vim/.vim/plugged/coc.nvim/autoload/coc/task.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	conf/vim/.vim/plugged/coc.nvim/autoload/coc/terminal.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	conf/vim/.vim/plugged/coc.nvim/autoload/coc/vtext.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	conf/vim/.vim/plugged/coc.nvim/autoload/coc/window.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_vim	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^let s:is_vim = !has('nvim')$/;"	v
s:is_win	conf/vim/.vim/autoload/plug.vim	/^let s:is_win = has('win32')$/;"	v
s:is_win	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^let s:is_win = has("win32") || has("win64")$/;"	v
s:is_win	conf/vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:is_win = has("win32") || has("win64")$/;"	v
s:is_win	conf/vim/.vim/plugged/coc.nvim/autoload/coc/terminal.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	conf/vim/.vim/plugged/fzf.vim/plugin/fzf.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_wsl_bash	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:is_wsl_bash = s:is_win && (exepath('bash') =~? 'Windows[\/\\\\]system32[\/\\\\]bash.exe$')$/;"	v
s:jobs	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^let s:jobs = {}$/;"	v
s:keyMaps	conf/vim/.vim/plugged/nerdtree/lib/nerdtree/key_map.vim	/^let s:keyMaps = {}$/;"	v
s:keymap_arguments	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^let s:keymap_arguments = ['nowait', 'silent', 'script', 'expr', 'unique']$/;"	v
s:last_rtp	conf/vim/.vim/autoload/plug.vim	/^let s:last_rtp  = s:escrtp(get(s:split_rtp(), -1, ''))$/;"	v
s:last_status	conf/vim/.vim/plugged/vim-go/autoload/go/statusline.vim	/^let s:last_status = ""$/;"	v
s:layout_keys	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:layout_keys = ['window', 'up', 'down', 'left', 'right']$/;"	v
s:levelRegexpDict	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^let s:levelRegexpDict = {$/;"	v
s:list_t	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^let s:list_t = type([])$/;"	v
s:list_win_bufnr	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^let s:list_win_bufnr = 0$/;"	v
s:loaded	conf/vim/.vim/autoload/plug.vim	/^let s:loaded = get(s:, 'loaded', {})$/;"	v
s:log	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^let s:log = []$/;"	v
s:log_file	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:log_file    = s:plugin_dir.'gitgutter.log'$/;"	v
s:logfile	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^    let s:logfile = resolve($NODE_CLIENT_LOG_FILE)$/;"	v
s:logfile	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^    let s:logfile = tempname()$/;"	v
s:logs	conf/vim/.vim/plugged/vim-go/scripts/runtest.vim	/^let s:logs = []$/;"	v
s:logtimer	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^let s:logtimer = 0$/;"	v
s:lspfactory	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^let s:lspfactory = {}$/;"	v
s:mac_gui	conf/vim/.vim/autoload/plug.vim	/^let s:mac_gui = has('gui_macvim') && has('gui_running')$/;"	v
s:map_next	conf/vim/.vim/plugged/coc.nvim/autoload/coc/snippet.vim	/^let s:map_next = 1$/;"	v
s:map_prev	conf/vim/.vim/plugged/coc.nvim/autoload/coc/snippet.vim	/^let s:map_prev = 1$/;"	v
s:mapargs	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^  let s:mapargs = {}$/;"	v
s:match_ns	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^let s:match_ns = coc#highlight#create_namespace('list-match')$/;"	v
s:max_src_id	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^let s:max_src_id = 1000$/;"	v
s:me	conf/vim/.vim/autoload/plug.vim	/^  let s:me = resolve(expand('<sfile>:p'))$/;"	v
s:messages	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^let s:messages = []$/;"	v
s:min_version	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:min_version = '0.56.0'$/;"	v
s:n10	conf/vim/.vim/plugged/coc.nvim/autoload/coc/vtext.vim	/^let s:n10 = has('nvim-0.10.0')$/;"	v
s:name	conf/vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:name = 'coc'$/;"	v
s:namespace_cache	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^let s:namespace_cache = {}$/;"	v
s:namespace_id	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^let s:namespace_id = 1$/;"	v
s:namespace_map	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^let s:namespace_map = {}$/;"	v
s:neocbs	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^let s:neocbs = []$/;"	v
s:new_log_session	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:new_log_session = 1$/;"	v
s:next_sign_id	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:next_sign_id  = s:first_sign_id$/;"	v
s:nomodeline	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' : ''$/;"	v
s:nomodeline	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' : ''$/;"	v
s:nomodeline	conf/vim/.vim/plugged/vim-gitgutter/plugin/gitgutter.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' : ''$/;"	v
s:ns_id	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^let s:ns_id = 1$/;"	v
s:nvim	conf/vim/.vim/autoload/plug.vim	/^let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait') && !s:is_win)$/;"	v
s:old_cpo	conf/vim/.vim/plugged/nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpoptions$/;"	v
s:on_windows	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^let s:on_windows = has('win32') || has('win64')$/;"	v
s:oneline	conf/vim/.vim/plugged/vim-markdown/syntax/markdown.vim	/^    let s:oneline = ' oneline'$/;"	v
s:oneline	conf/vim/.vim/plugged/vim-markdown/syntax/markdown.vim	/^    let s:oneline = ''$/;"	v
s:op_command_command	conf/vim/.vim/plugged/vim-operator-user/t/example-b-advanced.vim	/^let s:op_command_command = ''$/;"	v
s:osDefaultCaseSensitiveFS	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^    let s:osDefaultCaseSensitiveFS = 0$/;"	v
s:osDefaultCaseSensitiveFS	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^    let s:osDefaultCaseSensitiveFS = 1$/;"	v
s:out_remain_text	conf/vim/.vim/plugged/coc.nvim/autoload/coc/task.vim	/^let s:out_remain_text = {}$/;"	v
s:outline_preview_bufnr	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^let s:outline_preview_bufnr = 0$/;"	v
s:packages	conf/vim/.vim/plugged/vim-go/plugin/go.vim	/^let s:packages = {$/;"	v
s:pad_bufnr	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^let s:pad_bufnr = -1$/;"	v
s:patterns	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^let s:patterns = {}$/;"	v
s:patterns	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^let s:patterns['hex']      = '\\v#?(\\x{2})(\\x{2})(\\x{2})'$/;"	v
s:patterns	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^let s:patterns['shortHex'] = '\\v#(\\x{1})(\\x{1})(\\x{1})'$/;"	v
s:pbufnr	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^let s:pbufnr = -1$/;"	v
s:phl	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^let s:phl = 'CocNotificationProgress'$/;"	v
s:plug_buf	conf/vim/.vim/autoload/plug.vim	/^let s:plug_buf = get(s:, 'plug_buf', -1)$/;"	v
s:plug_src	conf/vim/.vim/autoload/plug.vim	/^let s:plug_src = 'https:\/\/github.com\/junegunn\/vim-plug.git'$/;"	v
s:plug_tab	conf/vim/.vim/autoload/plug.vim	/^let s:plug_tab = get(s:, 'plug_tab', -1)$/;"	v
s:plugin_dir	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:plugin_dir  = expand('<sfile>:p:h:h:h').'\/'$/;"	v
s:popup_list	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^let s:popup_list = []$/;"	v
s:popup_list_api	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^let s:popup_list_api = exists('*popup_list')$/;"	v
s:pos_on_insertenter	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^let s:pos_on_insertenter = []$/;"	v
s:prefix	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^let s:prefix = '[List Preview]'$/;"	v
s:preview_bufnr	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^let s:preview_bufnr = 0$/;"	v
s:progress_char	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^let s:progress_char = '─'$/;"	v
s:prompt_win_bufnr	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^let s:prompt_win_bufnr = 0$/;"	v
s:prompt_win_width	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^let s:prompt_win_width = get(g:, 'coc_prompt_win_width', 32)$/;"	v
s:prop_id	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^let s:prop_id = 0$/;"	v
s:prop_offset	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^let s:prop_offset = get(g:, 'coc_text_prop_offset', 1000)$/;"	v
s:pum_bufnr	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^let s:pum_bufnr = 0$/;"	v
s:pum_index	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^let s:pum_index = -1$/;"	v
s:pum_size	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^let s:pum_size = 0$/;"	v
s:pum_winid	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^let s:pum_winid = -1$/;"	v
s:pwinid	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^let s:pwinid = -1$/;"	v
s:quit	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^  let s:quit = "quit"$/;"	v
s:quit	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^let s:quit = ""$/;"	v
s:register	conf/vim/.vim/plugged/vim-operator-user/t/register-designations.vim	/^let s:register = ['', '']$/;"	v
s:report	conf/vim/.vim/plugged/vim-go/scripts/runbench.vim	/^let s:report = execute('syntime report')$/;"	v
s:reversed	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^let s:reversed = 0$/;"	v
s:root	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	conf/vim/.vim/plugged/coc.nvim/autoload/coc/rpc.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	conf/vim/.vim/plugged/coc.nvim/autoload/health/coc.vim	/^let s:root = expand('<sfile>:h:h:h')$/;"	v
s:root	conf/vim/.vim/plugged/coc.nvim/plugin/coc.vim	/^let s:root = expand('<sfile>:h:h')$/;"	v
s:rootNERDTreePath	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree.vim	/^let s:rootNERDTreePath = resolve(expand('<sfile>:p:h:h'))$/;"	v
s:root_dir	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^let s:root_dir = resolve(getcwd() . '\/..')$/;"	v
s:rounded_borderchars	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^let s:rounded_borderchars = s:borderchars[0:3] + ['╭', '╮', '╯', '╰']$/;"	v
s:running_task	conf/vim/.vim/plugged/coc.nvim/autoload/coc/task.vim	/^let s:running_task = {}$/;"	v
s:save_cpo	conf/vim/.vim/plugged/tabular/after/plugin/TabularMaps.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	conf/vim/.vim/plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	conf/vim/.vim/plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	conf/vim/.vim/plugged/ultisnips/ftplugin/snippets.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	conf/vim/.vim/plugged/vim-go/autoload/unite/sources/decls.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	conf/vim/.vim/plugged/vim-go/compiler/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:savecpo	conf/vim/.vim/plugged/tabular/autoload/tabular.vim	/^let s:savecpo = &cpo$/;"	v
s:savecpo	conf/vim/.vim/plugged/tabular/plugin/Tabular.vim	/^let s:savecpo = &cpo$/;"	v
s:saved_cursor	conf/vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:saved_cursor = &guicursor$/;"	v
s:saved_expandtab	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let s:saved_expandtab = &expandtab$/;"	v
s:saved_indenetkeys	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^let s:saved_indenetkeys = []$/;"	v
s:saved_shiftwidth	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let s:saved_shiftwidth = &shiftwidth$/;"	v
s:saved_styles	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^            let s:saved_styles = [g:clang_format#style_options, &expandtab, &shiftwidth]$/;"	v
s:saved_textwidth	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^let s:saved_textwidth = []$/;"	v
s:saved_ve	conf/vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:saved_ve = &t_ve$/;"	v
s:select_api	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^let s:select_api = exists('*nvim_select_popupmenu_item')$/;"	v
s:session_names	conf/vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^let s:session_names = []$/;"	v
s:set_extmark	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^let s:set_extmark = has('nvim') && exists('*nvim_buf_set_extmark')$/;"	v
s:set_match_words	conf/vim/.vim/plugged/ultisnips/ftplugin/snippets.vim	/^  let s:set_match_words = 1$/;"	v
s:set_path_handler	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^let s:set_path_handler = {}$/;"	v
s:sign_api	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^let s:sign_api = exists('*sign_getplaced') && exists('*sign_place')$/;"	v
s:sign_group	conf/vim/.vim/plugged/coc.nvim/autoload/coc/dialog.vim	/^let s:sign_group = 'PopUpCocDialog'$/;"	v
s:sign_group	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^let s:sign_group = 'CocList'$/;"	v
s:sign_groups	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^let s:sign_groups = []$/;"	v
s:sign_popup_range	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^let s:sign_popup_range = 'PopUpCocList'$/;"	v
s:sign_range	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^let s:sign_range = 'CocCursorLine'$/;"	v
s:source	conf/vim/.vim/plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^let s:source = {$/;"	v
s:source	conf/vim/.vim/plugged/vim-go/autoload/unite/sources/decls.vim	/^let s:source = {$/;"	v
s:start_args	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^  let s:start_args = []$/;"	v
s:start_col	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^let s:start_col = -1$/;"	v
s:started	conf/vim/.vim/plugged/vim-go/scripts/runtest.vim	/^  let s:started = reltime()$/;"	v
s:state	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^  let s:state = {$/;"	v
s:statuses	conf/vim/.vim/plugged/vim-go/autoload/go/statusline.vim	/^let s:statuses = {}$/;"	v
s:suite	conf/vim/.vim/plugged/deoplete.nvim/test/autoload/deoplete/custom.vim	/^let s:suite = themis#suite('custom')$/;"	v
s:suite	conf/vim/.vim/plugged/deoplete.nvim/test/autoload/deoplete/util.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:supports_star	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:supports_star = v:version > 703 || (v:version == 703 && has("patch596"))$/;"	v
s:tab	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:tab = "\\t"$/;"	v
s:tab_id	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^let s:tab_id = 1$/;"	v
s:temp_buffer	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:temp_buffer = tempname()$/;"	v
s:temp_from	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:temp_from = tempname()$/;"	v
s:templatepath	conf/vim/.vim/plugged/vim-go/autoload/go/issue.vim	/^let s:templatepath = go#util#Join(resolve(expand('<sfile>:p:h:h:h')), '.github', 'ISSUE_TEMPLATE.md')$/;"	v
s:term	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^let s:term = &termguicolors == 0 && !has('gui_running')$/;"	v
s:test_repo	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^let s:test_repo   = s:current_dir.'\/test-repo'$/;"	v
s:testfile	conf/vim/.vim/plugged/vim-go/scripts/runtest.vim	/^let s:testfile = expand('%:t')$/;"	v
s:tests	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^  let s:tests = filter(s:tests, 'v:val =~ argv(1)')$/;"	v
s:tests	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^let s:tests = split(substitute(@q, 'function \\(\\k*()\\)', '\\1', 'g'))$/;"	v
s:tests	conf/vim/.vim/plugged/vim-go/scripts/runtest.vim	/^let s:tests = split(substitute(@q, 'function \\(\\k\\+()\\)', '\\1', 'g'))$/;"	v
s:timer_id	conf/vim/.vim/plugged/vim-go/autoload/go/auto.vim	/^let s:timer_id = 0$/;"	v
s:timer_id	conf/vim/.vim/plugged/vim-go/autoload/go/statusline.vim	/^let s:timer_id = 0$/;"	v
s:toggle	conf/vim/.vim/plugged/vim-go/autoload/go/coverage.vim	/^let s:toggle = 0$/;"	v
s:total_elapsed_time	conf/vim/.vim/plugged/vim-go/scripts/runtest.vim	/^let s:total_elapsed_time = substitute(reltimestr(reltime(s:total_started)), '^\\s*\\(.\\{-}\\)\\s*$', '\\1', '')$/;"	v
s:total_started	conf/vim/.vim/plugged/vim-go/scripts/runtest.vim	/^let s:total_started = reltime()$/;"	v
s:tree_up_dir_line	conf/vim/.vim/plugged/nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:triggers	conf/vim/.vim/autoload/plug.vim	/^let s:triggers = get(s:, 'triggers', {})$/;"	v
s:unite_source	conf/vim/.vim/plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source = {$/;"	v
s:unite_source	conf/vim/.vim/plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source.action_table.expand = {$/;"	v
s:unite_source	conf/vim/.vim/plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source.action_table.preview = {$/;"	v
s:utf	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^let s:utf = has('nvim') || &encoding =~# '^utf'$/;"	v
s:utf	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^let s:utf = has('nvim') || &encoding =~# '^utf'$/;"	v
s:vim8	conf/vim/.vim/autoload/plug.vim	/^let s:vim8 = has('patch-8.0.0039') && exists('*job_start')$/;"	v
s:vim_api_version	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^let s:vim_api_version = 34$/;"	v
s:vim_markdown_folding_level	conf/vim/.vim/plugged/vim-markdown/after/ftplugin/markdown.vim	/^let s:vim_markdown_folding_level = get(g:, 'vim_markdown_folding_level', 1)$/;"	v
s:virtual_text	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^let s:virtual_text = 0$/;"	v
s:virtual_text_ns	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^let s:virtual_text_ns = coc#highlight#create_namespace('pum-virtual')$/;"	v
s:w3c_color_names	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^let s:w3c_color_names = {$/;"	v
s:warned	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:warned = 0$/;"	v
s:warning_icon	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^let s:warning_icon = get(g:, 'coc_notify_warning_icon', s:utf ? "\\u26a0" : 'W')$/;"	v
s:warning_sign	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^let s:warning_sign = get(g:, 'coc_status_warning_sign', has('mac') && s:utf ? "\\u26a0\\ufe0f " : 'W ')$/;"	v
s:watched_keys	conf/vim/.vim/plugged/coc.nvim/autoload/coc.vim	/^let s:watched_keys = []$/;"	v
s:wide	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:wide = 120$/;"	v
s:winid	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^let s:winid = 0$/;"	v
s:winids	conf/vim/.vim/plugged/coc.nvim/autoload/coc/notify.vim	/^let s:winids = []$/;"	v
s:winpath	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:winpath = {}$/;"	v
s:xterm_16colors	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^let s:xterm_16colors = {$/;"	v
s:xterm_colors	conf/vim/.vim/plugged/coc.nvim/autoload/coc/color.vim	/^let s:xterm_colors = {$/;"	v
safer_open	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! s:safer_open(cmd, file) abort$/;"	f
sailfish-developer-packages	conf/emacs/.emacs.d/layers/+tools/sailfish-developer/packages.el	/^(defconst sailfish-developer-packages$/;"	f
sailfish-developer/init-sailfish-scratchbox	conf/emacs/.emacs.d/layers/+tools/sailfish-developer/packages.el	/^(defun sailfish-developer\/init-sailfish-scratchbox ()$/;"	f
salt/init-salt-mode	conf/emacs/.emacs.d/layers/+tools/salt/packages.el	/^(defun salt\/init-salt-mode ()$/;"	f
salt/pre-init-smartparens	conf/emacs/.emacs.d/layers/+tools/salt/packages.el	/^(defun salt\/pre-init-smartparens ()$/;"	f
sameIDsHandler	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:sameIDsHandler(next, msg) abort dict$/;"	f
same_ids_highlight	conf/vim/.vim/plugged/vim-go/autoload/go/sameids.vim	/^function! s:same_ids_highlight(exit_val, result) abort$/;"	f
save	workflows/Ariafred/src/workflow/workflow.py	/^    def save(self):$/;"	m	class:Settings
save-buffers-kill-emacs	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(define-advice save-buffers-kill-emacs (:around (f &rest args) spacemacs-really-exit)$/;"	f
save-frame-config	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun save-frame-config ()$/;"	f
save_end	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^    def save_end(self):$/;"	m	class:IndexProcessor
save_fold_state	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! s:save_fold_state()$/;"	f
save_indentkeys	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! s:save_indentkeys() abort$/;"	f
save_last_seen_change	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:save_last_seen_change(bufnr) abort$/;"	f
save_maparg_for	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:save_maparg_for(bufname, lhs) abort$/;"	f
save_mark	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def save_mark(name):$/;"	f
save_password	workflows/Ariafred/src/workflow/workflow.py	/^    def save_password(self, account, password, service=None):$/;"	m	class:Workflow
save_to_path	workflows/Ariafred/src/workflow/web.py	/^    def save_to_path(self, filepath):$/;"	m	class:Response
save_views	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! s:save_views(exclude) abort$/;"	f
saved	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        let saved = g:clang_format#style_options$/;"	v
scala-auto-insert-asterisk-in-comments	conf/emacs/.emacs.d/layers/+lang/scala/config.el	/^(defvar scala-auto-insert-asterisk-in-comments nil$/;"	f
scala-auto-treeview	conf/emacs/.emacs.d/layers/+lang/scala/config.el	/^(defvar scala-auto-treeview nil$/;"	f
scala-backend	conf/emacs/.emacs.d/layers/+lang/scala/config.el	/^(defvar scala-backend 'scala-metals$/;"	f
scala-backends	conf/emacs/.emacs.d/layers/+lang/scala/config.el	/^(defconst scala-backends '(scala-metals)$/;"	f
scala-enable-gtags	conf/emacs/.emacs.d/layers/+lang/scala/config.el	/^(defvar scala-enable-gtags nil$/;"	f
scala-packages	conf/emacs/.emacs.d/layers/+lang/scala/packages.el	/^(defconst scala-packages$/;"	f
scala-sbt-window-position	conf/emacs/.emacs.d/layers/+lang/scala/config.el	/^(defvar scala-sbt-window-position nil$/;"	f
scala/init-lsp-metals	conf/emacs/.emacs.d/layers/+lang/scala/packages.el	/^(defun scala\/init-lsp-metals ()$/;"	f
scala/init-sbt-mode	conf/emacs/.emacs.d/layers/+lang/scala/packages.el	/^(defun scala\/init-sbt-mode ()$/;"	f
scala/init-scala-mode	conf/emacs/.emacs.d/layers/+lang/scala/packages.el	/^(defun scala\/init-scala-mode ()$/;"	f
scala/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/scala/packages.el	/^(defun scala\/post-init-counsel-gtags nil)$/;"	f
scala/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/scala/packages.el	/^(defun scala\/post-init-flycheck ()$/;"	f
scala/post-init-flyspell	conf/emacs/.emacs.d/layers/+lang/scala/packages.el	/^(defun scala\/post-init-flyspell ()$/;"	f
scala/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/scala/packages.el	/^(defun scala\/post-init-ggtags ()$/;"	f
scala/post-init-lsp-mode	conf/emacs/.emacs.d/layers/+lang/scala/packages.el	/^(defun scala\/post-init-lsp-mode ()$/;"	f
scala/pre-init-dap-mode	conf/emacs/.emacs.d/layers/+lang/scala/packages.el	/^(defun scala\/pre-init-dap-mode ()$/;"	f
scheme-implementations	conf/emacs/.emacs.d/layers/+lang/scheme/config.el	/^(defvar scheme-implementations nil$/;"	f
scheme-packages	conf/emacs/.emacs.d/layers/+lang/scheme/packages.el	/^(defconst scheme-packages$/;"	f
scheme/init-geiser	conf/emacs/.emacs.d/layers/+lang/scheme/packages.el	/^(defun scheme\/init-geiser ()$/;"	f
scheme/init-geiser-chez	conf/emacs/.emacs.d/layers/+lang/scheme/packages.el	/^(defun scheme\/init-geiser-chez ()$/;"	f
scheme/init-geiser-chibi	conf/emacs/.emacs.d/layers/+lang/scheme/packages.el	/^(defun scheme\/init-geiser-chibi ()$/;"	f
scheme/init-geiser-chicken	conf/emacs/.emacs.d/layers/+lang/scheme/packages.el	/^(defun scheme\/init-geiser-chicken ()$/;"	f
scheme/init-geiser-gambit	conf/emacs/.emacs.d/layers/+lang/scheme/packages.el	/^(defun scheme\/init-geiser-gambit ()$/;"	f
scheme/init-geiser-gauche	conf/emacs/.emacs.d/layers/+lang/scheme/packages.el	/^(defun scheme\/init-geiser-gauche ()$/;"	f
scheme/init-geiser-guile	conf/emacs/.emacs.d/layers/+lang/scheme/packages.el	/^(defun scheme\/init-geiser-guile ()$/;"	f
scheme/init-geiser-kawa	conf/emacs/.emacs.d/layers/+lang/scheme/packages.el	/^(defun scheme\/init-geiser-kawa ()$/;"	f
scheme/init-geiser-mit	conf/emacs/.emacs.d/layers/+lang/scheme/packages.el	/^(defun scheme\/init-geiser-mit ()$/;"	f
scheme/init-geiser-racket	conf/emacs/.emacs.d/layers/+lang/scheme/packages.el	/^(defun scheme\/init-geiser-racket ()$/;"	f
scheme/post-init-company	conf/emacs/.emacs.d/layers/+lang/scheme/packages.el	/^(defun scheme\/post-init-company ()$/;"	f
scheme/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/scheme/packages.el	/^(defun scheme\/post-init-counsel-gtags nil)$/;"	f
scheme/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/scheme/packages.el	/^(defun scheme\/post-init-ggtags ()$/;"	f
scheme/pre-init-evil-cleverparens	conf/emacs/.emacs.d/layers/+lang/scheme/packages.el	/^(defun scheme\/pre-init-evil-cleverparens ()$/;"	f
scheme/pre-init-org	conf/emacs/.emacs.d/layers/+lang/scheme/packages.el	/^(defun scheme\/pre-init-org ()$/;"	f
scope	conf/vim/.vim/plugged/vim-go/test/parse.go	/^type scope int$/;"	t
screen_lines	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:screen_lines(lines)$/;"	f
screen_set	conf/zsh/.oh-my-zsh/plugins/screen/screen.plugin.zsh	/^  function screen_set()$/;"	f
script_run_helper	conf/tmux/.tmux/plugins/tpm/tests/helpers/tpm.sh	/^script_run_helper() {$/;"	f
scroll_pum	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! s:scroll_pum(forward, height, size) abort$/;"	f
scroll_win	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:scroll_win(winid, forward, amount) abort$/;"	f
scss-enable-lsp	conf/emacs/.emacs.d/layers/+lang/html/config.el	/^(defvar scss-enable-lsp nil$/;"	f
search-engine-amazon-tld	conf/emacs/.emacs.d/layers/+web-services/search-engine/config.el	/^(defvar search-engine-amazon-tld "com"$/;"	f
search-engine-config-list	conf/emacs/.emacs.d/layers/+web-services/search-engine/config.el	/^(defvar search-engine-config-list nil$/;"	f
search-engine-packages	conf/emacs/.emacs.d/layers/+web-services/search-engine/packages.el	/^(defconst search-engine-packages$/;"	f
search-engine/init-engine-mode	conf/emacs/.emacs.d/layers/+web-services/search-engine/packages.el	/^(defun search-engine\/init-engine-mode ()$/;"	f
search_history_sink	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:search_history_sink(lines)$/;"	f
secret	workflows/Ariafred/src/aria.py	/^    secret = 'token:' + wf.settings['secret']$/;"	v
secret	workflows/Ariafred/src/aria_actions.py	/^    secret = 'token:' + wf.settings['secret']$/;"	v
secret	workflows/Ariafred/src/notifier.py	/^    secret = 'token:' + wf.settings['secret']$/;"	v
section	conf/vim/.vim/autoload/plug.vim	/^function! s:section(flags)$/;"	f
select	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def select(start, end):$/;"	f
selectScope	conf/vim/.vim/plugged/vim-go/test/parse.go	/^	selectScope$/;"	c
select_by_index	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! s:select_by_index(index, insert) abort$/;"	f
select_changed_orgs	conf/emacs/.emacs.d/.circleci/shared	/^select_changed_orgs () {$/;"	f
select_instance	sh/kcptun.sh	/^select_instance() {$/;"	f
select_line	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! s:select_line(winid, line) abort$/;"	f
select_next_tab	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def select_next_tab(self, jump_direction: JumpDirection):$/;"	m	class:SnippetInstance
selectric/init-selectric-mode	conf/emacs/.emacs.d/layers/+fun/selectric/packages.el	/^(defun selectric\/init-selectric-mode ()$/;"	f
semantic-web-packages	conf/emacs/.emacs.d/layers/+lang/semantic-web/packages.el	/^(defconst semantic-web-packages$/;"	f
semantic-web/init-sparql-mode	conf/emacs/.emacs.d/layers/+lang/semantic-web/packages.el	/^(defun semantic-web\/init-sparql-mode ()$/;"	f
semantic-web/init-ttl-mode	conf/emacs/.emacs.d/layers/+lang/semantic-web/packages.el	/^(defun semantic-web\/init-ttl-mode ()$/;"	f
semantic-web/pre-init-org	conf/emacs/.emacs.d/layers/+lang/semantic-web/packages.el	/^(defun semantic-web\/pre-init-org ()$/;"	f
semantic/init-semantic	conf/emacs/.emacs.d/layers/+emacs/semantic/packages.el	/^(defun semantic\/init-semantic ()$/;"	f
semantic/init-srefactor	conf/emacs/.emacs.d/layers/+emacs/semantic/packages.el	/^(defun semantic\/init-srefactor ()$/;"	f
semi	conf/vim/.vim/plugged/vim-snippets/pythonx/javascript_snippets.py	/^def semi(snip):$/;"	f
send	conf/vim/.vim/plugged/coc.nvim/bin/prompt.js	/^function send(args) {$/;"	f	function:function
send	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def send(self, keys):$/;"	m	class:VimInterfaceWindows
send_feedback	workflows/Ariafred/src/workflow/workflow.py	/^    def send_feedback(self):$/;"	m	class:Workflow
send_feedback	workflows/Ariafred/src/workflow/workflow3.py	/^    def send_feedback(self):$/;"	m	class:Workflow3
send_keys	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/spec/terminal_session.rb	/^  def send_keys(*keys)$/;"	f	class:TerminalSession
send_keys	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/spec/terminal_session.rb	/^  def send_keys(*keys)$/;"	f	class:TerminalSession
send_string	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/spec/terminal_session.rb	/^  def send_string(str)$/;"	f	class:TerminalSession
send_string	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/spec/terminal_session.rb	/^  def send_string(str)$/;"	f	class:TerminalSession
send_to_terminal	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def send_to_terminal(self, s):$/;"	m	class:VimInterface
send_to_terminal	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def send_to_terminal(self, s):$/;"	m	class:VimInterfaceTmux
send_to_vim	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterface
send_to_vim	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterfaceTmux
send_to_vim	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterfaceTmuxNeovim
separator	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:separator()$/;"	f
serializer	workflows/Ariafred/src/workflow/workflow.py	/^    def serializer(self, name):$/;"	m	class:SerializerManager
serializers	workflows/Ariafred/src/workflow/workflow.py	/^    def serializers(self):$/;"	m	class:SerializerManager
server	workflows/Ariafred/src/aria.py	/^    server = None$/;"	v
server	workflows/Ariafred/src/aria_actions.py	/^    server = xmlrpclib.ServerProxy(rpc_path).aria2$/;"	v
server	workflows/Ariafred/src/notifier.py	/^    server = xmlrpclib.ServerProxy(rpc_path).aria2$/;"	v
server-create-window-system-frame	conf/emacs/.emacs.d/core/core-display-init.el	/^(define-advice server-create-window-system-frame$/;"	f
server-remove-kill-buffer-hook	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/config.el	/^(defun server-remove-kill-buffer-hook ()$/;"	f
server_option_value_not_changed	conf/tmux/.tmux/plugins/tmux-sensible/sensible.tmux	/^server_option_value_not_changed() {$/;"	f
session_id	workflows/Ariafred/src/workflow/workflow3.py	/^    def session_id(self):$/;"	m	class:Workflow3
set	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def set(self, line, column):$/;"	m	class:_SnippetUtilCursor
set	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^    def set(data: DependencyYAML):$/;"	m	class:DependencyStore
set-all-frame-alist-parameters-from-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun set-all-frame-alist-parameters-from-frame (alist &optional frame really-all-p)$/;"	f
set-frame-alist-parameter-from-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun set-frame-alist-parameter-from-frame (alist parameter &optional frame)$/;"	f
set644	conf/zsh/.oh-my-zsh/plugins/perms/perms.plugin.zsh	/^function set644 {$/;"	f
set755	conf/zsh/.oh-my-zsh/plugins/perms/perms.plugin.zsh	/^function set755 {$/;"	f
setDiagnostics	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:setDiagnostics(...) abort$/;"	f
setOriginalIM	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func (p *parser) setOriginalIM() {$/;"	f
setUp	conf/vim/.vim/plugged/ultisnips/test/vim_test_case.py	/^    def setUp(self):$/;"	m	class:VimTestCase
set_acknodelay	sh/kcptun.sh	/^set_acknodelay() {$/;"	f
set_crypt	sh/kcptun.sh	/^set_crypt() {$/;"	f
set_cursor	conf/vim/.vim/plugged/coc.nvim/autoload/coc/pum.vim	/^function! s:set_cursor(winid, line) abort$/;"	f
set_cursor_from_pos	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def set_cursor_from_pos(pos):$/;"	f
set_custom	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! s:set_custom(dest, name_or_dict, value) abort$/;"	f
set_custom	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def set_custom(self, custom: typing.Any) -> None:$/;"	m	class:_Parent
set_datashard	sh/kcptun.sh	/^set_datashard() {$/;"	f
set_default_tpm_path	conf/tmux/.tmux/plugins/tpm/tpm	/^set_default_tpm_path() {$/;"	f
set_disable_ipv6	sh/kcptun.sh	/^set_disable_ipv6() {$/;"	f
set_dscp	sh/kcptun.sh	/^set_dscp() {$/;"	f
set_exit_val_to_false	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/tests/run_tests_in_isolation	/^set_exit_val_to_false() {$/;"	f
set_float_defaults	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:set_float_defaults(winid, config) abort$/;"	f
set_fold_levels	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/fold.vim	/^function! s:set_fold_levels()$/;"	f
set_git_aliases	conf/zsh/.oh-my-zsh/plugins/alias-finder/tests/test_run.sh	/^  set_git_aliases() {$/;"	f
set_height	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! s:set_height(height) abort$/;"	f
set_hidden_parameters	sh/kcptun.sh	/^set_hidden_parameters() {$/;"	f
set_interval	sh/kcptun.sh	/^set_interval() {$/;"	f
set_kcptun_config	sh/kcptun.sh	/^set_kcptun_config() {$/;"	f
set_keepalive	sh/kcptun.sh	/^set_keepalive() {$/;"	f
set_key	sh/kcptun.sh	/^set_key() {$/;"	f
set_last_version	workflows/Ariafred/src/workflow/workflow.py	/^    def set_last_version(self, version=None):$/;"	m	class:Workflow
set_listen_port	sh/kcptun.sh	/^set_listen_port() {$/;"	f
set_manual_detail_parameters	sh/kcptun.sh	/^set_manual_detail_parameters() {$/;"	f
set_manual_parameters	sh/kcptun.sh	/^set_manual_parameters() {$/;"	f
set_mark_from_pos	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def set_mark_from_pos(name, pos):$/;"	f
set_match_words	conf/vim/.vim/plugged/ultisnips/ftplugin/snippets.vim	/^  function! s:set_match_words() abort$/;"	f
set_mode	sh/kcptun.sh	/^set_mode() {$/;"	f
set_mtu	sh/kcptun.sh	/^set_mtu() {$/;"	f
set_nc	sh/kcptun.sh	/^set_nc() {$/;"	f
set_nocomp	sh/kcptun.sh	/^set_nocomp() {$/;"	f
set_nodelay	sh/kcptun.sh	/^set_nodelay() {$/;"	f
set_parityshard	sh/kcptun.sh	/^set_parityshard() {$/;"	f
set_path_handler.err	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:set_path_handler.err(buffer) abort$/;"	f
set_path_handler.out	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:set_path_handler.out(buffer, listing) abort$/;"	f
set_pattern	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def set_pattern(variable: typing.Dict[str, str],$/;"	f
set_preview_options	conf/vim/.vim/plugged/coc.nvim/autoload/coc/list.vim	/^function! s:set_preview_options(winid) abort$/;"	f
set_query	workflows/Ariafred/src/aria_actions.py	/^def set_query(query):$/;"	f
set_quit	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^            def set_quit(self):$/;"	m	class:RemotePDB.start_server.Pdb
set_rcvwnd	sh/kcptun.sh	/^set_rcvwnd() {$/;"	f
set_resend	sh/kcptun.sh	/^set_resend() {$/;"	f
set_rpc	workflows/Ariafred/src/aria_actions.py	/^def set_rpc(path):$/;"	f
set_run_user	sh/kcptun.sh	/^set_run_user() {$/;"	f
set_secret	workflows/Ariafred/src/aria_actions.py	/^def set_secret(str):$/;"	f
set_sndwnd	sh/kcptun.sh	/^set_sndwnd() {$/;"	f
set_sockbuf	sh/kcptun.sh	/^set_sockbuf() {$/;"	f
set_source_attributes	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def set_source_attributes(self, context: UserContext) -> None:$/;"	m	class:_Parent
set_target_ip	sh/kcptun.sh	/^set_target_ip() {$/;"	f
set_target_port	sh/kcptun.sh	/^set_target_port() {$/;"	f
set_tmux_conf_helper	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^set_tmux_conf_helper() {$/;"	f
set_tpm_key_bindings	conf/tmux/.tmux/plugins/tpm/tpm	/^set_tpm_key_bindings() {$/;"	f
set_tpm_path	conf/tmux/.tmux/plugins/tpm/tpm	/^set_tpm_path() {$/;"	f
set_trace	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^    def set_trace(self, frame):$/;"	m	class:RemotePDB
set_tree_defaults	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! s:set_tree_defaults(opts) abort$/;"	f
set_value	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! s:set_value(dest, name, value) abort$/;"	f
setdefault	workflows/Ariafred/src/workflow/workflow.py	/^    def setdefault(self, key, value=None):$/;"	m	class:Settings
setretval	conf/vim/.vim/plugged/vim-go/autoload/go/promise.vim	/^function! s:setretval(val, timer) dict$/;"	f
settings	workflows/Ariafred/src/workflow/workflow.py	/^    def settings(self):$/;"	m	class:Workflow
settings_path	workflows/Ariafred/src/workflow/workflow.py	/^    def settings_path(self):$/;"	m	class:Workflow
setup	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^def setup(vim: Nvim, level: str, output_file: str = '') -> None:$/;"	f
setup_color	conf/zsh/.oh-my-zsh/tools/install.sh	/^setup_color() {$/;"	f
setup_fork_mode	sh/spf13-vim.sh	/^setup_fork_mode() {$/;"	f
setup_ohmyzsh	conf/zsh/.oh-my-zsh/tools/install.sh	/^setup_ohmyzsh() {$/;"	f
setup_other_plugins	conf/vim/.vim/plugged/ultisnips/test_all.py	/^def setup_other_plugins(all_plugins):$/;"	f
setup_path	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:setup_path(bufnr, continuation)$/;"	f
setup_shell	conf/zsh/.oh-my-zsh/tools/install.sh	/^setup_shell() {$/;"	f
setup_vundle	sh/spf13-vim.sh	/^setup_vundle() {$/;"	f
setup_zshrc	conf/zsh/.oh-my-zsh/tools/install.sh	/^setup_zshrc() {$/;"	f
setupproject	conf/vim/.vim/plugged/vim-go/autoload/gotest.vim	/^func! s:setupproject(dir, path) abort$/;"	f
setvar	workflows/Ariafred/src/workflow/workflow3.py	/^    def setvar(self, name, value):$/;"	m	class:Item3
setvar	workflows/Ariafred/src/workflow/workflow3.py	/^    def setvar(self, name, value):$/;"	m	class:Modifier
setvar	workflows/Ariafred/src/workflow/workflow3.py	/^    def setvar(self, name, value):$/;"	m	class:Workflow3
shell-default-full-span	conf/emacs/.emacs.d/layers/+tools/shell/config.el	/^(defvar shell-default-full-span t$/;"	f
shell-default-shell	conf/emacs/.emacs.d/layers/+tools/shell/config.el	/^(defvar shell-default-shell (if (spacemacs\/system-is-mswindows)$/;"	f
shell-default-term-shell	conf/emacs/.emacs.d/layers/+tools/shell/config.el	/^(defvar shell-default-term-shell shell-file-name$/;"	f
shell-default-width	conf/emacs/.emacs.d/layers/+tools/shell/config.el	/^(defvar shell-default-width 30$/;"	f
shell-enable-smart-eshell	conf/emacs/.emacs.d/layers/+tools/shell/config.el	/^(defvar shell-enable-smart-eshell nil$/;"	f
shell-packages	conf/emacs/.emacs.d/layers/+tools/shell/packages.el	/^(defconst shell-packages$/;"	f
shell-protect-eshell-prompt	conf/emacs/.emacs.d/layers/+tools/shell/config.el	/^(defvar shell-protect-eshell-prompt t$/;"	f
shell-scripts-backend	conf/emacs/.emacs.d/layers/+lang/shell-scripts/config.el	/^(defvar shell-scripts-backend (when (configuration-layer\/layer-used-p 'lsp) 'lsp)$/;"	f
shell-scripts-format-on-save	conf/emacs/.emacs.d/layers/+lang/shell-scripts/config.el	/^(defvar shell-scripts-format-on-save nil$/;"	f
shell-scripts-mark-executable-after-save	conf/emacs/.emacs.d/layers/+lang/shell-scripts/config.el	/^(defvar shell-scripts-mark-executable-after-save$/;"	f
shell-scripts-packages	conf/emacs/.emacs.d/layers/+lang/shell-scripts/packages.el	/^(defconst shell-scripts-packages$/;"	f
shell-scripts-shfmt-args	conf/emacs/.emacs.d/layers/+lang/shell-scripts/config.el	/^(defcustom shell-scripts-shfmt-args ()$/;"	f
shell-scripts/init-company-shell	conf/emacs/.emacs.d/layers/+lang/shell-scripts/packages.el	/^(defun shell-scripts\/init-company-shell ()$/;"	f
shell-scripts/init-fish-mode	conf/emacs/.emacs.d/layers/+lang/shell-scripts/packages.el	/^(defun shell-scripts\/init-fish-mode ()$/;"	f
shell-scripts/init-flycheck-bashate	conf/emacs/.emacs.d/layers/+lang/shell-scripts/packages.el	/^(defun shell-scripts\/init-flycheck-bashate ()$/;"	f
shell-scripts/init-insert-shebang	conf/emacs/.emacs.d/layers/+lang/shell-scripts/packages.el	/^(defun shell-scripts\/init-insert-shebang ()$/;"	f
shell-scripts/init-sh-script	conf/emacs/.emacs.d/layers/+lang/shell-scripts/packages.el	/^(defun shell-scripts\/init-sh-script ()$/;"	f
shell-scripts/init-shfmt	conf/emacs/.emacs.d/layers/+lang/shell-scripts/packages.el	/^(defun shell-scripts\/init-shfmt ()$/;"	f
shell-scripts/post-init-company	conf/emacs/.emacs.d/layers/+lang/shell-scripts/packages.el	/^(defun shell-scripts\/post-init-company ()$/;"	f
shell-scripts/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/shell-scripts/packages.el	/^(defun shell-scripts\/post-init-counsel-gtags nil)$/;"	f
shell-scripts/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/shell-scripts/packages.el	/^(defun shell-scripts\/post-init-flycheck ()$/;"	f
shell-scripts/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/shell-scripts/packages.el	/^(defun shell-scripts\/post-init-ggtags ()$/;"	f
shell-scripts/pre-init-org	conf/emacs/.emacs.d/layers/+lang/shell-scripts/packages.el	/^(defun shell-scripts\/pre-init-org ()$/;"	f
shell/init-comint	conf/emacs/.emacs.d/layers/+tools/shell/packages.el	/^(defun shell\/init-comint ()$/;"	f
shell/init-eat	conf/emacs/.emacs.d/layers/+tools/shell/packages.el	/^(defun shell\/init-eat ()$/;"	f
shell/init-esh-help	conf/emacs/.emacs.d/layers/+tools/shell/packages.el	/^(defun shell\/init-esh-help ()$/;"	f
shell/init-eshell	conf/emacs/.emacs.d/layers/+tools/shell/packages.el	/^(defun shell\/init-eshell ()$/;"	f
shell/init-eshell-prompt-extras	conf/emacs/.emacs.d/layers/+tools/shell/packages.el	/^(defun shell\/init-eshell-prompt-extras ()$/;"	f
shell/init-eshell-z	conf/emacs/.emacs.d/layers/+tools/shell/packages.el	/^(defun shell\/init-eshell-z ()$/;"	f
shell/init-multi-term	conf/emacs/.emacs.d/layers/+tools/shell/packages.el	/^(defun shell\/init-multi-term ()$/;"	f
shell/init-multi-vterm	conf/emacs/.emacs.d/layers/+tools/shell/packages.el	/^(defun shell\/init-multi-vterm ()$/;"	f
shell/init-shell	conf/emacs/.emacs.d/layers/+tools/shell/packages.el	/^(defun shell\/init-shell ()$/;"	f
shell/init-shell-pop	conf/emacs/.emacs.d/layers/+tools/shell/packages.el	/^(defun shell\/init-shell-pop ()$/;"	f
shell/init-term	conf/emacs/.emacs.d/layers/+tools/shell/packages.el	/^(defun shell\/init-term ()$/;"	f
shell/init-terminal-here	conf/emacs/.emacs.d/layers/+tools/shell/packages.el	/^(defun shell\/init-terminal-here ()$/;"	f
shell/init-vterm	conf/emacs/.emacs.d/layers/+tools/shell/packages.el	/^(defun shell\/init-vterm ()$/;"	f
shell/init-xterm-color	conf/emacs/.emacs.d/layers/+tools/shell/packages.el	/^(defun shell\/init-xterm-color ()$/;"	f
shell/post-init-projectile	conf/emacs/.emacs.d/layers/+tools/shell/packages.el	/^(defun shell\/post-init-projectile ()$/;"	f
shell/post-init-vi-tilde-fringe	conf/emacs/.emacs.d/layers/+tools/shell/packages.el	/^(defun shell\/post-init-vi-tilde-fringe ()$/;"	f
shell/post-init-window-purpose	conf/emacs/.emacs.d/layers/+tools/shell/packages.el	/^(defun shell\/post-init-window-purpose ()$/;"	f
shell/pre-init-company	conf/emacs/.emacs.d/layers/+tools/shell/packages.el	/^(defun shell\/pre-init-company ()$/;"	f
shell/pre-init-consult	conf/emacs/.emacs.d/layers/+tools/shell/packages.el	/^(defun shell\/pre-init-consult ()$/;"	f
shell/pre-init-evil-collection	conf/emacs/.emacs.d/layers/+tools/shell/packages.el	/^(defun shell\/pre-init-evil-collection ()$/;"	f
shell/pre-init-helm	conf/emacs/.emacs.d/layers/+tools/shell/packages.el	/^(defun shell\/pre-init-helm ()$/;"	f
shell/pre-init-ivy	conf/emacs/.emacs.d/layers/+tools/shell/packages.el	/^(defun shell\/pre-init-ivy ()$/;"	f
shell/pre-init-magit	conf/emacs/.emacs.d/layers/+tools/shell/packages.el	/^(defun shell\/pre-init-magit ()$/;"	f
shell/pre-init-org	conf/emacs/.emacs.d/layers/+tools/shell/packages.el	/^(defun shell\/pre-init-org ()$/;"	f
shellesc_cmd	conf/vim/.vim/autoload/plug.vim	/^function! s:shellesc_cmd(arg, script)$/;"	f
shellesc_ps1	conf/vim/.vim/autoload/plug.vim	/^function! s:shellesc_ps1(arg)$/;"	f
shellesc_sh	conf/vim/.vim/autoload/plug.vim	/^function! s:shellesc_sh(arg)$/;"	f
shellescape	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:shellescape(str) abort$/;"	f
shift	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def shift(self, amount=1):$/;"	m	class:SnippetUtil
short_name_buffer	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^        short_name_buffer = omz_name$/;"	v
shortpath	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:shortpath()$/;"	f
shouldFosterParent	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func (p *parser) shouldFosterParent() bool {$/;"	f
show-*Help*-buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun show-*Help*-buffer ()$/;"	f
show-a-frame-on	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun show-a-frame-on (buffer)$/;"	f
show-buffer-menu	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun show-buffer-menu ()$/;"	f
show-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun show-frame (frame)$/;"	f
show-hide	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun show-hide ()$/;"	f
show-hide-show-function	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defcustom show-hide-show-function 'jump-to-frame-config-register$/;"	f
showMenu	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:showMenu(node) abort$/;"	f
show_config_info	sh/kcptun.sh	/^show_config_info() {$/;"	f
show_errors	conf/vim/.vim/plugged/vim-go/autoload/go/mod.vim	/^function! s:show_errors(errors) abort$/;"	f
show_goroutines	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:show_goroutines(currentGoroutineID, res) abort$/;"	f
show_help	workflows/Ariafred/src/workflow/update.py	/^    def show_help(status=0):$/;"	f
show_installed_info	sh/kcptun.sh	/^show_installed_info() {$/;"	f
show_installed_version	sh/kcptun.sh	/^show_installed_version() {$/;"	f
show_instance_config	sh/kcptun.sh	/^show_instance_config() {$/;"	f
show_instance_log	sh/kcptun.sh	/^show_instance_log() {$/;"	f
show_recommend_config	sh/kcptun.sh	/^show_recommend_config() {$/;"	f
show_stacktrace	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:show_stacktrace(check_errors, res) abort$/;"	f
show_variables	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:show_variables() abort$/;"	f
show_version	workflows/Ariafred/src/workflow/workflow.py	/^        def show_version():$/;"	f	function:Workflow._register_default_magic
shrink-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun shrink-frame (&optional increment frame) ; Suggested binding: `C-M-up'.$/;"	f
shrink-frame-horizontally	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun shrink-frame-horizontally (&optional increment frame) ; Suggested binding: `C-M-left'.$/;"	f
shrink-window-horizontally-repeat	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun shrink-window-horizontally-repeat () ; Emacs 22+$/;"	f
shrink-window-repeat	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun shrink-window-repeat ()          ; Emacs 22+$/;"	f
shrink_path	conf/zsh/.oh-my-zsh/plugins/shrink-path/shrink-path.plugin.zsh	/^shrink_path () {$/;"	f
sign_getplaced	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:sign_getplaced() abort$/;"	f
sign_place	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:sign_place(id, expr, lnum) abort$/;"	f
sign_unplace	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:sign_unplace(id, file) abort$/;"	f
signal_handler	workflows/Ariafred/src/workflow/util.py	/^    def signal_handler(self, signum, frame):$/;"	m	class:uninterruptible
silently_source_all_tmux_files	conf/tmux/.tmux/plugins/tpm/scripts/source_plugins.sh	/^silently_source_all_tmux_files() {$/;"	f
simulator	conf/zsh/.oh-my-zsh/plugins/xcode/xcode.plugin.zsh	/^function simulator {$/;"	f
singleton	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^    singleton = None$/;"	v	class:RemotePDB
sink	conf/vim/.vim/plugged/vim-go/autoload/fzf/decls.vim	/^function! s:sink(str) abort$/;"	f
size_fmt	workflows/Ariafred/src/aria.py	/^def size_fmt(num, suffix='B'):$/;"	f
skip_if	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:_UmlautsBase
skip_if	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
skip_if	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_InDefValue_Leave
skip_if	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
skip_if	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_ShebangPython
skip_if	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_SimpleExample
skip_if	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
skip_if	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
skip_if	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_TextInNextLine
skip_if	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_WithUmlauts
skip_if	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
skip_if	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    skip_if = lambda self: no_unidecode_available()$/;"	v	class:Transformation_LowerCaseAsciiResult
skip_if	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    skip_if = lambda self: no_unidecode_available()$/;"	v	class:Transformation_SimpleCaseAsciiResult
skip_if	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TestLangmapWithUtf8_ExpectCorrectResult
skip_if	conf/vim/.vim/plugged/ultisnips/test/vim_test_case.py	/^    skip_if = lambda self: None$/;"	v	class:VimTestCase
slack-packages	conf/emacs/.emacs.d/layers/+chat/slack/packages.el	/^(defconst slack-packages$/;"	f
slack-spacemacs-layout-binding	conf/emacs/.emacs.d/layers/+chat/slack/config.el	/^(defvar slack-spacemacs-layout-binding "s"$/;"	f
slack-spacemacs-layout-name	conf/emacs/.emacs.d/layers/+chat/slack/config.el	/^(defvar slack-spacemacs-layout-name "@Slack"$/;"	f
slack/init-alert	conf/emacs/.emacs.d/layers/+chat/slack/packages.el	/^(defun slack\/init-alert ()$/;"	f
slack/init-slack	conf/emacs/.emacs.d/layers/+chat/slack/packages.el	/^(defun slack\/init-slack ()$/;"	f
slack/post-init-emoji-cheat-sheet-plus	conf/emacs/.emacs.d/layers/+chat/slack/packages.el	/^(defun slack\/post-init-emoji-cheat-sheet-plus ()$/;"	f
slack/post-init-flyspell	conf/emacs/.emacs.d/layers/+chat/slack/packages.el	/^(defun slack\/post-init-flyspell ()$/;"	f
slack/post-init-window-purpose	conf/emacs/.emacs.d/layers/+chat/slack/packages.el	/^(defun slack\/post-init-window-purpose ()$/;"	f
slack/pre-init-persp-mode	conf/emacs/.emacs.d/layers/+chat/slack/packages.el	/^(defun slack\/pre-init-persp-mode ()$/;"	f
sleeptime	conf/vim/.vim/plugged/ultisnips/test/vim_test_case.py	/^    sleeptime = 0.00$/;"	v	class:VimTestCase
sm_run	conf/zsh/.oh-my-zsh/plugins/sublime-merge/sublime-merge.plugin.zsh	/^				sm_run() { $_sublime_merge_path "$@" >\/dev\/null 2>&1 &| }$/;"	f
smex/init-smex	conf/emacs/.emacs.d/layers/+emacs/smex/packages.el	/^(defun smex\/init-smex ()$/;"	f
sml/init-ob-sml	conf/emacs/.emacs.d/layers/+lang/sml/packages.el	/^(defun sml\/init-ob-sml ())$/;"	f
sml/init-sml-mode	conf/emacs/.emacs.d/layers/+lang/sml/packages.el	/^(defun sml\/init-sml-mode ()$/;"	f
sml/post-init-smartparens	conf/emacs/.emacs.d/layers/+lang/sml/packages.el	/^(defun sml\/post-init-smartparens ()$/;"	f
sml/pre-init-ob-sml	conf/emacs/.emacs.d/layers/+lang/sml/packages.el	/^(defun sml\/pre-init-ob-sml ()$/;"	f
snake_case	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^    def snake_case(_string):$/;"	f	function:name_to_omz
snapshot	conf/vim/.vim/autoload/plug.vim	/^function! s:snapshot(force, ...) abort$/;"	f
snipMate_Disabled	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Disabled(_VimTest):$/;"	c
snipMate_EmptyLinesContinueSnippets	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_EmptyLinesContinueSnippets(_VimTest):$/;"	c
snipMate_Extends	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Extends(_VimTest):$/;"	c
snipMate_Interpolation	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Interpolation(_VimTest):$/;"	c
snipMate_InterpolationWithSystem	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_InterpolationWithSystem(_VimTest):$/;"	c
snipMate_Issue1325	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Issue1325(_VimTest):$/;"	c
snipMate_Issue1344	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Issue1344(_VimTest):$/;"	c
snipMate_Issue658	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Issue658(_VimTest):$/;"	c
snipMate_MultiMatches	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_MultiMatches(_VimTest):$/;"	c
snipMate_NoNestedTabstops	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_NoNestedTabstops(_VimTest):$/;"	c
snipMate_OtherFiletype	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_OtherFiletype(_VimTest):$/;"	c
snipMate_OverwrittenByRegExpTrigger	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_OverwrittenByRegExpTrigger(_VimTest):$/;"	c
snipMate_SimpleSnippet	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_SimpleSnippet(_VimTest):$/;"	c
snipMate_SimpleSnippetInSnippetFile	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_SimpleSnippetInSnippetFile(_VimTest):$/;"	c
snipMate_SimpleSnippetSubDirectory	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_SimpleSnippetSubDirectory(_VimTest):$/;"	c
snipMate_TestMirrors	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestMirrors(_VimTest):$/;"	c
snipMate_TestMirrorsInPlaceholders	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestMirrorsInPlaceholders(_VimTest):$/;"	c
snipMate_TestMirrorsInPlaceholders_Overwrite	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestMirrorsInPlaceholders_Overwrite(_VimTest):$/;"	c
snipMate_TestNoBraceTabstops	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestNoBraceTabstops(_VimTest):$/;"	c
snipMate_TestNoBraceTabstopsAndMirrors	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestNoBraceTabstopsAndMirrors(_VimTest):$/;"	c
snipMate_Visual_Simple	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Visual_Simple(_VimTest):$/;"	c
snippet_end	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def snippet_end(self):$/;"	m	class:SnippetUtil
snippet_start	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def snippet_start(self):$/;"	m	class:SnippetUtil
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Autocommands.py	/^    snippets = ("test", "[ ${1:foo} ]")$/;"	v	class:Autocommands
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    snippets = ("trig", "success")$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    snippets = ("trig", "success")$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üü ${1:world} üü $1")$/;"	v	class:Snippet_With_Umlauts_Mirrors
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üü ${1:world} üü ${2:hello}ßß\\nüüüü")$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üü ${1:world} üü ${2:hello}ßß\\nüüüü")$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üü ${1:world} üü ${2:hello}ßß\\nüüüü")$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", "üüüüüßßßß")$/;"	v	class:Snippet_With_Umlauts_TypeOn
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    snippets = ("ül", 'üü ${1:world} üü `!p snip.rv = len(t[1])*"a"`')$/;"	v	class:Snippet_With_Umlauts_Python
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_EndNL
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_EndStartNL
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_ExtraNL_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_JustNL
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_NLInsideStuffBehind
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_NotEndStartNL
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:TrailingNewline_TabStop_StartNL
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    snippets = ($/;"	v	class:_MultiLineDefault
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("'")$/;"	v	class:Snippet_With_SingleQuote
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("'")$/;"	v	class:Snippet_With_SingleQuote_List
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("ü")$/;"	v	class:Snippet_With_Umlauts
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("ü")$/;"	v	class:Snippet_With_Umlauts_List
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote('"')$/;"	v	class:Snippet_With_DoubleQuote
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote('"')$/;"	v	class:Snippet_With_DoubleQuote_List
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${0|red,blue|}")$/;"	v	class:Choices_ShouldThrowErrorWithZeroTabstop
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1:outer ${2|foo,blah|}} ${3}")$/;"	v	class:Choices_AsNestedElement_CanBeTabbedThrough
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1:outer ${2|foo,blah|}}")$/;"	v	class:Choices_AsNestedElement_CanBeTabbedInto
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1:outer ${2|foo,blah|}}")$/;"	v	class:Choices_AsNestedElement_ShallNotTakeActionIfParentInput
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1:outer ${2|foo,blah|}}")$/;"	v	class:Choices_AsNestedElement_ShouldOverwriteDefaultText
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|a,,c|}")$/;"	v	class:Choices_EmptyChoiceWillBeDiscarded
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|a,b,c,d,e,f,g,h,i,j,k,l,m,n|} is ${2:a char}")$/;"	v	class:Choices_MoreThan9Candidates_ShouldTerminateWithSpace
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|a,b,c,d,e,f,g,h,i,j,k,l,m,n|} is ${2:a char}")$/;"	v	class:Choices_MoreThan9Candidates_ShouldWaitForInputs
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|cyan,magenta|}, mirror: $1")$/;"	v	class:Choices_With_Mirror
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|cyan,magenta|}, mirror: $1")$/;"	v	class:Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,gray|} is ${2:color}\\nline 2")$/;"	v	class:Choices_WilNotMessWithTabstopsAfterIt
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,gray|}")$/;"	v	class:Choices_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,gray|}")$/;"	v	class:Choices_WillBeExpandedToInlineSelection
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,green|}")$/;"	v	class:Choices_WillAbandonSelection_If_CharTyped
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|red,green|}")$/;"	v	class:Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1||}")$/;"	v	class:Choices_WillNotExpand_If_ChoiceListIsEmpty
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    snippets = ("test", "${1|Русский язык,中文,한국어,öääö|}")$/;"	v	class:Choices_CanTakeNonAsciiCharacters
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    snippets = ($/;"	v	class:Choices_CanEscapeCommaInsideChoiceItem
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Completion.py	/^    snippets = ("test", "$1 $2")$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Completion.py	/^    snippets = ("test", "$1 $2")$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Completion.py	/^    snippets = ("test", "$1 ${1:blah}")$/;"	v	class:Completion_SimpleExample_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("i", "if $1:\\n\\t$2")$/;"	v	class:Undo_ChangesInPlaceholder
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("i", "if $1:\\n\\t$2")$/;"	v	class:Undo_CompletelyUndoSnippet
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("i", "if:\\n\\t$1")$/;"	v	class:Undo_RemoveOneSnippetByTime
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("i", "if:\\n\\t$1")$/;"	v	class:Undo_RemoveOneSnippetByTime2
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "$1 Hello\\naaa ${1} bbb\\nWorld")$/;"	v	class:Undo_RemoveEditInTabstop
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "$1hello\\nnice\\nworld")$/;"	v	class:DeleteLastTwoLinesInSnippet
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:hello} $1")$/;"	v	class:DeleteSnippetInsertion0
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:hi}\\n${2:world}\\nend")$/;"	v	class:DeleteCurrentTabStop2_JumpBack
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:hi}\\n${2:world}\\nend")$/;"	v	class:DeleteCurrentTabStop3_JumpAround
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:hi}\\nend")$/;"	v	class:DeleteCurrentTabStop1_JumpBack
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1:one}(${2:xxx})${3:three}")$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "${1}\\n`!p snip.rv = '\\\\n'.join(t[1].split())`\\n\\n${0:pass}")$/;"	v	class:JumpForward_DefSnippet
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "A${1:C} ${0:DDD}", "This is Case 1")$/;"	v	class:Backspace_TabStop_Zero
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "A${1:C} ${2:DDD}", "This is Case 1")$/;"	v	class:Backspace_TabStop_NotZero
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "Hello\\n${1:Hello}World")$/;"	v	class:Undo_RemoveWholeSnippet
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", "Hello\\naaa ${1} bbb\\nWorld")$/;"	v	class:Undo_RemoveMultilineSnippet
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", r"$1${1\/(.*)\/(?0::.)\/}")$/;"	v	class:DeleteSnippetInsertion1
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    snippets = ("test", r"if $1: $2")$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    snippets = ($/;"	v	class:UpdateModifiedSnippetWithoutCursorMove2
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo ${1:Welt}")$/;"	v	class:SimpleExpand_DoNotClobberDefaultRegister
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt!")$/;"	v	class:SimpleExpandExpandOrJump_Expand
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt!")$/;"	v	class:SimpleExpandJumpOrExpand_Expand
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt!")$/;"	v	class:_SimpleExpands
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt!\\nUnd Wie gehts")$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt!\\nUnd Wie gehts")$/;"	v	class:MultilineExpand_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    snippets = ("hallo", "Hallo Welt\\n")$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    snippets = ("test", "SimpleText")$/;"	v	class:ExitSnippetModeAfterTabstopZero
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    snippets = ("test", r"${1:\\Safe\\\\}")$/;"	v	class:SimpleExpand_Issue1343
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    snippets = ("test", r"test$1 foo$0")$/;"	v	class:SimpleExpandExpandOrJump_Ambiguity
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    snippets = ("test", r"test$1 foo$0")$/;"	v	class:SimpleExpandJumpOrExpand_Ambiguity
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("pd", "padding: ${1:0}px")$/;"	v	class:VirtualEdit
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "${1:hello} ${2:world} ${0}")$/;"	v	class:RetainsTheUnnamedRegister
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "${1:hello} ${2:world} ${0}")$/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "${2:#2} ${1:#1};$0")$/;"	v	class:Bug1251994
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "Expand me!", "", "w")$/;"	v	class:NullByte_ExpandAfter
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "\\t${1}${0}")$/;"	v	class:ShiftWidthZero
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("test", "hello")$/;"	v	class:NonUnicodeDataInUnnamedRegister
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("text", "Expand me!", "", "")$/;"	v	class:PassThroughNonexecutedTrigger
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    snippets = ("word", "never expanded", "", "w")$/;"	v	class:NullByte_ListSnippets
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Folding.py	/^    snippets = ($/;"	v	class:FoldOverwrite_Simple_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Folding.py	/^    snippets = ($/;"	v	class:Fold_DeleteMiddleLine_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Folding.py	/^    snippets = ($/;"	v	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Folding.py	/^    snippets = ($/;"	v	class:PerlSyntaxFold
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    snippets = ("m", "\\tBlaahblah \\t\\t  ")$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "${1:longer expand}\\n$1\\n$0", "", "f")$/;"	v	class:FOSimple_Break_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "${1:longer expand}after\\nstart$1end")$/;"	v	class:FOTextAfter_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "${1:longer expand}after\\nstart$1end")$/;"	v	class:FOWrapOnLongWord_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "Before${1:longer expand}After\\nstart$1end")$/;"	v	class:FOTextBeforeAndAfter_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "for\\n    blah")$/;"	v	class:ProperIndenting_SimpleCase_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "hui")$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    snippets = ("test", "hui")$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    snippets = (("m1", "Something"), ("m", "\\t$0"))$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "Hallo ${1:now `echo fromecho`} end")$/;"	v	class:TabStop_Shell_InDefValue_Leave
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "Hallo ${1:now `echo fromecho`} end")$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "`!p snip.rv = 5`")$/;"	v	class:Python_SnipRvCanBeNonText
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "h`!p snip.rv = snip.v.mode + snip.v.text`b")$/;"	v	class:PythonVisual_LineSelect_Simple
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "h`!p snip.rv = snip.v.mode + snip.v.text`b")$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "h`!p snip.rv = snip.v.mode + snip.v.text`b")$/;"	v	class:PythonVisual_SelectOneWord
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "hi `echo hallo` you!")$/;"	v	class:TabStop_Shell_SimpleExample
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "hi `echo hallo`\\nWeiter")$/;"	v	class:TabStop_Shell_TextInNextLine
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ("test", "hi `echo höüäh` you!")$/;"	v	class:TabStop_Shell_WithUmlauts
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCodeOld_IndentedMultiline
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCodeOld_TransformedBeforeMultiLine
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_CanOverwriteTabstop
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_IndentEtSw
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_IndentEtSwOffset
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_IndentNoetSwTs
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_IndentProblem
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_Locals
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultiAppend
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultiAppendShift
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultiAppendShiftMethods
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultiAppendSimpleIndent
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_MultilineIndented
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_ResetIndent
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_SimpleAppend
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_SimpleMkline
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_TransformedBeforeMultiLine
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_UseNewOverOld
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonVisual_HasAccessToSelectedPlaceholders
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonVisual_HasAccessToZeroPlaceholders
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:TabStop_Shell_ShebangPython
snippets	conf/vim/.vim/plugged/ultisnips/test/test_ListSnippets.py	/^    snippets = ($/;"	v	class:_ListAllSnippets
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "$1 $1_"$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = "test", "welt${1:welt${2:welt}welt} $2"$/;"	v	class:Mirror_TestKillTabstop_Kill
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "    $1\\n$1\\na$1b\\n$1\\ntest $1 mich")$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 $1 $1 $1")$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 $1 $1 $1")$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 $1")$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 $1")$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 ${1:replace me}")$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 ${1:replace me}")$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 ${1:this is it} $1")$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 ${1:this is it} $1")$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1 Hinten\\n$1")$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1$1 ")$/;"	v	class:SimpleMirrorSameLineNoSpaceSpaceAfter_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1$1")$/;"	v	class:SimpleMirrorSameLineNoSpace_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1 Hinten")$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1")$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1")$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1")$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1\\n$1")$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n$1\\n$1")$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n${1:sometext}")$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\nVorne $1 Hinten")$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\nVorne $1")$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "$1\\n\\n$1\\n\\n$1")$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ObenVorne $1 ObenHinten\\nVorne $1 Hinten")$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "Vorne $1 Hinten\\n$1")$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "Vorne $1\\n$1")$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:$1.h $1.c}\\ntest $1")$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:$1.h}")$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:$1}")$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:$1}")$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:snip} ${3:$1.h $2}")$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $1 ${2:snip} ${3:$1.h $2}")$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha $5 ${1:blub} $4 $0 ${2:$1.h} $1 $3 ${4:More}")$/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:blub} ${2:$1.h}")$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:blub} ${2:$1}")$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:default value} $1\\nanother: $1 mirror")$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:default value} $1\\nanother: $1 mirror")$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:defa}\\n$1")$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ("test", "ha ${1:defa}\\n$1")$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = ($/;"	v	class:MirrorRealLifeExample_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = (("test", "$1$1 "), ("outer", "$1"))$/;"	v	class:SimpleMirrorSameLineNoSpaceInsideOtherSpaceAfter_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    snippets = (("test", "$1$1"), ("outer", "$1"))$/;"	v	class:SimpleMirrorSameLineNoSpaceInsideOther_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    snippets = ("<trh", "<tr>\\n\\t<th>$1<\/th>\\n\\t$2\\n<\/tr>\\n$3")$/;"	v	class:CursorMovement_BS_InEditMode
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", "${1:Hi}\\n${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", "${1:Hi}\\n${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", "${1:Some}")$/;"	v	class:IMMoving_CursorsKeys_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${1:a tab}")$/;"	v	class:CursorMovement_Multiline_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${1:a tab}")$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${2:a tab} ${1:Tab}")$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${2:a tab} ${1:Tab}")$/;"	v	class:IMMoving_NoExiting_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"$1 ${2:blub} ${1:Tab}")$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"${1:Hi} ${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    snippets = ("test", r"${1:Hi} ${2:blub}")$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_MultipleMatches.py	/^    snippets = ($/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_MultipleMatches.py	/^    snippets = ($/;"	v	class:_MultipleMatches
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Plugin.py	/^    snippets = ("long", "Hello", "", "w")$/;"	v	class:Plugin_SuperTab_SimpleTest
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n    $0\\nM END")$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n    $1\\nM END -> $0")$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n$0\\nM END")$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n$0\\nM END")$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "M START\\n$0\\nM END")$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ("m", "[ ${1:first}  ${2:sec} ]")$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_MirroredZeroTS_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabsStops_TypeInZero_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B $1"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B $1"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B $1"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "A $0 B"), ("m1", "C $1 D $0 E"))$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ $1 $2 ] $1"), ("m1", "ASnip $1 ASnip $2 ASnip"))$/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ ${1:first} ${2:sec} ]"),)$/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ ${1:first} ${2:sec} ]"),)$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ ${1:first} ${2:sec} ]"),)$/;"	v	class:RecTabStops_LeavingInnerInner_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", "[ ${1:first} ${2:sec} ]"),)$/;"	v	class:RecTabStops_LeavingInner_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", r"${1:one}${0:explicit zero}${2:two}", "snip", "i"),)$/;"	v	class:RecTabsStops_BackspaceZero_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m", r"_${0:explicit zero}", "snip", "i"),)$/;"	v	class:RecTabsStops_TypeInZero2_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m1", "JST"), ("m", "[ ${1:first}  ${2:sec} ]"))$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m1", "JST"), ("m", "[ ${1:first}  ${2:sec} ]"))$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m1", "Just some Text"), ("m", "[ ${1:first}  ${2:sec} ]"))$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    snippets = (("m1", "[ ${1:first} $0 ${2:sec} ]"), ("m", "[ ${1:first} ${2:sec} ]"))$/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    snippets = ("test", "${1:World}")$/;"	v	class:_SelectModeMappings
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    snippets = ("test", "h${1:blah}w $1")$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    snippets = ("test", "h${1:blah}w $1")$/;"	v	class:OldSelection_SimpleTabstop_Test
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    snippets = ($/;"	v	class:ExclusiveSelection_RealWorldCase_Test
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    snippets = ($/;"	v	class:OldSelection_RealWorldCase_Test
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("((?<=\\W)|^)(\\.)", "self.", "", "r")$/;"	v	class:_Regex_Self
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(.*test)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(test *)+", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_Multiple
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(test)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_Expand
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(test)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("(test.*)", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test ", "Expand me!", "", "r")$/;"	v	class:SnippetOptions_Regex_WithSpace
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test it", "Expand me!", "", "b")$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test it", "Expand me!", "", "b")$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test it", "Expand me!", "", "b")$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test me", "Expand me!")$/;"	v	class:MultiWordSnippet_Simple
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test", "Expand me!", "", "b")$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test", "Expand me!", "", "b")$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test", "Expand me!", "", "b")$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ("test", "\\t\\tExpand\\tme!\\t", "", "t")$/;"	v	class:_No_Tab_Expand
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:SnippetOptions_Regex_PythonBlockMatch
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:_TabExpand_RealWorld
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test it", "Expand me!", "", "i"),)$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test it", "Expand me!", "", "i"),)$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test it", "Expand me!", "", "w"),)$/;"	v	class:_MultiWord_SnippetOptions_ExpandWordSnippets
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "b"), ("test", "not at beginning", "", ""))$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "b"), ("test", "not at beginning", "", ""))$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "i"),)$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (("test", "Expand me!", "", "w"),)$/;"	v	class:_SnippetOptions_ExpandWordSnippets
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteExisting
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = (("test", "We do not overwrite", "Overwrite the two", "", -1),)$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = (("test", "We overwrite", "Overwrite the two", "", -5),)$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
snippets	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = (("test", "We overwrite", "Overwrite the two", "", 1),)$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("echo", "$0 run")$/;"	v	class:TabStop_Exit_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("echo", "echo ${1:Hallo}")$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "Hallo ${1:WELT} ups")$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $0 $1")$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $0 a small feed")$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $0\\nnice $1 work\\n$3 $2\\nSeem to work")$/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $2 $1")$/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo $2 $1")$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${0:End} ${1:Beginning}")$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${0:End} a small feed")$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${1:End} ${0:Beginning}")$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${2:End} mitte ${1:Beginning}")$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "hallo ${2:End} mitte${1:Beginning}")$/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("hallo", "nothing ${1:i} hups")$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "$1: ${1:'${2:second}'} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "$1: ${1:'${2:second}'} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "$2: ${2:'${1:second}'} $1")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "[ $1$2 ] $1")$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "\\\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "\\n\\\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "each_byte { |${1:byte}| $0 }")$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi $1 $2 ${1:first line\\nsecond line} ${2:Hi} world")$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi $1 ${1:first line\\nsecond line} world")$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi $1 ${1:first line\\nsecond line} world")$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:first line\\nsecond line} world")$/;"	v	class:TabStop_Multiline_Leave
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:first line\\nsecond line} world")$/;"	v	class:TabStop_Multiline_Overwrite
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second ${3:third}}} $4")$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second ${3:third}}} $4")$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second ${3:third}}} $4")$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second}} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second}} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "hi ${1:this ${2:second}} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "snip $1")$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "snip ${1:default}")$/;"	v	class:TabStopEscapingWhenSelected_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "snip ${1:i}")$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", "t$1t${2: }t{\\n\\t$0\\n}")$/;"	v	class:TabStop_CROnlyOnSelectedNear
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r":latex:\\`$1\\`$0")$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"These are two backslashes \\\\\\\\ done")$/;"	v	class:TabStop_EscapingChars_Backslash3
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"This \\ is a backslash!")$/;"	v	class:TabStop_EscapingChars_Backslash
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"This is a backslash \\\\ done")$/;"	v	class:TabStop_EscapingChars_Backslash2
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"\\\\$1{$2}")$/;"	v	class:TabStop_EscapingChars_Backslash4
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"a\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars1
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"snip \\$0 $$0 end")$/;"	v	class:TabStop_EscapingCharsDollars
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"snip \\` literal")$/;"	v	class:TabStop_EscapingCharsBackticks
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ("test", r"usage: \\`basename \\$0\\` ${1:args}")$/;"	v	class:TabStop_EscapingChars_RealLife
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample
snippets	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/(aa)|.*\/(?1:yes:no\\\\)\/}"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/(aa)|.*\/(?1:yes\\:no\\))\/}"$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/(aa)|.*\/(?1:yes\\\\:no)\/}"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = "test", r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("ascii", "$1 ${1\/(.*)\/$1\/a}")$/;"	v	class:Transformation_SimpleCaseAsciiResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("ascii", "$1 ${1\/(.*)\/\\L$1\\E\/a}")$/;"	v	class:Transformation_LowerCaseAsciiResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(.)\/\\\\u$1\/}")$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(.*)\/\\L$1\\E\/}")$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(.*)\/\\\\U$1\\E\/}")$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(.*)\/\\l$1\/}")$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(?:(^a)|(^b)).*\/(?1:yes:no)\/}")$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(?:(^a)|(^b)).*\/(?1:yes:no)\/}")$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/([ab])oo\/$1ull\/}")$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/(^a).*\/(?0:began with an a)\/}")$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/foo\/batzl\/}")$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "$1 ${1\/foo\/batzl\/}")$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1:Some Text}${1\/.+\/\\\\U$0\\E\/}\\n${1\/.+\/\\L$0\\E\/}")$/;"	v	class:Transformation_MultipleTransformations_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1:some}")$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1:some}")$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1}")$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/.+\/is something\/}${1}")$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/foo\/batzl\/} $1")$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "${1\/foo\/batzl\/} ${1:replace me}")$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "snip ${1\/.+\/(?0:matched)\/} ${1:default}")$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", "snip ${1\/.+\/(?0:matched)\/} ${1:default}")$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/(\\w+(?:\\W+\\w+){,7})\\W*(.+)?\/$1(?2:...)\/}")$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/(dead) (par[^ ]*)\/this $2 is a bit $1\/}")$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/, *\/, \/g}")$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/, *\/-\/g}")$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/, *\/\\n\/}")$/;"	v	class:Transformation_CINewlines_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/, *\/\\t\/}")$/;"	v	class:Transformation_CITabstop_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/^.*?(-)?(>)?$\/(?2::(?1:>:.))\/}")$/;"	v	class:Transformation_ConditionalInConditional_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/hal((?:lo)|(?:ul))\/(?1:ha\\($1\\))\/}")$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${1\/test\/blah\/i}")$/;"	v	class:Transformation_OptionIgnoreCase_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${2:${1\/.+\/(?0:defined $0)\/}}")$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"$1 ${2:${1\/.+\/(?0:defined $0)\/}}")$/;"	v	class:Transformation_InsideTabOvertype_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ("test", r"${VISUAL\/^\/* \/mg}")$/;"	v	class:Transformation_OptionMultiline_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ($/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    snippets = ($/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
snippets	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ("te'stâ", "abc123ά", "123êabc")$/;"	v	class:VerifyVimDict3
snippets	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ("testâ", "abc123ά", "123'êabc")$/;"	v	class:VerifyVimDict1
snippets	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ($/;"	v	class:TestLangmapWithUtf8_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ($/;"	v	class:TestNonEmptyLangmapWithSemi_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ($/;"	v	class:TestNonEmptyLangmap_ExpectCorrectResult
snippets	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ('te"stâ', "abc123ά", "123êabc")$/;"	v	class:VerifyVimDict2
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("if", "if {\\n\\t${VISUAL}$0\\n}")$/;"	v	class:Visual_LineSelect_DedentLine
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "beg\\n\\t${0:${VISUAL}}\\nend")$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "beg\\n\\t${VISUAL}\\n\\t${1:here_we_go}\\nend")$/;"	v	class:Visual_LineSelect_WithTabStop
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "beg\\n\\t${VISUAL}\\nend")$/;"	v	class:Visual_LineSelect_CheckIndentSimple
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "beg\\n\\t${VISUAL}\\nend")$/;"	v	class:Visual_LineSelect_CheckIndentTwice
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:${VISUAL}}b")$/;"	v	class:Visual_InDefaultText_SelectOneWord
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:${VISUAL}}b")$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:bef${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:bef${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:beforea${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:beforea${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${1:beforeaaa${VISUAL}aft}b")$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${2:ahh}${VISUAL}${1:ups}b", "Description", "i")$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL:world}b")$/;"	v	class:VisualWithDefault_ExpandWithVisual
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL:world}b")$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_CrossOneLine
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_ExpandTwice
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_LineSelect_Simple
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_NoVisualSelection_Ignore
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b")$/;"	v	class:Visual_SelectOneWord
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "", "i")$/;"	v	class:Visual_SelectOneWordExclusive
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "", "i")$/;"	v	class:Visual_SelectOneWordInclusive
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "", "i")$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "Description", "i")$/;"	v	class:Visual_SelectOneWord_Inword
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b", "Description", "i")$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "h${VISUAL}b${VISUAL}a")$/;"	v	class:Visual_SelectOneWord_TwiceVisual
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", "hello\\n\\t ${1:${VISUAL}}\\nend")$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${1:bef${VISUAL\/.\/\\U$0\\E\/g}aft}b")$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${1:bef${VISUAL\/.\/\\U$0\\E\/g}aft}b")$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL:\\\/\\\/ body}b")$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL:world\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL:world\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformation_LineSelect_Simple
snippets	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    snippets = ("test", r"h${VISUAL\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformation_SelectOneWord
snippets	conf/vim/.vim/plugged/ultisnips/test/vim_test_case.py	/^    snippets = ()$/;"	v	class:VimTestCase
snippets_in_current_scope	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def snippets_in_current_scope(self, search_all):$/;"	m	class:SnippetManager
solidity-packages	conf/emacs/.emacs.d/layers/+lang/solidity/packages.el	/^(defconst solidity-packages$/;"	f
solidity/init-solidity-flycheck	conf/emacs/.emacs.d/layers/+lang/solidity/packages.el	/^(defun solidity\/init-solidity-flycheck ()$/;"	f
solidity/init-solidity-mode	conf/emacs/.emacs.d/layers/+lang/solidity/packages.el	/^(defun solidity\/init-solidity-mode ()$/;"	f
solidity/post-init-add-node-modules-path	conf/emacs/.emacs.d/layers/+lang/solidity/packages.el	/^(defun solidity\/post-init-add-node-modules-path ()$/;"	f
solidity/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/solidity/packages.el	/^(defun solidity\/post-init-flycheck ()$/;"	f
sort_buffers	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:sort_buffers(...)$/;"	f
sortconip	conf/zsh/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function sortconip() {$/;"	f
sortcons	conf/zsh/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function sortcons() {$/;"	f
source	conf/vim/.vim/autoload/plug.vim	/^function! s:source(from, ...)$/;"	f
source	conf/vim/.vim/plugged/vim-go/autoload/fzf/decls.vim	/^function! s:source(mode,...) abort$/;"	f
source.gather_candidates	conf/vim/.vim/plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^function! s:source.gather_candidates(context) abort$/;"	f
source.gather_candidates	conf/vim/.vim/plugged/vim-go/autoload/unite/sources/decls.vim	/^function! s:source.gather_candidates(args, context) abort$/;"	f
source.hooks.on_syntax	conf/vim/.vim/plugged/vim-go/autoload/unite/sources/decls.vim	/^function! s:source.hooks.on_syntax(args, context) abort$/;"	f
source_env	conf/zsh/.oh-my-zsh/plugins/dotenv/dotenv.plugin.zsh	/^source_env() {$/;"	f
source_plugins	conf/tmux/.tmux/plugins/tpm/scripts/source_plugins.sh	/^source_plugins() {$/;"	f
source_plugins	conf/tmux/.tmux/plugins/tpm/tpm	/^source_plugins() {$/;"	f
space-doc	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(defgroup space-doc nil "Minor mode for viewing Spacemacs documentation files."$/;"	f
space-doc-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(define-minor-mode space-doc-mode$/;"	f
space_before_function_paren	conf/vim/.vim/plugged/vim-snippets/pythonx/javascript_snippets.py	/^def space_before_function_paren(snip):$/;"	f
spacebind--bs-declare-prefix	conf/emacs/.emacs.d/core/core-spacebind.el	/^(defvar spacebind--bs-declare-prefix '()$/;"	f
spacebind--bs-declare-prefix-for-mode	conf/emacs/.emacs.d/core/core-spacebind.el	/^(defvar spacebind--bs-declare-prefix-for-mode '()$/;"	f
spacebind--bs-fn-key-seq-override	conf/emacs/.emacs.d/core/core-spacebind.el	/^(defvar spacebind--bs-fn-key-seq-override '()$/;"	f
spacebind--bs-global-replacements	conf/emacs/.emacs.d/core/core-spacebind.el	/^(defvar spacebind--bs-global-replacements '()$/;"	f
spacebind--bs-leader-keys	conf/emacs/.emacs.d/core/core-spacebind.el	/^(defvar spacebind--bs-leader-keys '()$/;"	f
spacebind--bs-leader-keys-for-major-mode	conf/emacs/.emacs.d/core/core-spacebind.el	/^(defvar spacebind--bs-leader-keys-for-major-mode '()$/;"	f
spacebind--bs-leader-keys-for-minor-mode	conf/emacs/.emacs.d/core/core-spacebind.el	/^(defvar spacebind--bs-leader-keys-for-minor-mode '()$/;"	f
spacebind--bs-major-mode-replacements	conf/emacs/.emacs.d/core/core-spacebind.el	/^(defvar spacebind--bs-major-mode-replacements '()$/;"	f
spacebind--bs-minor-mode-replacements	conf/emacs/.emacs.d/core/core-spacebind.el	/^(defvar spacebind--bs-minor-mode-replacements '()$/;"	f
spacebind--eager-bind	conf/emacs/.emacs.d/core/core-spacebind.el	/^(defvar spacebind--eager-bind t$/;"	f
spacebind--timer	conf/emacs/.emacs.d/core/core-spacebind.el	/^(defvar spacebind--timer [t]$/;"	f
spacebind//process-bind-stack	conf/emacs/.emacs.d/core/core-spacebind.el	/^(defun spacebind\/\/process-bind-stack ()$/;"	f
spacebind//strip-docstring	conf/emacs/.emacs.d/core/core-spacebind.el	/^(defun spacebind\/\/strip-docstring (mode-binding-form)$/;"	f
spacemacs	conf/emacs/.emacs.d/core/core-spacemacs.el	/^(defgroup spacemacs nil$/;"	f
spacemacs--after-display-system-init-list	conf/emacs/.emacs.d/core/core-display-init.el	/^(defvar spacemacs--after-display-system-init-list '()$/;"	f
spacemacs--auto-completion-complete-last-candidate	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defvar spacemacs--auto-completion-complete-last-candidate nil)$/;"	f
spacemacs--auto-completion-shadowed-emacs-binding	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defvar spacemacs--auto-completion-shadowed-emacs-binding nil)$/;"	f
spacemacs--auto-completion-shadowed-hybrid-binding	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defvar spacemacs--auto-completion-shadowed-hybrid-binding nil)$/;"	f
spacemacs--auto-completion-shadowed-insert-binding	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defvar spacemacs--auto-completion-shadowed-insert-binding nil)$/;"	f
spacemacs--auto-completion-time	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defvar spacemacs--auto-completion-time nil)$/;"	f
spacemacs--buffer-ts-full-hint-toggle	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defvar spacemacs--buffer-ts-full-hint-toggle t$/;"	f
spacemacs--category-names	conf/emacs/.emacs.d/core/core-documentation.el	/^(defvar spacemacs--category-names$/;"	f
spacemacs--counsel-commands	conf/emacs/.emacs.d/layers/+completion/ivy/config.el	/^(defvar spacemacs--counsel-commands$/;"	f
spacemacs--counsel-gtags-dwim-success	conf/emacs/.emacs.d/layers/+tags/gtags/config.el	/^(defvar spacemacs--counsel-gtags-dwim-success nil$/;"	f
spacemacs--counsel-initial-cands-shown	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defvar spacemacs--counsel-initial-cands-shown nil)$/;"	f
spacemacs--counsel-initial-number-cand	conf/emacs/.emacs.d/layers/+completion/ivy/config.el	/^(defvar spacemacs--counsel-initial-number-cand 100)$/;"	f
spacemacs--counsel-map	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defvar spacemacs--counsel-map (spacemacs\/\/counsel-search-add-extra-bindings$/;"	f
spacemacs--counsel-search-cmd	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defvar spacemacs--counsel-search-cmd)$/;"	f
spacemacs--counsel-search-max-path-length	conf/emacs/.emacs.d/layers/+completion/ivy/config.el	/^(defvar spacemacs--counsel-search-max-path-length 30$/;"	f
spacemacs--cur-theme	conf/emacs/.emacs.d/core/core-themes-support.el	/^(defvar spacemacs--cur-theme nil$/;"	f
spacemacs--custom-file	conf/emacs/.emacs.d/core/core-custom-settings.el	/^(defvar spacemacs--custom-file (concat spacemacs-cache-directory$/;"	f
spacemacs--custom-layout-alist	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/config.el	/^(defvar spacemacs--custom-layout-alist nil$/;"	f
spacemacs--dap-supported-modes	conf/emacs/.emacs.d/layers/+tools/dap/config.el	/^(defvar spacemacs--dap-supported-modes nil$/;"	f
spacemacs--default-mode-line	conf/emacs/.emacs.d/core/core-spacemacs.el	/^(defvar spacemacs--default-mode-line mode-line-format$/;"	f
spacemacs--delayed-user-theme	conf/emacs/.emacs.d/core/core-themes-support.el	/^(defvar spacemacs--delayed-user-theme nil$/;"	f
spacemacs--diminished-minor-modes	conf/emacs/.emacs.d/core/core-fonts-support.el	/^(defvar spacemacs--diminished-minor-modes nil$/;"	f
spacemacs--dir-byte-compile-status	conf/emacs/.emacs.d/core/core-compilation.el	/^(defvar spacemacs--dir-byte-compile-status$/;"	f
spacemacs--directory-path	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs--directory-path ()$/;"	f
spacemacs--display-system-initialized-p	conf/emacs/.emacs.d/core/core-display-init.el	/^(defun spacemacs--display-system-initialized-p ()$/;"	f
spacemacs--dump-old-global-mode-string	conf/emacs/.emacs.d/core/core-dumper.el	/^(defvar spacemacs--dump-old-global-mode-string nil$/;"	f
spacemacs--dump-spinner-construct	conf/emacs/.emacs.d/core/core-dumper.el	/^(defconst spacemacs--dump-spinner-construct$/;"	f
spacemacs--evil-iedit-insert-states-default	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/funcs.el	/^(defvar spacemacs--evil-iedit-insert-states-default nil$/;"	f
spacemacs--evil-iedit-insert-states-hybrid	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/funcs.el	/^(defvar spacemacs--evil-iedit-insert-states-hybrid nil$/;"	f
spacemacs--eww-buffers	conf/emacs/.emacs.d/layers/+web/eww/config.el	/^(defvar spacemacs--eww-buffers nil$/;"	f
spacemacs--eww-ts-full-hint	conf/emacs/.emacs.d/layers/+web/eww/config.el	/^(defvar spacemacs--eww-ts-full-hint nil$/;"	f
spacemacs--eww-ts-full-hint-toggle	conf/emacs/.emacs.d/layers/+web/eww/config.el	/^(defvar spacemacs--eww-ts-full-hint-toggle t$/;"	f
spacemacs--eww-ts-minified-hint	conf/emacs/.emacs.d/layers/+web/eww/config.el	/^(defvar spacemacs--eww-ts-minified-hint nil$/;"	f
spacemacs--fallback-theme	conf/emacs/.emacs.d/core/core-themes-support.el	/^(defvar spacemacs--fallback-theme nil$/;"	f
spacemacs--file-path	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs--file-path ()$/;"	f
spacemacs--file-path-with-line	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs--file-path-with-line ()$/;"	f
spacemacs--file-path-with-line-column	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs--file-path-with-line-column ()$/;"	f
spacemacs--git-blame-ts-full-hint-toggle	conf/emacs/.emacs.d/layers/+source-control/git/config.el	/^(defvar spacemacs--git-blame-ts-full-hint-toggle nil$/;"	f
spacemacs--gne-cur-line	conf/emacs/.emacs.d/core/core-funcs.el	/^(defvar-local spacemacs--gne-cur-line 0$/;"	f
spacemacs--gne-line-func	conf/emacs/.emacs.d/core/core-funcs.el	/^(defvar-local spacemacs--gne-line-func nil$/;"	f
spacemacs--gne-max-line	conf/emacs/.emacs.d/core/core-funcs.el	/^(defvar-local spacemacs--gne-max-line nil$/;"	f
spacemacs--gne-min-line	conf/emacs/.emacs.d/core/core-funcs.el	/^(defvar-local spacemacs--gne-min-line nil$/;"	f
spacemacs--helm-popwin-mode	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defvar spacemacs--helm-popwin-mode nil$/;"	f
spacemacs--import-js-modes	conf/emacs/.emacs.d/layers/+tools/import-js/config.el	/^(defvar spacemacs--import-js-modes nil$/;"	f
spacemacs--indent-variable-alist	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/config.el	/^(defvar spacemacs--indent-variable-alist$/;"	f
spacemacs--init-redisplay-count	conf/emacs/.emacs.d/core/core-funcs.el	/^(defvar spacemacs--init-redisplay-count 0$/;"	f
spacemacs--ivy-file-actions	conf/emacs/.emacs.d/layers/+completion/ivy/config.el	/^(defvar spacemacs--ivy-file-actions$/;"	f
spacemacs--ivy-grep-actions	conf/emacs/.emacs.d/layers/+completion/ivy/config.el	/^(defvar spacemacs--ivy-grep-actions$/;"	f
spacemacs--killed-buffer-list	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defvar spacemacs--killed-buffer-list nil$/;"	f
spacemacs--last-emacs-version	conf/emacs/.emacs.d/core/core-compilation.el	/^(defvar spacemacs--last-emacs-version ""$/;"	f
spacemacs--last-emacs-version-file	conf/emacs/.emacs.d/core/core-compilation.el	/^(defconst spacemacs--last-emacs-version-file$/;"	f
spacemacs--last-selected-layout	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/config.el	/^(defvar spacemacs--last-selected-layout dotspacemacs-default-layout-name$/;"	f
spacemacs--layout-local-map	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/config.el	/^(defvar spacemacs--layout-local-map (spacemacs-ht-create)$/;"	f
spacemacs--layout-local-variables	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/config.el	/^(defvar spacemacs--layout-local-variables nil$/;"	f
spacemacs--layouts-autosave-timer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/config.el	/^(defvar spacemacs--layouts-autosave-timer nil$/;"	f
spacemacs--layouts-ts-full-hint-toggle	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/config.el	/^(defvar spacemacs--layouts-ts-full-hint-toggle nil$/;"	f
spacemacs--org-custom-id-hash	conf/emacs/.emacs.d/core/core-documentation.el	/^(defvar-local  spacemacs--org-custom-id-hash nil$/;"	f
spacemacs--persp-display-buffers-func	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defvar spacemacs--persp-display-buffers-func 'ignore$/;"	f
spacemacs--persp-display-perspectives-func	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defvar spacemacs--persp-display-perspectives-func 'ignore$/;"	f
spacemacs--prettier-modes	conf/emacs/.emacs.d/layers/+tools/prettier/config.el	/^(defvar spacemacs--prettier-modes nil$/;"	f
spacemacs--projectile-directory-path	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-project/funcs.el	/^(defun spacemacs--projectile-directory-path ()$/;"	f
spacemacs--projectile-file-path	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-project/funcs.el	/^(defun spacemacs--projectile-file-path ()$/;"	f
spacemacs--projectile-file-path-with-line	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-project/funcs.el	/^(defun spacemacs--projectile-file-path-with-line ()$/;"	f
spacemacs--projectile-file-path-with-line-column	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-project/funcs.el	/^(defun spacemacs--projectile-file-path-with-line-column ()$/;"	f
spacemacs--python-pipenv-modes	conf/emacs/.emacs.d/layers/+lang/python/config.el	/^(defvar spacemacs--python-pipenv-modes nil$/;"	f
spacemacs--python-poetry-modes	conf/emacs/.emacs.d/layers/+lang/python/config.el	/^(defvar spacemacs--python-poetry-modes nil$/;"	f
spacemacs--python-pyenv-modes	conf/emacs/.emacs.d/layers/+lang/python/config.el	/^(defvar spacemacs--python-pyenv-modes nil$/;"	f
spacemacs--python-pyvenv-modes	conf/emacs/.emacs.d/layers/+lang/python/config.el	/^(defvar spacemacs--python-pyvenv-modes nil$/;"	f
spacemacs--python-shell-interpreter-origin	conf/emacs/.emacs.d/layers/+lang/python/config.el	/^(defvar spacemacs--python-shell-interpreter-origin nil$/;"	f
spacemacs--scroll-ts-full-hint	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/funcs.el	/^(defvar spacemacs--scroll-ts-full-hint nil$/;"	f
spacemacs--scroll-ts-full-hint-toggle	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/funcs.el	/^(defvar spacemacs--scroll-ts-full-hint-toggle t$/;"	f
spacemacs--smartparens-enabled-initially	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defvar spacemacs--smartparens-enabled-initially nil$/;"	f
spacemacs--smerge-ts-full-hint-toggle	conf/emacs/.emacs.d/layers/+source-control/version-control/config.el	/^(defvar spacemacs--smerge-ts-full-hint-toggle nil$/;"	f
spacemacs--space-doc-cache	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(defvar-local spacemacs--space-doc-cache nil$/;"	f
spacemacs--space-doc-org-block-begin-line-face-remap-cookie	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(defvar-local spacemacs--space-doc-org-block-begin-line-face-remap-cookie nil$/;"	f
spacemacs--space-doc-org-block-end-line-face-remap-cookie	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(defvar-local spacemacs--space-doc-org-block-end-line-face-remap-cookie nil$/;"	f
spacemacs--space-doc-org-kbd-face-remap-cookie	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(defvar-local spacemacs--space-doc-org-kbd-face-remap-cookie nil$/;"	f
spacemacs--spacemacs-env-loaded	conf/emacs/.emacs.d/core/core-env.el	/^(defvar spacemacs--spacemacs-env-loaded nil$/;"	f
spacemacs--theming-header-faces	conf/emacs/.emacs.d/layers/+themes/theming/config.el	/^(defvar spacemacs--theming-header-faces$/;"	f
spacemacs--theming-modified-faces	conf/emacs/.emacs.d/layers/+themes/theming/config.el	/^(defvar spacemacs--theming-modified-faces '())$/;"	f
spacemacs--uncustomizable	conf/emacs/.emacs.d/core/core-customization.el	/^(defgroup spacemacs--uncustomizable nil$/;"	f
spacemacs--use-package-add-hook-keywords	conf/emacs/.emacs.d/core/core-use-package-ext.el	/^(defconst spacemacs--use-package-add-hook-keywords '(:pre-init$/;"	f
spacemacs--use-package-extended	conf/emacs/.emacs.d/core/core-use-package-ext.el	/^(defvar spacemacs--use-package-extended nil)$/;"	f
spacemacs--web-beautify-modes	conf/emacs/.emacs.d/layers/+tools/web-beautify/config.el	/^(defvar spacemacs--web-beautify-modes nil$/;"	f
spacemacs--window-split-non-ignored-windows	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs--window-split-non-ignored-windows ()$/;"	f
spacemacs--window-split-splittable-windows	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs--window-split-splittable-windows ()$/;"	f
spacemacs--window-ts-full-hint-toggle	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defvar spacemacs--window-ts-full-hint-toggle nil$/;"	f
spacemacs--workspaces-ts-full-hint-toggle	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/config.el	/^(defvar spacemacs--workspaces-ts-full-hint-toggle nil$/;"	f
spacemacs-assets-directory	conf/emacs/.emacs.d/core/core-load-paths.el	/^(defconst spacemacs-assets-directory$/;"	f
spacemacs-auto-save-directory	conf/emacs/.emacs.d/core/core-load-paths.el	/^(defconst spacemacs-auto-save-directory$/;"	f
spacemacs-badge-official-png	conf/emacs/.emacs.d/core/core-load-paths.el	/^(defconst spacemacs-badge-official-png$/;"	f
spacemacs-banner-directory	conf/emacs/.emacs.d/core/core-load-paths.el	/^(defconst spacemacs-banner-directory$/;"	f
spacemacs-banner-official-png	conf/emacs/.emacs.d/core/core-load-paths.el	/^(defconst spacemacs-banner-official-png$/;"	f
spacemacs-bootstrap-packages	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/packages.el	/^(defconst spacemacs-bootstrap-packages$/;"	f
spacemacs-bootstrap/init-async	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/packages.el	/^(defun spacemacs-bootstrap\/init-async ())$/;"	f
spacemacs-bootstrap/init-bind-key	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/packages.el	/^(defun spacemacs-bootstrap\/init-bind-key ())$/;"	f
spacemacs-bootstrap/init-bind-map	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/packages.el	/^(defun spacemacs-bootstrap\/init-bind-map ()$/;"	f
spacemacs-bootstrap/init-dash	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/packages.el	/^(defun spacemacs-bootstrap\/init-dash ()$/;"	f
spacemacs-bootstrap/init-diminish	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/packages.el	/^(defun spacemacs-bootstrap\/init-diminish ()$/;"	f
spacemacs-bootstrap/init-dotenv-mode	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/packages.el	/^(defun spacemacs-bootstrap\/init-dotenv-mode ()$/;"	f
spacemacs-bootstrap/init-evil	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/packages.el	/^(defun spacemacs-bootstrap\/init-evil ()$/;"	f
spacemacs-bootstrap/init-evil-evilified-state	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/packages.el	/^(defun spacemacs-bootstrap\/init-evil-evilified-state ()$/;"	f
spacemacs-bootstrap/init-holy-mode	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/packages.el	/^(defun spacemacs-bootstrap\/init-holy-mode ()$/;"	f
spacemacs-bootstrap/init-hybrid-mode	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/packages.el	/^(defun spacemacs-bootstrap\/init-hybrid-mode ()$/;"	f
spacemacs-bootstrap/init-hydra	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/packages.el	/^(defun spacemacs-bootstrap\/init-hydra ()$/;"	f
spacemacs-bootstrap/init-pcre2el	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/packages.el	/^(defun spacemacs-bootstrap\/init-pcre2el ()$/;"	f
spacemacs-bootstrap/init-spacemacs-theme	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/packages.el	/^(defun spacemacs-bootstrap\/init-spacemacs-theme ()$/;"	f
spacemacs-bootstrap/init-use-package	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/packages.el	/^(defun spacemacs-bootstrap\/init-use-package ()$/;"	f
spacemacs-bootstrap/init-which-key	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/packages.el	/^(defun spacemacs-bootstrap\/init-which-key ()$/;"	f
spacemacs-bootstrap/init-which-key-posframe	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/packages.el	/^(defun spacemacs-bootstrap\/init-which-key-posframe ()$/;"	f
spacemacs-buffer--buttons-position	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defvar spacemacs-buffer--buttons-position nil$/;"	f
spacemacs-buffer--cache-file	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defconst spacemacs-buffer--cache-file$/;"	f
spacemacs-buffer--current-note-type	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defvar spacemacs-buffer--current-note-type nil$/;"	f
spacemacs-buffer--errors	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defvar spacemacs-buffer--errors nil$/;"	f
spacemacs-buffer--fresh-install	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defvar spacemacs-buffer--fresh-install$/;"	f
spacemacs-buffer--idle-numbers-timer	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defvar spacemacs-buffer--idle-numbers-timer nil$/;"	f
spacemacs-buffer--last-width	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defvar spacemacs-buffer--last-width nil$/;"	f
spacemacs-buffer--note-preview-nr-of-removed-lines	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defvar spacemacs-buffer--note-preview-nr-of-removed-lines nil$/;"	f
spacemacs-buffer--note-widgets	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defvar spacemacs-buffer--note-widgets nil$/;"	f
spacemacs-buffer--random-banner	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defvar spacemacs-buffer--random-banner nil$/;"	f
spacemacs-buffer--release-note-version	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defvar spacemacs-buffer--release-note-version nil$/;"	f
spacemacs-buffer--startup-list-nr	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defvar spacemacs-buffer--startup-list-nr 1)$/;"	f
spacemacs-buffer--startup-list-number	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defvar spacemacs-buffer--startup-list-number nil$/;"	f
spacemacs-buffer--warnings	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defvar spacemacs-buffer--warnings nil$/;"	f
spacemacs-buffer--window-width	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defconst spacemacs-buffer--window-width 80$/;"	f
spacemacs-buffer-buttons-startup-lists-offset	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defconst spacemacs-buffer-buttons-startup-lists-offset 25$/;"	f
spacemacs-buffer-list-separator	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defvar spacemacs-buffer-list-separator "\\n\\n")$/;"	f
spacemacs-buffer-logo-title	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defconst spacemacs-buffer-logo-title "[S P A C E M A C S]"$/;"	f
spacemacs-buffer-mode	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(define-derived-mode spacemacs-buffer-mode special-mode "Spacemacs buffer"$/;"	f
spacemacs-buffer-mode-map	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defvar spacemacs-buffer-mode-map$/;"	f
spacemacs-buffer-name	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defconst spacemacs-buffer-name "*spacemacs*"$/;"	f
spacemacs-buffer-note-preview-lines	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defvar spacemacs-buffer-note-preview-lines 5$/;"	f
spacemacs-buffer-startup-lists-length	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defvar spacemacs-buffer-startup-lists-length 20$/;"	f
spacemacs-buffer-version-info	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defconst spacemacs-buffer-version-info "0.999"$/;"	f
spacemacs-buffer//agenda-list	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/agenda-list ()$/;"	f
spacemacs-buffer//associate-to-project	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/associate-to-project (recent-file by-project)$/;"	f
spacemacs-buffer//banner-fit-height-size	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/banner-fit-height-size ()$/;"	f
spacemacs-buffer//center-line	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/center-line (&optional real-width)$/;"	f
spacemacs-buffer//center-startup-lists	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/center-startup-lists ()$/;"	f
spacemacs-buffer//choose-banner	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/choose-banner ()$/;"	f
spacemacs-buffer//choose-random-text-banner	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/choose-random-text-banner (&optional all)$/;"	f
spacemacs-buffer//do-insert-startupify-lists	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/do-insert-startupify-lists ()$/;"	f
spacemacs-buffer//get-banner-path	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/get-banner-path (index)$/;"	f
spacemacs-buffer//get-buffer-width	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/get-buffer-width ()$/;"	f
spacemacs-buffer//get-org-items	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/get-org-items (types)$/;"	f
spacemacs-buffer//if-note-preview-remove-rest-of-note	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/if-note-preview-remove-rest-of-note ()$/;"	f
spacemacs-buffer//inject-version	conf/emacs/.emacs.d/core/aprilfool/zemacs.el	/^(define-advice spacemacs-buffer\/\/inject-version$/;"	f
spacemacs-buffer//insert-agenda	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/insert-agenda (list-size)$/;"	f
spacemacs-buffer//insert-ascii-banner-centered	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/insert-ascii-banner-centered (file)$/;"	f
spacemacs-buffer//insert-bookmark-list	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/insert-bookmark-list (list-display-name list)$/;"	f
spacemacs-buffer//insert-bookmarks	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/insert-bookmarks (list-size)$/;"	f
spacemacs-buffer//insert-buttons	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/insert-buttons ()$/;"	f
spacemacs-buffer//insert-errors	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/insert-errors ()$/;"	f
spacemacs-buffer//insert-file-list	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/insert-file-list (list-display-name list)$/;"	f
spacemacs-buffer//insert-files-by-dir-list	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/insert-files-by-dir-list$/;"	f
spacemacs-buffer//insert-footer	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/insert-footer ()$/;"	f
spacemacs-buffer//insert-image-banner	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/insert-image-banner (banner)$/;"	f
spacemacs-buffer//insert-projects	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/insert-projects (list-size)$/;"	f
spacemacs-buffer//insert-recent-files	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/insert-recent-files (list-size)$/;"	f
spacemacs-buffer//insert-recent-files-by-project	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/insert-recent-files-by-project (list-size)$/;"	f
spacemacs-buffer//insert-string-list	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/insert-string-list (list-display-name list)$/;"	f
spacemacs-buffer//insert-todo-list	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/insert-todo-list (list-display-name list)$/;"	f
spacemacs-buffer//insert-todos	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/insert-todos (list-size)$/;"	f
spacemacs-buffer//insert-version	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/insert-version ()$/;"	f
spacemacs-buffer//insert-warnings	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/insert-warnings ()$/;"	f
spacemacs-buffer//make-org-item	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/make-org-item (file item)$/;"	f
spacemacs-buffer//make-org-items	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/make-org-items (file items)$/;"	f
spacemacs-buffer//mouse-1	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/mouse-1 (event)$/;"	f
spacemacs-buffer//note-removal-cleanup	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/note-removal-cleanup ()$/;"	f
spacemacs-buffer//notes-clear-notes-and-widgets	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/notes-clear-notes-and-widgets ()$/;"	f
spacemacs-buffer//notes-insert-note	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/notes-insert-note$/;"	f
spacemacs-buffer//notes-insert-quickhelp	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/notes-insert-quickhelp ()$/;"	f
spacemacs-buffer//notes-insert-release-note	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/notes-insert-release-note ()$/;"	f
spacemacs-buffer//notes-redisplay-current-note	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/notes-redisplay-current-note ()$/;"	f
spacemacs-buffer//notes-render-framed-line	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/notes-render-framed-line (line width hpadding)$/;"	f
spacemacs-buffer//notes-render-framed-text	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/notes-render-framed-text$/;"	f
spacemacs-buffer//org-jump	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/org-jump (el)$/;"	f
spacemacs-buffer//recent-files-by-project	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/recent-files-by-project ()$/;"	f
spacemacs-buffer//resize-on-hook	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/resize-on-hook ()$/;"	f
spacemacs-buffer//startup-hook	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/startup-hook ()$/;"	f
spacemacs-buffer//todo-list	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/todo-list ()$/;"	f
spacemacs-buffer//widget-text-note-beg-pos	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/\/widget-text-note-beg-pos ()$/;"	f
spacemacs-buffer/append	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/append (msg &optional messagebuf)$/;"	f
spacemacs-buffer/display-startup-note	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/display-startup-note ()$/;"	f
spacemacs-buffer/error	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/error (msg &rest args)$/;"	f
spacemacs-buffer/goto-buffer	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/goto-buffer (&optional refresh do-not-switch)$/;"	f
spacemacs-buffer/goto-link-line	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/goto-link-line ()$/;"	f
spacemacs-buffer/insert-banner-and-buttons	conf/emacs/.emacs.d/core/aprilfool/zemacs.el	/^(define-advice spacemacs-buffer\/insert-banner-and-buttons$/;"	f
spacemacs-buffer/insert-banner-and-buttons	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/insert-banner-and-buttons ()$/;"	f
spacemacs-buffer/insert-page-break	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/insert-page-break ()$/;"	f
spacemacs-buffer/insert-startup-lists	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/insert-startup-lists ()$/;"	f
spacemacs-buffer/jump-to-line-starting-with-nr-space	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/jump-to-line-starting-with-nr-space (nr-string)$/;"	f
spacemacs-buffer/jump-to-number-startup-list-line	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/jump-to-number-startup-list-line ()$/;"	f
spacemacs-buffer/message	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/message (msg &rest args)$/;"	f
spacemacs-buffer/refresh	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/refresh ()$/;"	f
spacemacs-buffer/replace-last-line	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/replace-last-line (msg &optional messagebuf)$/;"	f
spacemacs-buffer/return	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/return ()$/;"	f
spacemacs-buffer/set-mode-line	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/set-mode-line (format &optional redisplay)$/;"	f
spacemacs-buffer/stop-waiting-for-additional-numbers	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/stop-waiting-for-additional-numbers ()$/;"	f
spacemacs-buffer/toggle-note	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/toggle-note (type)$/;"	f
spacemacs-buffer/warning	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs-buffer\/warning (msg &rest args)$/;"	f
spacemacs-buffer||add-shortcut	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defmacro spacemacs-buffer||add-shortcut$/;"	f
spacemacs-buffer||notes-adapt-caption-to-width	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defmacro spacemacs-buffer||notes-adapt-caption-to-width (caption$/;"	f
spacemacs-buffer||propertize-heading	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defmacro spacemacs-buffer||propertize-heading (icon text shortcut-char)$/;"	f
spacemacs-cache-directory	conf/emacs/.emacs.d/core/core-load-paths.el	/^(defconst spacemacs-cache-directory$/;"	f
spacemacs-checkversion-branch	conf/emacs/.emacs.d/core/core-release-management.el	/^(defconst spacemacs-checkversion-branch "master"$/;"	f
spacemacs-checkversion-remote	conf/emacs/.emacs.d/core/core-release-management.el	/^(defconst spacemacs-checkversion-remote "checkversion"$/;"	f
spacemacs-completion/init-default-helm-config	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/packages.el	/^(defun spacemacs-completion\/init-default-helm-config ()$/;"	f
spacemacs-completion/init-default-ivy-config	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/packages.el	/^(defun spacemacs-completion\/init-default-ivy-config ()$/;"	f
spacemacs-completion/init-flx-ido	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/packages.el	/^(defun spacemacs-completion\/init-flx-ido ()$/;"	f
spacemacs-completion/init-ido	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/packages.el	/^(defun spacemacs-completion\/init-ido ()$/;"	f
spacemacs-completion/init-ido-vertical-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/packages.el	/^(defun spacemacs-completion\/init-ido-vertical-mode ()$/;"	f
spacemacs-core-directory	conf/emacs/.emacs.d/core/core-load-paths.el	/^(defconst spacemacs-core-directory$/;"	f
spacemacs-customization--current-group	conf/emacs/.emacs.d/core/core-customization.el	/^(defvar spacemacs-customization--current-group nil$/;"	f
spacemacs-customization-uncustomizable-groups	conf/emacs/.emacs.d/core/core-customization.el	/^(defconst spacemacs-customization-uncustomizable-groups$/;"	f
spacemacs-customization//create-layer-group	conf/emacs/.emacs.d/core/core-customization.el	/^(defun spacemacs-customization\/\/create-layer-group (layer-name category-name)$/;"	f
spacemacs-customization//get-variable-validator	conf/emacs/.emacs.d/core/core-customization.el	/^(defun spacemacs-customization\/\/get-variable-validator (var-symbol val)$/;"	f
spacemacs-customization//group-variables	conf/emacs/.emacs.d/core/core-customization.el	/^(defun spacemacs-customization\/\/group-variables (group-symbol)$/;"	f
spacemacs-customization//validate	conf/emacs/.emacs.d/core/core-customization.el	/^(defalias 'spacemacs-customization\/\/validate 'validate-value)$/;"	f
spacemacs-customization//validate-dotspacemacs-init-vars	conf/emacs/.emacs.d/core/core-customization.el	/^(defun spacemacs-customization\/\/validate-dotspacemacs-init-vars ()$/;"	f
spacemacs-customization//validate-dotspacemacs-layers-vars	conf/emacs/.emacs.d/core/core-customization.el	/^(defun spacemacs-customization\/\/validate-dotspacemacs-layers-vars ()$/;"	f
spacemacs-customization//validate-group-vars	conf/emacs/.emacs.d/core/core-customization.el	/^(defun spacemacs-customization\/\/validate-group-vars (group-symbol)$/;"	f
spacemacs-dark	conf/emacs/.emacs.d/core/libs/spacemacs-theme/spacemacs-dark-theme.el	/^(deftheme spacemacs-dark "Spacemacs theme, the dark version")$/;"	f
spacemacs-debug-timer-threshold	conf/emacs/.emacs.d/core/core-debug.el	/^(defvar spacemacs-debug-timer-threshold 0.15$/;"	f
spacemacs-debug-with-adv-timers	conf/emacs/.emacs.d/core/core-debug.el	/^(defvar spacemacs-debug-with-adv-timers nil)$/;"	f
spacemacs-debug-with-profile	conf/emacs/.emacs.d/core/core-debug.el	/^(defvar spacemacs-debug-with-profile nil)$/;"	f
spacemacs-debug-with-timed-requires	conf/emacs/.emacs.d/core/core-debug.el	/^(defvar spacemacs-debug-with-timed-requires nil)$/;"	f
spacemacs-debugp	conf/emacs/.emacs.d/core/core-debug.el	/^(defvar spacemacs-debugp nil)$/;"	f
spacemacs-default-company-backends	conf/emacs/.emacs.d/layers/+completion/auto-completion/config.el	/^(defvar spacemacs-default-company-backends$/;"	f
spacemacs-default-jump-handlers	conf/emacs/.emacs.d/core/core-jump.el	/^(defvar spacemacs-default-jump-handlers '()$/;"	f
spacemacs-default-map	conf/emacs/.emacs.d/core/core-keybindings.el	/^(defvar spacemacs-default-map (make-sparse-keymap)$/;"	f
spacemacs-defaults-packages	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defconst spacemacs-defaults-packages$/;"	f
spacemacs-defaults/init-abbrev	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-abbrev ()$/;"	f
spacemacs-defaults/init-archive-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-archive-mode ()$/;"	f
spacemacs-defaults/init-bookmark	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-bookmark ()$/;"	f
spacemacs-defaults/init-buffer-menu	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-buffer-menu ()$/;"	f
spacemacs-defaults/init-conf-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-conf-mode ()$/;"	f
spacemacs-defaults/init-cus-edit	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-cus-edit ()$/;"	f
spacemacs-defaults/init-dired	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-dired ()$/;"	f
spacemacs-defaults/init-dired-x	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-dired-x ()$/;"	f
spacemacs-defaults/init-display-line-numbers	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-display-line-numbers ()$/;"	f
spacemacs-defaults/init-ediff	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-ediff ()$/;"	f
spacemacs-defaults/init-eldoc	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-eldoc ()$/;"	f
spacemacs-defaults/init-electric-indent-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-electric-indent-mode ()$/;"	f
spacemacs-defaults/init-hi-lock	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-hi-lock ()$/;"	f
spacemacs-defaults/init-image-dired	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-image-dired ()$/;"	f
spacemacs-defaults/init-image-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-image-mode ()$/;"	f
spacemacs-defaults/init-imenu	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-imenu ()$/;"	f
spacemacs-defaults/init-package-menu	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-package-menu ()$/;"	f
spacemacs-defaults/init-page-break-lines	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-page-break-lines ()$/;"	f
spacemacs-defaults/init-proced	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-proced ()$/;"	f
spacemacs-defaults/init-process-menu	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-process-menu ()$/;"	f
spacemacs-defaults/init-quickrun	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-quickrun ()$/;"	f
spacemacs-defaults/init-recentf	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-recentf ()$/;"	f
spacemacs-defaults/init-savehist	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-savehist ()$/;"	f
spacemacs-defaults/init-saveplace	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-saveplace ()$/;"	f
spacemacs-defaults/init-subword	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-subword ()$/;"	f
spacemacs-defaults/init-tar-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-tar-mode ()$/;"	f
spacemacs-defaults/init-uniquify	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-uniquify ()$/;"	f
spacemacs-defaults/init-url	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-url ()$/;"	f
spacemacs-defaults/init-visual-line-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-visual-line-mode ()$/;"	f
spacemacs-defaults/init-whitespace	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-whitespace ()$/;"	f
spacemacs-defaults/init-winner	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-winner ()$/;"	f
spacemacs-defaults/init-xref	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-xref ()$/;"	f
spacemacs-defaults/init-zone	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/packages.el	/^(defun spacemacs-defaults\/init-zone ()$/;"	f
spacemacs-display-buffer-alist	conf/emacs/.emacs.d/layers/+completion/helm/config.el	/^(defvar spacemacs-display-buffer-alist nil)$/;"	f
spacemacs-docs-directory	conf/emacs/.emacs.d/core/core-load-paths.el	/^(defconst spacemacs-docs-directory$/;"	f
spacemacs-dotspacemacs-init	conf/emacs/.emacs.d/core/core-customization.el	/^(defgroup spacemacs-dotspacemacs-init nil$/;"	f
spacemacs-dotspacemacs-layers	conf/emacs/.emacs.d/core/core-customization.el	/^(defgroup spacemacs-dotspacemacs-layers nil$/;"	f
spacemacs-dump-buffer-name	conf/emacs/.emacs.d/core/core-dumper.el	/^(defconst spacemacs-dump-buffer-name "*spacemacs-dumper*")$/;"	f
spacemacs-dump-delayed-functions	conf/emacs/.emacs.d/core/core-dumper.el	/^(defvar spacemacs-dump-delayed-functions '()$/;"	f
spacemacs-dump-directory	conf/emacs/.emacs.d/core/core-dumper.el	/^(defconst spacemacs-dump-directory$/;"	f
spacemacs-dump-load-path	conf/emacs/.emacs.d/core/core-dumper.el	/^(defvar spacemacs-dump-load-path nil$/;"	f
spacemacs-dump-mode	conf/emacs/.emacs.d/core/core-dumper.el	/^(defvar spacemacs-dump-mode 'not-dumped$/;"	f
spacemacs-dump-process	conf/emacs/.emacs.d/core/core-dumper.el	/^(defvar spacemacs-dump-process nil$/;"	f
spacemacs-dump-spinner	conf/emacs/.emacs.d/core/core-dumper.el	/^(defvar spacemacs-dump-spinner nil$/;"	f
spacemacs-editing-packages	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defconst spacemacs-editing-packages$/;"	f
spacemacs-editing-visual-packages	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing-visual/packages.el	/^(defconst spacemacs-editing-visual-packages$/;"	f
spacemacs-editing-visual/init-column-enforce-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing-visual/packages.el	/^(defun spacemacs-editing-visual\/init-column-enforce-mode ()$/;"	f
spacemacs-editing-visual/init-hide-comnt	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing-visual/packages.el	/^(defun spacemacs-editing-visual\/init-hide-comnt ()$/;"	f
spacemacs-editing-visual/init-highlight-indentation	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing-visual/packages.el	/^(defun spacemacs-editing-visual\/init-highlight-indentation ()$/;"	f
spacemacs-editing-visual/init-highlight-numbers	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing-visual/packages.el	/^(defun spacemacs-editing-visual\/init-highlight-numbers ()$/;"	f
spacemacs-editing-visual/init-highlight-parentheses	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing-visual/packages.el	/^(defun spacemacs-editing-visual\/init-highlight-parentheses ()$/;"	f
spacemacs-editing-visual/init-indent-guide	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing-visual/packages.el	/^(defun spacemacs-editing-visual\/init-indent-guide ()$/;"	f
spacemacs-editing-visual/init-rainbow-delimiters	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing-visual/packages.el	/^(defun spacemacs-editing-visual\/init-rainbow-delimiters ()$/;"	f
spacemacs-editing-visual/init-term-cursor	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing-visual/packages.el	/^(defun spacemacs-editing-visual\/init-term-cursor ()$/;"	f
spacemacs-editing-visual/init-volatile-highlights	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing-visual/packages.el	/^(defun spacemacs-editing-visual\/init-volatile-highlights ()$/;"	f
spacemacs-editing-visual/init-writeroom-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing-visual/packages.el	/^(defun spacemacs-editing-visual\/init-writeroom-mode ()$/;"	f
spacemacs-editing/init-aggressive-indent	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-aggressive-indent ()$/;"	f
spacemacs-editing/init-avy	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-avy ()$/;"	f
spacemacs-editing/init-clean-aindent-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-clean-aindent-mode ()$/;"	f
spacemacs-editing/init-dired-quick-sort	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-dired-quick-sort ()$/;"	f
spacemacs-editing/init-drag-stuff	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-drag-stuff ()$/;"	f
spacemacs-editing/init-editorconfig	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-editorconfig ()$/;"	f
spacemacs-editing/init-eval-sexp-fu	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-eval-sexp-fu ()$/;"	f
spacemacs-editing/init-evil-easymotion	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-evil-easymotion ()$/;"	f
spacemacs-editing/init-evil-swap-keys	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-evil-swap-keys ()$/;"	f
spacemacs-editing/init-evil-vimish-fold	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-evil-vimish-fold ()$/;"	f
spacemacs-editing/init-expand-region	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-expand-region ()$/;"	f
spacemacs-editing/init-hexl	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-hexl ()$/;"	f
spacemacs-editing/init-hungry-delete	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-hungry-delete ()$/;"	f
spacemacs-editing/init-link-hint	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-link-hint ()$/;"	f
spacemacs-editing/init-lorem-ipsum	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-lorem-ipsum ()$/;"	f
spacemacs-editing/init-multi-line	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-multi-line ()$/;"	f
spacemacs-editing/init-origami	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-origami ()$/;"	f
spacemacs-editing/init-password-generator	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-password-generator ()$/;"	f
spacemacs-editing/init-persistent-scratch	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-persistent-scratch ()$/;"	f
spacemacs-editing/init-smartparens	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-smartparens ()$/;"	f
spacemacs-editing/init-spacemacs-whitespace-cleanup	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-spacemacs-whitespace-cleanup ()$/;"	f
spacemacs-editing/init-string-edit-at-point	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-string-edit-at-point ()$/;"	f
spacemacs-editing/init-string-inflection	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-string-inflection ()$/;"	f
spacemacs-editing/init-undo-fu	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-undo-fu ()$/;"	f
spacemacs-editing/init-undo-fu-session	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-undo-fu-session ()$/;"	f
spacemacs-editing/init-undo-tree	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-undo-tree ()$/;"	f
spacemacs-editing/init-unkillable-scratch	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-unkillable-scratch ()$/;"	f
spacemacs-editing/init-uuidgen	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-uuidgen ()$/;"	f
spacemacs-editing/init-vimish-fold	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-vimish-fold ()$/;"	f
spacemacs-editing/init-vundo	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-vundo ()$/;"	f
spacemacs-editing/init-wgrep	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-wgrep ()$/;"	f
spacemacs-editing/init-ws-butler	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/init-ws-butler ()$/;"	f
spacemacs-editing/post-init-pcre2el	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/post-init-pcre2el ()$/;"	f
spacemacs-editing/pre-init-evil-collection	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/packages.el	/^(defun spacemacs-editing\/pre-init-evil-collection ()$/;"	f
spacemacs-emacs-min-version	conf/emacs/.emacs.d/core/core-versions.el	/^(defconst spacemacs-emacs-min-version   "28.2" "Minimal version of Emacs.")$/;"	f
spacemacs-env-vars-file	conf/emacs/.emacs.d/core/core-env.el	/^(defvar spacemacs-env-vars-file$/;"	f
spacemacs-evil-collection-allowed-list	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/config.el	/^(defvar spacemacs-evil-collection-allowed-list '(dired ediff eww quickrun replace simple)$/;"	f
spacemacs-evil-cursors	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/config.el	/^(defvar spacemacs-evil-cursors '(("normal" "DarkGoldenrod2" box)$/;"	f
spacemacs-evil/init-evil-anzu	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/packages.el	/^(defun spacemacs-evil\/init-evil-anzu ()$/;"	f
spacemacs-evil/init-evil-args	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/packages.el	/^(defun spacemacs-evil\/init-evil-args ()$/;"	f
spacemacs-evil/init-evil-cleverparens	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/packages.el	/^(defun spacemacs-evil\/init-evil-cleverparens ()$/;"	f
spacemacs-evil/init-evil-collection	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/packages.el	/^(defun spacemacs-evil\/init-evil-collection ()$/;"	f
spacemacs-evil/init-evil-ediff	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/packages.el	/^(defun spacemacs-evil\/init-evil-ediff ()$/;"	f
spacemacs-evil/init-evil-escape	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/packages.el	/^(defun spacemacs-evil\/init-evil-escape ()$/;"	f
spacemacs-evil/init-evil-exchange	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/packages.el	/^(defun spacemacs-evil\/init-evil-exchange ()$/;"	f
spacemacs-evil/init-evil-goggles	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/packages.el	/^(defun spacemacs-evil\/init-evil-goggles ()$/;"	f
spacemacs-evil/init-evil-iedit-state	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/packages.el	/^(defun spacemacs-evil\/init-evil-iedit-state ()$/;"	f
spacemacs-evil/init-evil-indent-plus	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/packages.el	/^(defun spacemacs-evil\/init-evil-indent-plus ()$/;"	f
spacemacs-evil/init-evil-lion	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/packages.el	/^(defun spacemacs-evil\/init-evil-lion ()$/;"	f
spacemacs-evil/init-evil-lisp-state	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/packages.el	/^(defun spacemacs-evil\/init-evil-lisp-state ()$/;"	f
spacemacs-evil/init-evil-matchit	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/packages.el	/^(defun spacemacs-evil\/init-evil-matchit ()$/;"	f
spacemacs-evil/init-evil-nerd-commenter	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/packages.el	/^(defun spacemacs-evil\/init-evil-nerd-commenter ()$/;"	f
spacemacs-evil/init-evil-numbers	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/packages.el	/^(defun spacemacs-evil\/init-evil-numbers ()$/;"	f
spacemacs-evil/init-evil-surround	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/packages.el	/^(defun spacemacs-evil\/init-evil-surround ()$/;"	f
spacemacs-evil/init-evil-textobj-line	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/packages.el	/^(defun spacemacs-evil\/init-evil-textobj-line ()$/;"	f
spacemacs-evil/init-evil-tutor	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/packages.el	/^(defun spacemacs-evil\/init-evil-tutor ()$/;"	f
spacemacs-evil/init-evil-unimpaired	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/packages.el	/^(defun spacemacs-evil\/init-evil-unimpaired ()$/;"	f
spacemacs-evil/init-evil-visual-mark-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/packages.el	/^(defun spacemacs-evil\/init-evil-visual-mark-mode ()$/;"	f
spacemacs-evil/init-evil-visualstar	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/packages.el	/^(defun spacemacs-evil\/init-evil-visualstar ()$/;"	f
spacemacs-evil/init-hs-minor-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/packages.el	/^(defun spacemacs-evil\/init-hs-minor-mode ()$/;"	f
spacemacs-evil/init-vi-tilde-fringe	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/packages.el	/^(defun spacemacs-evil\/init-vi-tilde-fringe ()$/;"	f
spacemacs-evil/post-init-eldoc	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/packages.el	/^(defun spacemacs-evil\/post-init-eldoc ()$/;"	f
spacemacs-force-dump	conf/emacs/.emacs.d/core/core-command-line.el	/^(defvar spacemacs-force-dump nil$/;"	f
spacemacs-force-resume-layouts	conf/emacs/.emacs.d/core/core-command-line.el	/^(defvar spacemacs-force-resume-layouts nil$/;"	f
spacemacs-games-cache-directory	conf/emacs/.emacs.d/layers/+fun/games/config.el	/^(defvar spacemacs-games-cache-directory$/;"	f
spacemacs-generic-layout-names	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/config.el	/^(defvar spacemacs-generic-layout-names$/;"	f
spacemacs-gplv3-official-png	conf/emacs/.emacs.d/core/core-load-paths.el	/^(defconst spacemacs-gplv3-official-png$/;"	f
spacemacs-haskell//dante-insert-type	conf/emacs/.emacs.d/layers/+lang/haskell/funcs.el	/^(defun spacemacs-haskell\/\/dante-insert-type ()$/;"	f
spacemacs-haskell//disable-electric-indent	conf/emacs/.emacs.d/layers/+lang/haskell/funcs.el	/^(defun spacemacs-haskell\/\/disable-electric-indent ()$/;"	f
spacemacs-haskell//setup-backend	conf/emacs/.emacs.d/layers/+lang/haskell/funcs.el	/^(defun spacemacs-haskell\/\/setup-backend ()$/;"	f
spacemacs-haskell//setup-company	conf/emacs/.emacs.d/layers/+lang/haskell/funcs.el	/^(defun spacemacs-haskell\/\/setup-company ()$/;"	f
spacemacs-haskell//setup-dante	conf/emacs/.emacs.d/layers/+lang/haskell/funcs.el	/^(defun spacemacs-haskell\/\/setup-dante ()$/;"	f
spacemacs-haskell//setup-dante-company	conf/emacs/.emacs.d/layers/+lang/haskell/funcs.el	/^(defun spacemacs-haskell\/\/setup-dante-company ()$/;"	f
spacemacs-haskell//setup-lsp	conf/emacs/.emacs.d/layers/+lang/haskell/funcs.el	/^(defun spacemacs-haskell\/\/setup-lsp ()$/;"	f
spacemacs-helm-display-buffer-regexp	conf/emacs/.emacs.d/layers/+completion/helm/config.el	/^(defvar spacemacs-helm-display-buffer-regexp$/;"	f
spacemacs-helm-display-help-buffer-regexp	conf/emacs/.emacs.d/layers/+completion/helm/config.el	/^(defvar spacemacs-helm-display-help-buffer-regexp '("*.*Helm.*Help.**"))$/;"	f
spacemacs-helm-navigation-ts-face	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/config.el	/^(defface spacemacs-helm-navigation-ts-face$/;"	f
spacemacs-helm-rg-max-column-number	conf/emacs/.emacs.d/layers/+completion/helm/config.el	/^(defvar spacemacs-helm-rg-max-column-number 512$/;"	f
spacemacs-ht-contains?	conf/emacs/.emacs.d/core/libs/forks/spacemacs-ht.el	/^(define-inline spacemacs-ht-contains? (table key)$/;"	f
spacemacs-ht-create	conf/emacs/.emacs.d/core/libs/forks/spacemacs-ht.el	/^(define-inline spacemacs-ht-create (&optional test)$/;"	f
spacemacs-ht-get	conf/emacs/.emacs.d/core/libs/forks/spacemacs-ht.el	/^(define-inline spacemacs-ht-get (table key &optional default)$/;"	f
spacemacs-ht-keys	conf/emacs/.emacs.d/core/libs/forks/spacemacs-ht.el	/^(defun spacemacs-ht-keys (table)$/;"	f
spacemacs-ht-map	conf/emacs/.emacs.d/core/libs/forks/spacemacs-ht.el	/^(defun spacemacs-ht-map (function table)$/;"	f
spacemacs-ht-set!	conf/emacs/.emacs.d/core/libs/forks/spacemacs-ht.el	/^(define-inline spacemacs-ht-set! (table key value)$/;"	f
spacemacs-ignored-environment-variables	conf/emacs/.emacs.d/core/core-env.el	/^(defvar spacemacs-ignored-environment-variables$/;"	f
spacemacs-indent-sensitive-modes	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defcustom spacemacs-indent-sensitive-modes$/;"	f
spacemacs-info-directory	conf/emacs/.emacs.d/core/core-load-paths.el	/^(defconst spacemacs-info-directory$/;"	f
spacemacs-initialized	conf/emacs/.emacs.d/core/core-spacemacs.el	/^(defvar spacemacs-initialized nil$/;"	f
spacemacs-is-dumping-p	conf/emacs/.emacs.d/core/core-dumper.el	/^(defun spacemacs-is-dumping-p ()$/;"	f
spacemacs-jump-handlers	conf/emacs/.emacs.d/core/core-jump.el	/^(defvar-local spacemacs-jump-handlers '()$/;"	f
spacemacs-keep-legacy-current-buffer-delete-bindings	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defcustom spacemacs-keep-legacy-current-buffer-delete-bindings t$/;"	f
spacemacs-language/init-define-word	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-language/packages.el	/^(defun spacemacs-language\/init-define-word ()$/;"	f
spacemacs-language/init-google-translate	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-language/packages.el	/^(defun spacemacs-language\/init-google-translate ()$/;"	f
spacemacs-large-file-modes-list	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defcustom spacemacs-large-file-modes-list$/;"	f
spacemacs-layers	conf/emacs/.emacs.d/core/core-customization.el	/^(defgroup spacemacs-layers nil$/;"	f
spacemacs-layouts-directory	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/config.el	/^(defvar spacemacs-layouts-directory$/;"	f
spacemacs-layouts-packages	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/packages.el	/^(defconst spacemacs-layouts-packages$/;"	f
spacemacs-layouts-restrict-spc-tab	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/config.el	/^(defvar spacemacs-layouts-restrict-spc-tab nil$/;"	f
spacemacs-layouts//advice-with-persp-buffer-list	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs-layouts\/\/advice-with-persp-buffer-list (orig-fun &rest args)$/;"	f
spacemacs-layouts/init-eyebrowse	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/packages.el	/^(defun spacemacs-layouts\/init-eyebrowse ()$/;"	f
spacemacs-layouts/init-persp-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/packages.el	/^(defun spacemacs-layouts\/init-persp-mode ()$/;"	f
spacemacs-layouts/non-restricted-buffer-list-helm	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs-layouts\/non-restricted-buffer-list-helm ()$/;"	f
spacemacs-layouts/non-restricted-buffer-list-ivy	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs-layouts\/non-restricted-buffer-list-ivy ()$/;"	f
spacemacs-layouts/post-init-consult	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/packages.el	/^(defun spacemacs-layouts\/post-init-consult ()$/;"	f
spacemacs-layouts/post-init-counsel-projectile	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/packages.el	/^(defun spacemacs-layouts\/post-init-counsel-projectile ()$/;"	f
spacemacs-layouts/post-init-helm	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/packages.el	/^(defun spacemacs-layouts\/post-init-helm ()$/;"	f
spacemacs-layouts/post-init-ivy	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/packages.el	/^(defun spacemacs-layouts\/post-init-ivy ()$/;"	f
spacemacs-layouts/post-init-spaceline	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/packages.el	/^(defun spacemacs-layouts\/post-init-spaceline ()$/;"	f
spacemacs-layouts/post-init-winner	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/packages.el	/^(defun spacemacs-layouts\/post-init-winner ()$/;"	f
spacemacs-light	conf/emacs/.emacs.d/core/libs/spacemacs-theme/spacemacs-light-theme.el	/^(deftheme spacemacs-light "Spacemacs theme, the light version")$/;"	f
spacemacs-loading-char	conf/emacs/.emacs.d/core/core-progress-bar.el	/^(defvar spacemacs-loading-char ?█)$/;"	f
spacemacs-loading-char-light	conf/emacs/.emacs.d/core/core-progress-bar.el	/^(defvar spacemacs-loading-char-light ?░)$/;"	f
spacemacs-loading-counter	conf/emacs/.emacs.d/core/core-progress-bar.el	/^(defvar spacemacs-loading-counter 0)$/;"	f
spacemacs-loading-dots-chunk-count	conf/emacs/.emacs.d/core/core-progress-bar.el	/^(defvar spacemacs-loading-dots-chunk-count 5)$/;"	f
spacemacs-loading-dots-chunk-size	conf/emacs/.emacs.d/core/core-progress-bar.el	/^(defvar spacemacs-loading-dots-chunk-size 0)$/;"	f
spacemacs-loading-dots-chunk-threshold	conf/emacs/.emacs.d/core/core-progress-bar.el	/^(defvar spacemacs-loading-dots-chunk-threshold 0)$/;"	f
spacemacs-loading-dots-count	conf/emacs/.emacs.d/core/core-progress-bar.el	/^(defvar spacemacs-loading-dots-count 0)$/;"	f
spacemacs-loading-string	conf/emacs/.emacs.d/core/core-progress-bar.el	/^(defvar spacemacs-loading-string "")$/;"	f
spacemacs-loading-value	conf/emacs/.emacs.d/core/core-progress-bar.el	/^(defvar spacemacs-loading-value 0)$/;"	f
spacemacs-misc/init-devdocs	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-misc/packages.el	/^(defun spacemacs-misc\/init-devdocs ()$/;"	f
spacemacs-misc/init-dumb-jump	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-misc/packages.el	/^(defun spacemacs-misc\/init-dumb-jump ()$/;"	f
spacemacs-misc/init-request	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-misc/packages.el	/^(defun spacemacs-misc\/init-request ()$/;"	f
spacemacs-modeline/init-doom-modeline	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/packages.el	/^(defun spacemacs-modeline\/init-doom-modeline ()$/;"	f
spacemacs-modeline/init-fancy-battery	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/packages.el	/^(defun spacemacs-modeline\/init-fancy-battery ()$/;"	f
spacemacs-modeline/init-spaceline	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/packages.el	/^(defun spacemacs-modeline\/init-spaceline ()$/;"	f
spacemacs-modeline/init-spaceline-all-the-icons	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/packages.el	/^(defun spacemacs-modeline\/init-spaceline-all-the-icons ()$/;"	f
spacemacs-modeline/init-symon	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/packages.el	/^(defun spacemacs-modeline\/init-symon ()$/;"	f
spacemacs-modeline/init-vim-powerline	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/packages.el	/^(defun spacemacs-modeline\/init-vim-powerline ()$/;"	f
spacemacs-modeline/pre-init-spaceline-all-the-icons	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/packages.el	/^(defun spacemacs-modeline\/pre-init-spaceline-all-the-icons ()$/;"	f
spacemacs-navigation/init-ace-link	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/packages.el	/^(defun spacemacs-navigation\/init-ace-link ()$/;"	f
spacemacs-navigation/init-ace-window	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/packages.el	/^(defun spacemacs-navigation\/init-ace-window ()$/;"	f
spacemacs-navigation/init-auto-highlight-symbol	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/packages.el	/^(defun spacemacs-navigation\/init-auto-highlight-symbol ()$/;"	f
spacemacs-navigation/init-centered-cursor-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/packages.el	/^(defun spacemacs-navigation\/init-centered-cursor-mode ()$/;"	f
spacemacs-navigation/init-compile	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/packages.el	/^(defun spacemacs-navigation\/init-compile ()$/;"	f
spacemacs-navigation/init-disable-mouse	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/packages.el	/^(defun spacemacs-navigation\/init-disable-mouse ()$/;"	f
spacemacs-navigation/init-doc-view	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/packages.el	/^(defun spacemacs-navigation\/init-doc-view ()$/;"	f
spacemacs-navigation/init-golden-ratio	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/packages.el	/^(defun spacemacs-navigation\/init-golden-ratio ()$/;"	f
spacemacs-navigation/init-grep	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/packages.el	/^(defun spacemacs-navigation\/init-grep ()$/;"	f
spacemacs-navigation/init-info+	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/packages.el	/^(defun spacemacs-navigation\/init-info+ ()$/;"	f
spacemacs-navigation/init-open-junk-file	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/packages.el	/^(defun spacemacs-navigation\/init-open-junk-file ()$/;"	f
spacemacs-navigation/init-paradox	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/packages.el	/^(defun spacemacs-navigation\/init-paradox ()$/;"	f
spacemacs-navigation/init-restart-emacs	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/packages.el	/^(defun spacemacs-navigation\/init-restart-emacs ()$/;"	f
spacemacs-navigation/init-smooth-scrolling	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/packages.el	/^(defun spacemacs-navigation\/init-smooth-scrolling ()$/;"	f
spacemacs-navigation/init-symbol-overlay	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/packages.el	/^(defun spacemacs-navigation\/init-symbol-overlay ()$/;"	f
spacemacs-navigation/init-view	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/packages.el	/^(defun spacemacs-navigation\/init-view ()$/;"	f
spacemacs-navigation/init-winum	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/packages.el	/^(defun spacemacs-navigation\/init-winum ()$/;"	f
spacemacs-new-version	conf/emacs/.emacs.d/core/core-release-management.el	/^(defvar spacemacs-new-version nil$/;"	f
spacemacs-news-directory	conf/emacs/.emacs.d/core/core-load-paths.el	/^(defconst spacemacs-news-directory$/;"	f
spacemacs-org-packages	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/packages.el	/^(defconst spacemacs-org-packages$/;"	f
spacemacs-org/init-default-org-config	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/packages.el	/^(defun spacemacs-org\/init-default-org-config ()$/;"	f
spacemacs-org/init-org-superstar	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/packages.el	/^(defun spacemacs-org\/init-org-superstar ()$/;"	f
spacemacs-org/init-space-doc	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/packages.el	/^(defun spacemacs-org\/init-space-doc ()$/;"	f
spacemacs-org/init-toc-org	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/packages.el	/^(defun spacemacs-org\/init-toc-org ()$/;"	f
spacemacs-org/post-init-flyspell	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/packages.el	/^(defun spacemacs-org\/post-init-flyspell ()$/;"	f
spacemacs-popwin--last-buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/config.el	/^(defvar spacemacs-popwin--last-buffer nil$/;"	f
spacemacs-post-theme-change-hook	conf/emacs/.emacs.d/core/core-themes-support.el	/^(defvar spacemacs-post-theme-change-hook nil$/;"	f
spacemacs-post-user-config-hook	conf/emacs/.emacs.d/core/core-spacemacs.el	/^(defvar spacemacs-post-user-config-hook nil$/;"	f
spacemacs-post-user-config-hook-run	conf/emacs/.emacs.d/core/core-spacemacs.el	/^(defvar spacemacs-post-user-config-hook-run nil$/;"	f
spacemacs-private-directory	conf/emacs/.emacs.d/core/core-load-paths.el	/^(defconst spacemacs-private-directory$/;"	f
spacemacs-project-packages	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-project/packages.el	/^(defconst spacemacs-project-packages$/;"	f
spacemacs-project/init-projectile	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-project/packages.el	/^(defun spacemacs-project\/init-projectile ()$/;"	f
spacemacs-purpose/init-helm-purpose	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/packages.el	/^(defun spacemacs-purpose\/init-helm-purpose ()$/;"	f
spacemacs-purpose/init-ivy-purpose	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/packages.el	/^(defun spacemacs-purpose\/init-ivy-purpose ()$/;"	f
spacemacs-purpose/init-spacemacs-purpose-popwin	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/packages.el	/^(defun spacemacs-purpose\/init-spacemacs-purpose-popwin ()$/;"	f
spacemacs-purpose/init-window-purpose	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/packages.el	/^(defun spacemacs-purpose\/init-window-purpose ()$/;"	f
spacemacs-purpose/pre-init-eyebrowse	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/packages.el	/^(defun spacemacs-purpose\/pre-init-eyebrowse ()$/;"	f
spacemacs-purpose/pre-init-popwin	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/packages.el	/^(defun spacemacs-purpose\/pre-init-popwin ()$/;"	f
spacemacs-purpose/pre-init-spacemacs-purpose-popwin	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/packages.el	/^(defun spacemacs-purpose\/pre-init-spacemacs-purpose-popwin ()$/;"	f
spacemacs-really-kill-emacs	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defvar spacemacs-really-kill-emacs nil$/;"	f
spacemacs-release-notes-directory	conf/emacs/.emacs.d/core/core-load-paths.el	/^(defconst spacemacs-release-notes-directory$/;"	f
spacemacs-repl-list	conf/emacs/.emacs.d/core/core-funcs.el	/^(defvar spacemacs-repl-list '()$/;"	f
spacemacs-repository	conf/emacs/.emacs.d/core/core-release-management.el	/^(defconst spacemacs-repository "spacemacs"$/;"	f
spacemacs-repository-owner	conf/emacs/.emacs.d/core/core-release-management.el	/^(defconst spacemacs-repository-owner "syl20bnr"$/;"	f
spacemacs-revision--changed-hook	conf/emacs/.emacs.d/core/core-release-management.el	/^(defvar spacemacs-revision--changed-hook nil$/;"	f
spacemacs-revision--file	conf/emacs/.emacs.d/core/core-release-management.el	/^(defvar spacemacs-revision--file$/;"	f
spacemacs-revision--last	conf/emacs/.emacs.d/core/core-release-management.el	/^(defvar spacemacs-revision--last nil$/;"	f
spacemacs-run-from-dump-p	conf/emacs/.emacs.d/core/core-dumper.el	/^(defun spacemacs-run-from-dump-p ()$/;"	f
spacemacs-scratch-mode-hook	conf/emacs/.emacs.d/core/core-spacemacs.el	/^(defvar spacemacs-scratch-mode-hook nil$/;"	f
spacemacs-space-doc-modificators	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(defcustom spacemacs-space-doc-modificators$/;"	f
spacemacs-space-doc-modificators-functions	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(defvar spacemacs-space-doc-modificators-functions$/;"	f
spacemacs-spaceline-additional-segments	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/config.el	/^(defcustom spacemacs-spaceline-additional-segments$/;"	f
spacemacs-start-directory	conf/emacs/.emacs.d/core/core-load-paths.el	/^(defvar spacemacs-start-directory$/;"	f
spacemacs-sync-packages	conf/emacs/.emacs.d/core/core-command-line.el	/^(defvar spacemacs-sync-packages t$/;"	f
spacemacs-test-directory	conf/emacs/.emacs.d/core/core-load-paths.el	/^(defconst spacemacs-test-directory$/;"	f
spacemacs-theme	conf/emacs/.emacs.d/core/libs/spacemacs-theme/spacemacs-theme.el	/^(defgroup spacemacs-theme nil$/;"	f
spacemacs-theme-comment-bg	conf/emacs/.emacs.d/core/libs/spacemacs-theme/spacemacs-theme.el	/^(defcustom spacemacs-theme-comment-bg t$/;"	f
spacemacs-theme-comment-italic	conf/emacs/.emacs.d/core/libs/spacemacs-theme/spacemacs-theme.el	/^(defcustom spacemacs-theme-comment-italic nil$/;"	f
spacemacs-theme-custom-colors	conf/emacs/.emacs.d/core/libs/spacemacs-theme/spacemacs-theme.el	/^(defcustom spacemacs-theme-custom-colors nil$/;"	f
spacemacs-theme-keyword-italic	conf/emacs/.emacs.d/core/libs/spacemacs-theme/spacemacs-theme.el	/^(defcustom spacemacs-theme-keyword-italic nil$/;"	f
spacemacs-theme-name-to-package	conf/emacs/.emacs.d/core/core-themes-support.el	/^(defconst spacemacs-theme-name-to-package$/;"	f
spacemacs-theme-org-agenda-height	conf/emacs/.emacs.d/core/libs/spacemacs-theme/spacemacs-theme.el	/^(defcustom spacemacs-theme-org-agenda-height nil$/;"	f
spacemacs-theme-org-bold	conf/emacs/.emacs.d/core/libs/spacemacs-theme/spacemacs-theme.el	/^(defcustom spacemacs-theme-org-bold t$/;"	f
spacemacs-theme-org-height	conf/emacs/.emacs.d/core/libs/spacemacs-theme/spacemacs-theme.el	/^(defcustom spacemacs-theme-org-height t$/;"	f
spacemacs-theme-org-highlight	conf/emacs/.emacs.d/core/libs/spacemacs-theme/spacemacs-theme.el	/^(defcustom spacemacs-theme-org-highlight nil$/;"	f
spacemacs-theme-org-priority-bold	conf/emacs/.emacs.d/core/libs/spacemacs-theme/spacemacs-theme.el	/^(defcustom spacemacs-theme-org-priority-bold t$/;"	f
spacemacs-theme-underline-parens	conf/emacs/.emacs.d/core/libs/spacemacs-theme/spacemacs-theme.el	/^(defcustom spacemacs-theme-underline-parens t$/;"	f
spacemacs-toggles	conf/emacs/.emacs.d/core/core-toggle.el	/^(defvar spacemacs-toggles '()$/;"	f
spacemacs-transient-state-title-face	conf/emacs/.emacs.d/core/core-transient-state.el	/^(defface spacemacs-transient-state-title-face$/;"	f
spacemacs-tree-sitter-hl-black-list	conf/emacs/.emacs.d/layers/+tools/tree-sitter/config.el	/^(defvar spacemacs-tree-sitter-hl-black-list nil$/;"	f
spacemacs-useful-buffers-regexp	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/config.el	/^(defvar spacemacs-useful-buffers-regexp '()$/;"	f
spacemacs-useless-buffers-regexp	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/config.el	/^(defvar spacemacs-useless-buffers-regexp '()$/;"	f
spacemacs-version	conf/emacs/.emacs.d/core/core-release-management.el	/^(defvar spacemacs-version)$/;"	f
spacemacs-version	conf/emacs/.emacs.d/core/core-versions.el	/^(defconst spacemacs-version          "0.999.0" "Spacemacs version.")$/;"	f
spacemacs-version--check-timer	conf/emacs/.emacs.d/core/core-release-management.el	/^(defvar spacemacs-version--check-timer nil$/;"	f
spacemacs-version--last-startup-check-file	conf/emacs/.emacs.d/core/core-release-management.el	/^(defvar spacemacs-version--last-startup-check-file$/;"	f
spacemacs-version--last-startup-check-time	conf/emacs/.emacs.d/core/core-release-management.el	/^(defvar spacemacs-version--last-startup-check-time nil$/;"	f
spacemacs-version--startup-check-interval	conf/emacs/.emacs.d/core/core-release-management.el	/^(defvar spacemacs-version--startup-check-interval (* 3600 24)$/;"	f
spacemacs-version-check-interval	conf/emacs/.emacs.d/core/core-release-management.el	/^(defvar spacemacs-version-check-interval nil$/;"	f
spacemacs-version-check-lighter	conf/emacs/.emacs.d/core/core-release-management.el	/^(defvar spacemacs-version-check-lighter "[+]"$/;"	f
spacemacs-visual//compilation-buffer-apply-ansi-colors	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/funcs.el	/^(defun spacemacs-visual\/\/compilation-buffer-apply-ansi-colors ()$/;"	f
spacemacs-visual/init-all-the-icons	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/packages.el	/^(defun spacemacs-visual\/init-all-the-icons ()$/;"	f
spacemacs-visual/init-ansi-colors	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/packages.el	/^(defun spacemacs-visual\/init-ansi-colors ()$/;"	f
spacemacs-visual/init-desktop	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/packages.el	/^(defun spacemacs-visual\/init-desktop ()$/;"	f
spacemacs-visual/init-display-fill-column-indicator	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/packages.el	/^(defun spacemacs-visual\/init-display-fill-column-indicator ()$/;"	f
spacemacs-visual/init-fill-column-indicator	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/packages.el	/^(defun spacemacs-visual\/init-fill-column-indicator ()$/;"	f
spacemacs-visual/init-hl-todo	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/packages.el	/^(defun spacemacs-visual\/init-hl-todo ()$/;"	f
spacemacs-visual/init-popup	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/packages.el	/^(defun spacemacs-visual\/init-popup ())$/;"	f
spacemacs-visual/init-popwin	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/packages.el	/^(defun spacemacs-visual\/init-popwin ()$/;"	f
spacemacs-visual/init-posframe	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/packages.el	/^(defun spacemacs-visual\/init-posframe ()$/;"	f
spacemacs-visual/init-zoom-frm	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/packages.el	/^(defun spacemacs-visual\/init-zoom-frm ()$/;"	f
spacemacs-vterm-history-file-location	conf/emacs/.emacs.d/layers/+tools/shell/config.el	/^(defvar spacemacs-vterm-history-file-location nil$/;"	f
spacemacs-whitespace-cleanup-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/local/spacemacs-whitespace-cleanup/spacemacs-whitespace-cleanup.el	/^(define-minor-mode spacemacs-whitespace-cleanup-mode$/;"	f
spacemacs-whitespace-cleanup/clean-up	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/local/spacemacs-whitespace-cleanup/spacemacs-whitespace-cleanup.el	/^(defun spacemacs-whitespace-cleanup\/clean-up (&optional called-interactively)$/;"	f
spacemacs-whitespace-cleanup/on-message	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/local/spacemacs-whitespace-cleanup/spacemacs-whitespace-cleanup.el	/^(defun spacemacs-whitespace-cleanup\/on-message (&optional global)$/;"	f
spacemacs-window-split-delete-function	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defvar spacemacs-window-split-delete-function$/;"	f
spacemacs-window-split-ignore-prefixes	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defvar spacemacs-window-split-ignore-prefixes nil$/;"	f
spacemacs-yank-indent-modes	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defcustom spacemacs-yank-indent-modes '(latex-mode)$/;"	f
spacemacs-yank-indent-threshold	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defcustom spacemacs-yank-indent-threshold 1000$/;"	f
spacemacs//acceptable-leader-p	conf/emacs/.emacs.d/core/core-keybindings.el	/^(defun spacemacs\/\/acceptable-leader-p (key)$/;"	f
spacemacs//activate-load-hints	conf/emacs/.emacs.d/core/core-spacemacs.el	/^(defun spacemacs\/\/activate-load-hints ()$/;"	f
spacemacs//activate-persp-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/activate-persp-mode ()$/;"	f
spacemacs//activate-smartparens	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/funcs.el	/^(defun spacemacs\/\/activate-smartparens(&optional global)$/;"	f
spacemacs//activate-theme-packages	conf/emacs/.emacs.d/core/core-themes-support.el	/^(defun spacemacs\/\/activate-theme-packages (&optional themes-list)$/;"	f
spacemacs//adaptive-smartparent-pair-overlay-face	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/funcs.el	/^(defun spacemacs\/\/adaptive-smartparent-pair-overlay-face ()$/;"	f
spacemacs//add-buffer-to-killed-list	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/\/add-buffer-to-killed-list ()$/;"	f
spacemacs//add-org-meta-readtheorg-css	conf/emacs/.emacs.d/core/core-documentation.el	/^(defun spacemacs\/\/add-org-meta-readtheorg-css (filename)$/;"	f
spacemacs//add-theme-packages-to-additional-packages	conf/emacs/.emacs.d/core/core-themes-support.el	/^(defun spacemacs\/\/add-theme-packages-to-additional-packages ()$/;"	f
spacemacs//add-word-to-dict	conf/emacs/.emacs.d/layers/+checkers/spell-checking/funcs.el	/^(defun spacemacs\/\/add-word-to-dict (scope)$/;"	f
spacemacs//ahs-setup	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/\/ahs-setup ()$/;"	f
spacemacs//ahs-ts-exit-window	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defvar spacemacs\/\/ahs-ts-exit-window nil$/;"	f
spacemacs//ahs-ts-on-exit	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/\/ahs-ts-on-exit ()$/;"	f
spacemacs//ahs-was-disabled	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defvar-local spacemacs\/\/ahs-was-disabled t$/;"	f
spacemacs//ahs-was-disabled-in-ahs-ts-exit-window-p	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/\/ahs-was-disabled-in-ahs-ts-exit-window-p ()$/;"	f
spacemacs//ansible-should-enable?	conf/emacs/.emacs.d/layers/+tools/ansible/funcs.el	/^(defun spacemacs\/\/ansible-should-enable? ()$/;"	f
spacemacs//auto-completion-key-sequence-end	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defun spacemacs\/\/auto-completion-key-sequence-end ()$/;"	f
spacemacs//auto-completion-key-sequence-restore	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defun spacemacs\/\/auto-completion-key-sequence-restore ()$/;"	f
spacemacs//auto-completion-key-sequence-start	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defun spacemacs\/\/auto-completion-key-sequence-start ()$/;"	f
spacemacs//auto-completion-set-RET-key-behavior	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defun spacemacs\/\/auto-completion-set-RET-key-behavior (package)$/;"	f
spacemacs//auto-completion-set-TAB-key-behavior	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defun spacemacs\/\/auto-completion-set-TAB-key-behavior (package)$/;"	f
spacemacs//auto-completion-setup-key-sequence	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defun spacemacs\/\/auto-completion-setup-key-sequence (package)$/;"	f
spacemacs//bind-python-formatter-keys	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/\/bind-python-formatter-keys ()$/;"	f
spacemacs//bind-python-repl-keys	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/\/bind-python-repl-keys ()$/;"	f
spacemacs//bind-python-testing-keys	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/\/bind-python-testing-keys ()$/;"	f
spacemacs//buffer-ts-hint	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defun spacemacs\/\/buffer-ts-hint ()$/;"	f
spacemacs//buffer-ts-toggle-hint	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defun spacemacs\/\/buffer-ts-toggle-hint ()$/;"	f
spacemacs//byte-compile-cleanup	conf/emacs/.emacs.d/core/core-spacemacs.el	/^(defun spacemacs\/\/byte-compile-cleanup ()$/;"	f
spacemacs//c-c++-organize-includes-on-save	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/\/c-c++-organize-includes-on-save ()$/;"	f
spacemacs//c-c++-setup-backend	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/\/c-c++-setup-backend ()$/;"	f
spacemacs//c-c++-setup-clang-format	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/\/c-c++-setup-clang-format ()$/;"	f
spacemacs//c-c++-setup-company	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/\/c-c++-setup-company ()$/;"	f
spacemacs//c-c++-setup-dap	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/\/c-c++-setup-dap ()$/;"	f
spacemacs//c-c++-setup-eldoc	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/\/c-c++-setup-eldoc ()$/;"	f
spacemacs//c-c++-setup-flycheck	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/\/c-c++-setup-flycheck ()$/;"	f
spacemacs//c-c++-setup-format	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/\/c-c++-setup-format ()$/;"	f
spacemacs//c-c++-setup-lsp-ccls	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/\/c-c++-setup-lsp-ccls ()$/;"	f
spacemacs//c-c++-setup-lsp-clangd	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/\/c-c++-setup-lsp-clangd ()$/;"	f
spacemacs//c-c++-setup-lsp-dap	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/\/c-c++-setup-lsp-dap ()$/;"	f
spacemacs//c-c++-setup-rtags	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/\/c-c++-setup-rtags ()$/;"	f
spacemacs//c-c++-setup-rtags-company	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/\/c-c++-setup-rtags-company ()$/;"	f
spacemacs//c-c++-setup-rtags-flycheck	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/\/c-c++-setup-rtags-flycheck ()$/;"	f
spacemacs//c-c++-setup-rtags-semantic	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/\/c-c++-setup-rtags-semantic ()$/;"	f
spacemacs//c-c++-setup-semantic	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/\/c-c++-setup-semantic ()$/;"	f
spacemacs//c-c++-setup-ycmd	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/\/c-c++-setup-ycmd ()$/;"	f
spacemacs//c-c++-setup-ycmd-company	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/\/c-c++-setup-ycmd-company ()$/;"	f
spacemacs//c-c++-setup-ycmd-eldoc	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/\/c-c++-setup-ycmd-eldoc ()$/;"	f
spacemacs//c-c++-setup-ycmd-flycheck	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/\/c-c++-setup-ycmd-flycheck ()$/;"	f
spacemacs//c-c++-setup-ycmd-semantic	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/\/c-c++-setup-ycmd-semantic ()$/;"	f
spacemacs//c-toggle-auto-newline	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/\/c-toggle-auto-newline ()$/;"	f
spacemacs//can-check-for-new-version-at-startup	conf/emacs/.emacs.d/core/core-release-management.el	/^(defun spacemacs\/\/can-check-for-new-version-at-startup ()$/;"	f
spacemacs//centaur-tabs-backward-and-hide	conf/emacs/.emacs.d/layers/+emacs/tabs/funcs.el	/^(defun spacemacs\/\/centaur-tabs-backward-and-hide ()$/;"	f
spacemacs//centaur-tabs-forward-and-hide	conf/emacs/.emacs.d/layers/+emacs/tabs/funcs.el	/^(defun spacemacs\/\/centaur-tabs-forward-and-hide ()$/;"	f
spacemacs//cider-eval-in-repl-no-focus	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/\/cider-eval-in-repl-no-focus (form)$/;"	f
spacemacs//clang-format-on-save	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/\/clang-format-on-save ()$/;"	f
spacemacs//clj-repl-wrap-c-j	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/\/clj-repl-wrap-c-j ()$/;"	f
spacemacs//clj-repl-wrap-c-k	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/\/clj-repl-wrap-c-k ()$/;"	f
spacemacs//clojure-setup-backend	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/\/clojure-setup-backend ()$/;"	f
spacemacs//cmake-setup-backend	conf/emacs/.emacs.d/layers/+tools/cmake/funcs.el	/^(defun spacemacs\/\/cmake-setup-backend ()$/;"	f
spacemacs//cmake-setup-company	conf/emacs/.emacs.d/layers/+tools/cmake/funcs.el	/^(defun spacemacs\/\/cmake-setup-company ()$/;"	f
spacemacs//coffeescript-indent	conf/emacs/.emacs.d/layers/+lang/coffeescript/funcs.el	/^(defun spacemacs\/\/coffeescript-indent ()$/;"	f
spacemacs//coffeescript-indent-hook	conf/emacs/.emacs.d/layers/+lang/coffeescript/funcs.el	/^(defun spacemacs\/\/coffeescript-indent-hook ()$/;"	f
spacemacs//collect-spacemacs-buffer-links	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/\/collect-spacemacs-buffer-links ()$/;"	f
spacemacs//company-active-navigation	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defun spacemacs\/\/company-active-navigation (style)$/;"	f
spacemacs//compleseus-selectrum-hjkl-navigation	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/\/compleseus-selectrum-hjkl-navigation (style)$/;"	f
spacemacs//compute-version-score	conf/emacs/.emacs.d/core/core-release-management.el	/^(defun spacemacs\/\/compute-version-score (version)$/;"	f
spacemacs//conditionally-enable-smartparens-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/funcs.el	/^(defun spacemacs\/\/conditionally-enable-smartparens-mode ()$/;"	f
spacemacs//confirm-kill-buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/\/confirm-kill-buffer ()$/;"	f
spacemacs//confluence-remove-save-hook	conf/emacs/.emacs.d/layers/+web-services/confluence/funcs.el	/^(defun spacemacs\/\/confluence-remove-save-hook ()$/;"	f
spacemacs//copy-fetched-docs-html-to-pub-root	conf/emacs/.emacs.d/core/core-documentation.el	/^(defun spacemacs\/\/copy-fetched-docs-html-to-pub-root (project-plist)$/;"	f
spacemacs//counsel-async-command	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/\/counsel-async-command (cmd)$/;"	f
spacemacs//counsel-async-filter	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/\/counsel-async-filter (process str)$/;"	f
spacemacs//counsel-edit	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/\/counsel-edit ()$/;"	f
spacemacs//counsel-find-file-action	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/\/counsel-find-file-action (x)$/;"	f
spacemacs//counsel-gtags-dwim-success	conf/emacs/.emacs.d/layers/+tags/gtags/funcs.el	/^(defun spacemacs\/\/counsel-gtags-dwim-success ()$/;"	f
spacemacs//counsel-occur	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/\/counsel-occur (&optional candidates)$/;"	f
spacemacs//counsel-org-ctrl-c-ctrl-c-org-tag	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/\/counsel-org-ctrl-c-ctrl-c-org-tag ()$/;"	f
spacemacs//counsel-save-in-buffer	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/\/counsel-save-in-buffer ()$/;"	f
spacemacs//counsel-search-add-extra-bindings	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/\/counsel-search-add-extra-bindings (map)$/;"	f
spacemacs//counsel-with-git-grep	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/\/counsel-with-git-grep (func x)$/;"	f
spacemacs//create-key-binding-form	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/\/create-key-binding-form (props func)$/;"	f
spacemacs//create-persp-with-current-project-buffers	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/create-persp-with-current-project-buffers (name)$/;"	f
spacemacs//create-persp-with-home-buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/create-persp-with-home-buffer (name)$/;"	f
spacemacs//crystal-auto-format-setup	conf/emacs/.emacs.d/layers/+lang/crystal/funcs.el	/^(defun spacemacs\/\/crystal-auto-format-setup ()$/;"	f
spacemacs//crystal-setup-backend	conf/emacs/.emacs.d/layers/+lang/crystal/funcs.el	/^(defun spacemacs\/\/crystal-setup-backend ()$/;"	f
spacemacs//crystal-setup-company	conf/emacs/.emacs.d/layers/+lang/crystal/funcs.el	/^(defun spacemacs\/\/crystal-setup-company ()$/;"	f
spacemacs//csharp-configure	conf/emacs/.emacs.d/layers/+lang/csharp/funcs.el	/^(defun spacemacs\/\/csharp-configure ()$/;"	f
spacemacs//csharp-configure-omnisharp	conf/emacs/.emacs.d/layers/+lang/csharp/funcs.el	/^(defun spacemacs\/\/csharp-configure-omnisharp ()$/;"	f
spacemacs//csharp-setup-backend	conf/emacs/.emacs.d/layers/+lang/csharp/funcs.el	/^(defun spacemacs\/\/csharp-setup-backend ()$/;"	f
spacemacs//csharp-setup-company	conf/emacs/.emacs.d/layers/+lang/csharp/funcs.el	/^(defun spacemacs\/\/csharp-setup-company ()$/;"	f
spacemacs//csharp-setup-lsp	conf/emacs/.emacs.d/layers/+lang/csharp/funcs.el	/^(defun spacemacs\/\/csharp-setup-lsp ()$/;"	f
spacemacs//csharp-setup-omnisharp	conf/emacs/.emacs.d/layers/+lang/csharp/funcs.el	/^(defun spacemacs\/\/csharp-setup-omnisharp ()$/;"	f
spacemacs//csharp-setup-omnisharp-company	conf/emacs/.emacs.d/layers/+lang/csharp/funcs.el	/^(defun spacemacs\/\/csharp-setup-omnisharp-company ()$/;"	f
spacemacs//current-layout-name	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/current-layout-name ()$/;"	f
spacemacs//custom-layout-func-name	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/custom-layout-func-name (name)$/;"	f
spacemacs//custom-layouts-ms-documentation	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/custom-layouts-ms-documentation ()$/;"	f
spacemacs//dart-setup-backend	conf/emacs/.emacs.d/layers/+lang/dart/funcs.el	/^(defun spacemacs\/\/dart-setup-backend ()$/;"	f
spacemacs//deactivate-smartparens	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/funcs.el	/^(defun spacemacs\/\/deactivate-smartparens(&optional global)$/;"	f
spacemacs//deffaces-new-version-lighter	conf/emacs/.emacs.d/core/core-release-management.el	/^(defun spacemacs\/\/deffaces-new-version-lighter (state)$/;"	f
spacemacs//define-elisp-comment-text-object	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/funcs.el	/^(defun spacemacs\/\/define-elisp-comment-text-object ()$/;"	f
spacemacs//define-helm-action-functions	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/\/define-helm-action-functions ()$/;"	f
spacemacs//delete-emacs-custom-settings	conf/emacs/.emacs.d/core/core-custom-settings.el	/^(defun spacemacs\/\/delete-emacs-custom-settings ()$/;"	f
spacemacs//delete-other-non-side-windows	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/\/delete-other-non-side-windows ()$/;"	f
spacemacs//describe-last-keys-string	conf/emacs/.emacs.d/core/core-debug.el	/^(defun spacemacs\/\/describe-last-keys-string ()$/;"	f
spacemacs//describe-system-info-string	conf/emacs/.emacs.d/core/core-debug.el	/^(defun spacemacs\/\/describe-system-info-string ()$/;"	f
spacemacs//disable-ahs-mode-in-ahs-ts-exit-window	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/\/disable-ahs-mode-in-ahs-ts-exit-window ()$/;"	f
spacemacs//disable-semantic-idle-summary-mode	conf/emacs/.emacs.d/layers/+emacs/semantic/packages.el	/^(defun spacemacs\/\/disable-semantic-idle-summary-mode ()$/;"	f
spacemacs//disable-symbol-highlight	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/\/disable-symbol-highlight ()$/;"	f
spacemacs//disable-symbol-highlight-after-ahs-ts-exit	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/\/disable-symbol-highlight-after-ahs-ts-exit ()$/;"	f
spacemacs//display-helm-window	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/\/display-helm-window (buffer &optional resume)$/;"	f
spacemacs//display-in-split	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/\/display-in-split (buffer alist)$/;"	f
spacemacs//djvu-set-imenu-create-index-function	conf/emacs/.emacs.d/layers/+readers/djvu/funcs.el	/^(defun spacemacs\/\/djvu-set-imenu-create-index-function ()$/;"	f
spacemacs//djvu-set-imenu-goto-function	conf/emacs/.emacs.d/layers/+readers/djvu/funcs.el	/^(defun spacemacs\/\/djvu-set-imenu-goto-function ()$/;"	f
spacemacs//docker-dockerfile-setup-backend	conf/emacs/.emacs.d/layers/+tools/docker/funcs.el	/^(defun spacemacs\/\/docker-dockerfile-setup-backend ()$/;"	f
spacemacs//edebug-mode	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/funcs.el	/^(defun spacemacs\/\/edebug-mode (&rest args)$/;"	f
spacemacs//ediff-in-comparison-buffer-p	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/\/ediff-in-comparison-buffer-p (&optional buffer)$/;"	f
spacemacs//elixir-default	conf/emacs/.emacs.d/layers/+lang/elixir/funcs.el	/^(defun spacemacs\/\/elixir-default ()$/;"	f
spacemacs//elixir-do-end-close-action	conf/emacs/.emacs.d/layers/+lang/elixir/funcs.el	/^(defun spacemacs\/\/elixir-do-end-close-action (id action context)$/;"	f
spacemacs//elixir-looking-back-special-p	conf/emacs/.emacs.d/layers/+lang/elixir/funcs.el	/^(defun spacemacs\/\/elixir-looking-back-special-p (expr)$/;"	f
spacemacs//elixir-point-after-fn-p	conf/emacs/.emacs.d/layers/+lang/elixir/funcs.el	/^(defun spacemacs\/\/elixir-point-after-fn-p (id action context)$/;"	f
spacemacs//elixir-setup-alchemist	conf/emacs/.emacs.d/layers/+lang/elixir/funcs.el	/^(defun spacemacs\/\/elixir-setup-alchemist ()$/;"	f
spacemacs//elixir-setup-alchemist-company	conf/emacs/.emacs.d/layers/+lang/elixir/funcs.el	/^(defun spacemacs\/\/elixir-setup-alchemist-company ()$/;"	f
spacemacs//elixir-setup-backend	conf/emacs/.emacs.d/layers/+lang/elixir/funcs.el	/^(defun spacemacs\/\/elixir-setup-backend ()$/;"	f
spacemacs//elixir-setup-company	conf/emacs/.emacs.d/layers/+lang/elixir/funcs.el	/^(defun spacemacs\/\/elixir-setup-company ()$/;"	f
spacemacs//elixir-setup-dap	conf/emacs/.emacs.d/layers/+lang/elixir/funcs.el	/^(defun spacemacs\/\/elixir-setup-dap ()$/;"	f
spacemacs//elixir-setup-lsp	conf/emacs/.emacs.d/layers/+lang/elixir/funcs.el	/^(defun spacemacs\/\/elixir-setup-lsp ()$/;"	f
spacemacs//elixir-setup-lsp-dap	conf/emacs/.emacs.d/layers/+lang/elixir/funcs.el	/^(defun spacemacs\/\/elixir-setup-lsp-dap ()$/;"	f
spacemacs//elm-setup-backend	conf/emacs/.emacs.d/layers/+lang/elm/funcs.el	/^(defun spacemacs\/\/elm-setup-backend ()$/;"	f
spacemacs//elm-setup-company	conf/emacs/.emacs.d/layers/+lang/elm/funcs.el	/^(defun spacemacs\/\/elm-setup-company ()$/;"	f
spacemacs//enable-hs-minor-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/funcs.el	/^(defun spacemacs\/\/enable-hs-minor-mode ()$/;"	f
spacemacs//enable-line-numbers-for-buffer-size-p	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/\/enable-line-numbers-for-buffer-size-p ()$/;"	f
spacemacs//enable-rbenv	conf/emacs/.emacs.d/layers/+lang/ruby/funcs.el	/^(defun spacemacs\/\/enable-rbenv ()$/;"	f
spacemacs//erc-buffer-to-persp	conf/emacs/.emacs.d/layers/+chat/erc/funcs.el	/^(defun spacemacs\/\/erc-buffer-to-persp ()$/;"	f
spacemacs//erc-persp-filter-save-buffers-function	conf/emacs/.emacs.d/layers/+chat/erc/funcs.el	/^(defun spacemacs\/\/erc-persp-filter-save-buffers-function (buffer)$/;"	f
spacemacs//erlang-default	conf/emacs/.emacs.d/layers/+lang/erlang/funcs.el	/^(defun spacemacs\/\/erlang-default ()$/;"	f
spacemacs//erlang-setup-backend	conf/emacs/.emacs.d/layers/+lang/erlang/funcs.el	/^(defun spacemacs\/\/erlang-setup-backend ()$/;"	f
spacemacs//erlang-setup-company	conf/emacs/.emacs.d/layers/+lang/erlang/funcs.el	/^(defun spacemacs\/\/erlang-setup-company ()$/;"	f
spacemacs//erlang-setup-dap	conf/emacs/.emacs.d/layers/+lang/erlang/funcs.el	/^(defun spacemacs\/\/erlang-setup-dap ()$/;"	f
spacemacs//erlang-setup-lsp	conf/emacs/.emacs.d/layers/+lang/erlang/funcs.el	/^(defun spacemacs\/\/erlang-setup-lsp ()$/;"	f
spacemacs//eshell-auto-end	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/\/eshell-auto-end ()$/;"	f
spacemacs//eshell-switch-company-frontend	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/\/eshell-switch-company-frontend ()$/;"	f
spacemacs//ess-bind-keys-for-mode	conf/emacs/.emacs.d/layers/+lang/ess/funcs.el	/^(defun spacemacs\/\/ess-bind-keys-for-mode (mode)$/;"	f
spacemacs//ess-bind-repl-keys-for-mode	conf/emacs/.emacs.d/layers/+lang/ess/funcs.el	/^(defun spacemacs\/\/ess-bind-repl-keys-for-mode (mode)$/;"	f
spacemacs//ess-fix-read-only-inferior-ess-mode	conf/emacs/.emacs.d/layers/+lang/ess/funcs.el	/^(defun spacemacs\/\/ess-fix-read-only-inferior-ess-mode ()$/;"	f
spacemacs//ess-may-setup-r-lsp	conf/emacs/.emacs.d/layers/+lang/ess/funcs.el	/^(defun spacemacs\/\/ess-may-setup-r-lsp ()$/;"	f
spacemacs//ess-setup-r-lsp	conf/emacs/.emacs.d/layers/+lang/ess/funcs.el	/^(defun spacemacs\/\/ess-setup-r-lsp ()$/;"	f
spacemacs//evil-escape-deactivate-in-holy-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/funcs.el	/^(defun spacemacs\/\/evil-escape-deactivate-in-holy-mode  (style)$/;"	f
spacemacs//evil-mc-paste-transient-state-p	conf/emacs/.emacs.d/layers/+misc/multiple-cursors/funcs.el	/^(defun spacemacs\/\/evil-mc-paste-transient-state-p ()$/;"	f
spacemacs//evil-org-mode	conf/emacs/.emacs.d/layers/+emacs/org/funcs.el	/^(defun spacemacs\/\/evil-org-mode ()$/;"	f
spacemacs//evil-state-face	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/funcs.el	/^(defun spacemacs\/\/evil-state-face ()$/;"	f
spacemacs//eww-get-buffers	conf/emacs/.emacs.d/layers/+web/eww/funcs.el	/^(defun spacemacs\/\/eww-get-buffers ()$/;"	f
spacemacs//eww-next-buffer	conf/emacs/.emacs.d/layers/+web/eww/funcs.el	/^(defun spacemacs\/\/eww-next-buffer ()$/;"	f
spacemacs//eww-previous-buffer	conf/emacs/.emacs.d/layers/+web/eww/funcs.el	/^(defun spacemacs\/\/eww-previous-buffer ()$/;"	f
spacemacs//eww-setup-transient-state	conf/emacs/.emacs.d/layers/+web/eww/funcs.el	/^(defun spacemacs\/\/eww-setup-transient-state ()$/;"	f
spacemacs//eww-ts-hint	conf/emacs/.emacs.d/layers/+web/eww/funcs.el	/^(defun spacemacs\/\/eww-ts-hint ()$/;"	f
spacemacs//eww-ts-toggle-hint	conf/emacs/.emacs.d/layers/+web/eww/funcs.el	/^(defun spacemacs\/\/eww-ts-toggle-hint ()$/;"	f
spacemacs//extempore-setup-eldoc	conf/emacs/.emacs.d/layers/+lang/extempore/funcs.el	/^(defun spacemacs\/\/extempore-setup-eldoc ()$/;"	f
spacemacs//faust-run-sentinel	conf/emacs/.emacs.d/layers/+lang/faust/funcs.el	/^(defun spacemacs\/\/faust-run-sentinel (process event)$/;"	f
spacemacs//faust2svg-sentinel	conf/emacs/.emacs.d/layers/+lang/faust/funcs.el	/^(defun spacemacs\/\/faust2svg-sentinel (process event)$/;"	f
spacemacs//fetch-docs-from-root	conf/emacs/.emacs.d/core/core-documentation.el	/^(defun spacemacs\/\/fetch-docs-from-root (project-plist)$/;"	f
spacemacs//find-ert-test-buffer	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/funcs.el	/^(defun spacemacs\/\/find-ert-test-buffer (ert-test)$/;"	f
spacemacs//fixup-window-configs	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/fixup-window-configs (orig-fn newname &optional unique)$/;"	f
spacemacs//flymd-browser-function	conf/emacs/.emacs.d/layers/+tools/chrome/funcs.el	/^(defun spacemacs\/\/flymd-browser-function (url)$/;"	f
spacemacs//flymd-start-browser	conf/emacs/.emacs.d/layers/+tools/chrome/funcs.el	/^(defun spacemacs\/\/flymd-start-browser (browser url)$/;"	f
spacemacs//format-content	conf/emacs/.emacs.d/core/core-documentation.el	/^(defun spacemacs\/\/format-content (&rest r)$/;"	f
spacemacs//format-elisp-buffer	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/funcs.el	/^(defun spacemacs\/\/format-elisp-buffer ()$/;"	f
spacemacs//format-toc	conf/emacs/.emacs.d/core/core-documentation.el	/^(defun spacemacs\/\/format-toc (&rest r)$/;"	f
spacemacs//fsharp-setup-backend	conf/emacs/.emacs.d/layers/+lang/fsharp/funcs.el	/^(defun spacemacs\/\/fsharp-setup-backend ()$/;"	f
spacemacs//fsharp-setup-company	conf/emacs/.emacs.d/layers/+lang/fsharp/funcs.el	/^(defun spacemacs\/\/fsharp-setup-company ()$/;"	f
spacemacs//games-start-typit	conf/emacs/.emacs.d/layers/+fun/games/funcs.el	/^(defun spacemacs\/\/games-start-typit (type)$/;"	f
spacemacs//generate-layers-from-path	conf/emacs/.emacs.d/core/core-documentation.el	/^(defun spacemacs\/\/generate-layers-from-path (path level)$/;"	f
spacemacs//generate-layout-name	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/generate-layout-name (pos)$/;"	f
spacemacs//get-current-wrapper	conf/emacs/.emacs.d/core/core-micro-state.el	/^(defun spacemacs\/\/get-current-wrapper (name wrappers)$/;"	f
spacemacs//get-custom-settings-from-cache	conf/emacs/.emacs.d/core/core-custom-settings.el	/^(defun spacemacs\/\/get-custom-settings-from-cache ()$/;"	f
spacemacs//get-jump-handlers	conf/emacs/.emacs.d/core/core-jump.el	/^(defun spacemacs\/\/get-jump-handlers ()$/;"	f
spacemacs//get-last-version	conf/emacs/.emacs.d/core/core-release-management.el	/^(defun spacemacs\/\/get-last-version (repo owner remote branch)$/;"	f
spacemacs//get-persp-workspace	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/get-persp-workspace (&optional persp frame)$/;"	f
spacemacs//get-scratch-buffer-create	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/\/get-scratch-buffer-create ()$/;"	f
spacemacs//get-theme-name	conf/emacs/.emacs.d/core/core-themes-support.el	/^(defun spacemacs\/\/get-theme-name (theme)$/;"	f
spacemacs//get-theme-package-directory	conf/emacs/.emacs.d/core/core-themes-support.el	/^(defun spacemacs\/\/get-theme-package-directory (theme)$/;"	f
spacemacs//git-add-remote	conf/emacs/.emacs.d/core/core-release-management.el	/^(defun spacemacs\/\/git-add-remote (remote url)$/;"	f
spacemacs//git-blame-ts-hint	conf/emacs/.emacs.d/layers/+source-control/git/funcs.el	/^(defun spacemacs\/\/git-blame-ts-hint ()$/;"	f
spacemacs//git-blame-ts-toggle-hint	conf/emacs/.emacs.d/layers/+source-control/git/funcs.el	/^(defun spacemacs\/\/git-blame-ts-toggle-hint ()$/;"	f
spacemacs//git-checkout	conf/emacs/.emacs.d/core/core-release-management.el	/^(defun spacemacs\/\/git-checkout (branch)$/;"	f
spacemacs//git-fetch-remote	conf/emacs/.emacs.d/core/core-release-management.el	/^(defun spacemacs\/\/git-fetch-remote (remote)$/;"	f
spacemacs//git-fetch-tags	conf/emacs/.emacs.d/core/core-release-management.el	/^(defun spacemacs\/\/git-fetch-tags (remote branch)$/;"	f
spacemacs//git-get-current-branch	conf/emacs/.emacs.d/core/core-release-management.el	/^(defun spacemacs\/\/git-get-current-branch ()$/;"	f
spacemacs//git-hard-reset-to-tag	conf/emacs/.emacs.d/core/core-release-management.el	/^(defun spacemacs\/\/git-hard-reset-to-tag (tag)$/;"	f
spacemacs//git-has-remote	conf/emacs/.emacs.d/core/core-release-management.el	/^(defun spacemacs\/\/git-has-remote (remote)$/;"	f
spacemacs//git-latest-tag	conf/emacs/.emacs.d/core/core-release-management.el	/^(defun spacemacs\/\/git-latest-tag (remote branch)$/;"	f
spacemacs//git-remove-remote	conf/emacs/.emacs.d/core/core-release-management.el	/^(defun spacemacs\/\/git-remove-remote (remote)$/;"	f
spacemacs//git-working-directory-dirty	conf/emacs/.emacs.d/core/core-release-management.el	/^(defun spacemacs\/\/git-working-directory-dirty ()$/;"	f
spacemacs//gleam-build	conf/emacs/.emacs.d/layers/+lang/gleam/funcs.el	/^(defun spacemacs\/\/gleam-build ()$/;"	f
spacemacs//gleam-format	conf/emacs/.emacs.d/layers/+lang/gleam/funcs.el	/^(defun spacemacs\/\/gleam-format ()$/;"	f
spacemacs//gleam-run	conf/emacs/.emacs.d/layers/+lang/gleam/funcs.el	/^(defun spacemacs\/\/gleam-run ()$/;"	f
spacemacs//gleam-run-module	conf/emacs/.emacs.d/layers/+lang/gleam/funcs.el	/^(defun spacemacs\/\/gleam-run-module ()$/;"	f
spacemacs//gleam-run-project	conf/emacs/.emacs.d/layers/+lang/gleam/funcs.el	/^(defun spacemacs\/\/gleam-run-project ()$/;"	f
spacemacs//gleam-setup-format-on-save	conf/emacs/.emacs.d/layers/+lang/gleam/funcs.el	/^(defun spacemacs\/\/gleam-setup-format-on-save ()$/;"	f
spacemacs//gleam-setup-lsp	conf/emacs/.emacs.d/layers/+lang/gleam/funcs.el	/^(defun spacemacs\/\/gleam-setup-lsp ()$/;"	f
spacemacs//gleam-shell-command	conf/emacs/.emacs.d/layers/+lang/gleam/funcs.el	/^(defun spacemacs\/\/gleam-shell-command (command &optional scope target runtime)$/;"	f
spacemacs//gleam-test-project	conf/emacs/.emacs.d/layers/+lang/gleam/funcs.el	/^(defun spacemacs\/\/gleam-test-project ()$/;"	f
spacemacs//gleam-toggle-format-on-save	conf/emacs/.emacs.d/layers/+lang/gleam/funcs.el	/^(defun spacemacs\/\/gleam-toggle-format-on-save ()$/;"	f
spacemacs//gne-init-counsel	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/\/gne-init-counsel ()$/;"	f
spacemacs//gne-init-helm-ag	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/\/gne-init-helm-ag (&rest args)$/;"	f
spacemacs//gne-init-helm-grep	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/\/gne-init-helm-grep (&rest args)$/;"	f
spacemacs//go-enable-flycheck-golangci-lint	conf/emacs/.emacs.d/layers/+lang/go/funcs.el	/^(defun spacemacs\/\/go-enable-flycheck-golangci-lint ()$/;"	f
spacemacs//go-set-tab-width	conf/emacs/.emacs.d/layers/+lang/go/funcs.el	/^(defun spacemacs\/\/go-set-tab-width ()$/;"	f
spacemacs//go-setup-backend	conf/emacs/.emacs.d/layers/+lang/go/funcs.el	/^(defun spacemacs\/\/go-setup-backend ()$/;"	f
spacemacs//go-setup-backend-lsp	conf/emacs/.emacs.d/layers/+lang/go/funcs.el	/^(defun spacemacs\/\/go-setup-backend-lsp ()$/;"	f
spacemacs//go-setup-company	conf/emacs/.emacs.d/layers/+lang/go/funcs.el	/^(defun spacemacs\/\/go-setup-company ()$/;"	f
spacemacs//go-setup-dap	conf/emacs/.emacs.d/layers/+lang/go/funcs.el	/^(defun spacemacs\/\/go-setup-dap ()$/;"	f
spacemacs//go-setup-dap-dlv	conf/emacs/.emacs.d/layers/+lang/go/funcs.el	/^(defun spacemacs\/\/go-setup-dap-dlv ()$/;"	f
spacemacs//go-setup-dap-vscode	conf/emacs/.emacs.d/layers/+lang/go/funcs.el	/^(defun spacemacs\/\/go-setup-dap-vscode ()$/;"	f
spacemacs//go-setup-eldoc	conf/emacs/.emacs.d/layers/+lang/go/funcs.el	/^(defun spacemacs\/\/go-setup-eldoc ()$/;"	f
spacemacs//go-setup-format	conf/emacs/.emacs.d/layers/+lang/go/funcs.el	/^(defun spacemacs\/\/go-setup-format ()$/;"	f
spacemacs//gptel-abort-wrapper	conf/emacs/.emacs.d/layers/+web-services/llm-client/funcs.el	/^(defun spacemacs\/\/gptel-abort-wrapper ()$/;"	f
spacemacs//gptel-send-wrapper	conf/emacs/.emacs.d/layers/+web-services/llm-client/funcs.el	/^(defun spacemacs\/\/gptel-send-wrapper ()$/;"	f
spacemacs//grep-set-evil-state	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/funcs.el	/^(defun spacemacs\/\/grep-set-evil-state ()$/;"	f
spacemacs//groovy-setup-backend	conf/emacs/.emacs.d/layers/+lang/groovy/funcs.el	/^(defun spacemacs\/\/groovy-setup-backend ()$/;"	f
spacemacs//groovy-setup-company	conf/emacs/.emacs.d/layers/+lang/groovy/funcs.el	/^(defun spacemacs\/\/groovy-setup-company ()$/;"	f
spacemacs//guess-fallback-theme	conf/emacs/.emacs.d/core/core-themes-support.el	/^(defun spacemacs\/\/guess-fallback-theme (theme)$/;"	f
spacemacs//helm-cleanup	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/\/helm-cleanup ()$/;"	f
spacemacs//helm-do-ag-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/\/helm-do-ag-region-or-symbol (func &optional dir)$/;"	f
spacemacs//helm-do-grep-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/\/helm-do-grep-region-or-symbol$/;"	f
spacemacs//helm-do-search-find-tool	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/\/helm-do-search-find-tool (base tools default-inputp)$/;"	f
spacemacs//helm-find-files-edit	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/\/helm-find-files-edit (candidate)$/;"	f
spacemacs//helm-find-files-enable-helm--in-fuzzy	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/\/helm-find-files-enable-helm--in-fuzzy ()$/;"	f
spacemacs//helm-hide-minibuffer-maybe	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/\/helm-hide-minibuffer-maybe ()$/;"	f
spacemacs//helm-hjkl-navigation	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/\/helm-hjkl-navigation (style)$/;"	f
spacemacs//helm-navigation-ts-on-enter	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/\/helm-navigation-ts-on-enter ()$/;"	f
spacemacs//helm-navigation-ts-on-exit	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/\/helm-navigation-ts-on-exit ()$/;"	f
spacemacs//helm-navigation-ts-set-face	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/\/helm-navigation-ts-set-face ()$/;"	f
spacemacs//helm-open-buffers-in-windows	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/\/helm-open-buffers-in-windows (buffers)$/;"	f
spacemacs//helm-persp-switch-project-action	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/helm-persp-switch-project-action (project)$/;"	f
spacemacs//helm-persp-switch-project-action-maker	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/helm-persp-switch-project-action-maker (project-action)$/;"	f
spacemacs//helm-perspectives-source	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/helm-perspectives-source ()$/;"	f
spacemacs//helm-prepare-display	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/\/helm-prepare-display ()$/;"	f
spacemacs//helm-restore-display	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/\/helm-restore-display ()$/;"	f
spacemacs//hide-cursor-in-helm-buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/\/hide-cursor-in-helm-buffer ()$/;"	f
spacemacs//hydra-key-doc-function	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/funcs.el	/^(defun spacemacs\/\/hydra-key-doc-function (key key-width doc doc-width)$/;"	f
spacemacs//ibuffer-create-buffs-group	conf/emacs/.emacs.d/layers/+emacs/ibuffer/funcs.el	/^(defun spacemacs\/\/ibuffer-create-buffs-group ()$/;"	f
spacemacs//ibuffer-get-major-modes-ibuff-rules-list	conf/emacs/.emacs.d/layers/+emacs/ibuffer/funcs.el	/^(defun spacemacs\/\/ibuffer-get-major-modes-ibuff-rules-list (mm-list result-list)$/;"	f
spacemacs//ibuffer-get-major-modes-list	conf/emacs/.emacs.d/layers/+emacs/ibuffer/funcs.el	/^(defun spacemacs\/\/ibuffer-get-major-modes-list ()$/;"	f
spacemacs//ido-minibuffer-setup	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/\/ido-minibuffer-setup ()$/;"	f
spacemacs//ido-navigation-ts-full-doc	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/\/ido-navigation-ts-full-doc ()$/;"	f
spacemacs//ido-navigation-ts-on-enter	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/\/ido-navigation-ts-on-enter ()$/;"	f
spacemacs//ido-navigation-ts-on-exit	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/\/ido-navigation-ts-on-exit ()$/;"	f
spacemacs//ido-navigation-ts-set-face	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/\/ido-navigation-ts-set-face ()$/;"	f
spacemacs//ido-setup	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/\/ido-setup ()$/;"	f
spacemacs//iedit-insert-state-hybrid	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/funcs.el	/^(defun spacemacs\/\/iedit-insert-state-hybrid (style)$/;"	f
spacemacs//iedit-state-TAB-key-bindings	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/funcs.el	/^(defun spacemacs\/\/iedit-state-TAB-key-bindings (style)$/;"	f
spacemacs//in-or-all	conf/emacs/.emacs.d/layers/+themes/theming/funcs.el	/^(defun spacemacs\/\/in-or-all (key seq)$/;"	f
spacemacs//inf-ruby-auto-enter	conf/emacs/.emacs.d/layers/+lang/ruby/funcs.el	/^(defun spacemacs\/\/inf-ruby-auto-enter ()$/;"	f
spacemacs//inhibit-global-centered-cursor-mode	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/\/inhibit-global-centered-cursor-mode ()$/;"	f
spacemacs//init-eshell	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/\/init-eshell ()$/;"	f
spacemacs//init-leader-mode-map	conf/emacs/.emacs.d/core/core-keybindings.el	/^(defun spacemacs\/\/init-leader-mode-map (mode map &optional minor)$/;"	f
spacemacs//init-ocaml-opam	conf/emacs/.emacs.d/layers/+lang/ocaml/funcs.el	/^(defun spacemacs\/\/init-ocaml-opam ()$/;"	f
spacemacs//init-spacemacs-env	conf/emacs/.emacs.d/core/core-env.el	/^(defun spacemacs\/\/init-spacemacs-env (&optional force)$/;"	f
spacemacs//init-visual-line-keys	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/\/init-visual-line-keys ()$/;"	f
spacemacs//integrate-evil-search	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/\/integrate-evil-search (forward)$/;"	f
spacemacs//ivy-command-not-implemented-yet	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/\/ivy-command-not-implemented-yet (key)$/;"	f
spacemacs//ivy-hjkl-navigation	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/\/ivy-hjkl-navigation (style)$/;"	f
spacemacs//ivy-matcher-desc	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/\/ivy-matcher-desc ()$/;"	f
spacemacs//ivy-persp-switch-project-action	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/ivy-persp-switch-project-action (project)$/;"	f
spacemacs//java-delete-horizontal-space	conf/emacs/.emacs.d/layers/+lang/java/funcs.el	/^(defun spacemacs\/\/java-delete-horizontal-space ()$/;"	f
spacemacs//java-meghanada-server-livep	conf/emacs/.emacs.d/layers/+lang/java/funcs.el	/^(defun spacemacs\/\/java-meghanada-server-livep ()$/;"	f
spacemacs//java-setup-backend	conf/emacs/.emacs.d/layers/+lang/java/funcs.el	/^(defun spacemacs\/\/java-setup-backend ()$/;"	f
spacemacs//java-setup-company	conf/emacs/.emacs.d/layers/+lang/java/funcs.el	/^(defun spacemacs\/\/java-setup-company ()$/;"	f
spacemacs//java-setup-dap	conf/emacs/.emacs.d/layers/+lang/java/funcs.el	/^(defun spacemacs\/\/java-setup-dap ()$/;"	f
spacemacs//java-setup-flycheck	conf/emacs/.emacs.d/layers/+lang/java/funcs.el	/^(defun spacemacs\/\/java-setup-flycheck ()$/;"	f
spacemacs//java-setup-lsp	conf/emacs/.emacs.d/layers/+lang/java/funcs.el	/^(defun spacemacs\/\/java-setup-lsp ()$/;"	f
spacemacs//java-setup-lsp-dap	conf/emacs/.emacs.d/layers/+lang/java/funcs.el	/^(defun spacemacs\/\/java-setup-lsp-dap ()$/;"	f
spacemacs//java-setup-lsp-flycheck	conf/emacs/.emacs.d/layers/+lang/java/funcs.el	/^(defun spacemacs\/\/java-setup-lsp-flycheck ()$/;"	f
spacemacs//java-setup-meghanada	conf/emacs/.emacs.d/layers/+lang/java/funcs.el	/^(defun spacemacs\/\/java-setup-meghanada ()$/;"	f
spacemacs//java-setup-meghanada-company	conf/emacs/.emacs.d/layers/+lang/java/funcs.el	/^(defun spacemacs\/\/java-setup-meghanada-company ()$/;"	f
spacemacs//java-setup-meghanada-flycheck	conf/emacs/.emacs.d/layers/+lang/java/funcs.el	/^(defun spacemacs\/\/java-setup-meghanada-flycheck ()$/;"	f
spacemacs//javascript-jsx-file-p	conf/emacs/.emacs.d/layers/+frameworks/react/funcs.el	/^(defun spacemacs\/\/javascript-jsx-file-p ()$/;"	f
spacemacs//javascript-setup-backend	conf/emacs/.emacs.d/layers/+lang/javascript/funcs.el	/^(defun spacemacs\/\/javascript-setup-backend ()$/;"	f
spacemacs//javascript-setup-checkers	conf/emacs/.emacs.d/layers/+lang/javascript/funcs.el	/^(defun spacemacs\/\/javascript-setup-checkers ()$/;"	f
spacemacs//javascript-setup-company	conf/emacs/.emacs.d/layers/+lang/javascript/funcs.el	/^(defun spacemacs\/\/javascript-setup-company ()$/;"	f
spacemacs//javascript-setup-dap	conf/emacs/.emacs.d/layers/+lang/javascript/funcs.el	/^(defun spacemacs\/\/javascript-setup-dap ()$/;"	f
spacemacs//javascript-setup-lsp	conf/emacs/.emacs.d/layers/+lang/javascript/funcs.el	/^(defun spacemacs\/\/javascript-setup-lsp ()$/;"	f
spacemacs//javascript-setup-lsp-dap	conf/emacs/.emacs.d/layers/+lang/javascript/funcs.el	/^(defun spacemacs\/\/javascript-setup-lsp-dap ()$/;"	f
spacemacs//javascript-setup-next-error-fn	conf/emacs/.emacs.d/layers/+lang/javascript/funcs.el	/^(defun spacemacs\/\/javascript-setup-next-error-fn ()$/;"	f
spacemacs//javascript-setup-tern	conf/emacs/.emacs.d/layers/+lang/javascript/funcs.el	/^(defun spacemacs\/\/javascript-setup-tern ()$/;"	f
spacemacs//json-setup-backend	conf/emacs/.emacs.d/layers/+lang/json/funcs.el	/^(defun spacemacs\/\/json-setup-backend ()$/;"	f
spacemacs//json-setup-company	conf/emacs/.emacs.d/layers/+lang/json/funcs.el	/^(defun spacemacs\/\/json-setup-company ()$/;"	f
spacemacs//julia-hash-to-alist	conf/emacs/.emacs.d/layers/+lang/julia/funcs.el	/^(defun spacemacs\/\/julia-hash-to-alist (hash)$/;"	f
spacemacs//julia-setup-backend	conf/emacs/.emacs.d/layers/+lang/julia/funcs.el	/^(defun spacemacs\/\/julia-setup-backend ()$/;"	f
spacemacs//julia-setup-buffer	conf/emacs/.emacs.d/layers/+lang/julia/funcs.el	/^(defun spacemacs\/\/julia-setup-buffer ()$/;"	f
spacemacs//julia-setup-lsp	conf/emacs/.emacs.d/layers/+lang/julia/funcs.el	/^(defun spacemacs\/\/julia-setup-lsp ()$/;"	f
spacemacs//julia-setup-repl	conf/emacs/.emacs.d/layers/+lang/julia/funcs.el	/^(defun spacemacs\/\/julia-setup-repl ()$/;"	f
spacemacs//kotlin-setup-backend	conf/emacs/.emacs.d/layers/+lang/kotlin/funcs.el	/^(defun spacemacs\/\/kotlin-setup-backend ()$/;"	f
spacemacs//kotlin-setup-company	conf/emacs/.emacs.d/layers/+lang/kotlin/funcs.el	/^(defun spacemacs\/\/kotlin-setup-company ()$/;"	f
spacemacs//languagetool-detect	conf/emacs/.emacs.d/layers/+tools/languagetool/funcs.el	/^(defun spacemacs\/\/languagetool-detect ()$/;"	f
spacemacs//languagetool-get-language	conf/emacs/.emacs.d/layers/+tools/languagetool/funcs.el	/^(defun spacemacs\/\/languagetool-get-language ()$/;"	f
spacemacs//latex-setup-backend	conf/emacs/.emacs.d/layers/+lang/latex/funcs.el	/^(defun spacemacs\/\/latex-setup-backend ()$/;"	f
spacemacs//latex-setup-company	conf/emacs/.emacs.d/layers/+lang/latex/funcs.el	/^(defun spacemacs\/\/latex-setup-company ()$/;"	f
spacemacs//latex-setup-pdf-tools	conf/emacs/.emacs.d/layers/+lang/latex/funcs.el	/^(defun spacemacs\/\/latex-setup-pdf-tools ()$/;"	f
spacemacs//layout-autosave	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/layout-autosave ()$/;"	f
spacemacs//layout-format-name	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/layout-format-name (name pos)$/;"	f
spacemacs//layout-not-contains-buffer-p	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/layout-not-contains-buffer-p (buffer)$/;"	f
spacemacs//layout-wait-for-modeline	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/layout-wait-for-modeline (&rest _)$/;"	f
spacemacs//layouts-ts-hint	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/layouts-ts-hint ()$/;"	f
spacemacs//layouts-ts-toggle-hint	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/layouts-ts-toggle-hint ()$/;"	f
spacemacs//line-numbers-enabled-for-current-major-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/\/line-numbers-enabled-for-current-major-mode ()$/;"	f
spacemacs//load-evil-lisp-state	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/funcs.el	/^(defun spacemacs\/\/load-evil-lisp-state ()$/;"	f
spacemacs//load-layout-local-vars	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/load-layout-local-vars (persp-name &rest _)$/;"	f
spacemacs//load-theme-internal	conf/emacs/.emacs.d/core/core-themes-support.el	/^(defun spacemacs\/\/load-theme-internal (theme-name &optional disable)$/;"	f
spacemacs//load-timer	conf/emacs/.emacs.d/core/core-debug.el	/^(defun spacemacs\/\/load-timer (orig-func &rest args)$/;"	f
spacemacs//lookup-load-hints	conf/emacs/.emacs.d/core/core-spacemacs.el	/^(defun spacemacs\/\/lookup-load-hints (file)$/;"	f
spacemacs//lsp-action-placeholder	conf/emacs/.emacs.d/layers/+tools/lsp/funcs.el	/^(defun spacemacs\/\/lsp-action-placeholder ()$/;"	f
spacemacs//lsp-bind-extensions-for-mode	conf/emacs/.emacs.d/layers/+tools/lsp/funcs.el	/^(defun spacemacs\/\/lsp-bind-extensions-for-mode (mode$/;"	f
spacemacs//lsp-bind-peek-navigation-functions	conf/emacs/.emacs.d/layers/+tools/lsp/funcs.el	/^(defun spacemacs\/\/lsp-bind-peek-navigation-functions (prefix-char)$/;"	f
spacemacs//lsp-bind-simple-navigation-functions	conf/emacs/.emacs.d/layers/+tools/lsp/funcs.el	/^(defun spacemacs\/\/lsp-bind-simple-navigation-functions (prefix-char)$/;"	f
spacemacs//lsp-client-server-id	conf/emacs/.emacs.d/layers/+tools/lsp/funcs.el	/^(defun spacemacs\/\/lsp-client-server-id ()$/;"	f
spacemacs//lsp-define-custom-extension	conf/emacs/.emacs.d/layers/+tools/lsp/funcs.el	/^(defun spacemacs\/\/lsp-define-custom-extension (layer-name$/;"	f
spacemacs//lsp-extension-name	conf/emacs/.emacs.d/layers/+tools/lsp/funcs.el	/^(defun spacemacs\/\/lsp-extension-name (layer-name backend-name nav-mode kind)$/;"	f
spacemacs//lsp-layer-not-installed-message	conf/emacs/.emacs.d/layers/+lang/rust/funcs.el	/^(defun spacemacs\/\/lsp-layer-not-installed-message ()$/;"	f
spacemacs//lua-setup-backend	conf/emacs/.emacs.d/layers/+lang/lua/funcs.el	/^(defun spacemacs\/\/lua-setup-backend ()$/;"	f
spacemacs//lua-setup-company	conf/emacs/.emacs.d/layers/+lang/lua/funcs.el	/^(defun spacemacs\/\/lua-setup-company ()$/;"	f
spacemacs//lua-setup-lsp	conf/emacs/.emacs.d/layers/+lang/lua/funcs.el	/^(defun spacemacs\/\/lua-setup-lsp ()$/;"	f
spacemacs//magit-buffer-p	conf/emacs/.emacs.d/layers/+source-control/git/funcs.el	/^(defun spacemacs\/\/magit-buffer-p (buf)$/;"	f
spacemacs//magit-dont-ignore-whitespace	conf/emacs/.emacs.d/layers/+source-control/git/funcs.el	/^(defun spacemacs\/\/magit-dont-ignore-whitespace ()$/;"	f
spacemacs//magit-ignore-whitespace	conf/emacs/.emacs.d/layers/+source-control/git/funcs.el	/^(defun spacemacs\/\/magit-ignore-whitespace ()$/;"	f
spacemacs//make-counsel-search-function	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/\/make-counsel-search-function (tool)$/;"	f
spacemacs//make-elisp-buffer-format-on-save	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/funcs.el	/^(defun spacemacs\/\/make-elisp-buffer-format-on-save ()$/;"	f
spacemacs//make-elisp-buffers-format-on-save-maybe	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/funcs.el	/^(defun spacemacs\/\/make-elisp-buffers-format-on-save-maybe ()$/;"	f
spacemacs//make-helm-list-reorder-fn	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/make-helm-list-reorder-fn (fn)$/;"	f
spacemacs//markdown-hjkl-promotion-demotion	conf/emacs/.emacs.d/layers/+lang/markdown/funcs.el	/^(defun spacemacs\/\/markdown-hjkl-promotion-demotion (style)$/;"	f
spacemacs//maybe-enable-term-cursor	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing-visual/funcs.el	/^(defun spacemacs\/\/maybe-enable-term-cursor ()$/;"	f
spacemacs//micro-state-auto-execute	conf/emacs/.emacs.d/core/core-micro-state.el	/^(defun spacemacs\/\/micro-state-auto-execute (bindings)$/;"	f
spacemacs//micro-state-close-window	conf/emacs/.emacs.d/core/core-micro-state.el	/^(defun spacemacs\/\/micro-state-close-window ()$/;"	f
spacemacs//micro-state-create-exit-func	conf/emacs/.emacs.d/core/core-micro-state.el	/^(defun spacemacs\/\/micro-state-create-exit-func$/;"	f
spacemacs//micro-state-create-wrapper	conf/emacs/.emacs.d/core/core-micro-state.el	/^(defun spacemacs\/\/micro-state-create-wrapper (name default-doc msg-func binding)$/;"	f
spacemacs//micro-state-create-wrappers	conf/emacs/.emacs.d/core/core-micro-state.el	/^(defun spacemacs\/\/micro-state-create-wrappers$/;"	f
spacemacs//micro-state-fill-map-sexps	conf/emacs/.emacs.d/core/core-micro-state.el	/^(defun spacemacs\/\/micro-state-fill-map-sexps (wrappers)$/;"	f
spacemacs//micro-state-func-name	conf/emacs/.emacs.d/core/core-micro-state.el	/^(defun spacemacs\/\/micro-state-func-name (name)$/;"	f
spacemacs//micro-state-propertize-doc	conf/emacs/.emacs.d/core/core-micro-state.el	/^(defun spacemacs\/\/micro-state-propertize-doc (doc)$/;"	f
spacemacs//micro-state-propertize-doc-rec	conf/emacs/.emacs.d/core/core-micro-state.el	/^(defun spacemacs\/\/micro-state-propertize-doc-rec (doc)$/;"	f
spacemacs//micro-state-set-minibuffer-height	conf/emacs/.emacs.d/core/core-micro-state.el	/^(defun spacemacs\/\/micro-state-set-minibuffer-height (str)$/;"	f
spacemacs//neotree-maybe-attach-window	conf/emacs/.emacs.d/layers/+filetree/neotree/funcs.el	/^(defun spacemacs\/\/neotree-maybe-attach-window ()$/;"	f
spacemacs//nim-setup-backend	conf/emacs/.emacs.d/layers/+lang/nim/funcs.el	/^(defun spacemacs\/\/nim-setup-backend ()$/;"	f
spacemacs//nim-setup-company	conf/emacs/.emacs.d/layers/+lang/nim/funcs.el	/^(defun spacemacs\/\/nim-setup-company ()$/;"	f
spacemacs//nix-setup-backend	conf/emacs/.emacs.d/layers/+os/nixos/funcs.el	/^(defun spacemacs\/\/nix-setup-backend ()$/;"	f
spacemacs//nix-setup-lsp	conf/emacs/.emacs.d/layers/+os/nixos/funcs.el	/^(defun spacemacs\/\/nix-setup-lsp ()$/;"	f
spacemacs//notmuch-buffer-to-persp	conf/emacs/.emacs.d/layers/+email/notmuch/funcs.el	/^(defun spacemacs\/\/notmuch-buffer-to-persp ()$/;"	f
spacemacs//notmuch-inbox-p	conf/emacs/.emacs.d/layers/+email/notmuch/funcs.el	/^(defun spacemacs\/\/notmuch-inbox-p (saved-search-property-item)$/;"	f
spacemacs//notmuch-open-github-patch	conf/emacs/.emacs.d/layers/+email/notmuch/funcs.el	/^(defun spacemacs\/\/notmuch-open-github-patch (buffer)$/;"	f
spacemacs//notmuch-persp-filter-save-buffers-function	conf/emacs/.emacs.d/layers/+email/notmuch/funcs.el	/^(defun spacemacs\/\/notmuch-persp-filter-save-buffers-function (buffer)$/;"	f
spacemacs//notmuch-search-message-delete	conf/emacs/.emacs.d/layers/+email/notmuch/funcs.el	/^(defun spacemacs\/\/notmuch-search-message-delete (go-next)$/;"	f
spacemacs//notmuch-tree-message-delete	conf/emacs/.emacs.d/layers/+email/notmuch/funcs.el	/^(defun spacemacs\/\/notmuch-tree-message-delete (go-next)$/;"	f
spacemacs//open-in-external-app	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/\/open-in-external-app (file-path)$/;"	f
spacemacs//org-custom-id-uniquify	conf/emacs/.emacs.d/core/core-documentation.el	/^(defun spacemacs\/\/org-custom-id-uniquify (id)$/;"	f
spacemacs//org-heading-annotate-custom-id	conf/emacs/.emacs.d/core/core-documentation.el	/^(defun spacemacs\/\/org-heading-annotate-custom-id ()$/;"	f
spacemacs//org-maybe-activate-evil-insert	conf/emacs/.emacs.d/layers/+emacs/org/funcs.el	/^(defun spacemacs\/\/org-maybe-activate-evil-insert (&rest _)$/;"	f
spacemacs//osx-location-changed	conf/emacs/.emacs.d/layers/+tools/geolocation/funcs.el	/^(defun spacemacs\/\/osx-location-changed ()$/;"	f
spacemacs//osx-location-changed-rase	conf/emacs/.emacs.d/layers/+tools/geolocation/funcs.el	/^(defun spacemacs\/\/osx-location-changed-rase ()$/;"	f
spacemacs//package-regenerate-autoloads	conf/emacs/.emacs.d/core/core-spacemacs.el	/^(defun spacemacs\/\/package-regenerate-autoloads (&optional path)$/;"	f
spacemacs//parse-command-line	conf/emacs/.emacs.d/core/core-command-line.el	/^(defun spacemacs\/\/parse-command-line (args)$/;"	f
spacemacs//pass-completing-read	conf/emacs/.emacs.d/layers/+tools/pass/funcs.el	/^(defun spacemacs\/\/pass-completing-read ()$/;"	f
spacemacs//pdf-tools-setup-transient-state	conf/emacs/.emacs.d/layers/+readers/pdf/funcs.el	/^(defun spacemacs\/\/pdf-tools-setup-transient-state ()$/;"	f
spacemacs//perl5-setup-backend	conf/emacs/.emacs.d/layers/+lang/perl5/funcs.el	/^(defun spacemacs\/\/perl5-setup-backend ()$/;"	f
spacemacs//perl5-setup-company	conf/emacs/.emacs.d/layers/+lang/perl5/funcs.el	/^(defun spacemacs\/\/perl5-setup-company ()$/;"	f
spacemacs//perl5-setup-dap	conf/emacs/.emacs.d/layers/+lang/perl5/funcs.el	/^(defun spacemacs\/\/perl5-setup-dap ()$/;"	f
spacemacs//perl5-smartparens-enable	conf/emacs/.emacs.d/layers/+lang/perl5/funcs.el	/^(defun spacemacs\/\/perl5-smartparens-enable ()$/;"	f
spacemacs//perl5-spartparens-disable	conf/emacs/.emacs.d/layers/+lang/perl5/funcs.el	/^(defun spacemacs\/\/perl5-spartparens-disable ()$/;"	f
spacemacs//persistent-server-running-p	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/\/persistent-server-running-p ()$/;"	f
spacemacs//persp-helm-setup	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/persp-helm-setup ()$/;"	f
spacemacs//php-setup-backend	conf/emacs/.emacs.d/layers/+lang/php/funcs.el	/^(defun spacemacs\/\/php-setup-backend ()$/;"	f
spacemacs//php-setup-dap	conf/emacs/.emacs.d/layers/+lang/php/funcs.el	/^(defun spacemacs\/\/php-setup-dap ()$/;"	f
spacemacs//php-setup-lsp-dap	conf/emacs/.emacs.d/layers/+lang/php/funcs.el	/^(defun spacemacs\/\/php-setup-lsp-dap ()$/;"	f
spacemacs//poetry-activate	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/\/poetry-activate ()$/;"	f
spacemacs//prepare-diminish	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/funcs.el	/^(defun spacemacs\/\/prepare-diminish ()$/;"	f
spacemacs//prevent-minibuffer-escape	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/\/prevent-minibuffer-escape ()$/;"	f
spacemacs//prompt-opened-from-ahs-ts-p	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/\/prompt-opened-from-ahs-ts-p ()$/;"	f
spacemacs//protect-eshell-prompt	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/\/protect-eshell-prompt ()$/;"	f
spacemacs//pub-doc-html-advice	conf/emacs/.emacs.d/core/core-documentation.el	/^(defun spacemacs\/\/pub-doc-html-advice (origfunc &rest args)$/;"	f
spacemacs//purescript-setup-backend	conf/emacs/.emacs.d/layers/+lang/purescript/funcs.el	/^(defun spacemacs\/\/purescript-setup-backend ()$/;"	f
spacemacs//purescript-setup-company	conf/emacs/.emacs.d/layers/+lang/purescript/funcs.el	/^(defun spacemacs\/\/purescript-setup-company ()$/;"	f
spacemacs//put-clean-aindent-last	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/funcs.el	/^(defun spacemacs\/\/put-clean-aindent-last ()$/;"	f
spacemacs//pyenv-mode-set-local-version	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/\/pyenv-mode-set-local-version ()$/;"	f
spacemacs//python-call-correct-test-function	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/\/python-call-correct-test-function (arg funcalist)$/;"	f
spacemacs//python-default	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/\/python-default ()$/;"	f
spacemacs//python-get-main-testrunner	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/\/python-get-main-testrunner ()$/;"	f
spacemacs//python-get-secondary-testrunner	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/\/python-get-secondary-testrunner ()$/;"	f
spacemacs//python-imenu-create-index-use-semantic-maybe	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/\/python-imenu-create-index-use-semantic-maybe ()$/;"	f
spacemacs//python-setup-anaconda	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/\/python-setup-anaconda ()$/;"	f
spacemacs//python-setup-anaconda-company	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/\/python-setup-anaconda-company ()$/;"	f
spacemacs//python-setup-anaconda-eldoc	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/\/python-setup-anaconda-eldoc ()$/;"	f
spacemacs//python-setup-backend	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/\/python-setup-backend ()$/;"	f
spacemacs//python-setup-checkers	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/\/python-setup-checkers (&optional root-dir)$/;"	f
spacemacs//python-setup-company	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/\/python-setup-company ()$/;"	f
spacemacs//python-setup-dap	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/\/python-setup-dap ()$/;"	f
spacemacs//python-setup-eldoc	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/\/python-setup-eldoc ()$/;"	f
spacemacs//python-setup-lsp	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/\/python-setup-lsp ()$/;"	f
spacemacs//python-setup-lsp-dap	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/\/python-setup-lsp-dap ()$/;"	f
spacemacs//python-setup-shell	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/\/python-setup-shell (&optional root-dir)$/;"	f
spacemacs//python-sort-imports	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/\/python-sort-imports ()$/;"	f
spacemacs//pyvenv-mode-set-local-virtualenv	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/\/pyvenv-mode-set-local-virtualenv ()$/;"	f
spacemacs//quick-ahs-move	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/\/quick-ahs-move (forward)$/;"	f
spacemacs//rcirc-authinfo-config	conf/emacs/.emacs.d/layers/+chat/rcirc/funcs.el	/^(defun spacemacs\/\/rcirc-authinfo-config ()$/;"	f
spacemacs//rcirc-buffer-to-persp	conf/emacs/.emacs.d/layers/+chat/rcirc/funcs.el	/^(defun spacemacs\/\/rcirc-buffer-to-persp ()$/;"	f
spacemacs//rcirc-image-show-url	conf/emacs/.emacs.d/layers/+chat/rcirc/funcs.el	/^(defun spacemacs\/\/rcirc-image-show-url (_sender _response)$/;"	f
spacemacs//rcirc-persp-filter-save-buffers-function	conf/emacs/.emacs.d/layers/+chat/rcirc/funcs.el	/^(defun spacemacs\/\/rcirc-persp-filter-save-buffers-function (buffer)$/;"	f
spacemacs//rcirc-tweet-show-tweet	conf/emacs/.emacs.d/layers/+chat/rcirc/funcs.el	/^(defun spacemacs\/\/rcirc-tweet-show-tweet (_sender _response)$/;"	f
spacemacs//rcirc-with-authinfo	conf/emacs/.emacs.d/layers/+chat/rcirc/funcs.el	/^(defun spacemacs\/\/rcirc-with-authinfo (arg)$/;"	f
spacemacs//rcirc-with-znc	conf/emacs/.emacs.d/layers/+chat/rcirc/funcs.el	/^(defun spacemacs\/\/rcirc-with-znc (arg)$/;"	f
spacemacs//rcirc-write-log	conf/emacs/.emacs.d/layers/+chat/rcirc/funcs.el	/^(defun spacemacs\/\/rcirc-write-log (process sender response target text)$/;"	f
spacemacs//rcirc-youtube-show-info	conf/emacs/.emacs.d/layers/+chat/rcirc/funcs.el	/^(defun spacemacs\/\/rcirc-youtube-show-info (_sender _response)$/;"	f
spacemacs//react-fmt-before-save-hook	conf/emacs/.emacs.d/layers/+frameworks/react/funcs.el	/^(defun spacemacs\/\/react-fmt-before-save-hook ()$/;"	f
spacemacs//react-setup-backend	conf/emacs/.emacs.d/layers/+frameworks/react/funcs.el	/^(defun spacemacs\/\/react-setup-backend ()$/;"	f
spacemacs//react-setup-company	conf/emacs/.emacs.d/layers/+frameworks/react/funcs.el	/^(defun spacemacs\/\/react-setup-company ()$/;"	f
spacemacs//react-setup-lsp	conf/emacs/.emacs.d/layers/+frameworks/react/funcs.el	/^(defun spacemacs\/\/react-setup-lsp ()$/;"	f
spacemacs//react-setup-next-error-fn	conf/emacs/.emacs.d/layers/+frameworks/react/funcs.el	/^(defun spacemacs\/\/react-setup-next-error-fn ()$/;"	f
spacemacs//react-setup-yasnippet	conf/emacs/.emacs.d/layers/+frameworks/react/funcs.el	/^(defun spacemacs\/\/react-setup-yasnippet ()$/;"	f
spacemacs//redisplay	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/\/redisplay ()$/;"	f
spacemacs//remember-last-ahs-highlight	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/\/remember-last-ahs-highlight ()$/;"	f
spacemacs//remove-byte-compiled-files-in-dir	conf/emacs/.emacs.d/core/core-compilation.el	/^(defun spacemacs\/\/remove-byte-compiled-files-in-dir (dir)$/;"	f
spacemacs//report-issue-done	conf/emacs/.emacs.d/core/core-debug.el	/^(defun spacemacs\/\/report-issue-done ()$/;"	f
spacemacs//report-issue-kill-buffer-query	conf/emacs/.emacs.d/core/core-debug.el	/^(defun spacemacs\/\/report-issue-kill-buffer-query ()$/;"	f
spacemacs//reroot-links	conf/emacs/.emacs.d/core/core-documentation.el	/^(defun spacemacs\/\/reroot-links ()$/;"	f
spacemacs//restore-buffers-powerline	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/funcs.el	/^(defun spacemacs\/\/restore-buffers-powerline ()$/;"	f
spacemacs//revision-check	conf/emacs/.emacs.d/core/core-release-management.el	/^(defun spacemacs\/\/revision-check ()$/;"	f
spacemacs//revision-update	conf/emacs/.emacs.d/core/core-release-management.el	/^(defun spacemacs\/\/revision-update ()$/;"	f
spacemacs//ruby-enable-minitest-mode	conf/emacs/.emacs.d/layers/+lang/ruby/funcs.el	/^(defun spacemacs\/\/ruby-enable-minitest-mode ()$/;"	f
spacemacs//ruby-enable-rspec-mode	conf/emacs/.emacs.d/layers/+lang/ruby/funcs.el	/^(defun spacemacs\/\/ruby-enable-rspec-mode ()$/;"	f
spacemacs//ruby-enable-ruby-test-mode	conf/emacs/.emacs.d/layers/+lang/ruby/funcs.el	/^(defun spacemacs\/\/ruby-enable-ruby-test-mode ()$/;"	f
spacemacs//ruby-setup-backend	conf/emacs/.emacs.d/layers/+lang/ruby/funcs.el	/^(defun spacemacs\/\/ruby-setup-backend ()$/;"	f
spacemacs//ruby-setup-company	conf/emacs/.emacs.d/layers/+lang/ruby/funcs.el	/^(defun spacemacs\/\/ruby-setup-company ()$/;"	f
spacemacs//ruby-setup-dap	conf/emacs/.emacs.d/layers/+lang/ruby/funcs.el	/^(defun spacemacs\/\/ruby-setup-dap ()$/;"	f
spacemacs//ruby-setup-lsp	conf/emacs/.emacs.d/layers/+lang/ruby/funcs.el	/^(defun spacemacs\/\/ruby-setup-lsp ()$/;"	f
spacemacs//ruby-setup-lsp-dap	conf/emacs/.emacs.d/layers/+lang/ruby/funcs.el	/^(defun spacemacs\/\/ruby-setup-lsp-dap ()$/;"	f
spacemacs//ruby-setup-robe	conf/emacs/.emacs.d/layers/+lang/ruby/funcs.el	/^(defun spacemacs\/\/ruby-setup-robe ()$/;"	f
spacemacs//ruby-setup-robe-company	conf/emacs/.emacs.d/layers/+lang/ruby/funcs.el	/^(defun spacemacs\/\/ruby-setup-robe-company ()$/;"	f
spacemacs//ruby-setup-version-manager	conf/emacs/.emacs.d/layers/+lang/ruby/funcs.el	/^(defun spacemacs\/\/ruby-setup-version-manager ()$/;"	f
spacemacs//run-local-vars-mode-hook	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/\/run-local-vars-mode-hook ()$/;"	f
spacemacs//rust-quick-run-compilation-finish-function	conf/emacs/.emacs.d/layers/+lang/rust/funcs.el	/^(defun spacemacs\/\/rust-quick-run-compilation-finish-function (buffer status)$/;"	f
spacemacs//rust-quick-run-generate-tmp-file-name	conf/emacs/.emacs.d/layers/+lang/rust/funcs.el	/^(defun spacemacs\/\/rust-quick-run-generate-tmp-file-name (input-file-name)$/;"	f
spacemacs//rust-quick-run-tmp-file	conf/emacs/.emacs.d/layers/+lang/rust/funcs.el	/^(defvar spacemacs\/\/rust-quick-run-tmp-file nil$/;"	f
spacemacs//rust-setup-backend	conf/emacs/.emacs.d/layers/+lang/rust/funcs.el	/^(defun spacemacs\/\/rust-setup-backend ()$/;"	f
spacemacs//rust-setup-dap	conf/emacs/.emacs.d/layers/+lang/rust/funcs.el	/^(defun spacemacs\/\/rust-setup-dap ()$/;"	f
spacemacs//rust-setup-lsp	conf/emacs/.emacs.d/layers/+lang/rust/funcs.el	/^(defun spacemacs\/\/rust-setup-lsp ()$/;"	f
spacemacs//rust-setup-lsp-dap	conf/emacs/.emacs.d/layers/+lang/rust/funcs.el	/^(defun spacemacs\/\/rust-setup-lsp-dap ()$/;"	f
spacemacs//scala-backend-metals-p	conf/emacs/.emacs.d/layers/+lang/scala/funcs.el	/^(defun spacemacs\/\/scala-backend-metals-p ()$/;"	f
spacemacs//scala-display-sbt-at-bottom	conf/emacs/.emacs.d/layers/+lang/scala/funcs.el	/^(defun spacemacs\/\/scala-display-sbt-at-bottom (buffer args)$/;"	f
spacemacs//scala-setup-dap	conf/emacs/.emacs.d/layers/+lang/scala/funcs.el	/^(defun spacemacs\/\/scala-setup-dap ()$/;"	f
spacemacs//scala-setup-metals	conf/emacs/.emacs.d/layers/+lang/scala/funcs.el	/^(defun spacemacs\/\/scala-setup-metals ()$/;"	f
spacemacs//scala-setup-treeview	conf/emacs/.emacs.d/layers/+lang/scala/funcs.el	/^(defun spacemacs\/\/scala-setup-treeview ()$/;"	f
spacemacs//scroll-bar-hide	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/\/scroll-bar-hide ()$/;"	f
spacemacs//scroll-bar-show-delayed-hide	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/\/scroll-bar-show-delayed-hide (&rest _ignore)$/;"	f
spacemacs//scroll-ts-hint	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/funcs.el	/^(defun spacemacs\/\/scroll-ts-hint ()$/;"	f
spacemacs//scroll-ts-toggle-hint	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/funcs.el	/^(defun spacemacs\/\/scroll-ts-toggle-hint ()$/;"	f
spacemacs//search-engine-source	conf/emacs/.emacs.d/layers/+web-services/search-engine/funcs.el	/^(defun spacemacs\/\/search-engine-source (engines)$/;"	f
spacemacs//set-dotted-directory	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/\/set-dotted-directory ()$/;"	f
spacemacs//set-emoji-font	conf/emacs/.emacs.d/layers/+fun/emoji/funcs.el	/^(defun spacemacs\/\/set-emoji-font (frame)$/;"	f
spacemacs//set-emoji-font-for-current-frame	conf/emacs/.emacs.d/layers/+fun/emoji/funcs.el	/^(defun spacemacs\/\/set-emoji-font-for-current-frame ()$/;"	f
spacemacs//set-evil-shift-width	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/funcs.el	/^(defun spacemacs\/\/set-evil-shift-width ()$/;"	f
spacemacs//set-monospaced-font	conf/emacs/.emacs.d/layers/+intl/chinese/config.el	/^(defun spacemacs\/\/set-monospaced-font (english chinese english-size chinese-size)$/;"	f
spacemacs//set-persp-workspace	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/set-persp-workspace (workspace-params &optional persp frame)$/;"	f
spacemacs//set-vimish-powerline-for-startup-buffers	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/funcs.el	/^(defun spacemacs\/\/set-vimish-powerline-for-startup-buffers ()$/;"	f
spacemacs//set-whitespace-style-for-diff	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/\/set-whitespace-style-for-diff ()$/;"	f
spacemacs//setup-ido-vertical-mode	conf/emacs/.emacs.d/core/core-spacemacs.el	/^(defun spacemacs\/\/setup-ido-vertical-mode ()$/;"	f
spacemacs//setup-lsp-for-html-buffer	conf/emacs/.emacs.d/layers/+lang/html/funcs.el	/^(defun spacemacs\/\/setup-lsp-for-html-buffer ()$/;"	f
spacemacs//setup-lsp-for-web-mode-buffers	conf/emacs/.emacs.d/layers/+lang/html/funcs.el	/^(defun spacemacs\/\/setup-lsp-for-web-mode-buffers ()$/;"	f
spacemacs//setup-lsp-jump-handler	conf/emacs/.emacs.d/layers/+tools/lsp/funcs.el	/^(defun spacemacs\/\/setup-lsp-jump-handler ()$/;"	f
spacemacs//setup-protobuf-imenu	conf/emacs/.emacs.d/layers/+lang/protobuf/funcs.el	/^(defun spacemacs\/\/setup-protobuf-imenu ()$/;"	f
spacemacs//shell-pop-restore-window	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/\/shell-pop-restore-window ()$/;"	f
spacemacs//shell-scripts-setup-backend	conf/emacs/.emacs.d/layers/+lang/shell-scripts/funcs.el	/^(defun spacemacs\/\/shell-scripts-setup-backend ()$/;"	f
spacemacs//shell-scripts-setup-company	conf/emacs/.emacs.d/layers/+lang/shell-scripts/funcs.el	/^(defun spacemacs\/\/shell-scripts-setup-company ()$/;"	f
spacemacs//show-snippets-in-company	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defun spacemacs\/\/show-snippets-in-company (backend)$/;"	f
spacemacs//slack-buffer-to-persp	conf/emacs/.emacs.d/layers/+chat/slack/funcs.el	/^(defun spacemacs\/\/slack-buffer-to-persp ()$/;"	f
spacemacs//slack-persp-filter-save-buffers-function	conf/emacs/.emacs.d/layers/+chat/slack/funcs.el	/^(defun spacemacs\/\/slack-persp-filter-save-buffers-function (buffer)$/;"	f
spacemacs//slime-helm-source	conf/emacs/.emacs.d/layers/+lang/common-lisp/funcs.el	/^(defun spacemacs\/\/slime-helm-source (&optional table)$/;"	f
spacemacs//smartparens-disable-before-expand-snippet	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defun spacemacs\/\/smartparens-disable-before-expand-snippet ()$/;"	f
spacemacs//smartparens-restore-after-exit-snippet	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defun spacemacs\/\/smartparens-restore-after-exit-snippet ()$/;"	f
spacemacs//smerge-ts-hint	conf/emacs/.emacs.d/layers/+source-control/version-control/funcs.el	/^(defun spacemacs\/\/smerge-ts-hint ()$/;"	f
spacemacs//smerge-ts-toggle-hint	conf/emacs/.emacs.d/layers/+source-control/version-control/funcs.el	/^(defun spacemacs\/\/smerge-ts-toggle-hint ()$/;"	f
spacemacs//space-doc-add-region-edge-text-property	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(defsubst spacemacs\/\/space-doc-add-region-edge-text-property$/;"	f
spacemacs//space-doc-advice-org-do-emphasis-faces	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(defun spacemacs\/\/space-doc-advice-org-do-emphasis-faces (&optional enable)$/;"	f
spacemacs//space-doc-alternative-emphasis	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(defun spacemacs\/\/space-doc-alternative-emphasis (&optional enable)$/;"	f
spacemacs//space-doc-alternative-tags-look	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(defun spacemacs\/\/space-doc-alternative-tags-look (&optional enable)$/;"	f
spacemacs//space-doc-emphasis-region	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(defun spacemacs\/\/space-doc-emphasis-region (begin end)$/;"	f
spacemacs//space-doc-find-regions-by-text-property	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(defun spacemacs\/\/space-doc-find-regions-by-text-property$/;"	f
spacemacs//space-doc-font-lock-fontify-region-function	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(defun spacemacs\/\/space-doc-font-lock-fontify-region-function$/;"	f
spacemacs//space-doc-hide-line-numbers	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(defun spacemacs\/\/space-doc-hide-line-numbers (&optional enable)$/;"	f
spacemacs//space-doc-link-protocol	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(defun spacemacs\/\/space-doc-link-protocol (&optional enable)$/;"	f
spacemacs//space-doc-open	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(defun spacemacs\/\/space-doc-open (path)$/;"	f
spacemacs//space-doc-org-bl-face-remap	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(defun spacemacs\/\/space-doc-org-bl-face-remap (&optional enable)$/;"	f
spacemacs//space-doc-org-do-emphasis-faces-advice	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(defun spacemacs\/\/space-doc-org-do-emphasis-faces-advice (found)$/;"	f
spacemacs//space-doc-org-indent-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(defun spacemacs\/\/space-doc-org-indent-mode (&optional flag)$/;"	f
spacemacs//space-doc-org-kbd-face-remap	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(defun spacemacs\/\/space-doc-org-kbd-face-remap (&optional enable)$/;"	f
spacemacs//space-doc-resize-inline-images	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(defun spacemacs\/\/space-doc-resize-inline-images (&optional enable)$/;"	f
spacemacs//space-doc-set-cache	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(defun spacemacs\/\/space-doc-set-cache (&optional flag)$/;"	f
spacemacs//space-doc-tags-fontify	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(defsubst spacemacs\/\/space-doc-tags-fontify (startish endish)$/;"	f
spacemacs//space-doc-view-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-org/local/space-doc/space-doc.el	/^(defun spacemacs\/\/space-doc-view-mode (&optional flag)$/;"	f
spacemacs//spacebind-form-visitor	conf/emacs/.emacs.d/core/core-spacebind.el	/^(defun spacemacs\/\/spacebind-form-visitor (form path k-fn p-fn)$/;"	f
spacemacs//spacebind-form-walker	conf/emacs/.emacs.d/core/core-spacebind.el	/^(defun spacemacs\/\/spacebind-form-walker (b-forms k-fn p-fn)$/;"	f
spacemacs//spacebind-form-walker-rec	conf/emacs/.emacs.d/core/core-spacebind.el	/^(defun spacemacs\/\/spacebind-form-walker-rec (path k-fn p-fn form)$/;"	f
spacemacs//spacebind-stack-push	conf/emacs/.emacs.d/core/core-spacebind.el	/^(defun spacemacs\/\/spacebind-stack-push (state stack-k sexp)$/;"	f
spacemacs//sql-setup-backend	conf/emacs/.emacs.d/layers/+lang/sql/funcs.el	/^(defun spacemacs\/\/sql-setup-backend ()$/;"	f
spacemacs//sql-setup-company	conf/emacs/.emacs.d/layers/+lang/sql/funcs.el	/^(defun spacemacs\/\/sql-setup-company ()$/;"	f
spacemacs//subseq	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs\/\/subseq (seq start end)$/;"	f
spacemacs//support-evilified-buffer-p	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defun spacemacs\/\/support-evilified-buffer-p ()$/;"	f
spacemacs//support-hjkl-navigation-p	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defun spacemacs\/\/support-hjkl-navigation-p ()$/;"	f
spacemacs//surround-code	conf/emacs/.emacs.d/layers/+emacs/org/funcs.el	/^(defun spacemacs\/\/surround-code ()$/;"	f
spacemacs//surround-drawer	conf/emacs/.emacs.d/layers/+emacs/org/funcs.el	/^(defun spacemacs\/\/surround-drawer ()$/;"	f
spacemacs//svelte-setup-backend	conf/emacs/.emacs.d/layers/+frameworks/svelte/funcs.el	/^(defun spacemacs\/\/svelte-setup-backend ()$/;"	f
spacemacs//svelte-setup-company	conf/emacs/.emacs.d/layers/+frameworks/svelte/funcs.el	/^(defun spacemacs\/\/svelte-setup-company ()$/;"	f
spacemacs//svelte-setup-dumb	conf/emacs/.emacs.d/layers/+frameworks/svelte/funcs.el	/^(defun spacemacs\/\/svelte-setup-dumb ()$/;"	f
spacemacs//svelte-setup-editor-style	conf/emacs/.emacs.d/layers/+frameworks/svelte/funcs.el	/^(defun spacemacs\/\/svelte-setup-editor-style ()$/;"	f
spacemacs//svelte-setup-keybindings	conf/emacs/.emacs.d/layers/+frameworks/svelte/funcs.el	/^(defun spacemacs\/\/svelte-setup-keybindings ()$/;"	f
spacemacs//svelte-setup-lsp	conf/emacs/.emacs.d/layers/+frameworks/svelte/funcs.el	/^(defun spacemacs\/\/svelte-setup-lsp ()$/;"	f
spacemacs//svelte-setup-transient-state	conf/emacs/.emacs.d/layers/+frameworks/svelte/funcs.el	/^(defun spacemacs\/\/svelte-setup-transient-state ()$/;"	f
spacemacs//svelte-setup-yasnippet	conf/emacs/.emacs.d/layers/+frameworks/svelte/funcs.el	/^(defun spacemacs\/\/svelte-setup-yasnippet ()$/;"	f
spacemacs//swift-setup-backend	conf/emacs/.emacs.d/layers/+lang/swift/funcs.el	/^(defun spacemacs\/\/swift-setup-backend ()$/;"	f
spacemacs//swift-setup-company	conf/emacs/.emacs.d/layers/+lang/swift/funcs.el	/^(defun spacemacs\/\/swift-setup-company ()$/;"	f
spacemacs//symbol-highlight-doc	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/\/symbol-highlight-doc ()$/;"	f
spacemacs//symbol-highlight-ts-doc	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/\/symbol-highlight-ts-doc ()$/;"	f
spacemacs//symbol-overlay-doc	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/\/symbol-overlay-doc ()$/;"	f
spacemacs//symbol-overlay-ts-doc	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/\/symbol-overlay-ts-doc ()$/;"	f
spacemacs//tabs-switch-and-hide	conf/emacs/.emacs.d/layers/+emacs/tabs/funcs.el	/^(defun spacemacs\/\/tabs-switch-and-hide (arg)$/;"	f
spacemacs//tabs-timer-hide	conf/emacs/.emacs.d/layers/+emacs/tabs/funcs.el	/^(defun spacemacs\/\/tabs-timer-hide ()$/;"	f
spacemacs//tabs-timer-initialize	conf/emacs/.emacs.d/layers/+emacs/tabs/funcs.el	/^(defun spacemacs\/\/tabs-timer-initialize (secs)$/;"	f
spacemacs//terraform-setup-backend	conf/emacs/.emacs.d/layers/+tools/terraform/funcs.el	/^(defun spacemacs\/\/terraform-setup-backend ()$/;"	f
spacemacs//terraform-setup-company	conf/emacs/.emacs.d/layers/+tools/terraform/funcs.el	/^(defun spacemacs\/\/terraform-setup-company ()$/;"	f
spacemacs//test-list	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/\/test-list (pred varlist test-desc &optional element-desc)$/;"	f
spacemacs//test-var	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/\/test-var (pred var test-desc)$/;"	f
spacemacs//theming	conf/emacs/.emacs.d/layers/+themes/theming/funcs.el	/^(defun spacemacs\/\/theming (theme &optional no-confirm no-enable)$/;"	f
spacemacs//tide--list-to-string	conf/emacs/.emacs.d/layers/+tools/tide/funcs.el	/^(defun spacemacs\/\/tide--list-to-string (list)$/;"	f
spacemacs//tide-create-jsconfig-file	conf/emacs/.emacs.d/layers/+tools/tide/funcs.el	/^(defun spacemacs\/\/tide-create-jsconfig-file ()$/;"	f
spacemacs//tide-setup	conf/emacs/.emacs.d/layers/+tools/tide/funcs.el	/^(defun spacemacs\/\/tide-setup ()$/;"	f
spacemacs//tide-setup-bindings	conf/emacs/.emacs.d/layers/+tools/tide/funcs.el	/^(defun spacemacs\/\/tide-setup-bindings ()$/;"	f
spacemacs//tide-setup-company	conf/emacs/.emacs.d/layers/+tools/tide/funcs.el	/^(defun spacemacs\/\/tide-setup-company (&rest modes)$/;"	f
spacemacs//tide-setup-eldoc	conf/emacs/.emacs.d/layers/+tools/tide/funcs.el	/^(defun spacemacs\/\/tide-setup-eldoc ()$/;"	f
spacemacs//tide-setup-jump-handle	conf/emacs/.emacs.d/layers/+tools/tide/funcs.el	/^(defun spacemacs\/\/tide-setup-jump-handle ()$/;"	f
spacemacs//timed-initialize	conf/emacs/.emacs.d/core/core-debug.el	/^(defun spacemacs\/\/timed-initialize (orig-func &rest args)$/;"	f
spacemacs//timed-load	conf/emacs/.emacs.d/core/core-debug.el	/^(defun spacemacs\/\/timed-load(orig-func &rest args)$/;"	f
spacemacs//timed-require	conf/emacs/.emacs.d/core/core-debug.el	/^(defun spacemacs\/\/timed-require(orig-func &rest args)$/;"	f
spacemacs//toc-org-unhrefify-toc	conf/emacs/.emacs.d/core/core-documentation.el	/^(defun spacemacs\/\/toc-org-unhrefify-toc ()$/;"	f
spacemacs//toggle-gui-elements	conf/emacs/.emacs.d/core/core-early-funcs.el	/^(defun spacemacs\/\/toggle-gui-elements (&optional on-off)$/;"	f
spacemacs//toggle-shell-auto-completion-based-on-path	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/\/toggle-shell-auto-completion-based-on-path ()$/;"	f
spacemacs//trailing-whitespace	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/\/trailing-whitespace ()$/;"	f
spacemacs//transient-state-add-bindings-name	conf/emacs/.emacs.d/core/core-transient-state.el	/^(defun spacemacs\/\/transient-state-add-bindings-name (name)$/;"	f
spacemacs//transient-state-adjust-bindings	conf/emacs/.emacs.d/core/core-transient-state.el	/^(defun spacemacs\/\/transient-state-adjust-bindings (bindings to-remove to-add)$/;"	f
spacemacs//transient-state-body-func-name	conf/emacs/.emacs.d/core/core-transient-state.el	/^(defun spacemacs\/\/transient-state-body-func-name (name)$/;"	f
spacemacs//transient-state-func-name	conf/emacs/.emacs.d/core/core-transient-state.el	/^(defun spacemacs\/\/transient-state-func-name (name)$/;"	f
spacemacs//transient-state-heads-name	conf/emacs/.emacs.d/core/core-transient-state.el	/^(defun spacemacs\/\/transient-state-heads-name (name)$/;"	f
spacemacs//transient-state-make-doc	conf/emacs/.emacs.d/core/core-transient-state.el	/^(defun spacemacs\/\/transient-state-make-doc$/;"	f
spacemacs//transient-state-props-var-name	conf/emacs/.emacs.d/core/core-transient-state.el	/^(defun spacemacs\/\/transient-state-props-var-name (name)$/;"	f
spacemacs//transient-state-remove-bindings-name	conf/emacs/.emacs.d/core/core-transient-state.el	/^(defun spacemacs\/\/transient-state-remove-bindings-name (name)$/;"	f
spacemacs//tree-sitter-hl-maybe	conf/emacs/.emacs.d/layers/+tools/tree-sitter/funcs.el	/^(defun spacemacs\/\/tree-sitter-hl-maybe ()$/;"	f
spacemacs//typescript-setup-backend	conf/emacs/.emacs.d/layers/+lang/typescript/funcs.el	/^(defun spacemacs\/\/typescript-setup-backend ()$/;"	f
spacemacs//typescript-setup-checkers	conf/emacs/.emacs.d/layers/+lang/typescript/funcs.el	/^(defun spacemacs\/\/typescript-setup-checkers ()$/;"	f
spacemacs//typescript-setup-company	conf/emacs/.emacs.d/layers/+lang/typescript/funcs.el	/^(defun spacemacs\/\/typescript-setup-company ()$/;"	f
spacemacs//typescript-setup-eldoc	conf/emacs/.emacs.d/layers/+lang/typescript/funcs.el	/^(defun spacemacs\/\/typescript-setup-eldoc ()$/;"	f
spacemacs//typescript-setup-lsp	conf/emacs/.emacs.d/layers/+lang/typescript/funcs.el	/^(defun spacemacs\/\/typescript-setup-lsp ()$/;"	f
spacemacs//typescript-setup-lsp-eldoc	conf/emacs/.emacs.d/layers/+lang/typescript/funcs.el	/^(defun spacemacs\/\/typescript-setup-lsp-eldoc ()$/;"	f
spacemacs//unprevent-minibuffer-escape	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/\/unprevent-minibuffer-escape ()$/;"	f
spacemacs//update-custom-layouts	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/update-custom-layouts ()$/;"	f
spacemacs//update-last-emacs-version	conf/emacs/.emacs.d/core/core-compilation.el	/^(defun spacemacs\/\/update-last-emacs-version ()$/;"	f
spacemacs//vimscript-setup-backend	conf/emacs/.emacs.d/layers/+lang/vimscript/funcs.el	/^(defun spacemacs\/\/vimscript-setup-backend ()$/;"	f
spacemacs//vimscript-setup-company	conf/emacs/.emacs.d/layers/+lang/vimscript/funcs.el	/^(defun spacemacs\/\/vimscript-setup-company ()$/;"	f
spacemacs//vterm-bind-m-r	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/\/vterm-bind-m-r (mode-map)$/;"	f
spacemacs//vterm-make-history-candidates	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/\/vterm-make-history-candidates ()$/;"	f
spacemacs//vue-setup-backend	conf/emacs/.emacs.d/layers/+frameworks/vue/funcs.el	/^(defun spacemacs\/\/vue-setup-backend ()$/;"	f
spacemacs//vue-setup-company	conf/emacs/.emacs.d/layers/+frameworks/vue/funcs.el	/^(defun spacemacs\/\/vue-setup-company ()$/;"	f
spacemacs//vue-setup-dumb	conf/emacs/.emacs.d/layers/+frameworks/vue/funcs.el	/^(defun spacemacs\/\/vue-setup-dumb ()$/;"	f
spacemacs//vue-setup-editor-style	conf/emacs/.emacs.d/layers/+frameworks/vue/funcs.el	/^(defun spacemacs\/\/vue-setup-editor-style ()$/;"	f
spacemacs//vue-setup-keybindings	conf/emacs/.emacs.d/layers/+frameworks/vue/funcs.el	/^(defun spacemacs\/\/vue-setup-keybindings ()$/;"	f
spacemacs//vue-setup-lsp	conf/emacs/.emacs.d/layers/+frameworks/vue/funcs.el	/^(defun spacemacs\/\/vue-setup-lsp ()$/;"	f
spacemacs//vue-setup-transient-state	conf/emacs/.emacs.d/layers/+frameworks/vue/funcs.el	/^(defun spacemacs\/\/vue-setup-transient-state ()$/;"	f
spacemacs//vue-setup-yasnippet	conf/emacs/.emacs.d/layers/+frameworks/vue/funcs.el	/^(defun spacemacs\/\/vue-setup-yasnippet ()$/;"	f
spacemacs//web-setup-transient-state	conf/emacs/.emacs.d/layers/+lang/html/funcs.el	/^(defun spacemacs\/\/web-setup-transient-state ()$/;"	f
spacemacs//window-purpose-new-workspace	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/funcs.el	/^(defun spacemacs\/\/window-purpose-new-workspace ()$/;"	f
spacemacs//window-split-eligible-buffers	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/\/window-split-eligible-buffers ()$/;"	f
spacemacs//window-ts-hint	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defun spacemacs\/\/window-ts-hint ()$/;"	f
spacemacs//window-ts-toggle-hint	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defun spacemacs\/\/window-ts-toggle-hint ()$/;"	f
spacemacs//winum-neotree-assign-func	conf/emacs/.emacs.d/layers/+filetree/neotree/funcs.el	/^(defun spacemacs\/\/winum-neotree-assign-func ()$/;"	f
spacemacs//word-in-dict-p	conf/emacs/.emacs.d/layers/+checkers/spell-checking/funcs.el	/^(defun spacemacs\/\/word-in-dict-p (word)$/;"	f
spacemacs//workspace-format-name	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/workspace-format-name (workspace)$/;"	f
spacemacs//workspace-get-used-slots	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/workspace-get-used-slots ()$/;"	f
spacemacs//workspace-next-free-slot	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/workspace-next-free-slot ()$/;"	f
spacemacs//workspaces-ts-hint	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/workspaces-ts-hint ()$/;"	f
spacemacs//workspaces-ts-toggle-hint	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/\/workspaces-ts-toggle-hint ()$/;"	f
spacemacs//xclipboard-get-copy-command	conf/emacs/.emacs.d/layers/+tools/xclipboard/local/spacemacs-xclipboard/spacemacs-xclipboard.el	/^(defun spacemacs\/\/xclipboard-get-copy-command ()$/;"	f
spacemacs//xclipboard-get-paste-command	conf/emacs/.emacs.d/layers/+tools/xclipboard/local/spacemacs-xclipboard/spacemacs-xclipboard.el	/^(defun spacemacs\/\/xclipboard-get-paste-command ()$/;"	f
spacemacs//yank-indent-region	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/\/yank-indent-region (yank-func &rest args)$/;"	f
spacemacs//zig-setup-backend	conf/emacs/.emacs.d/layers/+lang/zig/funcs.el	/^(defun spacemacs\/\/zig-setup-backend ()$/;"	f
spacemacs//zig-setup-zls	conf/emacs/.emacs.d/layers/+lang/zig/funcs.el	/^(defun spacemacs\/\/zig-setup-zls ()$/;"	f
spacemacs//znc-auth-source-fetch-password	conf/emacs/.emacs.d/layers/+chat/rcirc/funcs.el	/^(defun spacemacs\/\/znc-auth-source-fetch-password (server)$/;"	f
spacemacs//znc-rcirc-connect	conf/emacs/.emacs.d/layers/+chat/rcirc/funcs.el	/^(defun spacemacs\/\/znc-rcirc-connect ()$/;"	f
spacemacs//znc-rcirc-server-alist-get-authinfo	conf/emacs/.emacs.d/layers/+chat/rcirc/funcs.el	/^(defun spacemacs\/\/znc-rcirc-server-alist-get-authinfo (server-alist)$/;"	f
spacemacs//zoom-frm-do	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/funcs.el	/^(defun spacemacs\/\/zoom-frm-do (arg)$/;"	f
spacemacs//zoom-frm-powerline-reset	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/funcs.el	/^(defun spacemacs\/\/zoom-frm-powerline-reset ()$/;"	f
spacemacs/ace-buffer-links	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/ace-buffer-links ()$/;"	f
spacemacs/ace-delete-window	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/ace-delete-window (&optional arg)$/;"	f
spacemacs/ace-kill-this-buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/ace-kill-this-buffer (&optional arg)$/;"	f
spacemacs/add-evil-cursor	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/funcs.el	/^(defun spacemacs\/add-evil-cursor (state color shape)$/;"	f
spacemacs/add-key-based-replacements-for-minor-mode	conf/emacs/.emacs.d/core/core-spacebind.el	/^(defun spacemacs\/add-key-based-replacements-for-minor-mode$/;"	f
spacemacs/add-realgud-debugger	conf/emacs/.emacs.d/layers/+tools/debug/funcs.el	/^(defun spacemacs\/add-realgud-debugger (mode debugger)$/;"	f
spacemacs/add-to-hook	conf/emacs/.emacs.d/core/core-hooks.el	/^(defun spacemacs\/add-to-hook (hook funs)$/;"	f
spacemacs/add-to-hooks	conf/emacs/.emacs.d/core/core-hooks.el	/^(defun spacemacs\/add-to-hooks (fun hooks &optional append local)$/;"	f
spacemacs/add-which-key-fn-key-seq-override	conf/emacs/.emacs.d/core/core-spacebind.el	/^(defun spacemacs\/add-which-key-fn-key-seq-override$/;"	f
spacemacs/add-word-to-dict-buffer	conf/emacs/.emacs.d/layers/+checkers/spell-checking/funcs.el	/^(defun spacemacs\/add-word-to-dict-buffer ()$/;"	f
spacemacs/add-word-to-dict-global	conf/emacs/.emacs.d/layers/+checkers/spell-checking/funcs.el	/^(defun spacemacs\/add-word-to-dict-global ()$/;"	f
spacemacs/add-word-to-dict-session	conf/emacs/.emacs.d/layers/+checkers/spell-checking/funcs.el	/^(defun spacemacs\/add-word-to-dict-session ()$/;"	f
spacemacs/advice-popwin	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/funcs.el	/^(defun spacemacs\/advice-popwin (orig-fun &rest args)$/;"	f
spacemacs/ahs-to-iedit	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/ahs-to-iedit ()$/;"	f
spacemacs/align-repeat	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/align-repeat (start end regexp &optional justify-right after)$/;"	f
spacemacs/align-repeat-decimal	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/align-repeat-decimal (start end)$/;"	f
spacemacs/alternate-buffer	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/alternate-buffer (&optional window)$/;"	f
spacemacs/alternate-window	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/alternate-window ()$/;"	f
spacemacs/anaconda-view-forward-and-push	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/anaconda-view-forward-and-push ()$/;"	f
spacemacs/ansible-auto-decrypt-encrypt-vault	conf/emacs/.emacs.d/layers/+tools/ansible/funcs.el	/^(defun spacemacs\/ansible-auto-decrypt-encrypt-vault ()$/;"	f
spacemacs/ansible-company-maybe-enable	conf/emacs/.emacs.d/layers/+tools/ansible/funcs.el	/^(defun spacemacs\/ansible-company-maybe-enable ()$/;"	f
spacemacs/ansible-doc-maybe-enable	conf/emacs/.emacs.d/layers/+tools/ansible/funcs.el	/^(defun spacemacs\/ansible-doc-maybe-enable ()$/;"	f
spacemacs/ansible-maybe-enable	conf/emacs/.emacs.d/layers/+tools/ansible/funcs.el	/^(defun spacemacs\/ansible-maybe-enable ()$/;"	f
spacemacs/auto-yasnippet-expand	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defun spacemacs\/auto-yasnippet-expand ()$/;"	f
spacemacs/auto-yasnippet-expand-from-history	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defun spacemacs\/auto-yasnippet-expand-from-history ()$/;"	f
spacemacs/backward-kill-word-or-region	conf/emacs/.emacs.d/layers/+emacs/better-defaults/funcs.el	/^(defun spacemacs\/backward-kill-word-or-region (&optional arg)$/;"	f
spacemacs/bibtex-find-bib-file	conf/emacs/.emacs.d/layers/+lang/bibtex/funcs.el	/^(defun spacemacs\/bibtex-find-bib-file ()$/;"	f
spacemacs/c-c++-lsp-ccls-call-hierarchy-inv	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/c-c++-lsp-ccls-call-hierarchy-inv ()$/;"	f
spacemacs/c-c++-lsp-ccls-inheritance-hierarchy-inv	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/c-c++-lsp-ccls-inheritance-hierarchy-inv ()$/;"	f
spacemacs/c-c++-organize-includes	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defalias 'spacemacs\/c-c++-organize-includes 'cpp-auto-include)$/;"	f
spacemacs/c-c++-organize-includes-on-save	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/c-c++-organize-includes-on-save ()$/;"	f
spacemacs/c-c++-tags-find-file	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/c-c++-tags-find-file ()$/;"	f
spacemacs/c-c++-tags-find-references	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/c-c++-tags-find-references ()$/;"	f
spacemacs/c-c++-tags-find-references-at-point	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/c-c++-tags-find-references-at-point (&optional prefix)$/;"	f
spacemacs/c-c++-tags-find-symbol	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/c-c++-tags-find-symbol ()$/;"	f
spacemacs/c-c++-tags-find-symbol-at-point	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/c-c++-tags-find-symbol-at-point (&optional prefix)$/;"	f
spacemacs/c-c++-tags-imenu	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/c-c++-tags-imenu ()$/;"	f
spacemacs/c-c++-use-rtags	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/c-c++-use-rtags (&optional useFileManager)$/;"	f
spacemacs/centered-buffer-transient-state	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing-visual/funcs.el	/^(defun spacemacs\/centered-buffer-transient-state ()$/;"	f
spacemacs/check-for-new-version	conf/emacs/.emacs.d/core/core-release-management.el	/^(defun spacemacs\/check-for-new-version (force &optional interval)$/;"	f
spacemacs/check-large-file	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/check-large-file ()$/;"	f
spacemacs/cider-debug-setup	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/cider-debug-setup ()$/;"	f
spacemacs/cider-display-error-buffer	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/cider-display-error-buffer (&optional arg)$/;"	f
spacemacs/cider-eval-sexp-end-of-line	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/cider-eval-sexp-end-of-line ()$/;"	f
spacemacs/cider-find-and-clear-repl-buffer	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/cider-find-and-clear-repl-buffer ()$/;"	f
spacemacs/cider-send-buffer-in-repl-and-focus	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/cider-send-buffer-in-repl-and-focus (&optional set-namespace)$/;"	f
spacemacs/cider-send-function-to-repl	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/cider-send-function-to-repl ()$/;"	f
spacemacs/cider-send-function-to-repl-focus	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/cider-send-function-to-repl-focus ()$/;"	f
spacemacs/cider-send-last-sexp-to-repl	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/cider-send-last-sexp-to-repl ()$/;"	f
spacemacs/cider-send-last-sexp-to-repl-focus	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/cider-send-last-sexp-to-repl-focus ()$/;"	f
spacemacs/cider-send-ns-form-to-repl	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/cider-send-ns-form-to-repl ()$/;"	f
spacemacs/cider-send-ns-form-to-repl-focus	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/cider-send-ns-form-to-repl-focus ()$/;"	f
spacemacs/cider-send-region-to-repl	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/cider-send-region-to-repl (start end)$/;"	f
spacemacs/cider-send-region-to-repl-focus	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/cider-send-region-to-repl-focus (start end)$/;"	f
spacemacs/cider-test-rerun-failed-tests	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/cider-test-rerun-failed-tests ()$/;"	f
spacemacs/cider-test-run-all-tests	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defalias 'spacemacs\/cider-test-run-all-tests #'spacemacs\/cider-test-run-project-tests$/;"	f
spacemacs/cider-test-run-focused-test	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/cider-test-run-focused-test ()$/;"	f
spacemacs/cider-test-run-loaded-tests	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/cider-test-run-loaded-tests ()$/;"	f
spacemacs/cider-test-run-ns-tests	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/cider-test-run-ns-tests ()$/;"	f
spacemacs/cider-test-run-project-tests	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/cider-test-run-project-tests ()$/;"	f
spacemacs/cider-toggle-repl-font-locking	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/cider-toggle-repl-font-locking ()$/;"	f
spacemacs/cider-toggle-repl-pretty-printing	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/cider-toggle-repl-pretty-printing ()$/;"	f
spacemacs/cl-eval-current-form	conf/emacs/.emacs.d/layers/+lang/common-lisp/funcs.el	/^(defun spacemacs\/cl-eval-current-form ()$/;"	f
spacemacs/cl-eval-current-form-sp	conf/emacs/.emacs.d/layers/+lang/common-lisp/funcs.el	/^(defun spacemacs\/cl-eval-current-form-sp (&optional arg)$/;"	f
spacemacs/cl-eval-current-symbol-sp	conf/emacs/.emacs.d/layers/+lang/common-lisp/funcs.el	/^(defun spacemacs\/cl-eval-current-symbol-sp ()$/;"	f
spacemacs/clang-format-function	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/clang-format-function (&optional style)$/;"	f
spacemacs/clang-format-on-save	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/clang-format-on-save ()$/;"	f
spacemacs/clang-format-region-or-buffer	conf/emacs/.emacs.d/layers/+lang/c-c++/funcs.el	/^(defun spacemacs\/clang-format-region-or-buffer (&optional style)$/;"	f
spacemacs/clj-describe-missing-refactorings	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/clj-describe-missing-refactorings ()$/;"	f
spacemacs/clj-find-var	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defun spacemacs\/clj-find-var (sym-name &optional arg)$/;"	f
spacemacs/clone-workspace	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/clone-workspace ()$/;"	f
spacemacs/comint-clear-buffer	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/comint-clear-buffer ()$/;"	f
spacemacs/compleseus-find-file	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/compleseus-find-file ()$/;"	f
spacemacs/compleseus-pers-switch-project	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/compleseus-pers-switch-project (arg)$/;"	f
spacemacs/compleseus-search	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/compleseus-search (force-initial-input initial-directory)$/;"	f
spacemacs/compleseus-search-auto	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/compleseus-search-auto ()$/;"	f
spacemacs/compleseus-search-auto-symbol	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/compleseus-search-auto-symbol ()$/;"	f
spacemacs/compleseus-search-default	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/compleseus-search-default ()$/;"	f
spacemacs/compleseus-search-dir	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/compleseus-search-dir ()$/;"	f
spacemacs/compleseus-search-dir-symbol	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/compleseus-search-dir-symbol ()$/;"	f
spacemacs/compleseus-search-from	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/compleseus-search-from (input)$/;"	f
spacemacs/compleseus-search-projectile	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/compleseus-search-projectile ()$/;"	f
spacemacs/compleseus-search-projectile-symbol	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/compleseus-search-projectile-symbol ()$/;"	f
spacemacs/compleseus-spacemacs-layout-layouts	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/compleseus-spacemacs-layout-layouts ()$/;"	f
spacemacs/compleseus-switch-to-buffer	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/compleseus-switch-to-buffer ()$/;"	f
spacemacs/compute-mode-line-height	conf/emacs/.emacs.d/core/core-fonts-support.el	/^(defun spacemacs\/compute-mode-line-height ()$/;"	f
spacemacs/confluence-save-to-confluence-major-edit	conf/emacs/.emacs.d/layers/+web-services/confluence/funcs.el	/^(defun spacemacs\/confluence-save-to-confluence-major-edit ()$/;"	f
spacemacs/confluence-save-to-confluence-minor-edit	conf/emacs/.emacs.d/layers/+web-services/confluence/funcs.el	/^(defun spacemacs\/confluence-save-to-confluence-minor-edit ()$/;"	f
spacemacs/consult-edit	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/consult-edit ()$/;"	f
spacemacs/consult-eshell-history	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/consult-eshell-history ()$/;"	f
spacemacs/consult-jump-in-buffer	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/consult-jump-in-buffer ()$/;"	f
spacemacs/consult-line	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/consult-line ()$/;"	f
spacemacs/consult-line-multi	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/consult-line-multi (&optional toggle-restrict)$/;"	f
spacemacs/consult-line-multi-symbol	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/consult-line-multi-symbol (&optional toggle-restrict)$/;"	f
spacemacs/consult-line-symbol	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/consult-line-symbol ()$/;"	f
spacemacs/consult-narrow-cycle-backward	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/consult-narrow-cycle-backward ()$/;"	f
spacemacs/consult-narrow-cycle-forward	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/consult-narrow-cycle-forward ()$/;"	f
spacemacs/consult-shell-history	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/consult-shell-history ()$/;"	f
spacemacs/consult-toggle-preview	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/consult-toggle-preview ()$/;"	f
spacemacs/copy-buffer-name	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/copy-buffer-name ()$/;"	f
spacemacs/copy-clipboard-to-whole-buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/copy-clipboard-to-whole-buffer ()$/;"	f
spacemacs/copy-directory-path	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/copy-directory-path ()$/;"	f
spacemacs/copy-file-name	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/copy-file-name ()$/;"	f
spacemacs/copy-file-name-base	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/copy-file-name-base ()$/;"	f
spacemacs/copy-file-path	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/copy-file-path ()$/;"	f
spacemacs/copy-file-path-with-line	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/copy-file-path-with-line ()$/;"	f
spacemacs/copy-file-path-with-line-column	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/copy-file-path-with-line-column ()$/;"	f
spacemacs/copy-whole-buffer-to-clipboard	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/copy-whole-buffer-to-clipboard ()$/;"	f
spacemacs/counsel-find-file	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/counsel-find-file (&optional initial-input)$/;"	f
spacemacs/counsel-ggtags-set-jump-handler	conf/emacs/.emacs.d/layers/+tags/gtags/funcs.el	/^(defun spacemacs\/counsel-ggtags-set-jump-handler ()$/;"	f
spacemacs/counsel-git-grep-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/counsel-git-grep-region-or-symbol ()$/;"	f
spacemacs/counsel-gtags-define-keys-for-mode	conf/emacs/.emacs.d/layers/+tags/gtags/funcs.el	/^(defun spacemacs\/counsel-gtags-define-keys-for-mode (mode)$/;"	f
spacemacs/counsel-gtags-maybe-dwim	conf/emacs/.emacs.d/layers/+tags/gtags/funcs.el	/^(defun spacemacs\/counsel-gtags-maybe-dwim ()$/;"	f
spacemacs/counsel-jump-in-buffer	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/counsel-jump-in-buffer ()$/;"	f
spacemacs/counsel-recentf	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/counsel-recentf ()$/;"	f
spacemacs/counsel-search	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/counsel-search$/;"	f
spacemacs/counsel-search-docs	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/counsel-search-docs ()$/;"	f
spacemacs/counsel-up-directory-no-error	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/counsel-up-directory-no-error ()$/;"	f
spacemacs/counsel-vterm-search-history	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/counsel-vterm-search-history ()$/;"	f
spacemacs/count-words-analysis	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/count-words-analysis (start end)$/;"	f
spacemacs/crystal-run-main	conf/emacs/.emacs.d/layers/+lang/crystal/funcs.el	/^(defun spacemacs\/crystal-run-main ()$/;"	f
spacemacs/css-contract-statement	conf/emacs/.emacs.d/layers/+lang/html/funcs.el	/^(defun spacemacs\/css-contract-statement ()$/;"	f
spacemacs/css-expand-statement	conf/emacs/.emacs.d/layers/+lang/html/funcs.el	/^(defun spacemacs\/css-expand-statement ()$/;"	f
spacemacs/current-state-color	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/funcs.el	/^(defun spacemacs\/current-state-color ()$/;"	f
spacemacs/current-state-face	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/funcs.el	/^(defun spacemacs\/current-state-face ()$/;"	f
spacemacs/custom-newline	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/custom-newline (pos)$/;"	f
spacemacs/customization-valid-p	conf/emacs/.emacs.d/core/core-customization.el	/^(defun spacemacs\/customization-valid-p (var-symbol)$/;"	f
spacemacs/customize-powerline-faces	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/funcs.el	/^(defun spacemacs\/customize-powerline-faces ()$/;"	f
spacemacs/cycle-spacemacs-theme	conf/emacs/.emacs.d/core/core-themes-support.el	/^(defun spacemacs\/cycle-spacemacs-theme (&optional backward)$/;"	f
spacemacs/cycle-spacemacs-theme-backward	conf/emacs/.emacs.d/core/core-themes-support.el	/^(defun spacemacs\/cycle-spacemacs-theme-backward ()$/;"	f
spacemacs/debug-generate-symbol	conf/emacs/.emacs.d/layers/+tools/debug/funcs.el	/^(defun spacemacs\/debug-generate-symbol (debugger)$/;"	f
spacemacs/debug-short-key-state	conf/emacs/.emacs.d/layers/+tools/debug/funcs.el	/^(defun spacemacs\/debug-short-key-state (mode-on)$/;"	f
spacemacs/declare-prefix	conf/emacs/.emacs.d/core/core-keybindings.el	/^(defun spacemacs\/declare-prefix (prefix name &rest more)$/;"	f
spacemacs/declare-prefix-for-minor-mode	conf/emacs/.emacs.d/core/core-keybindings.el	/^(defun spacemacs\/declare-prefix-for-minor-mode (mode prefix name)$/;"	f
spacemacs/declare-prefix-for-mode	conf/emacs/.emacs.d/core/core-keybindings.el	/^(defun spacemacs\/declare-prefix-for-mode (mode prefix name &optional _)$/;"	f
spacemacs/decrease-background-transparency	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defun spacemacs\/decrease-background-transparency (&optional frame)$/;"	f
spacemacs/decrease-transparency	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defun spacemacs\/decrease-transparency (&optional frame)$/;"	f
spacemacs/default-pop-shell	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/default-pop-shell ()$/;"	f
spacemacs/defer	conf/emacs/.emacs.d/core/core-dumper.el	/^(defun spacemacs\/defer (&optional idle-time)$/;"	f
spacemacs/defer-until-after-user-config	conf/emacs/.emacs.d/core/core-spacemacs.el	/^(defun spacemacs\/defer-until-after-user-config (func)$/;"	f
spacemacs/defface-micro-state-faces	conf/emacs/.emacs.d/core/core-micro-state.el	/^(defun spacemacs\/defface-micro-state-faces ()$/;"	f
spacemacs/define-evil-state-face	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/funcs.el	/^(defun spacemacs\/define-evil-state-face (state color)$/;"	f
spacemacs/deft	conf/emacs/.emacs.d/layers/+readers/deft/funcs.el	/^(defun spacemacs\/deft ()$/;"	f
spacemacs/delay-emoji-cheat-sheet-hook	conf/emacs/.emacs.d/layers/+fun/emoji/funcs.el	/^(defun spacemacs\/delay-emoji-cheat-sheet-hook ()$/;"	f
spacemacs/delete-current-buffer-file	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/delete-current-buffer-file (&optional arg)$/;"	f
spacemacs/delete-current-buffer-file-yes	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/delete-current-buffer-file-yes ()$/;"	f
spacemacs/delete-file	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/delete-file (filename &optional ask-user)$/;"	f
spacemacs/delete-file-confirm	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/delete-file-confirm (filename)$/;"	f
spacemacs/delete-window	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/delete-window (&optional arg)$/;"	f
spacemacs/derived-mode-p	conf/emacs/.emacs.d/core/core-funcs.el	/^(define-obsolete-function-alias 'spacemacs\/derived-mode-p 'provided-mode-derived-p "2024-06")$/;"	f
spacemacs/describe-ex-command	conf/emacs/.emacs.d/core/core-debug.el	/^(defun spacemacs\/describe-ex-command (ex-command)$/;"	f
spacemacs/describe-last-keys	conf/emacs/.emacs.d/core/core-debug.el	/^(defun spacemacs\/describe-last-keys ()$/;"	f
spacemacs/describe-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defalias 'spacemacs\/describe-mode 'describe-mode$/;"	f
spacemacs/describe-system-info	conf/emacs/.emacs.d/core/core-debug.el	/^(defun spacemacs\/describe-system-info ()$/;"	f
spacemacs/diff-mode-revert-hunk	conf/emacs/.emacs.d/layers/+source-control/version-control/funcs.el	/^(defun spacemacs\/diff-mode-revert-hunk ()$/;"	f
spacemacs/diminish-hook	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/funcs.el	/^(defun spacemacs\/diminish-hook (_)$/;"	f
spacemacs/diminish-undo	conf/emacs/.emacs.d/core/core-fonts-support.el	/^(defun spacemacs\/diminish-undo (mode)$/;"	f
spacemacs/dired	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defalias 'spacemacs\/dired 'dired)$/;"	f
spacemacs/dired-other-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defalias 'spacemacs\/dired-other-frame 'dired-other-frame)$/;"	f
spacemacs/disable-background-transparency	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defun spacemacs\/disable-background-transparency (&optional frame)$/;"	f
spacemacs/disable-hl-line-mode	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/disable-hl-line-mode ()$/;"	f
spacemacs/disable-smooth-scrolling	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/disable-smooth-scrolling ()$/;"	f
spacemacs/disable-transparency	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defun spacemacs\/disable-transparency (&optional frame)$/;"	f
spacemacs/disable-vi-tilde-fringe	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/funcs.el	/^(defun spacemacs\/disable-vi-tilde-fringe ()$/;"	f
spacemacs/disable-vi-tilde-fringe-read-only	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/funcs.el	/^(defun spacemacs\/disable-vi-tilde-fringe-read-only ()$/;"	f
spacemacs/display-and-copy-version	conf/emacs/.emacs.d/core/core-debug.el	/^(defun spacemacs\/display-and-copy-version ()$/;"	f
spacemacs/display-buffer-other-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defalias 'spacemacs\/display-buffer-other-frame 'display-buffer-other-frame)$/;"	f
spacemacs/display-in-workspace	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/display-in-workspace (buffer alist)$/;"	f
spacemacs/djvu-advise-image-toggle	conf/emacs/.emacs.d/layers/+readers/djvu/funcs.el	/^(defun spacemacs\/djvu-advise-image-toggle (_file &rest args)$/;"	f
spacemacs/djvu-fast-search	conf/emacs/.emacs.d/layers/+readers/djvu/funcs.el	/^(defun spacemacs\/djvu-fast-search (regexp)$/;"	f
spacemacs/djvu-occur-next-entry-and-follow	conf/emacs/.emacs.d/layers/+readers/djvu/funcs.el	/^(defun spacemacs\/djvu-occur-next-entry-and-follow ()$/;"	f
spacemacs/djvu-occur-previous-entry-and-follow	conf/emacs/.emacs.d/layers/+readers/djvu/funcs.el	/^(defun spacemacs\/djvu-occur-previous-entry-and-follow ()$/;"	f
spacemacs/djvu-re-search-forward-continue	conf/emacs/.emacs.d/layers/+readers/djvu/funcs.el	/^(defun spacemacs\/djvu-re-search-forward-continue ()$/;"	f
spacemacs/djvu-scroll-down-or-previous-page	conf/emacs/.emacs.d/layers/+readers/djvu/funcs.el	/^(defun spacemacs\/djvu-scroll-down-or-previous-page ()$/;"	f
spacemacs/djvu-scroll-up-or-next-page	conf/emacs/.emacs.d/layers/+readers/djvu/funcs.el	/^(defun spacemacs\/djvu-scroll-up-or-next-page ()$/;"	f
spacemacs/djvu-search-forward	conf/emacs/.emacs.d/layers/+readers/djvu/funcs.el	/^(defun spacemacs\/djvu-search-forward (query)$/;"	f
spacemacs/djvu-toggle-semi-continuous-scrolling	conf/emacs/.emacs.d/layers/+readers/djvu/funcs.el	/^(defun spacemacs\/djvu-toggle-semi-continuous-scrolling ()$/;"	f
spacemacs/doc-view-goto-page	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/doc-view-goto-page (&optional count)$/;"	f
spacemacs/doc-view-search-new-query	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/doc-view-search-new-query ()$/;"	f
spacemacs/doc-view-search-new-query-backward	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/doc-view-search-new-query-backward ()$/;"	f
spacemacs/dos2unix	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/dos2unix ()$/;"	f
spacemacs/dump-emacs	conf/emacs/.emacs.d/core/core-dumper.el	/^(defun spacemacs\/dump-emacs (&optional display-buffer)$/;"	f
spacemacs/dump-eval-delayed-functions	conf/emacs/.emacs.d/core/core-dumper.el	/^(defun spacemacs\/dump-eval-delayed-functions ()$/;"	f
spacemacs/dump-modes	conf/emacs/.emacs.d/core/core-dumper.el	/^(defun spacemacs\/dump-modes (modes)$/;"	f
spacemacs/dump-restore-load-path	conf/emacs/.emacs.d/core/core-dumper.el	/^(defun spacemacs\/dump-restore-load-path ()$/;"	f
spacemacs/dump-save-load-path	conf/emacs/.emacs.d/core/core-dumper.el	/^(defun spacemacs\/dump-save-load-path ()$/;"	f
spacemacs/dump-vars	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/dump-vars (varlist buffer)$/;"	f
spacemacs/dump-vars-to-file	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/dump-vars-to-file (varlist filename)$/;"	f
spacemacs/duplicate-line-or-region	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/duplicate-line-or-region (&optional n)$/;"	f
spacemacs/echo	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/echo (msg &rest args)$/;"	f
spacemacs/edebug-instrument-defun-off	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/funcs.el	/^(defun spacemacs\/edebug-instrument-defun-off ()$/;"	f
spacemacs/edebug-instrument-defun-on	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/funcs.el	/^(defun spacemacs\/edebug-instrument-defun-on ()$/;"	f
spacemacs/ediff-balance-windows	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/ediff-balance-windows ()$/;"	f
spacemacs/ediff-dotfile-and-template	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/ediff-dotfile-and-template ()$/;"	f
spacemacs/edit-env	conf/emacs/.emacs.d/core/core-env.el	/^(defun spacemacs\/edit-env ()$/;"	f
spacemacs/elisp-toggle-debug-expr-and-eval-func	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/funcs.el	/^(defun spacemacs\/elisp-toggle-debug-expr-and-eval-func ()$/;"	f
spacemacs/elixir-annotate-pry	conf/emacs/.emacs.d/layers/+lang/elixir/funcs.el	/^(defun spacemacs\/elixir-annotate-pry ()$/;"	f
spacemacs/elixir-toggle-breakpoint	conf/emacs/.emacs.d/layers/+lang/elixir/funcs.el	/^(defun spacemacs\/elixir-toggle-breakpoint ()$/;"	f
spacemacs/elm-compile-buffer-output	conf/emacs/.emacs.d/layers/+lang/elm/funcs.el	/^(defun spacemacs\/elm-compile-buffer-output ()$/;"	f
spacemacs/elm-repl-push-decl-focus	conf/emacs/.emacs.d/layers/+lang/elm/funcs.el	/^(defun spacemacs\/elm-repl-push-decl-focus ()$/;"	f
spacemacs/elm-repl-push-focus	conf/emacs/.emacs.d/layers/+lang/elm/funcs.el	/^(defun spacemacs\/elm-repl-push-focus ()$/;"	f
spacemacs/emacs-with-native-compilation-enabled-p	conf/emacs/.emacs.d/core/core-dumper.el	/^(defun spacemacs\/emacs-with-native-compilation-enabled-p ()$/;"	f
spacemacs/emacs-with-pdumper-set-p	conf/emacs/.emacs.d/core/core-dumper.el	/^(defun spacemacs\/emacs-with-pdumper-set-p ()$/;"	f
spacemacs/embark-action-completing-read	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/embark-action-completing-read ()$/;"	f
spacemacs/embark-consult-line-multi	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/embark-consult-line-multi (buffer-names)$/;"	f
spacemacs/embark-hide-which-key-indicator	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/embark-hide-which-key-indicator (fn &rest args)$/;"	f
spacemacs/embark-preview	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/embark-preview ()$/;"	f
spacemacs/embark-select	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/embark-select ()$/;"	f
spacemacs/embark-which-key-indicator	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/embark-which-key-indicator ()$/;"	f
spacemacs/emmet-expand	conf/emacs/.emacs.d/layers/+lang/html/funcs.el	/^(defun spacemacs\/emmet-expand ()$/;"	f
spacemacs/emoji-insert-and-possibly-complete	conf/emacs/.emacs.d/layers/+fun/emoji/funcs.el	/^(defun spacemacs\/emoji-insert-and-possibly-complete (_)$/;"	f
spacemacs/enable-background-transparency	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defun spacemacs\/enable-background-transparency (&optional frame alpha-background)$/;"	f
spacemacs/enable-flycheck	conf/emacs/.emacs.d/layers/+checkers/syntax-checking/funcs.el	/^(defun spacemacs\/enable-flycheck (mode)$/;"	f
spacemacs/enable-line-numbers-p	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/enable-line-numbers-p ()$/;"	f
spacemacs/enable-smooth-scrolling	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/enable-smooth-scrolling ()$/;"	f
spacemacs/enable-transparency	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defun spacemacs\/enable-transparency (&optional frame alpha)$/;"	f
spacemacs/enlarge-window	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defun spacemacs\/enlarge-window (delta)$/;"	f
spacemacs/enlarge-window-horizontally	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defun spacemacs\/enlarge-window-horizontally (delta)$/;"	f
spacemacs/enter-ahs-backward	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/enter-ahs-backward ()$/;"	f
spacemacs/enter-ahs-forward	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/enter-ahs-forward ()$/;"	f
spacemacs/error-delegate	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/error-delegate ()$/;"	f
spacemacs/ert-run-tests-buffer	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/funcs.el	/^(defun spacemacs\/ert-run-tests-buffer ()$/;"	f
spacemacs/ess-bind-keys-for-inferior	conf/emacs/.emacs.d/layers/+lang/ess/funcs.el	/^(defun spacemacs\/ess-bind-keys-for-inferior ()$/;"	f
spacemacs/ess-bind-keys-for-julia	conf/emacs/.emacs.d/layers/+lang/ess/funcs.el	/^(defun spacemacs\/ess-bind-keys-for-julia ()$/;"	f
spacemacs/ess-bind-keys-for-r	conf/emacs/.emacs.d/layers/+lang/ess/funcs.el	/^(defun spacemacs\/ess-bind-keys-for-r ()$/;"	f
spacemacs/ess-start-repl	conf/emacs/.emacs.d/layers/+lang/ess/funcs.el	/^(defun spacemacs\/ess-start-repl ()$/;"	f
spacemacs/eval-current-form	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/funcs.el	/^(defun spacemacs\/eval-current-form ()$/;"	f
spacemacs/eval-current-form-sp	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/funcs.el	/^(defun spacemacs\/eval-current-form-sp (&optional arg)$/;"	f
spacemacs/eval-current-form-to-comment-sp	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/funcs.el	/^(defun spacemacs\/eval-current-form-to-comment-sp (&optional arg)$/;"	f
spacemacs/eval-current-symbol-sp	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/funcs.el	/^(defun spacemacs\/eval-current-symbol-sp ()$/;"	f
spacemacs/evil-goto-next-line-and-indent	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/evil-goto-next-line-and-indent (&optional count)$/;"	f
spacemacs/evil-insert-line-above	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/evil-insert-line-above (count)$/;"	f
spacemacs/evil-insert-line-below	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/evil-insert-line-below (count)$/;"	f
spacemacs/evil-mc-paste-after	conf/emacs/.emacs.d/layers/+misc/multiple-cursors/funcs.el	/^(defun spacemacs\/evil-mc-paste-after (&optional count register)$/;"	f
spacemacs/evil-mc-paste-before	conf/emacs/.emacs.d/layers/+misc/multiple-cursors/funcs.el	/^(defun spacemacs\/evil-mc-paste-before (&optional count register)$/;"	f
spacemacs/evil-search-clear-highlight	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/funcs.el	/^(defun spacemacs\/evil-search-clear-highlight ()$/;"	f
spacemacs/evil-smart-doc-lookup	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/funcs.el	/^(defun spacemacs\/evil-smart-doc-lookup ()$/;"	f
spacemacs/eww-jump-next-buffer	conf/emacs/.emacs.d/layers/+web/eww/funcs.el	/^(defun spacemacs\/eww-jump-next-buffer ()$/;"	f
spacemacs/eww-jump-previous-buffer	conf/emacs/.emacs.d/layers/+web/eww/funcs.el	/^(defun spacemacs\/eww-jump-previous-buffer ()$/;"	f
spacemacs/eww-toggle-render-latex	conf/emacs/.emacs.d/layers/+web/eww/funcs.el	/^(defun spacemacs\/eww-toggle-render-latex ()$/;"	f
spacemacs/eyebrowse-close-window-config	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/eyebrowse-close-window-config ()$/;"	f
spacemacs/eyebrowse-switch-to-window-config-0	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/eyebrowse-switch-to-window-config-0 ()$/;"	f
spacemacs/eyebrowse-switch-to-window-config-1	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/eyebrowse-switch-to-window-config-1 ()$/;"	f
spacemacs/eyebrowse-switch-to-window-config-2	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/eyebrowse-switch-to-window-config-2 ()$/;"	f
spacemacs/eyebrowse-switch-to-window-config-3	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/eyebrowse-switch-to-window-config-3 ()$/;"	f
spacemacs/eyebrowse-switch-to-window-config-4	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/eyebrowse-switch-to-window-config-4 ()$/;"	f
spacemacs/eyebrowse-switch-to-window-config-5	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/eyebrowse-switch-to-window-config-5 ()$/;"	f
spacemacs/eyebrowse-switch-to-window-config-6	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/eyebrowse-switch-to-window-config-6 ()$/;"	f
spacemacs/eyebrowse-switch-to-window-config-7	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/eyebrowse-switch-to-window-config-7 ()$/;"	f
spacemacs/eyebrowse-switch-to-window-config-8	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/eyebrowse-switch-to-window-config-8 ()$/;"	f
spacemacs/eyebrowse-switch-to-window-config-9	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/eyebrowse-switch-to-window-config-9 ()$/;"	f
spacemacs/faust-to-firefox	conf/emacs/.emacs.d/layers/+lang/faust/funcs.el	/^(defun spacemacs\/faust-to-firefox ()$/;"	f
spacemacs/faust-to-jack-gtk	conf/emacs/.emacs.d/layers/+lang/faust/funcs.el	/^(defun spacemacs\/faust-to-jack-gtk ()$/;"	f
spacemacs/faust-to-jack-qt	conf/emacs/.emacs.d/layers/+lang/faust/funcs.el	/^(defun spacemacs\/faust-to-jack-qt ()$/;"	f
spacemacs/find-dotfile	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/find-dotfile ()$/;"	f
spacemacs/find-file-and-replace-buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defalias 'spacemacs\/find-file-and-replace-buffer 'find-alternate-file)$/;"	f
spacemacs/find-file-other-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defalias 'spacemacs\/find-file-other-frame 'find-file-other-frame)$/;"	f
spacemacs/find-file-split	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/find-file-split (file)$/;"	f
spacemacs/find-file-vsplit	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/find-file-vsplit (file)$/;"	f
spacemacs/find-user-early-init-file	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/find-user-early-init-file ()$/;"	f
spacemacs/find-user-init-file	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/find-user-init-file ()$/;"	f
spacemacs/find-workspace	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/find-workspace (buffer)$/;"	f
spacemacs/floobits-load-rcfile	conf/emacs/.emacs.d/layers/+pair-programming/floobits/funcs.el	/^(defun spacemacs\/floobits-load-rcfile ()$/;"	f
spacemacs/floobits-rclocation	conf/emacs/.emacs.d/layers/+pair-programming/floobits/funcs.el	/^(defun spacemacs\/floobits-rclocation ()$/;"	f
spacemacs/force-init-spacemacs-env	conf/emacs/.emacs.d/core/core-env.el	/^(defun spacemacs\/force-init-spacemacs-env ()$/;"	f
spacemacs/force-yasnippet-off	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defun spacemacs\/force-yasnippet-off ()$/;"	f
spacemacs/forge-get-info-from-fetched-notification-error	conf/emacs/.emacs.d/layers/+source-control/git/funcs.el	/^(defun spacemacs\/forge-get-info-from-fetched-notification-error (err)$/;"	f
spacemacs/frame-killer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/frame-killer ()$/;"	f
spacemacs/fsharp-eval-phrase-focus	conf/emacs/.emacs.d/layers/+lang/fsharp/funcs.el	/^(defun spacemacs\/fsharp-eval-phrase-focus ()$/;"	f
spacemacs/fsharp-eval-region-focus	conf/emacs/.emacs.d/layers/+lang/fsharp/funcs.el	/^(defun spacemacs\/fsharp-eval-region-focus (start end)$/;"	f
spacemacs/fsharp-load-buffer-file-focus	conf/emacs/.emacs.d/layers/+lang/fsharp/funcs.el	/^(defun spacemacs\/fsharp-load-buffer-file-focus ()$/;"	f
spacemacs/games-start-typit-beginner	conf/emacs/.emacs.d/layers/+fun/games/funcs.el	/^(defun spacemacs\/games-start-typit-beginner ()$/;"	f
spacemacs/games-start-typit-expert	conf/emacs/.emacs.d/layers/+fun/games/funcs.el	/^(defun spacemacs\/games-start-typit-expert ()$/;"	f
spacemacs/generate-layers-file	conf/emacs/.emacs.d/core/core-documentation.el	/^(defun spacemacs\/generate-layers-file (project-plist)$/;"	f
spacemacs/get-last-version	conf/emacs/.emacs.d/core/core-release-management.el	/^(defun spacemacs\/get-last-version ()$/;"	f
spacemacs/get-mode-line-theme-name	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/funcs.el	/^(defun spacemacs\/get-mode-line-theme-name ()$/;"	f
spacemacs/get-new-version-lighter-face	conf/emacs/.emacs.d/core/core-release-management.el	/^(defun spacemacs\/get-new-version-lighter-face (current new)$/;"	f
spacemacs/get-parent-dir	conf/emacs/.emacs.d/layers/+completion/auto-completion/local/snippets/emacs-lisp-mode/.yas-setup.el	/^(defun spacemacs\/get-parent-dir ()$/;"	f
spacemacs/get-theme-package-name	conf/emacs/.emacs.d/core/core-themes-support.el	/^(defun spacemacs\/get-theme-package-name (theme)$/;"	f
spacemacs/ggtags-mode-enable	conf/emacs/.emacs.d/layers/+tags/gtags/funcs.el	/^(defun spacemacs\/ggtags-mode-enable ()$/;"	f
spacemacs/git-get-current-branch-rev	conf/emacs/.emacs.d/core/core-release-management.el	/^(defun spacemacs\/git-get-current-branch-rev ()$/;"	f
spacemacs/git-link-commit-copy-url-only	conf/emacs/.emacs.d/layers/+source-control/git/funcs.el	/^(defun spacemacs\/git-link-commit-copy-url-only ()$/;"	f
spacemacs/git-link-copy-url-only	conf/emacs/.emacs.d/layers/+source-control/git/funcs.el	/^(defun spacemacs\/git-link-copy-url-only ()$/;"	f
spacemacs/git-permalink	conf/emacs/.emacs.d/layers/+source-control/git/funcs.el	/^(defun spacemacs\/git-permalink ()$/;"	f
spacemacs/git-permalink-copy-url-only	conf/emacs/.emacs.d/layers/+source-control/git/funcs.el	/^(defun spacemacs\/git-permalink-copy-url-only ()$/;"	f
spacemacs/gne-next	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/gne-next (num reset)$/;"	f
spacemacs/go-packages-gopkgs	conf/emacs/.emacs.d/layers/+lang/go/funcs.el	/^(defun spacemacs\/go-packages-gopkgs ()$/;"	f
spacemacs/go-run-generate-current-buffer	conf/emacs/.emacs.d/layers/+lang/go/funcs.el	/^(defun spacemacs\/go-run-generate-current-buffer ()$/;"	f
spacemacs/go-run-generate-current-dir	conf/emacs/.emacs.d/layers/+lang/go/funcs.el	/^(defun spacemacs\/go-run-generate-current-dir ()$/;"	f
spacemacs/go-run-main	conf/emacs/.emacs.d/layers/+lang/go/funcs.el	/^(defun spacemacs\/go-run-main ()$/;"	f
spacemacs/go-run-package-tests	conf/emacs/.emacs.d/layers/+lang/go/funcs.el	/^(defun spacemacs\/go-run-package-tests ()$/;"	f
spacemacs/go-run-package-tests-nested	conf/emacs/.emacs.d/layers/+lang/go/funcs.el	/^(defun spacemacs\/go-run-package-tests-nested ()$/;"	f
spacemacs/go-run-test-current-function	conf/emacs/.emacs.d/layers/+lang/go/funcs.el	/^(defun spacemacs\/go-run-test-current-function ()$/;"	f
spacemacs/go-run-test-current-suite	conf/emacs/.emacs.d/layers/+lang/go/funcs.el	/^(defun spacemacs\/go-run-test-current-suite ()$/;"	f
spacemacs/go-run-tests	conf/emacs/.emacs.d/layers/+lang/go/funcs.el	/^(defun spacemacs\/go-run-tests (args)$/;"	f
spacemacs/goto-buffer-workspace	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/goto-buffer-workspace (buffer)$/;"	f
spacemacs/goto-flycheck-error-list	conf/emacs/.emacs.d/layers/+checkers/syntax-checking/funcs.el	/^(defun spacemacs\/goto-flycheck-error-list ()$/;"	f
spacemacs/goto-last-searched-ahs-symbol	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/goto-last-searched-ahs-symbol ()$/;"	f
spacemacs/grep-change-to-wgrep-mode	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/funcs.el	/^(defun spacemacs\/grep-change-to-wgrep-mode ()$/;"	f
spacemacs/groovy-load-file	conf/emacs/.emacs.d/layers/+lang/groovy/funcs.el	/^(defun spacemacs\/groovy-load-file ()$/;"	f
spacemacs/groovy-load-file-switch	conf/emacs/.emacs.d/layers/+lang/groovy/funcs.el	/^(defun spacemacs\/groovy-load-file-switch ()$/;"	f
spacemacs/groovy-send-definition-switch	conf/emacs/.emacs.d/layers/+lang/groovy/funcs.el	/^(defun spacemacs\/groovy-send-definition-switch ()$/;"	f
spacemacs/groovy-send-region-switch	conf/emacs/.emacs.d/layers/+lang/groovy/funcs.el	/^(defun spacemacs\/groovy-send-region-switch (start end)$/;"	f
spacemacs/haskell-format-imports	conf/emacs/.emacs.d/layers/+lang/haskell/funcs.el	/^(defun spacemacs\/haskell-format-imports ()$/;"	f
spacemacs/helm-M-x-fuzzy-matching	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-M-x-fuzzy-matching ()$/;"	f
spacemacs/helm-buffers-do-ack	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-buffers-do-ack (&optional _)$/;"	f
spacemacs/helm-buffers-do-ack-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-buffers-do-ack-region-or-symbol ()$/;"	f
spacemacs/helm-buffers-do-ag	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-buffers-do-ag (&optional _)$/;"	f
spacemacs/helm-buffers-do-ag-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-buffers-do-ag-region-or-symbol ()$/;"	f
spacemacs/helm-buffers-do-grep	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-buffers-do-grep ()$/;"	f
spacemacs/helm-buffers-do-grep-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-buffers-do-grep-region-or-symbol ()$/;"	f
spacemacs/helm-buffers-do-pt	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-buffers-do-pt (&optional _)$/;"	f
spacemacs/helm-buffers-do-pt-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-buffers-do-pt-region-or-symbol ()$/;"	f
spacemacs/helm-buffers-do-rg	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-buffers-do-rg (&optional _)$/;"	f
spacemacs/helm-buffers-do-rg-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-buffers-do-rg-region-or-symbol ()$/;"	f
spacemacs/helm-buffers-list-unfiltered	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-buffers-list-unfiltered ()$/;"	f
spacemacs/helm-buffers-smart-do-search	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-buffers-smart-do-search (&optional default-inputp)$/;"	f
spacemacs/helm-buffers-smart-do-search-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-buffers-smart-do-search-region-or-symbol ()$/;"	f
spacemacs/helm-dir-do-ack	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-dir-do-ack ()$/;"	f
spacemacs/helm-dir-do-ack-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-dir-do-ack-region-or-symbol ()$/;"	f
spacemacs/helm-dir-do-ag	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-dir-do-ag ()$/;"	f
spacemacs/helm-dir-do-ag-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-dir-do-ag-region-or-symbol ()$/;"	f
spacemacs/helm-dir-do-grep	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-dir-do-grep ()$/;"	f
spacemacs/helm-dir-do-pt	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-dir-do-pt ()$/;"	f
spacemacs/helm-dir-do-pt-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-dir-do-pt-region-or-symbol ()$/;"	f
spacemacs/helm-dir-do-rg	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-dir-do-rg ()$/;"	f
spacemacs/helm-dir-do-rg-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-dir-do-rg-region-or-symbol ()$/;"	f
spacemacs/helm-dir-smart-do-search	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-dir-smart-do-search (&optional default-inputp)$/;"	f
spacemacs/helm-dir-smart-do-search-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-dir-smart-do-search-region-or-symbol ()$/;"	f
spacemacs/helm-eshell-history	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/helm-eshell-history ()$/;"	f
spacemacs/helm-faces	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/helm-faces ()$/;"	f
spacemacs/helm-file-do-ag	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-file-do-ag (&optional _)$/;"	f
spacemacs/helm-file-do-ag-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-file-do-ag-region-or-symbol ()$/;"	f
spacemacs/helm-file-do-grep	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-file-do-grep ()$/;"	f
spacemacs/helm-file-do-grep-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-file-do-grep-region-or-symbol ()$/;"	f
spacemacs/helm-file-smart-do-search	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-file-smart-do-search (&optional default-inputp)$/;"	f
spacemacs/helm-file-smart-do-search-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-file-smart-do-search-region-or-symbol ()$/;"	f
spacemacs/helm-files-do-ack	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-files-do-ack (&optional dir)$/;"	f
spacemacs/helm-files-do-ack-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-files-do-ack-region-or-symbol ()$/;"	f
spacemacs/helm-files-do-ag	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-files-do-ag (&optional dir)$/;"	f
spacemacs/helm-files-do-ag-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-files-do-ag-region-or-symbol ()$/;"	f
spacemacs/helm-files-do-grep	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-files-do-grep ()$/;"	f
spacemacs/helm-files-do-grep-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-files-do-grep-region-or-symbol ()$/;"	f
spacemacs/helm-files-do-pt	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-files-do-pt (&optional dir)$/;"	f
spacemacs/helm-files-do-pt-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-files-do-pt-region-or-symbol ()$/;"	f
spacemacs/helm-files-do-rg	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-files-do-rg (&optional dir)$/;"	f
spacemacs/helm-files-do-rg-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-files-do-rg-region-or-symbol ()$/;"	f
spacemacs/helm-files-smart-do-search	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-files-smart-do-search (&optional default-inputp)$/;"	f
spacemacs/helm-files-smart-do-search-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-files-smart-do-search-region-or-symbol ()$/;"	f
spacemacs/helm-find-buffers-windows	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-find-buffers-windows ()$/;"	f
spacemacs/helm-find-files	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-find-files (arg)$/;"	f
spacemacs/helm-find-files-edit	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-find-files-edit ()$/;"	f
spacemacs/helm-find-files-windows	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-find-files-windows ()$/;"	f
spacemacs/helm-ggtags-set-jump-handler	conf/emacs/.emacs.d/layers/+tags/gtags/funcs.el	/^(defun spacemacs\/helm-ggtags-set-jump-handler ()$/;"	f
spacemacs/helm-gtags-maybe-dwim	conf/emacs/.emacs.d/layers/+tags/gtags/funcs.el	/^(defun spacemacs\/helm-gtags-maybe-dwim ()$/;"	f
spacemacs/helm-jump-in-buffer	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-jump-in-buffer ()$/;"	f
spacemacs/helm-persp-close	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/helm-persp-close ()$/;"	f
spacemacs/helm-persp-kill	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/helm-persp-kill ()$/;"	f
spacemacs/helm-persp-switch-project	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/helm-persp-switch-project (arg)$/;"	f
spacemacs/helm-perspectives	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/helm-perspectives ()$/;"	f
spacemacs/helm-project-do-ack	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-project-do-ack ()$/;"	f
spacemacs/helm-project-do-ack-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-project-do-ack-region-or-symbol ()$/;"	f
spacemacs/helm-project-do-ag	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-project-do-ag ()$/;"	f
spacemacs/helm-project-do-ag-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-project-do-ag-region-or-symbol ()$/;"	f
spacemacs/helm-project-do-pt	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-project-do-pt ()$/;"	f
spacemacs/helm-project-do-pt-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-project-do-pt-region-or-symbol ()$/;"	f
spacemacs/helm-project-do-rg	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-project-do-rg ()$/;"	f
spacemacs/helm-project-do-rg-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-project-do-rg-region-or-symbol ()$/;"	f
spacemacs/helm-project-smart-do-search	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-project-smart-do-search (&optional default-inputp)$/;"	f
spacemacs/helm-project-smart-do-search-in-dir	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-project-smart-do-search-in-dir (dir)$/;"	f
spacemacs/helm-project-smart-do-search-region-or-symbol	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-project-smart-do-search-region-or-symbol ()$/;"	f
spacemacs/helm-projectile-grep	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-projectile-grep ()$/;"	f
spacemacs/helm-search-engine-select	conf/emacs/.emacs.d/layers/+web-services/search-engine/funcs.el	/^(defun spacemacs\/helm-search-engine-select ()$/;"	f
spacemacs/helm-shell-history	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/helm-shell-history ()$/;"	f
spacemacs/helm-slime	conf/emacs/.emacs.d/layers/+lang/common-lisp/funcs.el	/^(defun spacemacs\/helm-slime ()$/;"	f
spacemacs/helm-themes	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/helm-themes ()$/;"	f
spacemacs/helm-transient-state-select-action	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/helm-transient-state-select-action ()$/;"	f
spacemacs/helm-ts-edit	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/helm-ts-edit ()$/;"	f
spacemacs/helm-vterm-search-history	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/helm-vterm-search-history ()$/;"	f
spacemacs/helm-yas	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defun spacemacs\/helm-yas ()$/;"	f
spacemacs/home	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defalias 'spacemacs\/home 'spacemacs-buffer\/refresh$/;"	f
spacemacs/home-delete-other-windows	conf/emacs/.emacs.d/core/core-spacemacs-buffer.el	/^(defun spacemacs\/home-delete-other-windows ()$/;"	f
spacemacs/how-many-str	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/how-many-str (regexp str)$/;"	f
spacemacs/hy-shell-eval-buffer-and-go	conf/emacs/.emacs.d/layers/+lang/hy/funcs.el	/^(defun spacemacs\/hy-shell-eval-buffer-and-go ()$/;"	f
spacemacs/hy-shell-eval-current-form-and-go	conf/emacs/.emacs.d/layers/+lang/hy/funcs.el	/^(defun spacemacs\/hy-shell-eval-current-form-and-go ()$/;"	f
spacemacs/hy-shell-eval-region-and-go	conf/emacs/.emacs.d/layers/+lang/hy/funcs.el	/^(defun spacemacs\/hy-shell-eval-region-and-go ()$/;"	f
spacemacs/ido-invoke-in-horizontal-split	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/ido-invoke-in-horizontal-split ()$/;"	f
spacemacs/ido-invoke-in-new-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/ido-invoke-in-new-frame ()$/;"	f
spacemacs/ido-invoke-in-other-window	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/ido-invoke-in-other-window ()$/;"	f
spacemacs/ido-invoke-in-vertical-split	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-completion/funcs.el	/^(defun spacemacs\/ido-invoke-in-vertical-split ()$/;"	f
spacemacs/imenu-list-smart-focus	conf/emacs/.emacs.d/layers/+tools/imenu-list/funcs.el	/^(defun spacemacs\/imenu-list-smart-focus ()$/;"	f
spacemacs/impatient-mode	conf/emacs/.emacs.d/layers/+lang/html/funcs.el	/^(defun spacemacs\/impatient-mode ()$/;"	f
spacemacs/import-js-fix	conf/emacs/.emacs.d/layers/+tools/import-js/funcs.el	/^(defun spacemacs\/import-js-fix ()$/;"	f
spacemacs/import-js-import	conf/emacs/.emacs.d/layers/+tools/import-js/funcs.el	/^(defun spacemacs\/import-js-import ()$/;"	f
spacemacs/increase-background-transparency	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defun spacemacs\/increase-background-transparency (&optional frame)$/;"	f
spacemacs/increase-transparency	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defun spacemacs\/increase-transparency (&optional frame)$/;"	f
spacemacs/indent-region-or-buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/indent-region-or-buffer ()$/;"	f
spacemacs/inherit-leader-keys-from-parent-mode	conf/emacs/.emacs.d/core/core-keybindings.el	/^(defun spacemacs\/inherit-leader-keys-from-parent-mode (mode &optional parent-mode)$/;"	f
spacemacs/init	conf/emacs/.emacs.d/core/core-spacemacs.el	/^(defun spacemacs\/init ()$/;"	f
spacemacs/init-consult-eshell	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/init-consult-eshell ()$/;"	f
spacemacs/init-debug	conf/emacs/.emacs.d/core/core-debug.el	/^(defun spacemacs\/init-debug ()$/;"	f
spacemacs/init-elm-mode	conf/emacs/.emacs.d/layers/+lang/elm/funcs.el	/^(defun spacemacs\/init-elm-mode ()$/;"	f
spacemacs/init-eshell-xterm-color	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/init-eshell-xterm-color ()$/;"	f
spacemacs/init-helm-eshell	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/init-helm-eshell ()$/;"	f
spacemacs/init-ivy-eshell	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/init-ivy-eshell ()$/;"	f
spacemacs/init-progress-bar	conf/emacs/.emacs.d/core/core-progress-bar.el	/^(defun spacemacs\/init-progress-bar (max)$/;"	f
spacemacs/initial-search-input	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/initial-search-input (&optional force-input)$/;"	f
spacemacs/initialize-custom-file	conf/emacs/.emacs.d/core/core-custom-settings.el	/^(defun spacemacs\/initialize-custom-file ()$/;"	f
spacemacs/initialize-custom-file-sync	conf/emacs/.emacs.d/core/core-custom-settings.el	/^(defun spacemacs\/initialize-custom-file-sync ()$/;"	f
spacemacs/insert-file	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defalias 'spacemacs\/insert-file 'insert-file)$/;"	f
spacemacs/insert-keybinding-markdown	conf/emacs/.emacs.d/layers/+lang/markdown/funcs.el	/^(defun spacemacs\/insert-keybinding-markdown (key)$/;"	f
spacemacs/insert-line-above-no-indent	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/insert-line-above-no-indent (count)$/;"	f
spacemacs/insert-line-below-no-indent	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/insert-line-below-no-indent (count)$/;"	f
spacemacs/insert-shebang	conf/emacs/.emacs.d/layers/+lang/shell-scripts/funcs.el	/^(defun spacemacs\/insert-shebang ()$/;"	f
spacemacs/ivy--regex-plus	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/ivy--regex-plus (str)$/;"	f
spacemacs/ivy-available-repls	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/ivy-available-repls ()$/;"	f
spacemacs/ivy-eshell-history	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/ivy-eshell-history ()$/;"	f
spacemacs/ivy-evil-registers	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/ivy-evil-registers ()$/;"	f
spacemacs/ivy-insert-evil-register	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/ivy-insert-evil-register (candidate)$/;"	f
spacemacs/ivy-persp-switch-project	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/ivy-persp-switch-project (arg)$/;"	f
spacemacs/ivy-search-engine-select	conf/emacs/.emacs.d/layers/+web-services/search-engine/funcs.el	/^(defun spacemacs\/ivy-search-engine-select ()$/;"	f
spacemacs/ivy-spacemacs-layout-buffer	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/ivy-spacemacs-layout-buffer ()$/;"	f
spacemacs/ivy-spacemacs-layout-close-other	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/ivy-spacemacs-layout-close-other ()$/;"	f
spacemacs/ivy-spacemacs-layout-kill-other	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/ivy-spacemacs-layout-kill-other ()$/;"	f
spacemacs/ivy-spacemacs-layouts	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/ivy-spacemacs-layouts ()$/;"	f
spacemacs/ivy-switch-project-open-dired	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/ivy-switch-project-open-dired (project)$/;"	f
spacemacs/ivy-xref-open-in-other-window	conf/emacs/.emacs.d/layers/+completion/ivy/funcs.el	/^(defun spacemacs\/ivy-xref-open-in-other-window (candidate)$/;"	f
spacemacs/ivy-yas	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defun spacemacs\/ivy-yas ()$/;"	f
spacemacs/iwb-region-or-buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/iwb-region-or-buffer ()$/;"	f
spacemacs/jabber-connect-hook	conf/emacs/.emacs.d/layers/+chat/jabber/funcs.el	/^(defun spacemacs\/jabber-connect-hook (jc)$/;"	f
spacemacs/javascript-fmt-before-save-hook	conf/emacs/.emacs.d/layers/+lang/javascript/funcs.el	/^(defun spacemacs\/javascript-fmt-before-save-hook ()$/;"	f
spacemacs/javascript-format	conf/emacs/.emacs.d/layers/+lang/javascript/funcs.el	/^(defun spacemacs\/javascript-format ()$/;"	f
spacemacs/js-doc-require	conf/emacs/.emacs.d/layers/+lang/javascript/funcs.el	/^(defun spacemacs\/js-doc-require ()$/;"	f
spacemacs/js-doc-set-key-bindings	conf/emacs/.emacs.d/layers/+lang/javascript/funcs.el	/^(defun spacemacs\/js-doc-set-key-bindings (mode)$/;"	f
spacemacs/js2-refactor-require	conf/emacs/.emacs.d/layers/+lang/javascript/funcs.el	/^(defun spacemacs\/js2-refactor-require ()$/;"	f
spacemacs/json-navigator-dwim	conf/emacs/.emacs.d/layers/+lang/json/funcs.el	/^(defun spacemacs\/json-navigator-dwim (arg)$/;"	f
spacemacs/json-reformat-dwim	conf/emacs/.emacs.d/layers/+lang/json/funcs.el	/^(defun spacemacs\/json-reformat-dwim (arg)$/;"	f
spacemacs/json-setup-prettier	conf/emacs/.emacs.d/layers/+lang/json/funcs.el	/^(defun spacemacs\/json-setup-prettier ()$/;"	f
spacemacs/jump-to-definition	conf/emacs/.emacs.d/core/core-jump.el	/^(defun spacemacs\/jump-to-definition ()$/;"	f
spacemacs/jump-to-definition-other-window	conf/emacs/.emacs.d/core/core-jump.el	/^(defun spacemacs\/jump-to-definition-other-window ()$/;"	f
spacemacs/jump-to-last-layout	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/jump-to-last-layout ()$/;"	f
spacemacs/key-binding-prefixes	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defconst spacemacs\/key-binding-prefixes$/;"	f
spacemacs/kill-back-to-indentation	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/kill-back-to-indentation ()$/;"	f
spacemacs/kill-emacs	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/kill-emacs ()$/;"	f
spacemacs/kill-matching-buffers-rudely	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/kill-matching-buffers-rudely (regexp &optional internal-too)$/;"	f
spacemacs/kill-other-buffers	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/kill-other-buffers (&optional arg)$/;"	f
spacemacs/kill-this-buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/kill-this-buffer (&optional arg)$/;"	f
spacemacs/languagetool-next-error	conf/emacs/.emacs.d/layers/+tools/languagetool/funcs.el	/^(defun spacemacs\/languagetool-next-error (count)$/;"	f
spacemacs/languagetool-previous-error	conf/emacs/.emacs.d/layers/+tools/languagetool/funcs.el	/^(defun spacemacs\/languagetool-previous-error (count)$/;"	f
spacemacs/languagetool-toggle	conf/emacs/.emacs.d/layers/+tools/languagetool/funcs.el	/^(defun spacemacs\/languagetool-toggle ()$/;"	f
spacemacs/last-error	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/last-error ()$/;"	f
spacemacs/last-popwin	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/funcs.el	/^(defun spacemacs\/last-popwin ()$/;"	f
spacemacs/layout-goto-default	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/layout-goto-default ()$/;"	f
spacemacs/layout-switch-by-pos	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/layout-switch-by-pos (pos)$/;"	f
spacemacs/layout-switch-to	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/layout-switch-to (pos)$/;"	f
spacemacs/layouts-ts-close	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/layouts-ts-close ()$/;"	f
spacemacs/layouts-ts-close-other	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/layouts-ts-close-other ()$/;"	f
spacemacs/layouts-ts-kill	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/layouts-ts-kill ()$/;"	f
spacemacs/layouts-ts-kill-other	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/layouts-ts-kill-other ()$/;"	f
spacemacs/layouts-ts-rename	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/layouts-ts-rename ()$/;"	f
spacemacs/leader-key	conf/emacs/.emacs.d/core/core-spacebind.el	/^(defun spacemacs\/leader-key ()$/;"	f
spacemacs/line-numbers-type	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/line-numbers-type ()$/;"	f
spacemacs/load-default-theme	conf/emacs/.emacs.d/core/core-themes-support.el	/^(defun spacemacs\/load-default-theme ()$/;"	f
spacemacs/load-eyebrowse-after-loading-layout	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/load-eyebrowse-after-loading-layout (_state-file _phash persp-names)$/;"	f
spacemacs/load-eyebrowse-for-perspective	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/load-eyebrowse-for-perspective (type &optional frame)$/;"	f
spacemacs/load-spacemacs-env	conf/emacs/.emacs.d/core/core-env.el	/^(defun spacemacs\/load-spacemacs-env (&optional force)$/;"	f
spacemacs/load-srefactor	conf/emacs/.emacs.d/layers/+emacs/semantic/funcs.el	/^(defun spacemacs\/load-srefactor ()$/;"	f
spacemacs/load-theme	conf/emacs/.emacs.d/core/core-themes-support.el	/^(defun spacemacs\/load-theme (theme &optional fallback-theme disable)$/;"	f
spacemacs/load-yasnippet	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defun spacemacs\/load-yasnippet ()$/;"	f
spacemacs/lsp-bind-extensions-for-mode	conf/emacs/.emacs.d/layers/+tools/lsp/funcs.el	/^(defun spacemacs\/lsp-bind-extensions-for-mode (mode$/;"	f
spacemacs/lsp-bind-keys	conf/emacs/.emacs.d/layers/+tools/lsp/funcs.el	/^(defun spacemacs\/lsp-bind-keys ()$/;"	f
spacemacs/lsp-bind-upstream-keys	conf/emacs/.emacs.d/layers/+tools/lsp/funcs.el	/^(defun spacemacs\/lsp-bind-upstream-keys ()$/;"	f
spacemacs/lsp-define-extensions	conf/emacs/.emacs.d/layers/+tools/lsp/funcs.el	/^(defun spacemacs\/lsp-define-extensions (layer-name$/;"	f
spacemacs/lsp-define-key	conf/emacs/.emacs.d/layers/+tools/lsp/funcs.el	/^(defun spacemacs\/lsp-define-key (keymap key def &rest bindings)$/;"	f
spacemacs/lsp-java-sub-type	conf/emacs/.emacs.d/layers/+lang/java/funcs.el	/^(defun spacemacs\/lsp-java-sub-type ()$/;"	f
spacemacs/lsp-java-super-type	conf/emacs/.emacs.d/layers/+lang/java/funcs.el	/^(defun spacemacs\/lsp-java-super-type ()$/;"	f
spacemacs/lsp-rust-analyzer-reload-workspace	conf/emacs/.emacs.d/layers/+lang/rust/funcs.el	/^(defun spacemacs\/lsp-rust-analyzer-reload-workspace ()$/;"	f
spacemacs/lsp-ui-doc-func	conf/emacs/.emacs.d/layers/+tools/lsp/funcs.el	/^(defun spacemacs\/lsp-ui-doc-func ()$/;"	f
spacemacs/lsp-ui-sideline-ignore-duplicate	conf/emacs/.emacs.d/layers/+tools/lsp/funcs.el	/^(defun spacemacs\/lsp-ui-sideline-ignore-duplicate ()$/;"	f
spacemacs/lsp-ui-sideline-symb	conf/emacs/.emacs.d/layers/+tools/lsp/funcs.el	/^(defun spacemacs\/lsp-ui-sideline-symb ()$/;"	f
spacemacs/magit-toggle-whitespace	conf/emacs/.emacs.d/layers/+source-control/git/funcs.el	/^(defun spacemacs\/magit-toggle-whitespace ()$/;"	f
spacemacs/major-mode-prefix	conf/emacs/.emacs.d/core/core-spacebind.el	/^(defun spacemacs\/major-mode-prefix ()$/;"	f
spacemacs/make-variable-layout-local	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/make-variable-layout-local (&rest vars)$/;"	f
spacemacs/maximize-horizontally	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/maximize-horizontally ()$/;"	f
spacemacs/maximize-vertically	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/maximize-vertically ()$/;"	f
spacemacs/merlin-locate	conf/emacs/.emacs.d/layers/+lang/ocaml/funcs.el	/^(defun spacemacs\/merlin-locate ()$/;"	f
spacemacs/merlin-locate-other-window	conf/emacs/.emacs.d/layers/+lang/ocaml/funcs.el	/^(defun spacemacs\/merlin-locate-other-window ()$/;"	f
spacemacs/minibuffer-default-add-function	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/minibuffer-default-add-function ()$/;"	f
spacemacs/mode-line-separator	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/funcs.el	/^(defun spacemacs\/mode-line-separator ()$/;"	f
spacemacs/mode-line-separator-scale	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/funcs.el	/^(defun spacemacs\/mode-line-separator-scale ()$/;"	f
spacemacs/move-current-persp-left	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/move-current-persp-left ()$/;"	f
spacemacs/move-current-persp-right	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/move-current-persp-right ()$/;"	f
spacemacs/move-element-left	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/move-element-left (element list)$/;"	f
spacemacs/move-element-right	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/move-element-right (element list)$/;"	f
spacemacs/mplist-get-value	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/mplist-get-value (plist prop)$/;"	f
spacemacs/mplist-get-values	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/mplist-get-values (plist prop)$/;"	f
spacemacs/mplist-remove	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/mplist-remove (plist prop)$/;"	f
spacemacs/mvn-clean-compile	conf/emacs/.emacs.d/layers/+lang/java/funcs.el	/^(defun spacemacs\/mvn-clean-compile ()$/;"	f
spacemacs/narrow-to-defun-indirect-buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/narrow-to-defun-indirect-buffer ()$/;"	f
spacemacs/narrow-to-indirect-buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/narrow-to-indirect-buffer (narrower target-kind target-name)$/;"	f
spacemacs/narrow-to-page-indirect-buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/narrow-to-page-indirect-buffer ()$/;"	f
spacemacs/narrow-to-region-indirect-buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/narrow-to-region-indirect-buffer ()$/;"	f
spacemacs/nav-find-elisp-thing-at-point-other-window	conf/emacs/.emacs.d/layers/+lang/emacs-lisp/funcs.el	/^(defun spacemacs\/nav-find-elisp-thing-at-point-other-window ()$/;"	f
spacemacs/neotree-collapse	conf/emacs/.emacs.d/layers/+filetree/neotree/funcs.el	/^(defun spacemacs\/neotree-collapse ()$/;"	f
spacemacs/neotree-collapse-or-up	conf/emacs/.emacs.d/layers/+filetree/neotree/funcs.el	/^(defun spacemacs\/neotree-collapse-or-up ()$/;"	f
spacemacs/neotree-expand-or-open	conf/emacs/.emacs.d/layers/+filetree/neotree/funcs.el	/^(defun spacemacs\/neotree-expand-or-open (&optional arg)$/;"	f
spacemacs/new-empty-buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/new-empty-buffer (&optional split)$/;"	f
spacemacs/new-empty-buffer-above	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/new-empty-buffer-above ()$/;"	f
spacemacs/new-empty-buffer-below	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/new-empty-buffer-below ()$/;"	f
spacemacs/new-empty-buffer-left	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/new-empty-buffer-left ()$/;"	f
spacemacs/new-empty-buffer-new-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/new-empty-buffer-new-frame ()$/;"	f
spacemacs/new-empty-buffer-right	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/new-empty-buffer-right ()$/;"	f
spacemacs/new-workspace	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/new-workspace (&optional slot)$/;"	f
spacemacs/next-candidate-preview	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/next-candidate-preview (&optional n)$/;"	f
spacemacs/next-error	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/next-error (&optional n reset)$/;"	f
spacemacs/nim-compile-run	conf/emacs/.emacs.d/layers/+lang/nim/funcs.el	/^(defun spacemacs\/nim-compile-run ()$/;"	f
spacemacs/no-golden-ratio-for-buffers	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/no-golden-ratio-for-buffers (bufname)$/;"	f
spacemacs/no-golden-ratio-guide-key	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/no-golden-ratio-guide-key ()$/;"	f
spacemacs/not-in-pdf-view-mode	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/funcs.el	/^(defun spacemacs\/not-in-pdf-view-mode (orig-fun &rest args)$/;"	f
spacemacs/notmuch-git-apply-patch	conf/emacs/.emacs.d/layers/+email/notmuch/funcs.el	/^(defun spacemacs\/notmuch-git-apply-patch (entire-thread)$/;"	f
spacemacs/notmuch-git-apply-patch-part	conf/emacs/.emacs.d/layers/+email/notmuch/funcs.el	/^(defun spacemacs\/notmuch-git-apply-patch-part ()$/;"	f
spacemacs/notmuch-inbox	conf/emacs/.emacs.d/layers/+email/notmuch/funcs.el	/^(defun spacemacs\/notmuch-inbox ()$/;"	f
spacemacs/notmuch-search-archive-thread-down	conf/emacs/.emacs.d/layers/+email/notmuch/funcs.el	/^(defun spacemacs\/notmuch-search-archive-thread-down ()$/;"	f
spacemacs/notmuch-search-archive-thread-up	conf/emacs/.emacs.d/layers/+email/notmuch/funcs.el	/^(defun spacemacs\/notmuch-search-archive-thread-up ()$/;"	f
spacemacs/notmuch-search-message-delete-down	conf/emacs/.emacs.d/layers/+email/notmuch/funcs.el	/^(defun spacemacs\/notmuch-search-message-delete-down ()$/;"	f
spacemacs/notmuch-search-message-delete-up	conf/emacs/.emacs.d/layers/+email/notmuch/funcs.el	/^(defun spacemacs\/notmuch-search-message-delete-up ()$/;"	f
spacemacs/notmuch-show-as-patch	conf/emacs/.emacs.d/layers/+email/notmuch/funcs.el	/^(defun spacemacs\/notmuch-show-as-patch ()$/;"	f
spacemacs/notmuch-show-close-all	conf/emacs/.emacs.d/layers/+email/notmuch/funcs.el	/^(defun spacemacs\/notmuch-show-close-all ()$/;"	f
spacemacs/notmuch-show-open-github-patch	conf/emacs/.emacs.d/layers/+email/notmuch/funcs.el	/^(defun spacemacs\/notmuch-show-open-github-patch ()$/;"	f
spacemacs/notmuch-tree-message-delete-down	conf/emacs/.emacs.d/layers/+email/notmuch/funcs.el	/^(defun spacemacs\/notmuch-tree-message-delete-down ()$/;"	f
spacemacs/notmuch-tree-message-delete-up	conf/emacs/.emacs.d/layers/+email/notmuch/funcs.el	/^(defun spacemacs\/notmuch-tree-message-delete-up ()$/;"	f
spacemacs/ob-fix-inline-images	conf/emacs/.emacs.d/layers/+emacs/org/funcs.el	/^(defun spacemacs\/ob-fix-inline-images ()$/;"	f
spacemacs/open-file-or-directory-in-external-app	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/open-file-or-directory-in-external-app (arg)$/;"	f
spacemacs/open-junk-file	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/open-junk-file (&optional arg)$/;"	f
spacemacs/open-with-eaf	conf/emacs/.emacs.d/layers/+tools/eaf/funcs.el	/^(defun spacemacs\/open-with-eaf ()$/;"	f
spacemacs/org-clock-jump-to-current-clock	conf/emacs/.emacs.d/layers/+emacs/org/funcs.el	/^(defun spacemacs\/org-clock-jump-to-current-clock ()$/;"	f
spacemacs/org-project-capture-capture	conf/emacs/.emacs.d/layers/+emacs/org/funcs.el	/^(defun spacemacs\/org-project-capture-capture (&optional arg)$/;"	f
spacemacs/org-project-capture-goto-todos	conf/emacs/.emacs.d/layers/+emacs/org/funcs.el	/^(defun spacemacs\/org-project-capture-goto-todos ()$/;"	f
spacemacs/org-reveal-advice	conf/emacs/.emacs.d/layers/+emacs/org/funcs.el	/^(defun spacemacs\/org-reveal-advice (&rest _args)$/;"	f
spacemacs/org-setup-evil-surround	conf/emacs/.emacs.d/layers/+emacs/org/funcs.el	/^(defun spacemacs\/org-setup-evil-surround ()$/;"	f
spacemacs/org-summary-todo-naive-auto	conf/emacs/.emacs.d/layers/+emacs/org/funcs.el	/^(defun spacemacs\/org-summary-todo-naive-auto (n-done n-not-done)$/;"	f
spacemacs/org-summary-todo-semiauto	conf/emacs/.emacs.d/layers/+emacs/org/funcs.el	/^(defun spacemacs\/org-summary-todo-semiauto (n-done n-not-done)$/;"	f
spacemacs/org-trello-pull-buffer	conf/emacs/.emacs.d/layers/+emacs/org/funcs.el	/^(defun spacemacs\/org-trello-pull-buffer ()$/;"	f
spacemacs/org-trello-pull-card	conf/emacs/.emacs.d/layers/+emacs/org/funcs.el	/^(defun spacemacs\/org-trello-pull-card ()$/;"	f
spacemacs/org-trello-push-buffer	conf/emacs/.emacs.d/layers/+emacs/org/funcs.el	/^(defun spacemacs\/org-trello-push-buffer ()$/;"	f
spacemacs/org-trello-push-card	conf/emacs/.emacs.d/layers/+emacs/org/funcs.el	/^(defun spacemacs\/org-trello-push-card ()$/;"	f
spacemacs/paradox-list-packages	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/paradox-list-packages ()$/;"	f
spacemacs/pass-copy-and-describe	conf/emacs/.emacs.d/layers/+tools/pass/funcs.el	/^(defun spacemacs\/pass-copy-and-describe (entry)$/;"	f
spacemacs/pass-describe	conf/emacs/.emacs.d/layers/+tools/pass/funcs.el	/^(defun spacemacs\/pass-describe (entry)$/;"	f
spacemacs/pcomplete-std-complete	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/pcomplete-std-complete ()$/;"	f
spacemacs/perltidy-format	conf/emacs/.emacs.d/layers/+lang/perl5/funcs.el	/^(defun spacemacs\/perltidy-format ()$/;"	f
spacemacs/perltidy-format-buffer	conf/emacs/.emacs.d/layers/+lang/perl5/funcs.el	/^(defun spacemacs\/perltidy-format-buffer ()$/;"	f
spacemacs/perltidy-format-function	conf/emacs/.emacs.d/layers/+lang/perl5/funcs.el	/^(defun spacemacs\/perltidy-format-function ()$/;"	f
spacemacs/persp-buffers	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/persp-buffers ()$/;"	f
spacemacs/persp-helm-mini	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/persp-helm-mini ()$/;"	f
spacemacs/persp-perspectives	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/persp-perspectives ()$/;"	f
spacemacs/post-theme-init	conf/emacs/.emacs.d/core/core-themes-support.el	/^(defun spacemacs\/post-theme-init (theme)$/;"	f
spacemacs/prefix-titles	conf/emacs/.emacs.d/core/core-keybindings.el	/^(defvar spacemacs\/prefix-titles nil$/;"	f
spacemacs/prettify-org-buffer	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/prettify-org-buffer ()$/;"	f
spacemacs/previous-candidate-preview	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/previous-candidate-preview (&optional n)$/;"	f
spacemacs/previous-error	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/previous-error (&optional n reset)$/;"	f
spacemacs/projectile-copy-directory-path	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-project/funcs.el	/^(defun spacemacs\/projectile-copy-directory-path ()$/;"	f
spacemacs/projectile-copy-file-path	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-project/funcs.el	/^(defun spacemacs\/projectile-copy-file-path ()$/;"	f
spacemacs/projectile-copy-file-path-with-line	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-project/funcs.el	/^(defun spacemacs\/projectile-copy-file-path-with-line ()$/;"	f
spacemacs/projectile-copy-file-path-with-line-column	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-project/funcs.el	/^(defun spacemacs\/projectile-copy-file-path-with-line-column ()$/;"	f
spacemacs/projectile-shell	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/projectile-shell ()$/;"	f
spacemacs/projectile-shell-pop	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/projectile-shell-pop ()$/;"	f
spacemacs/prompt-kill-emacs	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/prompt-kill-emacs ()$/;"	f
spacemacs/publish-doc	conf/emacs/.emacs.d/core/core-documentation.el	/^(defun spacemacs\/publish-doc ()$/;"	f
spacemacs/purescript-fmt-before-save-hook	conf/emacs/.emacs.d/layers/+lang/purescript/funcs.el	/^(defun spacemacs\/purescript-fmt-before-save-hook ()$/;"	f
spacemacs/purescript-format	conf/emacs/.emacs.d/layers/+lang/purescript/funcs.el	/^(defun spacemacs\/purescript-format ()$/;"	f
spacemacs/purescript-purs-tidy-format-buffer	conf/emacs/.emacs.d/layers/+lang/purescript/funcs.el	/^(defun spacemacs\/purescript-purs-tidy-format-buffer ()$/;"	f
spacemacs/push-mark-and-goto-beginning-of-line	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/push-mark-and-goto-beginning-of-line ()$/;"	f
spacemacs/push-mark-and-goto-end-of-line	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/push-mark-and-goto-end-of-line ()$/;"	f
spacemacs/pyenv-executable-find	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/pyenv-executable-find (command)$/;"	f
spacemacs/python-annotate-pdb	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-annotate-pdb ()$/;"	f
spacemacs/python-execute-file	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-execute-file (arg)$/;"	f
spacemacs/python-execute-file-focus	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-execute-file-focus (arg)$/;"	f
spacemacs/python-format-buffer	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-format-buffer ()$/;"	f
spacemacs/python-imenu-create-index	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-imenu-create-index ()$/;"	f
spacemacs/python-remove-unused-imports	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-remove-unused-imports ()$/;"	f
spacemacs/python-setup-everything	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-setup-everything (&optional root-dir)$/;"	f
spacemacs/python-shell-restart	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-shell-restart ()$/;"	f
spacemacs/python-shell-restart-switch	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-shell-restart-switch ()$/;"	f
spacemacs/python-shell-send-block	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-shell-send-block (&optional arg)$/;"	f
spacemacs/python-shell-send-block-switch	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-shell-send-block-switch (&optional arg)$/;"	f
spacemacs/python-shell-send-buffer	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-shell-send-buffer ()$/;"	f
spacemacs/python-shell-send-buffer-switch	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-shell-send-buffer-switch ()$/;"	f
spacemacs/python-shell-send-defun	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-shell-send-defun ()$/;"	f
spacemacs/python-shell-send-defun-switch	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-shell-send-defun-switch ()$/;"	f
spacemacs/python-shell-send-line	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-shell-send-line ()$/;"	f
spacemacs/python-shell-send-region	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-shell-send-region (start end)$/;"	f
spacemacs/python-shell-send-region-switch	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-shell-send-region-switch (start end)$/;"	f
spacemacs/python-shell-send-statement	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-shell-send-statement ()$/;"	f
spacemacs/python-shell-send-statement-switch	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-shell-send-statement-switch ()$/;"	f
spacemacs/python-shell-send-with-output	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-shell-send-with-output(start end)$/;"	f
spacemacs/python-start-or-switch-repl	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-start-or-switch-repl ()$/;"	f
spacemacs/python-test-all	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-test-all (arg)$/;"	f
spacemacs/python-test-last	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-test-last (arg)$/;"	f
spacemacs/python-test-last-failed	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-test-last-failed (arg)$/;"	f
spacemacs/python-test-module	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-test-module (arg)$/;"	f
spacemacs/python-test-one	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-test-one (arg)$/;"	f
spacemacs/python-test-pdb-all	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-test-pdb-all (arg)$/;"	f
spacemacs/python-test-pdb-last-failed	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-test-pdb-last-failed (arg)$/;"	f
spacemacs/python-test-pdb-module	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-test-pdb-module (arg)$/;"	f
spacemacs/python-test-pdb-one	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-test-pdb-one (arg)$/;"	f
spacemacs/python-test-pdb-suite	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-test-pdb-suite (arg)$/;"	f
spacemacs/python-test-suite	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-test-suite (arg)$/;"	f
spacemacs/python-toggle-breakpoint	conf/emacs/.emacs.d/layers/+lang/python/funcs.el	/^(defun spacemacs\/python-toggle-breakpoint ()$/;"	f
spacemacs/quick-ahs-backward	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/quick-ahs-backward ()$/;"	f
spacemacs/quick-ahs-forward	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/quick-ahs-forward ()$/;"	f
spacemacs/quickrun	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/quickrun ()$/;"	f
spacemacs/randomize-lines	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/randomize-lines (beg end)$/;"	f
spacemacs/randomize-words	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/randomize-words (beg end)$/;"	f
spacemacs/rcirc	conf/emacs/.emacs.d/layers/+chat/rcirc/funcs.el	/^(defun spacemacs\/rcirc (arg)$/;"	f
spacemacs/rcirc-insert-current-emms-track	conf/emacs/.emacs.d/layers/+chat/rcirc/funcs.el	/^(defun spacemacs\/rcirc-insert-current-emms-track ()$/;"	f
spacemacs/rcirc-notify-beep	conf/emacs/.emacs.d/layers/+chat/rcirc/funcs.el	/^(defun spacemacs\/rcirc-notify-beep (msg)$/;"	f
spacemacs/react-emmet-mode	conf/emacs/.emacs.d/layers/+frameworks/react/funcs.el	/^(defun spacemacs\/react-emmet-mode ()$/;"	f
spacemacs/rebox-dwim-previous	conf/emacs/.emacs.d/layers/+tools/rebox/funcs.el	/^(defun spacemacs\/rebox-dwim-previous ()$/;"	f
spacemacs/recompile-elpa	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/recompile-elpa (arg &optional dir)$/;"	f
spacemacs/register-repl	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/register-repl (feature repl-func &optional tag)$/;"	f
spacemacs/remove-popwin-display-config	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/funcs.el	/^(defun spacemacs\/remove-popwin-display-config (str)$/;"	f
spacemacs/rename-buffer-or-save-new-file	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/rename-buffer-or-save-new-file ()$/;"	f
spacemacs/rename-buffer-visiting-a-file	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/rename-buffer-visiting-a-file (&optional arg)$/;"	f
spacemacs/rename-current-buffer-file	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/rename-current-buffer-file (&optional arg)$/;"	f
spacemacs/rename-file	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/rename-file (filename &optional new-filename)$/;"	f
spacemacs/reopen-killed-buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/reopen-killed-buffer ()$/;"	f
spacemacs/report-issue	conf/emacs/.emacs.d/core/core-debug.el	/^(defun spacemacs\/report-issue (arg)$/;"	f
spacemacs/report-issue-mode	conf/emacs/.emacs.d/core/core-debug.el	/^(define-derived-mode spacemacs\/report-issue-mode text-mode "Report-Issue"$/;"	f
spacemacs/report-issue-mode-map	conf/emacs/.emacs.d/core/core-debug.el	/^(define-key spacemacs\/report-issue-mode-map$/;"	f
spacemacs/reset-font-size	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defun spacemacs\/reset-font-size ()$/;"	f
spacemacs/resize-shell-to-desired-width	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/resize-shell-to-desired-width ()$/;"	f
spacemacs/restart-emacs	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/restart-emacs (&optional args)$/;"	f
spacemacs/restart-emacs-adv-timers	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/restart-emacs-adv-timers (&optional args)$/;"	f
spacemacs/restart-emacs-debug-init	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/restart-emacs-debug-init (&optional args)$/;"	f
spacemacs/restart-emacs-resume-layouts	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/restart-emacs-resume-layouts (&optional args)$/;"	f
spacemacs/restart-emacs-timed-requires	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/restart-emacs-timed-requires (&optional args)$/;"	f
spacemacs/restart-stock-emacs-with-packages	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/restart-stock-emacs-with-packages (packages &optional args)$/;"	f
spacemacs/restclient-http-send-current-raw-stay-in-window	conf/emacs/.emacs.d/layers/+tools/restclient/funcs.el	/^(defun spacemacs\/restclient-http-send-current-raw-stay-in-window ()$/;"	f
spacemacs/resume-last-search-buffer	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defun spacemacs\/resume-last-search-buffer ()$/;"	f
spacemacs/rotate-windows-backward	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/rotate-windows-backward (count)$/;"	f
spacemacs/rotate-windows-forward	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/rotate-windows-forward (count)$/;"	f
spacemacs/ruby-fmt-before-save-hook	conf/emacs/.emacs.d/layers/+lang/ruby/funcs.el	/^(defun spacemacs\/ruby-fmt-before-save-hook ()$/;"	f
spacemacs/ruby-format	conf/emacs/.emacs.d/layers/+lang/ruby/funcs.el	/^(defun spacemacs\/ruby-format ()$/;"	f
spacemacs/ruby-insert-frozen-string-literal-comment	conf/emacs/.emacs.d/layers/+lang/ruby/funcs.el	/^(defun spacemacs\/ruby-insert-frozen-string-literal-comment ()$/;"	f
spacemacs/ruby-insert-shebang	conf/emacs/.emacs.d/layers/+lang/ruby/funcs.el	/^(defun spacemacs\/ruby-insert-shebang ()$/;"	f
spacemacs/ruby-maybe-highlight-debugger-keywords	conf/emacs/.emacs.d/layers/+lang/ruby/funcs.el	/^(defun spacemacs\/ruby-maybe-highlight-debugger-keywords ()$/;"	f
spacemacs/rudekill-matching-buffers	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/rudekill-matching-buffers (regexp &optional internal-too)$/;"	f
spacemacs/run-pandoc	conf/emacs/.emacs.d/layers/+tools/pandoc/funcs.el	/^(defun spacemacs\/run-pandoc ()$/;"	f
spacemacs/run-prog-mode-hooks	conf/emacs/.emacs.d/core/core-hooks.el	/^(defun spacemacs\/run-prog-mode-hooks ()$/;"	f
spacemacs/run-text-mode-hooks	conf/emacs/.emacs.d/core/core-hooks.el	/^(defun spacemacs\/run-text-mode-hooks ()$/;"	f
spacemacs/rust-quick-run	conf/emacs/.emacs.d/layers/+lang/rust/funcs.el	/^(defun spacemacs\/rust-quick-run ()$/;"	f
spacemacs/safe-erase-buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/safe-erase-buffer ()$/;"	f
spacemacs/save-as	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/save-as (filename &optional visit)$/;"	f
spacemacs/save-buffers-kill-emacs	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/save-buffers-kill-emacs ()$/;"	f
spacemacs/save-eyebrowse-for-perspective	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/save-eyebrowse-for-perspective (&optional frame)$/;"	f
spacemacs/scala-join-line	conf/emacs/.emacs.d/layers/+lang/scala/funcs.el	/^(defun spacemacs\/scala-join-line ()$/;"	f
spacemacs/scala-sbt-compile	conf/emacs/.emacs.d/layers/+lang/scala/funcs.el	/^(defun spacemacs\/scala-sbt-compile ()$/;"	f
spacemacs/scala-sbt-compile-it	conf/emacs/.emacs.d/layers/+lang/scala/funcs.el	/^(defun spacemacs\/scala-sbt-compile-it ()$/;"	f
spacemacs/scala-sbt-compile-test	conf/emacs/.emacs.d/layers/+lang/scala/funcs.el	/^(defun spacemacs\/scala-sbt-compile-test ()$/;"	f
spacemacs/scala-sbt-scalafmt-all	conf/emacs/.emacs.d/layers/+lang/scala/funcs.el	/^(defun spacemacs\/scala-sbt-scalafmt-all ()$/;"	f
spacemacs/scala-sbt-test	conf/emacs/.emacs.d/layers/+lang/scala/funcs.el	/^(defun spacemacs\/scala-sbt-test ()$/;"	f
spacemacs/scale-down-font	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defun spacemacs\/scale-down-font ()$/;"	f
spacemacs/scale-up-font	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defun spacemacs\/scale-up-font ()$/;"	f
spacemacs/scale-up-or-down-font-size	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defun spacemacs\/scale-up-or-down-font-size (direction)$/;"	f
spacemacs/scripts-make-buffer-file-executable-maybe	conf/emacs/.emacs.d/layers/+lang/shell-scripts/funcs.el	/^(defun spacemacs\/scripts-make-buffer-file-executable-maybe ()$/;"	f
spacemacs/search-engine-select	conf/emacs/.emacs.d/layers/+web-services/search-engine/funcs.el	/^(defun spacemacs\/search-engine-select ()$/;"	f
spacemacs/select-custom-layout	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/select-custom-layout ()$/;"	f
spacemacs/selectrum-next-candidate-preview	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/selectrum-next-candidate-preview (&optional n)$/;"	f
spacemacs/selectrum-previous-candidate-preview	conf/emacs/.emacs.d/layers/+completion/compleseus/funcs.el	/^(defun spacemacs\/selectrum-previous-candidate-preview (&optional n)$/;"	f
spacemacs/set-default-font	conf/emacs/.emacs.d/core/core-fonts-support.el	/^(defun spacemacs\/set-default-font (plists)$/;"	f
spacemacs/set-evil-search-module	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/funcs.el	/^(defun spacemacs\/set-evil-search-module (style)$/;"	f
spacemacs/set-leader-keys	conf/emacs/.emacs.d/core/core-keybindings.el	/^(defun spacemacs\/set-leader-keys (key def &rest bindings)$/;"	f
spacemacs/set-leader-keys-for-major-mode	conf/emacs/.emacs.d/core/core-keybindings.el	/^(defun spacemacs\/set-leader-keys-for-major-mode (mode key def &rest bindings)$/;"	f
spacemacs/set-leader-keys-for-minor-mode	conf/emacs/.emacs.d/core/core-keybindings.el	/^(defun spacemacs\/set-leader-keys-for-minor-mode (mode key def &rest bindings)$/;"	f
spacemacs/set-new-version-lighter-mode-line-faces	conf/emacs/.emacs.d/core/core-release-management.el	/^(defun spacemacs\/set-new-version-lighter-mode-line-faces ()$/;"	f
spacemacs/set-state-faces	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/funcs.el	/^(defun spacemacs\/set-state-faces ()$/;"	f
spacemacs/setup-startup-hook	conf/emacs/.emacs.d/core/core-spacemacs.el	/^(defun spacemacs\/setup-startup-hook ()$/;"	f
spacemacs/shell-pop-with-eshell-history-write	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun spacemacs\/shell-pop-with-eshell-history-write (orig-fun &rest args)$/;"	f
spacemacs/show-hide-compilation-window	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/show-hide-compilation-window ()$/;"	f
spacemacs/show-hide-helm-or-ivy-prompt-msg	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/show-hide-helm-or-ivy-prompt-msg (msg sec)$/;"	f
spacemacs/shrink-window	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defun spacemacs\/shrink-window (delta)$/;"	f
spacemacs/shrink-window-horizontally	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defun spacemacs\/shrink-window-horizontally (delta)$/;"	f
spacemacs/single-win-workspace	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/single-win-workspace ()$/;"	f
spacemacs/skewer-eval-defun-and-focus	conf/emacs/.emacs.d/layers/+lang/javascript/funcs.el	/^(defun spacemacs\/skewer-eval-defun-and-focus ()$/;"	f
spacemacs/skewer-eval-region	conf/emacs/.emacs.d/layers/+lang/javascript/funcs.el	/^(defun spacemacs\/skewer-eval-region (beg end)$/;"	f
spacemacs/skewer-eval-region-and-focus	conf/emacs/.emacs.d/layers/+lang/javascript/funcs.el	/^(defun spacemacs\/skewer-eval-region-and-focus (beg end)$/;"	f
spacemacs/skewer-load-buffer-and-focus	conf/emacs/.emacs.d/layers/+lang/javascript/funcs.el	/^(defun spacemacs\/skewer-load-buffer-and-focus ()$/;"	f
spacemacs/skewer-start-repl	conf/emacs/.emacs.d/layers/+lang/javascript/funcs.el	/^(defun spacemacs\/skewer-start-repl ()$/;"	f
spacemacs/slime-eval-sexp-end-of-line	conf/emacs/.emacs.d/layers/+lang/common-lisp/funcs.el	/^(defun spacemacs\/slime-eval-sexp-end-of-line ()$/;"	f
spacemacs/slime-repl	conf/emacs/.emacs.d/layers/+lang/common-lisp/funcs.el	/^(defun spacemacs\/slime-repl ()$/;"	f
spacemacs/smart-closing-parenthesis	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/funcs.el	/^(defun spacemacs\/smart-closing-parenthesis ()$/;"	f
spacemacs/smartparens-pair-newline	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/funcs.el	/^(defun spacemacs\/smartparens-pair-newline (id action context)$/;"	f
spacemacs/smartparens-pair-newline-and-indent	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/funcs.el	/^(defun spacemacs\/smartparens-pair-newline-and-indent (id action context)$/;"	f
spacemacs/smex	conf/emacs/.emacs.d/layers/+emacs/smex/funcs.el	/^(defun spacemacs\/smex ()$/;"	f
spacemacs/smex-major-mode-commands	conf/emacs/.emacs.d/layers/+emacs/smex/funcs.el	/^(defun spacemacs\/smex-major-mode-commands ()$/;"	f
spacemacs/sort-lines	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/sort-lines (&optional reverse)$/;"	f
spacemacs/sort-lines-by-column	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/sort-lines-by-column (&optional reverse)$/;"	f
spacemacs/sort-lines-by-column-reverse	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/sort-lines-by-column-reverse ()$/;"	f
spacemacs/sort-lines-reverse	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/sort-lines-reverse ()$/;"	f
spacemacs/spaceline-config-startup	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/funcs.el	/^(defun spacemacs\/spaceline-config-startup ()$/;"	f
spacemacs/spaceline-config-startup-hook	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-modeline/funcs.el	/^(defun spacemacs\/spaceline-config-startup-hook ()$/;"	f
spacemacs/split-and-new-line	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/split-and-new-line ()$/;"	f
spacemacs/split-window-horizontally-and-switch	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/split-window-horizontally-and-switch ()$/;"	f
spacemacs/split-window-vertically-and-switch	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/split-window-vertically-and-switch ()$/;"	f
spacemacs/sql-populate-products-list	conf/emacs/.emacs.d/layers/+lang/sql/funcs.el	/^(defun spacemacs\/sql-populate-products-list (&rest args)$/;"	f
spacemacs/state-color	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/funcs.el	/^(defun spacemacs\/state-color (state)$/;"	f
spacemacs/state-color-face	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/funcs.el	/^(defun spacemacs\/state-color-face (state)$/;"	f
spacemacs/state-face	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/funcs.el	/^(defun spacemacs\/state-face (state)$/;"	f
spacemacs/sudo-edit	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/sudo-edit (&optional arg)$/;"	f
spacemacs/swap-windows	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/swap-windows (window1 window2)$/;"	f
spacemacs/switch-to-buffer-other-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defalias 'spacemacs\/switch-to-buffer-other-frame 'switch-to-buffer-other-frame)$/;"	f
spacemacs/switch-to-compilation-buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/switch-to-compilation-buffer ()$/;"	f
spacemacs/switch-to-help-buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/switch-to-help-buffer ()$/;"	f
spacemacs/switch-to-messages-buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/switch-to-messages-buffer (&optional arg)$/;"	f
spacemacs/switch-to-minibuffer-window	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/switch-to-minibuffer-window ()$/;"	f
spacemacs/switch-to-scratch-buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/switch-to-scratch-buffer (&optional arg)$/;"	f
spacemacs/switch-to-version	conf/emacs/.emacs.d/core/core-release-management.el	/^(defun spacemacs\/switch-to-version (&optional version)$/;"	f
spacemacs/symbol-highlight	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/symbol-highlight ()$/;"	f
spacemacs/symbol-highlight-reset-range	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/symbol-highlight-reset-range ()$/;"	f
spacemacs/symbol-overlay	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-navigation/funcs.el	/^(defun spacemacs\/symbol-overlay ()$/;"	f
spacemacs/system-is-linux	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/system-is-linux ()$/;"	f
spacemacs/system-is-mac	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/system-is-mac ()$/;"	f
spacemacs/system-is-mswindows	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/system-is-mswindows ()$/;"	f
spacemacs/tabs-backward	conf/emacs/.emacs.d/layers/+emacs/tabs/funcs.el	/^(defun spacemacs\/tabs-backward ()$/;"	f
spacemacs/tabs-backward-group-and-hide	conf/emacs/.emacs.d/layers/+emacs/tabs/funcs.el	/^(defun spacemacs\/tabs-backward-group-and-hide ()$/;"	f
spacemacs/tabs-forward	conf/emacs/.emacs.d/layers/+emacs/tabs/funcs.el	/^(defun spacemacs\/tabs-forward ()$/;"	f
spacemacs/tabs-forward-group-and-hide	conf/emacs/.emacs.d/layers/+emacs/tabs/funcs.el	/^(defun spacemacs\/tabs-forward-group-and-hide ()$/;"	f
spacemacs/terminal-fix-mode-line-indicator-overlap	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/terminal-fix-mode-line-indicator-overlap (str)$/;"	f
spacemacs/tern-setup-tern	conf/emacs/.emacs.d/layers/+tools/tern/funcs.el	/^(defun spacemacs\/tern-setup-tern ()$/;"	f
spacemacs/tetris-quit-game	conf/emacs/.emacs.d/layers/+fun/games/funcs.el	/^(defun spacemacs\/tetris-quit-game ()$/;"	f
spacemacs/theme-loader	conf/emacs/.emacs.d/core/core-themes-support.el	/^(defun spacemacs\/theme-loader ()$/;"	f
spacemacs/title-prepare	conf/emacs/.emacs.d/core/core-dotspacemacs.el	/^(defun spacemacs\/title-prepare (title-format)$/;"	f
spacemacs/toggle-background-transparency	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defun spacemacs\/toggle-background-transparency (&optional frame)$/;"	f
spacemacs/toggle-current-window-dedication	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/toggle-current-window-dedication ()$/;"	f
spacemacs/toggle-flycheck-error-list	conf/emacs/.emacs.d/layers/+checkers/syntax-checking/funcs.el	/^(defun spacemacs\/toggle-flycheck-error-list ()$/;"	f
spacemacs/toggle-frame-fullscreen	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/toggle-frame-fullscreen ()$/;"	f
spacemacs/toggle-frame-fullscreen-non-native	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/toggle-frame-fullscreen-non-native ()$/;"	f
spacemacs/toggle-fullscreen	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/toggle-fullscreen ()$/;"	f
spacemacs/toggle-maximize-buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(define-obsolete-function-alias 'spacemacs\/toggle-maximize-buffer$/;"	f
spacemacs/toggle-maximize-window	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/toggle-maximize-window ()$/;"	f
spacemacs/toggle-selective-display	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/funcs.el	/^(defun spacemacs\/toggle-selective-display (column)$/;"	f
spacemacs/toggle-transparency	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defun spacemacs\/toggle-transparency (&optional frame)$/;"	f
spacemacs/transient-state-register-add-bindings	conf/emacs/.emacs.d/core/core-transient-state.el	/^(defun spacemacs\/transient-state-register-add-bindings (name bindings)$/;"	f
spacemacs/transient-state-register-remove-bindings	conf/emacs/.emacs.d/core/core-transient-state.el	/^(defun spacemacs\/transient-state-register-remove-bindings (name keys)$/;"	f
spacemacs/translate-C-i	conf/emacs/.emacs.d/core/core-keybindings.el	/^(defun spacemacs\/translate-C-i (_)$/;"	f
spacemacs/treemacs-project-toggle	conf/emacs/.emacs.d/layers/+filetree/treemacs/funcs.el	/^(defun spacemacs\/treemacs-project-toggle ()$/;"	f
spacemacs/treemacs-setup-width-lock	conf/emacs/.emacs.d/layers/+filetree/treemacs/funcs.el	/^(defun spacemacs\/treemacs-setup-width-lock ()$/;"	f
spacemacs/typescript-emmet-mode	conf/emacs/.emacs.d/layers/+lang/typescript/funcs.el	/^(defun spacemacs\/typescript-emmet-mode ()$/;"	f
spacemacs/typescript-fmt-before-save-hook	conf/emacs/.emacs.d/layers/+lang/typescript/funcs.el	/^(defun spacemacs\/typescript-fmt-before-save-hook ()$/;"	f
spacemacs/typescript-format	conf/emacs/.emacs.d/layers/+lang/typescript/funcs.el	/^(defun spacemacs\/typescript-format ()$/;"	f
spacemacs/typescript-jump-to-type-def	conf/emacs/.emacs.d/layers/+lang/typescript/funcs.el	/^(defun spacemacs\/typescript-jump-to-type-def ()$/;"	f
spacemacs/typescript-mode-config	conf/emacs/.emacs.d/layers/+lang/typescript/funcs.el	/^(defun spacemacs\/typescript-mode-config (mode)$/;"	f
spacemacs/typescript-mode-init	conf/emacs/.emacs.d/layers/+lang/typescript/funcs.el	/^(defun spacemacs\/typescript-mode-init (hook)$/;"	f
spacemacs/typescript-open-region-in-playground	conf/emacs/.emacs.d/layers/+lang/typescript/funcs.el	/^(defun spacemacs\/typescript-open-region-in-playground (start end)$/;"	f
spacemacs/typescript-safe-local-variables	conf/emacs/.emacs.d/layers/+lang/typescript/funcs.el	/^(defun spacemacs\/typescript-safe-local-variables (values)$/;"	f
spacemacs/typescript-tsfmt-format-buffer	conf/emacs/.emacs.d/layers/+lang/typescript/funcs.el	/^(defun spacemacs\/typescript-tsfmt-format-buffer ()$/;"	f
spacemacs/typescript-yasnippet-setup	conf/emacs/.emacs.d/layers/+lang/typescript/funcs.el	/^(defun spacemacs\/typescript-yasnippet-setup ()$/;"	f
spacemacs/uniquify-lines	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/uniquify-lines ()$/;"	f
spacemacs/unix2dos	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/unix2dos ()$/;"	f
spacemacs/update-eyebrowse-for-perspective	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/update-eyebrowse-for-perspective (&rest _args)$/;"	f
spacemacs/update-progress-bar	conf/emacs/.emacs.d/core/core-progress-bar.el	/^(defun spacemacs\/update-progress-bar ()$/;"	f
spacemacs/update-theme	conf/emacs/.emacs.d/layers/+themes/theming/funcs.el	/^(defun spacemacs\/update-theme ()$/;"	f
spacemacs/use-package-extend	conf/emacs/.emacs.d/core/core-use-package-ext.el	/^(defun spacemacs\/use-package-extend ()$/;"	f
spacemacs/useful-buffer-p	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/useful-buffer-p (buffer)$/;"	f
spacemacs/useless-buffer-p	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/useless-buffer-p (buffer)$/;"	f
spacemacs/utop-eval-buffer-and-go	conf/emacs/.emacs.d/layers/+lang/ocaml/funcs.el	/^(defun spacemacs\/utop-eval-buffer-and-go ()$/;"	f
spacemacs/utop-eval-phrase-and-go	conf/emacs/.emacs.d/layers/+lang/ocaml/funcs.el	/^(defun spacemacs\/utop-eval-phrase-and-go ()$/;"	f
spacemacs/utop-eval-region-and-go	conf/emacs/.emacs.d/layers/+lang/ocaml/funcs.el	/^(defun spacemacs\/utop-eval-region-and-go (start end)$/;"	f
spacemacs/uuidgen-1	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/funcs.el	/^(defun spacemacs\/uuidgen-1 (arg)$/;"	f
spacemacs/uuidgen-4	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/funcs.el	/^(defun spacemacs\/uuidgen-4 (arg)$/;"	f
spacemacs/vagrant-ssh	conf/emacs/.emacs.d/layers/+tools/vagrant/packages.el	/^(defun spacemacs\/vagrant-ssh ()$/;"	f
spacemacs/vcs-disable-margin	conf/emacs/.emacs.d/layers/+source-control/version-control/funcs.el	/^(defun spacemacs\/vcs-disable-margin ()$/;"	f
spacemacs/vcs-disable-margin-globally	conf/emacs/.emacs.d/layers/+source-control/version-control/funcs.el	/^(defun spacemacs\/vcs-disable-margin-globally ()$/;"	f
spacemacs/vcs-enable-margin	conf/emacs/.emacs.d/layers/+source-control/version-control/funcs.el	/^(defun spacemacs\/vcs-enable-margin ()$/;"	f
spacemacs/vcs-enable-margin-globally	conf/emacs/.emacs.d/layers/+source-control/version-control/funcs.el	/^(defun spacemacs\/vcs-enable-margin-globally ()$/;"	f
spacemacs/vcs-margin-global-p	conf/emacs/.emacs.d/layers/+source-control/version-control/funcs.el	/^(defun spacemacs\/vcs-margin-global-p ()$/;"	f
spacemacs/vcs-margin-p	conf/emacs/.emacs.d/layers/+source-control/version-control/funcs.el	/^(defun spacemacs\/vcs-margin-p ()$/;"	f
spacemacs/vcs-next-hunk	conf/emacs/.emacs.d/layers/+source-control/version-control/funcs.el	/^(defun spacemacs\/vcs-next-hunk ()$/;"	f
spacemacs/vcs-previous-hunk	conf/emacs/.emacs.d/layers/+source-control/version-control/funcs.el	/^(defun spacemacs\/vcs-previous-hunk ()$/;"	f
spacemacs/vcs-revert-hunk	conf/emacs/.emacs.d/layers/+source-control/version-control/funcs.el	/^(defun spacemacs\/vcs-revert-hunk ()$/;"	f
spacemacs/vcs-show-help	conf/emacs/.emacs.d/layers/+source-control/version-control/funcs.el	/^(defun spacemacs\/vcs-show-help ()$/;"	f
spacemacs/vcs-show-hunk	conf/emacs/.emacs.d/layers/+source-control/version-control/funcs.el	/^(defun spacemacs\/vcs-show-hunk ()$/;"	f
spacemacs/vcs-stage-hunk	conf/emacs/.emacs.d/layers/+source-control/version-control/funcs.el	/^(defun spacemacs\/vcs-stage-hunk ()$/;"	f
spacemacs/view-org-file	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/view-org-file (file &optional anchor-text expand-scope)$/;"	f
spacemacs/wgrep-abort-changes	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/funcs.el	/^(defun spacemacs\/wgrep-abort-changes ()$/;"	f
spacemacs/wgrep-abort-changes-and-quit	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/funcs.el	/^(defun spacemacs\/wgrep-abort-changes-and-quit ()$/;"	f
spacemacs/wgrep-finish-edit	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/funcs.el	/^(defun spacemacs\/wgrep-finish-edit ()$/;"	f
spacemacs/wgrep-save-changes-and-quit	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-editing/funcs.el	/^(defun spacemacs\/wgrep-save-changes-and-quit ()$/;"	f
spacemacs/whisper-select-language	conf/emacs/.emacs.d/layers/+web-services/whisper/funcs.el	/^(defun spacemacs\/whisper-select-language ()$/;"	f
spacemacs/whisper-select-model	conf/emacs/.emacs.d/layers/+web-services/whisper/funcs.el	/^(defun spacemacs\/whisper-select-model ()$/;"	f
spacemacs/window-layout-toggle	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/window-layout-toggle ()$/;"	f
spacemacs/window-purpose-restore-dedicated-windows	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/funcs.el	/^(defun spacemacs\/window-purpose-restore-dedicated-windows (&rest args)$/;"	f
spacemacs/window-purpose-save-dedicated-windows	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/funcs.el	/^(defun spacemacs\/window-purpose-save-dedicated-windows (&rest args)$/;"	f
spacemacs/window-purpose-sync-eyebrowse	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/funcs.el	/^(defun spacemacs\/window-purpose-sync-eyebrowse ()$/;"	f
spacemacs/window-purpose-sync-popwin	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/funcs.el	/^(defun spacemacs\/window-purpose-sync-popwin ()$/;"	f
spacemacs/window-split-default-delete	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/window-split-default-delete ()$/;"	f
spacemacs/window-split-double-columns	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/window-split-double-columns (&optional purge)$/;"	f
spacemacs/window-split-grid	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/window-split-grid (&optional purge)$/;"	f
spacemacs/window-split-single-column	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/window-split-single-column (&optional purge)$/;"	f
spacemacs/window-split-triple-columns	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/window-split-triple-columns (&optional purge)$/;"	f
spacemacs/window-state-all-windows	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/window-state-all-windows (state)$/;"	f
spacemacs/window-state-get-buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/window-state-get-buffer (window)$/;"	f
spacemacs/window-state-get-buffer-name	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/window-state-get-buffer-name (window)$/;"	f
spacemacs/window-state-get-buffer-names	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/window-state-get-buffer-names (state)$/;"	f
spacemacs/window-state-get-buffers	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/window-state-get-buffers (state)$/;"	f
spacemacs/window-state-walk-windows	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/window-state-walk-windows (state fn)$/;"	f
spacemacs/window-state-walk-windows-1	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/window-state-walk-windows-1 (window fn)$/;"	f
spacemacs/window-state-window-p	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/window-state-window-p (object)$/;"	f
spacemacs/window-system-is-mac	conf/emacs/.emacs.d/core/core-funcs.el	/^(defun spacemacs\/window-system-is-mac ()$/;"	f
spacemacs/with-save-excursion	conf/emacs/.emacs.d/layers/+emacs/org/funcs.el	/^(defun spacemacs\/with-save-excursion (orig-fun &rest args)$/;"	f
spacemacs/workspace-switch-or-create	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/workspace-switch-or-create (slot)$/;"	f
spacemacs/workspaces-ts-rename	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defun spacemacs\/workspaces-ts-rename ()$/;"	f
spacemacs/write-custom-settings-to-dotfile	conf/emacs/.emacs.d/core/core-custom-settings.el	/^(defun spacemacs\/write-custom-settings-to-dotfile ()$/;"	f
spacemacs/xclipboard-cliphist-paste-item-rectangle	conf/emacs/.emacs.d/layers/+tools/xclipboard/funcs.el	/^(defun spacemacs\/xclipboard-cliphist-paste-item-rectangle ()$/;"	f
spacemacs/xclipboard-copy	conf/emacs/.emacs.d/layers/+tools/xclipboard/local/spacemacs-xclipboard/spacemacs-xclipboard.el	/^(defun spacemacs\/xclipboard-copy ()$/;"	f
spacemacs/xclipboard-get-display	conf/emacs/.emacs.d/layers/+tools/xclipboard/local/spacemacs-xclipboard/spacemacs-xclipboard.el	/^(defun spacemacs\/xclipboard-get-display ()$/;"	f
spacemacs/xclipboard-paste	conf/emacs/.emacs.d/layers/+tools/xclipboard/local/spacemacs-xclipboard/spacemacs-xclipboard.el	/^(defun spacemacs\/xclipboard-paste ()$/;"	f
spacemacs/yank-advised-indent-function	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defun spacemacs\/yank-advised-indent-function (beg end)$/;"	f
spacemacs/zoom-frm-in	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/funcs.el	/^(defun spacemacs\/zoom-frm-in ()$/;"	f
spacemacs/zoom-frm-out	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/funcs.el	/^(defun spacemacs\/zoom-frm-out ()$/;"	f
spacemacs/zoom-frm-unzoom	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/funcs.el	/^(defun spacemacs\/zoom-frm-unzoom ()$/;"	f
spacemacs|add-company-backends	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defmacro spacemacs|add-company-backends (&rest props)$/;"	f
spacemacs|add-toggle	conf/emacs/.emacs.d/core/core-toggle.el	/^(defmacro spacemacs|add-toggle (name &rest props)$/;"	f
spacemacs|add-transient-hook	conf/emacs/.emacs.d/core/core-hooks.el	/^(defmacro spacemacs|add-transient-hook (hook func &optional fname)$/;"	f
spacemacs|create-align-repeat-x	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/funcs.el	/^(defmacro spacemacs|create-align-repeat-x (name regexp &optional justify-right default-after)$/;"	f
spacemacs|defc	conf/emacs/.emacs.d/core/core-customization.el	/^(defmacro spacemacs|defc (symbol standard doc type &optional group-override safe)$/;"	f
spacemacs|define-custom-layout	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defmacro spacemacs|define-custom-layout (name &rest props)$/;"	f
spacemacs|define-jump-handlers	conf/emacs/.emacs.d/core/core-jump.el	/^(defmacro spacemacs|define-jump-handlers (mode &rest handlers)$/;"	f
spacemacs|define-micro-state	conf/emacs/.emacs.d/core/core-micro-state.el	/^(defmacro spacemacs|define-micro-state (name &rest props)$/;"	f
spacemacs|define-text-object	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/funcs.el	/^(defmacro spacemacs|define-text-object (key name start end)$/;"	f
spacemacs|define-text-object-regexp	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/funcs.el	/^(defmacro spacemacs|define-text-object-regexp (key name start-regexp end-regexp)$/;"	f
spacemacs|define-transient-state	conf/emacs/.emacs.d/core/core-transient-state.el	/^(defmacro spacemacs|define-transient-state (name &rest props)$/;"	f
spacemacs|diminish	conf/emacs/.emacs.d/core/core-fonts-support.el	/^(defmacro spacemacs|diminish (mode &optional unicode ascii)$/;"	f
spacemacs|disable-company	conf/emacs/.emacs.d/layers/+completion/auto-completion/funcs.el	/^(defmacro spacemacs|disable-company (mode)$/;"	f
spacemacs|do-after-display-system-init	conf/emacs/.emacs.d/core/core-display-init.el	/^(defmacro spacemacs|do-after-display-system-init (&rest body)$/;"	f
spacemacs|dotspacemacs-backward-compatibility	conf/emacs/.emacs.d/core/core-funcs.el	/^(defmacro spacemacs|dotspacemacs-backward-compatibility (variable default)$/;"	f
spacemacs|forall-clojure-modes	conf/emacs/.emacs.d/layers/+lang/clojure/funcs.el	/^(defmacro spacemacs|forall-clojure-modes (m &rest body)$/;"	f
spacemacs|hide-lighter	conf/emacs/.emacs.d/core/core-fonts-support.el	/^(defmacro spacemacs|hide-lighter (mode)$/;"	f
spacemacs|require-when-dumping	conf/emacs/.emacs.d/core/core-dumper.el	/^(defmacro spacemacs|require-when-dumping (&rest args)$/;"	f
spacemacs|spacebind	conf/emacs/.emacs.d/core/core-spacebind.el	/^(defmacro spacemacs|spacebind (&rest bindings)$/;"	f
spacemacs|transient-state-format-hint	conf/emacs/.emacs.d/core/core-transient-state.el	/^(defmacro spacemacs|transient-state-format-hint (name var hint)$/;"	f
spacemacs|unless-dumping	conf/emacs/.emacs.d/core/core-dumper.el	/^(defmacro spacemacs|unless-dumping (&rest body)$/;"	f
spacemacs|unless-dumping-and-eval-after-loaded-dump	conf/emacs/.emacs.d/core/core-dumper.el	/^(defmacro spacemacs|unless-dumping-and-eval-after-loaded-dump (funcname &rest body)$/;"	f
spacemacs|use-package-add-hook	conf/emacs/.emacs.d/core/core-use-package-ext.el	/^(defmacro spacemacs|use-package-add-hook (name &rest plist)$/;"	f
spacemacs|when-dumping	conf/emacs/.emacs.d/core/core-dumper.el	/^(defmacro spacemacs|when-dumping (&rest body)$/;"	f
spacemacs|when-dumping-strict	conf/emacs/.emacs.d/core/core-dumper.el	/^(defmacro spacemacs|when-dumping-strict (&rest body)$/;"	f
spacemacs||add-function-timer	conf/emacs/.emacs.d/core/core-debug.el	/^(defmacro spacemacs||add-function-timer (func)$/;"	f
spacemacs||set-helm-key	conf/emacs/.emacs.d/layers/+completion/helm/funcs.el	/^(defmacro spacemacs||set-helm-key (keys func)$/;"	f
spacemacs||switch-layout	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defmacro spacemacs||switch-layout (name &rest props)$/;"	f
spacemacs||switch-project-persp	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defmacro spacemacs||switch-project-persp (name &rest body)$/;"	f
spacemacs||with-persp-buffer-list	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-layouts/funcs.el	/^(defmacro spacemacs||with-persp-buffer-list (&rest body)$/;"	f
spaces_to_indent	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def spaces_to_indent(self, indent):$/;"	m	class:IndentUtil
spawn	conf/vim/.vim/autoload/plug.vim	/^function! s:spawn(name, spec, queue, opts)$/;"	f
spec	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^spec = open("emoji-data.txt", "r")$/;"	v
spectrum_bls	conf/zsh/.oh-my-zsh/lib/spectrum.zsh	/^function spectrum_bls() {$/;"	f
spectrum_ls	conf/zsh/.oh-my-zsh/lib/spectrum.zsh	/^function spectrum_ls() {$/;"	f
speed-reading/init-spray	conf/emacs/.emacs.d/layers/+readers/speed-reading/packages.el	/^(defun speed-reading\/init-spray ()$/;"	f
speed-reading/post-init-which-key	conf/emacs/.emacs.d/layers/+readers/speed-reading/packages.el	/^(defun speed-reading\/post-init-which-key ()$/;"	f
speed_convert	workflows/Ariafred/src/aria_actions.py	/^def speed_convert(s):$/;"	f
spell-checking-enable-auto-dictionary	conf/emacs/.emacs.d/layers/+checkers/spell-checking/config.el	/^(defvar spell-checking-enable-auto-dictionary nil$/;"	f
spell-checking-enable-by-default	conf/emacs/.emacs.d/layers/+checkers/spell-checking/config.el	/^(defvar spell-checking-enable-by-default t$/;"	f
spell-checking-packages	conf/emacs/.emacs.d/layers/+checkers/spell-checking/packages.el	/^(defconst spell-checking-packages$/;"	f
spell-checking/add-flyspell-hook	conf/emacs/.emacs.d/layers/+checkers/spell-checking/funcs.el	/^(defun spell-checking\/add-flyspell-hook (hook)$/;"	f
spell-checking/change-dictionary	conf/emacs/.emacs.d/layers/+checkers/spell-checking/funcs.el	/^(defun spell-checking\/change-dictionary ()$/;"	f
spell-checking/init-auto-dictionary	conf/emacs/.emacs.d/layers/+checkers/spell-checking/packages.el	/^(defun spell-checking\/init-auto-dictionary ()$/;"	f
spell-checking/init-flyspell	conf/emacs/.emacs.d/layers/+checkers/spell-checking/packages.el	/^(defun spell-checking\/init-flyspell ()$/;"	f
spell-checking/init-flyspell-correct	conf/emacs/.emacs.d/layers/+checkers/spell-checking/packages.el	/^(defun spell-checking\/init-flyspell-correct ()$/;"	f
spell-checking/init-flyspell-correct-helm	conf/emacs/.emacs.d/layers/+checkers/spell-checking/packages.el	/^(defun spell-checking\/init-flyspell-correct-helm ()$/;"	f
spell-checking/init-flyspell-correct-ivy	conf/emacs/.emacs.d/layers/+checkers/spell-checking/packages.el	/^(defun spell-checking\/init-flyspell-correct-ivy ()$/;"	f
spell-checking/init-flyspell-correct-popup	conf/emacs/.emacs.d/layers/+checkers/spell-checking/packages.el	/^(defun spell-checking\/init-flyspell-correct-popup ()$/;"	f
spell-checking/init-flyspell-popup	conf/emacs/.emacs.d/layers/+checkers/spell-checking/packages.el	/^(defun spell-checking\/init-flyspell-popup ()$/;"	f
sphinx-packages	conf/emacs/.emacs.d/layers/+tools/sphinx/packages.el	/^(defconst sphinx-packages$/;"	f
sphinx/init-rst-sphinx	conf/emacs/.emacs.d/layers/+tools/sphinx/packages.el	/^(defun sphinx\/init-rst-sphinx ()$/;"	f
sphinx/pre-init-rst	conf/emacs/.emacs.d/layers/+tools/sphinx/packages.el	/^(defun sphinx\/pre-init-rst ()$/;"	f
spinner--mode-line-construct	conf/emacs/.emacs.d/core/libs/spinner.el	/^(defconst spinner--mode-line-construct$/;"	f
spinner--start-timer	conf/emacs/.emacs.d/core/libs/spinner.el	/^(defun spinner--start-timer (spinner)$/;"	f
spinner--timer-function	conf/emacs/.emacs.d/core/libs/spinner.el	/^(defun spinner--timer-function (spinner)$/;"	f
spinner--type-to-frames	conf/emacs/.emacs.d/core/libs/spinner.el	/^(defun spinner--type-to-frames (type)$/;"	f
spinner-create	conf/emacs/.emacs.d/core/libs/spinner.el	/^(defun spinner-create (&optional type buffer-local fps delay)$/;"	f
spinner-current	conf/emacs/.emacs.d/core/libs/spinner.el	/^(defvar spinner-current nil$/;"	f
spinner-frames-per-second	conf/emacs/.emacs.d/core/libs/spinner.el	/^(defvar spinner-frames-per-second 10$/;"	f
spinner-make-progress-bar	conf/emacs/.emacs.d/core/libs/spinner.el	/^(defun spinner-make-progress-bar (width &optional char)$/;"	f
spinner-print	conf/emacs/.emacs.d/core/libs/spinner.el	/^(defun spinner-print (spinner)$/;"	f
spinner-start	conf/emacs/.emacs.d/core/libs/spinner.el	/^(defun spinner-start (&optional type-or-object fps delay)$/;"	f
spinner-start-print	conf/emacs/.emacs.d/core/libs/spinner.el	/^(defun spinner-start-print (spinner)$/;"	f
spinner-stop	conf/emacs/.emacs.d/core/libs/spinner.el	/^(defun spinner-stop (&optional spinner)$/;"	f
spinner-types	conf/emacs/.emacs.d/core/libs/spinner.el	/^(defconst spinner-types$/;"	f
split	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff_highlight.vim	/^function! s:split(str, delimiter)$/;"	f
split-frame-horizontally	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun split-frame-horizontally (num)$/;"	f
split-frame-vertically	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun split-frame-vertically (num)$/;"	f
split-window-below-and-focus	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defun split-window-below-and-focus ()$/;"	f
split-window-right-and-focus	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/keybindings.el	/^(defun split-window-right-and-focus ()$/;"	f
split_at_whitespace	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^def split_at_whitespace(string):$/;"	f
split_on_delimiters	workflows/Ariafred/src/workflow/workflow.py	/^split_on_delimiters = re.compile('[^a-zA-Z0-9]').split$/;"	v
split_rtp	conf/vim/.vim/autoload/plug.vim	/^function! s:split_rtp()$/;"	f
split_tab	conf/zsh/.oh-my-zsh/plugins/macos/macos.plugin.zsh	/^function split_tab() {$/;"	f
spotify-packages	conf/emacs/.emacs.d/layers/+music/spotify/packages.el	/^(defconst spotify-packages$/;"	f
spotify/init-counsel-spotify	conf/emacs/.emacs.d/layers/+music/spotify/packages.el	/^(defun spotify\/init-counsel-spotify ()$/;"	f
spotify/init-helm-spotify-plus	conf/emacs/.emacs.d/layers/+music/spotify/packages.el	/^(defun spotify\/init-helm-spotify-plus ()$/;"	f
spotify/init-spotify	conf/emacs/.emacs.d/layers/+music/spotify/packages.el	/^(defun spotify\/init-spotify ()$/;"	f
sprunge	conf/zsh/.oh-my-zsh/plugins/sprunge/sprunge.plugin.zsh	/^sprunge() {$/;"	f
sql-auto-indent	conf/emacs/.emacs.d/layers/+lang/sql/config.el	/^(defvar sql-auto-indent t$/;"	f
sql-backend	conf/emacs/.emacs.d/layers/+lang/sql/config.el	/^(defvar sql-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'company-sql)$/;"	f
sql-capitalize-keywords	conf/emacs/.emacs.d/layers/+lang/sql/config.el	/^(defvar sql-capitalize-keywords nil$/;"	f
sql-capitalize-keywords-blacklist	conf/emacs/.emacs.d/layers/+lang/sql/config.el	/^(defvar sql-capitalize-keywords-blacklist '("name")$/;"	f
sql-capitalize-keywords-disable-interactive	conf/emacs/.emacs.d/layers/+lang/sql/config.el	/^(defvar sql-capitalize-keywords-disable-interactive nil$/;"	f
sql-lsp-sqls-workspace-config-path	conf/emacs/.emacs.d/layers/+lang/sql/config.el	/^(defvar sql-lsp-sqls-workspace-config-path 'workspace$/;"	f
sql/init-sql	conf/emacs/.emacs.d/layers/+lang/sql/packages.el	/^(defun sql\/init-sql ()$/;"	f
sql/init-sql-indent	conf/emacs/.emacs.d/layers/+lang/sql/packages.el	/^(defun sql\/init-sql-indent ()$/;"	f
sql/init-sqlfmt	conf/emacs/.emacs.d/layers/+lang/sql/packages.el	/^(defun sql\/init-sqlfmt ()$/;"	f
sql/init-sqlup-mode	conf/emacs/.emacs.d/layers/+lang/sql/packages.el	/^(defun sql\/init-sqlup-mode ()$/;"	f
sql/post-init-company	conf/emacs/.emacs.d/layers/+lang/sql/packages.el	/^(defun sql\/post-init-company ()$/;"	f
sql/pre-init-org	conf/emacs/.emacs.d/layers/+lang/sql/packages.el	/^(defun sql\/pre-init-org ()$/;"	f
sqlfmt	conf/emacs/.emacs.d/layers/+lang/sql/local/sqlfmt/sqlfmt.el	/^(defgroup sqlfmt nil$/;"	f
sqlfmt-buffer	conf/emacs/.emacs.d/layers/+lang/sql/local/sqlfmt/sqlfmt.el	/^(defun sqlfmt-buffer ()$/;"	f
sqlfmt-executable	conf/emacs/.emacs.d/layers/+lang/sql/local/sqlfmt/sqlfmt.el	/^(defcustom sqlfmt-executable$/;"	f
sqlfmt-options	conf/emacs/.emacs.d/layers/+lang/sql/local/sqlfmt/sqlfmt.el	/^(defcustom sqlfmt-options$/;"	f
sqlfmt-region	conf/emacs/.emacs.d/layers/+lang/sql/local/sqlfmt/sqlfmt.el	/^(defun sqlfmt-region (start end)$/;"	f
sqlfmt-reuse-error-buffer	conf/emacs/.emacs.d/layers/+lang/sql/local/sqlfmt/sqlfmt.el	/^(defcustom sqlfmt-reuse-error-buffer$/;"	f
ssh_agent	conf/zsh/.oh-my-zsh/plugins/shell-proxy/proxy.py	/^ssh_agent = os.path.join(cwd, "ssh-agent.py")$/;"	v
ssh_load_key	conf/zsh/.oh-my-zsh/plugins/ssh/ssh.plugin.zsh	/^function ssh_load_key() {$/;"	f
ssh_proxy	conf/zsh/.oh-my-zsh/plugins/shell-proxy/ssh-agent.py	/^ssh_proxy = os.path.join(os.path.dirname(__file__), "ssh-proxy.py")$/;"	v
ssh_rmhkey	conf/zsh/.oh-my-zsh/plugins/ssh/ssh.plugin.zsh	/^function ssh_rmhkey {$/;"	f
ssh_unload_key	conf/zsh/.oh-my-zsh/plugins/ssh/ssh.plugin.zsh	/^function ssh_unload_key {$/;"	f
ssm_run_sudo	conf/zsh/.oh-my-zsh/plugins/sublime-merge/sublime-merge.plugin.zsh	/^				ssm_run_sudo() {sudo $_sublime_merge_path "$@" >\/dev\/null 2>&1}$/;"	f
stage	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:stage(hunk_diff)$/;"	f
start	conf/vim/.vim/plugged/coc.nvim/autoload/coc/client.vim	/^function! s:start() dict$/;"	f
start	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/base.py	/^    def start(self):$/;"	m	class:TextObject
start	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^function! s:start(args) dict$/;"	f
start	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:start() abort dict$/;"	f
start	sh/aria2.sh	/^start(){$/;"	f
start_prompt	conf/vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! s:start_prompt()$/;"	f
start_prompt_vim	conf/vim/.vim/plugged/coc.nvim/autoload/coc/prompt.vim	/^function! s:start_prompt_vim() abort$/;"	f
start_server	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/remote_pdb.py	/^    def start_server(self):$/;"	m	class:RemotePDB
start_update	workflows/Ariafred/src/workflow/workflow.py	/^    def start_update(self):$/;"	m	class:Workflow
starts_here	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:ChoicesToken
starts_here	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:MirrorToken
starts_here	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:PythonCodeToken
starts_here	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:ShellCodeToken
starts_here	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:TabStopToken
starts_here	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:TransformationToken
starts_here	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:VimLCodeToken
starts_here	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:VisualToken
starts_here	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^    def starts_here(cls, stream, chars=r"{}\\$`"):$/;"	m	class:EscapeCharToken
stashed	conf/zsh/.oh-my-zsh/plugins/git-prompt/gitstatus.py	/^stashed = get_stash()$/;"	v
state	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^    let state.custom_complete = a:args.complete$/;"	v
state.show_errors	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^  function state.show_errors(job, exit_status, data)$/;"	f
state.show_status	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^  function state.show_status(job, exit_status) dict$/;"	f
status	conf/vim/.vim/autoload/plug.vim	/^function! s:status()$/;"	f
status	conf/zsh/.oh-my-zsh/plugins/git-prompt/gitstatus.py	/^status = [(line[0], line[1], line[2:]) for line in stdout.decode('utf-8').splitlines()]$/;"	v
status	conf/zsh/.oh-my-zsh/plugins/shell-proxy/proxy.py	/^    def status(self):$/;"	m	class:CommandSet
status_load	conf/vim/.vim/autoload/plug.vim	/^function! s:status_load(lnum)$/;"	f
status_update	conf/vim/.vim/autoload/plug.vim	/^function! s:status_update() range$/;"	f
steps	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_DelSecondLine1
steps	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_InsSameLine1
steps	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = (((0, 1), (0, -8), (0, 1)), ((0, 1), (0, 1), (0, 2)))$/;"	v	class:MovePosition_DelSameLine
steps	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = (((0, 12), (0, -4), (1, 0)), ((0, 12), (-1, 0), (0, 12)))$/;"	v	class:MovePosition_DelSecondLine
steps	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = (((0, 3), (0, 3), (0, 12)),)$/;"	v	class:MovePosition_InsSameLine2
steps	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = (((0, 4), (0, -3), (0, 3)), ((0, 8), (0, -1), (0, 3)))$/;"	v	class:MovePosition_DelSameLine1
still_have_issues	conf/vim/.vim/plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:still_have_issues() abort$/;"	f
stop	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:stop() abort$/;"	f
stop	sh/aria2.sh	/^stop() {$/;"	f
stop_vagrant	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/run_tests	/^stop_vagrant() {$/;"	f
store_data	workflows/Ariafred/src/workflow/workflow.py	/^    def store_data(self, name, data, serializer=None):$/;"	m	class:Workflow
stored_data	workflows/Ariafred/src/workflow/workflow.py	/^    def stored_data(self, name):$/;"	m	class:Workflow
str	sh/restore_mac_trash.pl	/^sub str($$$) { my $s = substr($_[0], $_[1], $_[2]); Encode::from_to($s,'UCS-2BE','utf8'); $s; }$/;"	s
str_dict	workflows/Ariafred/src/workflow/web.py	/^def str_dict(dic):$/;"	f
str_presenter	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^def str_presenter(dumper, data):$/;"	f
stream	workflows/Ariafred/src/workflow/web.py	/^    def stream(self):$/;"	m	class:Response
stream	workflows/Ariafred/src/workflow/web.py	/^    def stream(self, value):$/;"	m	class:Response
streamlink-packages	conf/emacs/.emacs.d/layers/+web-services/streamlink/packages.el	/^(defconst streamlink-packages$/;"	f
streamlink/init-streamlink	conf/emacs/.emacs.d/layers/+web-services/streamlink/packages.el	/^(defun streamlink\/init-streamlink ()$/;"	f
stringHighlightGroupInAssignment	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! s:stringHighlightGroupInAssignment(testname, value)$/;"	f
stringize_options	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:stringize_options(opts) abort$/;"	f
strip	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:strip(str)$/;"	f
strip	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:strip(string)$/;"	f
strip_trailing_new_line	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:strip_trailing_new_line(line) abort$/;"	f
strip_white_space	conf/vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^function! s:strip_white_space(l,r,line) abort$/;"	f
strlen	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/lsp.vim	/^function! s:strlen(str) abort$/;"	f
strwidth	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def strwidth(string: str) -> int:$/;"	f
subgroup	conf/zsh/.oh-my-zsh/plugins/emoji/update_emoji.py	/^            subgroup = name$/;"	v
subm	conf/zsh/.oh-my-zsh/plugins/sublime-merge/sublime-merge.plugin.zsh	/^				subm () { "$_sublime_merge_path" "$@" }$/;"	f
substituteLocalPath	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:substituteLocalPath(path) abort$/;"	f
substitutePath	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:substitutePath(path, substitutions) abort$/;"	f
substituteRemotePath	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:substituteRemotePath(path) abort$/;"	f
substitute_suffix	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:substitute_suffix(user_data) abort$/;"	f
success	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:success(result) abort$/;"	f
success	sh/spf13-vim.sh	/^success() {$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/test-data/alias-nested-precommand.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/test-data/alias-precommand-option-argument1.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/test-data/alias-precommand-option-argument2.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/test-data/alias-precommand-option-argument3.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/test-data/alias-precommand-option-argument4.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/test-data/cmdpos-elision-partial.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/test-data/commmand-parameter.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/test-data/param-precommand-option-argument1.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/test-data/param-precommand-option-argument3.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/test-data/precommand-unknown-option.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/test-data/sudo-command.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/test-data/sudo-comment.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/test-data/sudo-redirection.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/test-data/sudo-redirection2.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/highlighters/main/test-data/sudo-redirection3.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/test-data/alias-nested-precommand.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/test-data/alias-precommand-option-argument1.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/test-data/alias-precommand-option-argument2.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/test-data/alias-precommand-option-argument3.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/test-data/alias-precommand-option-argument4.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/test-data/cmdpos-elision-partial.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/test-data/commmand-parameter.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/test-data/param-precommand-option-argument1.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/test-data/param-precommand-option-argument3.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/test-data/precommand-unknown-option.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/test-data/sudo-command.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/test-data/sudo-comment.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/test-data/sudo-redirection.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/test-data/sudo-redirection2.zsh	/^sudo(){}$/;"	f
sudo	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/highlighters/main/test-data/sudo-redirection3.zsh	/^sudo(){}$/;"	f
suite.custom_filter	conf/vim/.vim/plugged/deoplete.nvim/test/autoload/deoplete/custom.vim	/^function! s:suite.custom_filter() abort$/;"	f
suite.custom_option	conf/vim/.vim/plugged/deoplete.nvim/test/autoload/deoplete/custom.vim	/^function! s:suite.custom_option() abort$/;"	f
suite.custom_source	conf/vim/.vim/plugged/deoplete.nvim/test/autoload/deoplete/custom.vim	/^function! s:suite.custom_source() abort$/;"	f
suite.vimoption2python	conf/vim/.vim/plugged/deoplete.nvim/test/autoload/deoplete/util.vim	/^function! s:suite.vimoption2python() abort$/;"	f
summary	conf/vim/.vim/plugged/vim-gitgutter/test/runner.vim	/^let summary = [$/;"	v
supported_tmux_version_ok	conf/tmux/.tmux/plugins/tpm/tpm	/^supported_tmux_version_ok() {$/;"	f
supports_hyperlinks	conf/zsh/.oh-my-zsh/tools/changelog.sh	/^supports_hyperlinks() {$/;"	f
supports_hyperlinks	conf/zsh/.oh-my-zsh/tools/install.sh	/^supports_hyperlinks() {$/;"	f
supports_hyperlinks	conf/zsh/.oh-my-zsh/tools/upgrade.sh	/^supports_hyperlinks() {$/;"	f
supports_truecolor	conf/zsh/.oh-my-zsh/tools/install.sh	/^supports_truecolor() {$/;"	f
supports_truecolor	conf/zsh/.oh-my-zsh/tools/upgrade.sh	/^supports_truecolor() {$/;"	f
surroundings	conf/vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^function! s:surroundings() abort$/;"	f
suspend_proxy_edits	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^def suspend_proxy_edits():$/;"	f
svelte-backend	conf/emacs/.emacs.d/layers/+frameworks/svelte/config.el	/^(defvar svelte-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'dump)$/;"	f
svelte-packages	conf/emacs/.emacs.d/layers/+frameworks/svelte/packages.el	/^(defconst svelte-packages$/;"	f
svelte/post-init-add-node-modules-path	conf/emacs/.emacs.d/layers/+frameworks/svelte/packages.el	/^(defun svelte\/post-init-add-node-modules-path ()$/;"	f
svelte/post-init-company	conf/emacs/.emacs.d/layers/+frameworks/svelte/packages.el	/^(defun svelte\/post-init-company ()$/;"	f
svelte/post-init-evil-matchit	conf/emacs/.emacs.d/layers/+frameworks/svelte/packages.el	/^(defun svelte\/post-init-evil-matchit ()$/;"	f
svelte/post-init-flycheck	conf/emacs/.emacs.d/layers/+frameworks/svelte/packages.el	/^(defun svelte\/post-init-flycheck ()$/;"	f
svelte/post-init-smartparens	conf/emacs/.emacs.d/layers/+frameworks/svelte/packages.el	/^(defun svelte\/post-init-smartparens ()$/;"	f
svelte/post-init-web-mode	conf/emacs/.emacs.d/layers/+frameworks/svelte/packages.el	/^(defun svelte\/post-init-web-mode ()$/;"	f
svelte/post-init-yasnippet	conf/emacs/.emacs.d/layers/+frameworks/svelte/packages.el	/^(defun svelte\/post-init-yasnippet ()$/;"	f
svelte/pre-init-prettier-js	conf/emacs/.emacs.d/layers/+frameworks/svelte/packages.el	/^(defun svelte\/pre-init-prettier-js ()$/;"	f
svn_current_branch_name	conf/zsh/.oh-my-zsh/plugins/svn-fast-info/svn-fast-info.plugin.zsh	/^function svn_current_branch_name() {$/;"	f
svn_current_revision	conf/zsh/.oh-my-zsh/plugins/svn-fast-info/svn-fast-info.plugin.zsh	/^function svn_current_revision() {$/;"	f
svn_dirty	conf/zsh/.oh-my-zsh/plugins/svn/svn.plugin.zsh	/^svn_dirty() {$/;"	f
svn_dirty_choose	conf/zsh/.oh-my-zsh/plugins/svn/svn.plugin.zsh	/^svn_dirty_choose() {$/;"	f
svn_dirty_choose_pwd	conf/zsh/.oh-my-zsh/plugins/svn/svn.plugin.zsh	/^svn_dirty_choose_pwd () {$/;"	f
svn_dirty_pwd	conf/zsh/.oh-my-zsh/plugins/svn/svn.plugin.zsh	/^svn_dirty_pwd () {$/;"	f
svn_get_branch_name	conf/zsh/.oh-my-zsh/plugins/svn/svn.plugin.zsh	/^svn_get_branch_name() {$/;"	f
svn_get_repo_name	conf/zsh/.oh-my-zsh/plugins/svn/svn.plugin.zsh	/^svn_get_repo_name() {$/;"	f
svn_get_rev_nr	conf/zsh/.oh-my-zsh/plugins/svn/svn.plugin.zsh	/^svn_get_rev_nr() {$/;"	f
svn_prompt_info	conf/zsh/.oh-my-zsh/plugins/svn-fast-info/svn-fast-info.plugin.zsh	/^function svn_prompt_info() {$/;"	f
svn_prompt_info	conf/zsh/.oh-my-zsh/plugins/svn/svn.plugin.zsh	/^svn_prompt_info() {$/;"	f
svn_repo_need_upgrade	conf/zsh/.oh-my-zsh/plugins/svn-fast-info/svn-fast-info.plugin.zsh	/^function svn_repo_need_upgrade() {$/;"	f
svn_repo_root_name	conf/zsh/.oh-my-zsh/plugins/svn-fast-info/svn-fast-info.plugin.zsh	/^function svn_repo_root_name() {$/;"	f
svn_status_info	conf/zsh/.oh-my-zsh/plugins/svn-fast-info/svn-fast-info.plugin.zsh	/^function svn_status_info() {$/;"	f
swift-packages	conf/emacs/.emacs.d/layers/+lang/swift/packages.el	/^(defconst swift-packages$/;"	f
swift/init-lsp-sourcekit	conf/emacs/.emacs.d/layers/+lang/swift/packages.el	/^(defun swift\/init-lsp-sourcekit ()$/;"	f
swift/init-swift-mode	conf/emacs/.emacs.d/layers/+lang/swift/packages.el	/^(defun swift\/init-swift-mode ()$/;"	f
swift/post-init-company	conf/emacs/.emacs.d/layers/+lang/swift/packages.el	/^(defun swift\/post-init-company ()$/;"	f
swift/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/swift/packages.el	/^(defun swift\/post-init-flycheck ()$/;"	f
switch_in	conf/vim/.vim/autoload/plug.vim	/^function! s:switch_in()$/;"	f
switch_out	conf/vim/.vim/autoload/plug.vim	/^function! s:switch_out(...)$/;"	f
switch_task	workflows/Ariafred/src/aria_actions.py	/^def switch_task(gid):$/;"	f
symlink_internal_test_runner	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/setup	/^symlink_internal_test_runner() {$/;"	f
symlink_test_helpers	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/setup	/^symlink_test_helpers() {$/;"	f
symlink_user_test_runner	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/setup	/^symlink_user_test_runner() {$/;"	f
syn20	conf/zsh/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function syn20() {$/;"	f
sync_breakpoints	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:sync_breakpoints()$/;"	f
sync_repo	sh/spf13-vim.sh	/^sync_repo() {$/;"	f
syntax	conf/vim/.vim/autoload/plug.vim	/^function! s:syntax()$/;"	f
syntax-checking--buffer-config	conf/emacs/.emacs.d/layers/+checkers/syntax-checking/config.el	/^(defvar syntax-checking--buffer-config$/;"	f
syntax-checking--fringe-indicator	conf/emacs/.emacs.d/layers/+checkers/syntax-checking/config.el	/^(define-fringe-bitmap 'syntax-checking--fringe-indicator$/;"	f
syntax-checking-packages	conf/emacs/.emacs.d/layers/+checkers/syntax-checking/packages.el	/^(defconst syntax-checking-packages$/;"	f
syntax-checking-use-original-bitmaps	conf/emacs/.emacs.d/layers/+checkers/syntax-checking/config.el	/^(define-obsolete-variable-alias 'syntax-checking-use-original-bitmaps$/;"	f
syntax-checking/init-flycheck	conf/emacs/.emacs.d/layers/+checkers/syntax-checking/packages.el	/^(defun syntax-checking\/init-flycheck ()$/;"	f
syntax-checking/init-flycheck-pos-tip	conf/emacs/.emacs.d/layers/+checkers/syntax-checking/packages.el	/^(defun syntax-checking\/init-flycheck-pos-tip ()$/;"	f
syntax-checking/pre-init-popwin	conf/emacs/.emacs.d/layers/+checkers/syntax-checking/packages.el	/^(defun syntax-checking\/pre-init-popwin ()$/;"	f
system	conf/vim/.vim/autoload/plug.vim	/^function! s:system(cmd, ...)$/;"	f
system	conf/vim/.vim/plugged/coc.nvim/autoload/coc/ui.vim	/^function! s:system(cmd)$/;"	f
system	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:system(str, ...) abort$/;"	f
system	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! s:system(cmd, ...) abort$/;"	f
system_chomp	conf/vim/.vim/autoload/plug.vim	/^function! s:system_chomp(...)$/;"	f
systemd-packages	conf/emacs/.emacs.d/layers/+tools/systemd/packages.el	/^(defconst systemd-packages$/;"	f
systemd/init-journalctl-mode	conf/emacs/.emacs.d/layers/+tools/systemd/packages.el	/^(defun systemd\/init-journalctl-mode ()$/;"	f
systemd/init-systemd	conf/emacs/.emacs.d/layers/+tools/systemd/packages.el	/^(defun systemd\/init-systemd ()$/;"	f
systemd/post-init-flycheck	conf/emacs/.emacs.d/layers/+tools/systemd/packages.el	/^(defun systemd\/post-init-flycheck ()$/;"	f
systemd_prompt_info	conf/zsh/.oh-my-zsh/plugins/systemd/systemd.plugin.zsh	/^function systemd_prompt_info {$/;"	f
tab	conf/zsh/.oh-my-zsh/plugins/macos/macos.plugin.zsh	/^function tab() {$/;"	f
tabid_nr	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:tabid_nr(tid) abort$/;"	f
tableBodyScope	conf/vim/.vim/plugged/vim-go/test/parse.go	/^	tableBodyScope$/;"	c
tableRowScope	conf/vim/.vim/plugged/vim-go/test/parse.go	/^	tableRowScope$/;"	c
tableScope	conf/vim/.vim/plugged/vim-go/test/parse.go	/^	tableScope$/;"	c
tabnr_id	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:tabnr_id(nr) abort$/;"	f
tabs-icons	conf/emacs/.emacs.d/layers/+emacs/tabs/config.el	/^(defvar tabs-icons t$/;"	f
tabs-packages	conf/emacs/.emacs.d/layers/+emacs/tabs/packages.el	/^(defconst tabs-packages$/;"	f
tabs/init-centaur-tabs	conf/emacs/.emacs.d/layers/+emacs/tabs/packages.el	/^(defun tabs\/init-centaur-tabs ()$/;"	f
tabular#DoGTabularize	conf/vim/.vim/plugged/tabular/autoload/tabular.vim	/^function! tabular#DoGTabularize()$/;"	f
tabular#ElementFormatPattern	conf/vim/.vim/plugged/tabular/autoload/tabular.vim	/^function! tabular#ElementFormatPattern()$/;"	f
tabular#PipeRange	conf/vim/.vim/plugged/tabular/autoload/tabular.vim	/^function! tabular#PipeRange(includepat, ...) range$/;"	f
tabular#PipeRangeWithOptions	conf/vim/.vim/plugged/tabular/autoload/tabular.vim	/^function! tabular#PipeRangeWithOptions(includepat, filterlist, options) range$/;"	f
tabular#SplitDelimUnitTest	conf/vim/.vim/plugged/tabular/autoload/tabular.vim	/^function! tabular#SplitDelimUnitTest()$/;"	f
tabular#TabularizeStrings	conf/vim/.vim/plugged/tabular/autoload/tabular.vim	/^function! tabular#TabularizeStrings(strings, delim, ...)$/;"	f
tabulated-list-revert	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-defaults/config.el	/^(defun tabulated-list-revert (&rest ignored)$/;"	f
tags_sink	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:tags_sink(lines)$/;"	f
take	conf/zsh/.oh-my-zsh/lib/functions.zsh	/^function take() {$/;"	f
takegit	conf/zsh/.oh-my-zsh/lib/functions.zsh	/^function takegit() {$/;"	f
takeurl	conf/zsh/.oh-my-zsh/lib/functions.zsh	/^function takeurl() {$/;"	f
takezip	conf/zsh/.oh-my-zsh/lib/functions.zsh	/^function takezip() {$/;"	f
tap_escape	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/tests/test-highlighting.zsh	/^tap_escape() {$/;"	f
tap_escape	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/tests/test-highlighting.zsh	/^tap_escape() {$/;"	f
tearDown	conf/vim/.vim/plugged/ultisnips/test/vim_test_case.py	/^    def tearDown(self):$/;"	m	class:VimTestCase
teardown_helper	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/tests/helpers/helpers.sh	/^teardown_helper() {$/;"	f
tell-customize-var-has-changed	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun tell-customize-var-has-changed (variable)$/;"	f
templates-private-directory	conf/emacs/.emacs.d/layers/+completion/templates/config.el	/^(defvar templates-private-directory$/;"	f
templates-use-default-templates	conf/emacs/.emacs.d/layers/+completion/templates/config.el	/^(defvar templates-use-default-templates t$/;"	f
templates/init-yatemplate	conf/emacs/.emacs.d/layers/+completion/templates/packages.el	/^(defun templates\/init-yatemplate ()$/;"	f
term-send-tab	conf/emacs/.emacs.d/layers/+tools/shell/funcs.el	/^(defun term-send-tab ()$/;"	f
terminateTree	conf/vim/.vim/plugged/coc.nvim/bin/terminateProcess.sh	/^terminateTree() {$/;"	f
tern--key-bindings-modes	conf/emacs/.emacs.d/layers/+tools/tern/config.el	/^(defvar tern--key-bindings-modes nil$/;"	f
tern-disable-port-files	conf/emacs/.emacs.d/layers/+tools/tern/config.el	/^(defvar tern-disable-port-files t$/;"	f
tern-packages	conf/emacs/.emacs.d/layers/+tools/tern/packages.el	/^(defconst tern-packages$/;"	f
tern/init-tern	conf/emacs/.emacs.d/layers/+tools/tern/packages.el	/^(defun tern\/init-tern ()$/;"	f
terraform-auto-format-on-save	conf/emacs/.emacs.d/layers/+tools/terraform/config.el	/^(defvar terraform-auto-format-on-save nil$/;"	f
terraform-backend	conf/emacs/.emacs.d/layers/+tools/terraform/config.el	/^(defvar terraform-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'company-terraform)$/;"	f
terraform/init-company-terraform	conf/emacs/.emacs.d/layers/+tools/terraform/packages.el	/^(defun terraform\/init-company-terraform ()$/;"	f
terraform/init-terraform-mode	conf/emacs/.emacs.d/layers/+tools/terraform/packages.el	/^(defun terraform\/init-terraform-mode ()$/;"	f
terraform/post-init-company	conf/emacs/.emacs.d/layers/+tools/terraform/packages.el	/^(defun terraform\/post-init-company ()$/;"	f
test	conf/tmux/.tmux/plugins/tmux-themepack/test/basic_test.go	/^package test$/;"	p
test	conf/tmux/.tmux/plugins/tmux-themepack/test/default_test.go	/^package test$/;"	p
test	conf/tmux/.tmux/plugins/tmux-themepack/test/powerline_block_test.go	/^package test$/;"	p
test	conf/tmux/.tmux/plugins/tmux-themepack/test/powerline_default_test.go	/^package test$/;"	p
test	conf/tmux/.tmux/plugins/tmux-themepack/test/powerline_double_test.go	/^package test$/;"	p
test	conf/tmux/.tmux/plugins/tmux-themepack/test/powerline_test.go	/^package test$/;"	p
test	conf/tmux/.tmux/plugins/tmux-themepack/test/setup.go	/^package test$/;"	p
test	conf/tmux/.tmux/plugins/tmux-themepack/test/test_helpers.go	/^package test$/;"	p
test	conf/tmux/.tmux/plugins/tmux-themepack/test/version_test.go	/^package test$/;"	p
test	conf/vim/.vim/plugged/vim-go/autoload/go/test_test.vim	/^func! s:test(file, expected, ...) abort$/;"	f
test	conf/zsh/.oh-my-zsh/lib/theme-and-appearance.zsh	/^function test-ls-args {$/;"	f
test--enable-linum-for-mode	conf/emacs/.emacs.d/tests/layers/+distribution/spacemacs-base/line-numbers-utest.el	/^(defmacro test--enable-linum-for-mode (mode)$/;"	f
test-filter-distant-packages--test-data	conf/emacs/.emacs.d/tests/core/core-configuration-layer-utest.el	/^(defvar test-filter-distant-packages--test-data$/;"	f
test-spacebind/plist-diff	conf/emacs/.emacs.d/tests/core/core-spacebind-utest.el	/^(defun test-spacebind\/plist-diff (plist1 plist2)$/;"	f
test-spacebind|log-stack-eval	conf/emacs/.emacs.d/tests/core/core-spacebind-utest.el	/^(defmacro test-spacebind|log-stack-eval (&rest body)$/;"	f
test-spacebind|process-bind-stack-called-p	conf/emacs/.emacs.d/tests/layers/+distribution/spacemacs-base/spacebind-utest.el	/^(defmacro test-spacebind|process-bind-stack-called-p (&rest body)$/;"	f
test-spacebind|validate-keys	conf/emacs/.emacs.d/tests/core/core-spacebind-utest.el	/^(defmacro test-spacebind|validate-keys (&rest body)$/;"	f
test-text	conf/emacs/.emacs.d/tests/core/core-spacemacs-buffer-ftest.el	/^(defvar test-text$/;"	f
testLint	conf/vim/.vim/plugged/vim-go/autoload/go/lint_test.vim	/^func! s:testLint() abort$/;"	f
test_binary_search	conf/vim/.vim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_binary_search():$/;"	f
test_charwidth	conf/vim/.vim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_charwidth():$/;"	f
test_custom	conf/vim/.vim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_custom():$/;"	f
test_custom_tpm_path	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^test_custom_tpm_path() {$/;"	f
test_default_tpm_path	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^test_default_tpm_path() {$/;"	f
test_filter	conf/vim/.vim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_converter_reorder_attr.py	/^def test_filter():$/;"	f
test_fuzzy_escapse	conf/vim/.vim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_fuzzy_escapse():$/;"	f
test_globruntime	conf/vim/.vim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_globruntime():$/;"	f
test_job	conf/vim/.vim/plugged/vim-go/autoload/go/test.vim	/^function! s:test_job(cmd, args) abort$/;"	f
test_legacy_and_new_syntax_for_plugin_installation_work_via_script	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_installation_legacy.sh	/^test_legacy_and_new_syntax_for_plugin_installation_work_via_script() {$/;"	f
test_legacy_and_new_syntax_for_plugin_installation_work_via_tmux_key_binding	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_installation_legacy.sh	/^test_legacy_and_new_syntax_for_plugin_installation_work_via_tmux_key_binding() {$/;"	f
test_matcher_full_fuzzy	conf/vim/.vim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_matcher_full_fuzzy.py	/^def test_matcher_full_fuzzy():$/;"	f
test_matcher_fuzzy	conf/vim/.vim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_matcher_fuzzy.py	/^def test_matcher_fuzzy():$/;"	f
test_multiple_plugins_installation_via_script	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_multiple_plugins_installation_via_script() {$/;"	f
test_multiple_plugins_installation_via_tmux_key_binding	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_multiple_plugins_installation_via_tmux_key_binding() {$/;"	f
test_non_existing_plugin_installation_via_script	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_non_existing_plugin_installation_via_script() {$/;"	f
test_non_existing_plugin_installation_via_tmux_key_binding	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_non_existing_plugin_installation_via_tmux_key_binding() {$/;"	f
test_overlap_length	conf/vim/.vim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_overlap_length():$/;"	f
test_plugin_installation_custom_dir_via_script	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugin_installation_custom_dir_via_script() {$/;"	f
test_plugin_installation_custom_dir_via_tmux_key_binding	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugin_installation_custom_dir_via_tmux_key_binding() {$/;"	f
test_plugin_installation_via_script	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugin_installation_via_script() {$/;"	f
test_plugin_installation_via_script	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_installation_legacy.sh	/^test_plugin_installation_via_script() {$/;"	f
test_plugin_installation_via_tmux_key_binding	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugin_installation_via_tmux_key_binding() {$/;"	f
test_plugin_installation_via_tmux_key_binding	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_installation_legacy.sh	/^test_plugin_installation_via_tmux_key_binding() {$/;"	f
test_plugin_installation_via_tmux_key_binding_set_option	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugin_installation_via_tmux_key_binding_set_option() {$/;"	f
test_plugin_sourcing	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_sourcing.sh	/^test_plugin_sourcing() {$/;"	f
test_plugin_uninstallation_via_script	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_clean.sh	/^test_plugin_uninstallation_via_script() {$/;"	f
test_plugin_uninstallation_via_tmux_key_binding	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_clean.sh	/^test_plugin_uninstallation_via_tmux_key_binding() {$/;"	f
test_plugin_update_via_script	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_update.sh	/^test_plugin_update_via_script() {$/;"	f
test_plugin_update_via_tmux_key_binding	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_update.sh	/^test_plugin_update_via_tmux_key_binding() {$/;"	f
test_plugins_installation_from_multiple_sourced_files_via_script	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugins_installation_from_multiple_sourced_files_via_script() {$/;"	f
test_plugins_installation_from_multiple_sourced_files_via_tmux_key_binding	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugins_installation_from_multiple_sourced_files_via_tmux_key_binding() {$/;"	f
test_plugins_installation_from_sourced_file_via_script	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugins_installation_from_sourced_file_via_script() {$/;"	f
test_plugins_installation_from_sourced_file_via_tmux_key_binding	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_installation.sh	/^test_plugins_installation_from_sourced_file_via_tmux_key_binding() {$/;"	f
test_pos	conf/vim/.vim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_pos():$/;"	f
test_reorder	conf/vim/.vim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_converter_reorder_attr.py	/^def test_reorder():$/;"	f
test_skipping	conf/vim/.vim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_skipping():$/;"	f
test_snipmate_format	conf/vim/.vim/plugged/vim-snippets/tests.sh	/^function test_snipmate_format {$/;"	f
test_space_indented	conf/vim/.vim/plugged/vim-snippets/tests.sh	/^function test_space_indented {$/;"	f
test_strwidth	conf/vim/.vim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_strwidth():$/;"	f
test_truncate	conf/vim/.vim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_truncate():$/;"	f
test_uniq_list_dict	conf/vim/.vim/plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_uniq_list_dict():$/;"	f
test_unsuccessful_plugin_uninstallation_via_script	conf/tmux/.tmux/plugins/tpm/tests/test_plugin_clean.sh	/^test_unsuccessful_plugin_uninstallation_via_script() {$/;"	f
tex	conf/emacs/.emacs.d/layers/+chat/erc/local/erc-tex/erc-tex.el	/^(define-erc-module tex latex$/;"	f
text	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def text(self):$/;"	m	class:VisualContentPreserver
text	workflows/Ariafred/src/workflow/web.py	/^    def text(self):$/;"	m	class:Response
textDocumentPositionParams	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! s:textDocumentPositionParams(fname, line, col) abort$/;"	f
textEditLess	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:textEditLess(left, right) abort$/;"	f
textIM	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func textIM(p *parser) bool {$/;"	f
text_after	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    text_after = ""$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
text_after	conf/vim/.vim/plugged/ultisnips/test/vim_test_case.py	/^    text_after = "\\n\\n --- some text after --- "$/;"	v	class:VimTestCase
text_before	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    text_before = ""$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
text_before	conf/vim/.vim/plugged/ultisnips/test/vim_test_case.py	/^    text_before = " --- some text before --- \\n\\n"$/;"	v	class:VimTestCase
textobject	conf/vim/.vim/plugged/vim-commentary/plugin/commentary.vim	/^function! s:textobject(inner) abort$/;"	f
tf_prompt_info	conf/zsh/.oh-my-zsh/plugins/terraform/terraform.plugin.zsh	/^function tf_prompt_info() {$/;"	f
tf_version_prompt_info	conf/zsh/.oh-my-zsh/plugins/terraform/terraform.plugin.zsh	/^function tf_version_prompt_info() {$/;"	f
theme	conf/zsh/.oh-my-zsh/plugins/themes/themes.plugin.zsh	/^function theme {$/;"	f
theme-changer/switch-themes	conf/emacs/.emacs.d/layers/+tools/geolocation/extensions/theme-changer/theme-changer.el	/^(defun theme-changer\/switch-themes (sun-event &optional first-run)$/;"	f
theme_chooser	conf/zsh/.oh-my-zsh/tools/theme_chooser.sh	/^function theme_chooser() {$/;"	f
theme_preview	conf/zsh/.oh-my-zsh/tools/theme_chooser.sh	/^function theme_preview() {$/;"	f
themes-megapack/init-darkokai-theme	conf/emacs/.emacs.d/layers/+themes/themes-megapack/packages.el	/^(defun themes-megapack\/init-darkokai-theme ()$/;"	f
theming-headings-bold	conf/emacs/.emacs.d/layers/+themes/theming/config.el	/^(defvar theming-headings-bold '()$/;"	f
theming-headings-inherit-from-default	conf/emacs/.emacs.d/layers/+themes/theming/config.el	/^(defvar theming-headings-inherit-from-default '()$/;"	f
theming-headings-same-size	conf/emacs/.emacs.d/layers/+themes/theming/config.el	/^(defvar theming-headings-same-size '()$/;"	f
theming-modifications	conf/emacs/.emacs.d/layers/+themes/theming/config.el	/^(defvar theming-modifications '()$/;"	f
theming-packages	conf/emacs/.emacs.d/layers/+themes/theming/packages.el	/^(defconst theming-packages$/;"	f
theming/init-theming	conf/emacs/.emacs.d/layers/+themes/theming/packages.el	/^(defun theming\/init-theming ()$/;"	f
tick	conf/vim/.vim/autoload/plug.vim	/^function! s:tick()$/;"	f
tidal-unmute-all	conf/emacs/.emacs.d/layers/+music/tidalcycles/funcs.el	/^(defun tidal-unmute-all ()$/;"	f
tidal-unsolo-all	conf/emacs/.emacs.d/layers/+music/tidalcycles/funcs.el	/^(defun tidal-unsolo-all ()$/;"	f
tidalcycles-packages	conf/emacs/.emacs.d/layers/+music/tidalcycles/packages.el	/^(defconst tidalcycles-packages$/;"	f
tidalcycles/init-tidal	conf/emacs/.emacs.d/layers/+music/tidalcycles/packages.el	/^(defun tidalcycles\/init-tidal ()$/;"	f
tide-jsconfig-content	conf/emacs/.emacs.d/layers/+tools/tide/config.el	/^(defvar tide-jsconfig-content$/;"	f
tide-packages	conf/emacs/.emacs.d/layers/+tools/tide/packages.el	/^(defconst tide-packages$/;"	f
tide/init-tide	conf/emacs/.emacs.d/layers/+tools/tide/packages.el	/^(defun tide\/init-tide ()$/;"	f
tile-frames-horizontally	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun tile-frames-horizontally (&optional frames)$/;"	f
tile-frames-side-by-side	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defalias 'tile-frames-side-by-side 'tile-frames-horizontally)$/;"	f
tile-frames-top-to-bottom	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defalias 'tile-frames-top-to-bottom 'tile-frames-vertically)$/;"	f
tile-frames-vertically	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun tile-frames-vertically (&optional frames)$/;"	f
time_fmt	workflows/Ariafred/src/aria.py	/^def time_fmt(seconds):$/;"	f
timeout	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^  let timeout = s:is_vim ? 10 : 0$/;"	v
timer_restart	conf/vim/.vim/plugged/vim-go/autoload/go/auto.vim	/^function! s:timer_restart()$/;"	f
timer_start	conf/vim/.vim/plugged/vim-go/autoload/go/auto.vim	/^function! s:timer_start()$/;"	f
timer_stop	conf/vim/.vim/plugged/vim-go/autoload/go/auto.vim	/^function! s:timer_stop()$/;"	f
timewait20	conf/zsh/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function timewait20() {$/;"	f
title	conf/zsh/.oh-my-zsh/lib/termsupport.zsh	/^function title {$/;"	f
title	conf/zsh/.oh-my-zsh/plugins/screen/screen.plugin.zsh	/^  title(){}$/;"	f
tm	conf/tmux/.tmux/plugins/tmux-themepack/test/setup.go	/^var tm = tmux.New()$/;"	v
tm	conf/zsh/.oh-my-zsh/plugins/textmate/textmate.plugin.zsh	/^function tm() {$/;"	f
tmux-command	conf/emacs/.emacs.d/layers/+tools/tmux/local/tmux/tmux.el	/^(defun tmux-command (direction)$/;"	f
tmux-direction	conf/emacs/.emacs.d/layers/+tools/tmux/local/tmux/tmux.el	/^(defun tmux-direction (direction)$/;"	f
tmux-nav-down	conf/emacs/.emacs.d/layers/+tools/tmux/local/tmux/tmux.el	/^(defun tmux-nav-down ()$/;"	f
tmux-nav-left	conf/emacs/.emacs.d/layers/+tools/tmux/local/tmux/tmux.el	/^(defun tmux-nav-left ()$/;"	f
tmux-nav-right	conf/emacs/.emacs.d/layers/+tools/tmux/local/tmux/tmux.el	/^(defun tmux-nav-right ()$/;"	f
tmux-nav-up	conf/emacs/.emacs.d/layers/+tools/tmux/local/tmux/tmux.el	/^(defun tmux-nav-up ()$/;"	f
tmux-navigate	conf/emacs/.emacs.d/layers/+tools/tmux/local/tmux/tmux.el	/^(defun tmux-navigate (direction)$/;"	f
tmux/init-tmux	conf/emacs/.emacs.d/layers/+tools/tmux/packages.el	/^(defun tmux\/init-tmux ()$/;"	f
tmux/post-init-golden-ratio	conf/emacs/.emacs.d/layers/+tools/tmux/packages.el	/^(defun tmux\/post-init-golden-ratio ()$/;"	f
tmuxBinPath	conf/tmux/.tmux/plugins/tmux-themepack/test/setup.go	/^var tmuxBinPath = os.Getenv("TMUX_BIN_PATH")$/;"	v
tmuxConfig	conf/tmux/.tmux/plugins/tmux-themepack/test/setup.go	/^var tmuxConfig = os.Getenv("TMUX_CONFIG")$/;"	v
tmuxHasOptions	conf/tmux/.tmux/plugins/tmux-themepack/test/setup.go	/^func tmuxHasOptions(t *testing.T, theme string, s tmux.Scope, m tmux.Options) {$/;"	f
tmuxSetup	conf/tmux/.tmux/plugins/tmux-themepack/test/setup.go	/^func tmuxSetup() {$/;"	f
tmuxTearDown	conf/tmux/.tmux/plugins/tmux-themepack/test/setup.go	/^func tmuxTearDown() {$/;"	f
tmuxVersion	conf/tmux/.tmux/plugins/tmux-themepack/test/setup.go	/^var tmuxVersion = os.Getenv("TMUX_VERSION")$/;"	v
tmux_command	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/spec/terminal_session.rb	/^  def tmux_command(cmd)$/;"	f	class:TerminalSession
tmux_command	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/spec/terminal_session.rb	/^  def tmux_command(cmd)$/;"	f	class:TerminalSession
tmux_echo	conf/tmux/.tmux/plugins/tpm/scripts/helpers/tmux_echo_functions.sh	/^tmux_echo() {$/;"	f
tmux_socket_name	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/spec/terminal_session.rb	/^  def tmux_socket_name$/;"	f	class:TerminalSession
tmux_socket_name	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/spec/terminal_session.rb	/^  def tmux_socket_name$/;"	f	class:TerminalSession
tmux_version_int	conf/tmux/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^tmux_version_int() {$/;"	f
to_a	conf/vim/.vim/autoload/plug.vim	/^function! s:to_a(v)$/;"	f
to_group	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! s:to_group(items) abort$/;"	f
to_hex_color	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! s:to_hex_color(color, term) abort$/;"	f
to_s	conf/vim/.vim/autoload/plug.vim	/^function! s:to_s(v)$/;"	f
to_vim	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def to_vim(self):$/;"	m	class:_VimCursor
to_vim_cursor	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def to_vim_cursor(self):$/;"	m	class:_SnippetUtilCursor
tofu_prompt_info	conf/zsh/.oh-my-zsh/plugins/opentofu/opentofu.plugin.zsh	/^function tofu_prompt_info() {$/;"	f
tofu_version_prompt_info	conf/zsh/.oh-my-zsh/plugins/opentofu/opentofu.plugin.zsh	/^function tofu_version_prompt_info() {$/;"	f
toggle-max-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun toggle-max-frame (&optional direction frame)$/;"	f
toggle-max-frame-horizontally	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun toggle-max-frame-horizontally (&optional frame)$/;"	f
toggle-max-frame-vertically	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun toggle-max-frame-vertically (&optional frame)$/;"	f
toggle-menu-bar-for-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defun toggle-menu-bar-for-frame (&optional frame)$/;"	f
toggle-zoom-frame	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/zoom-frm.el	/^(defun toggle-zoom-frame (&optional frame)$/;"	f
toggleIgnoreFilter	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleIgnoreFilter() abort$/;"	f
toggleShowBookmarks	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowBookmarks() abort$/;"	f
toggleShowFileLines	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowFileLines() abort$/;"	f
toggleShowFiles	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowFiles() abort$/;"	f
toggleShowHidden	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowHidden() abort$/;"	f
toggleZoom	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleZoom() abort$/;"	f
toggle_each_buffer	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter.vim	/^function s:toggle_each_buffer(enable)$/;"	f
tokenize	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/lexer.py	/^def tokenize(text, indent, offset, allowed_tokens):$/;"	f
tokenize_snippet_text	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/base.py	/^def tokenize_snippet_text($/;"	f
toml-packages	conf/emacs/.emacs.d/layers/+lang/toml/packages.el	/^(defconst toml-packages$/;"	f
toml/init-toml-mode	conf/emacs/.emacs.d/layers/+lang/toml/packages.el	/^(defun toml\/init-toml-mode ()$/;"	f
toolbox_prompt_info	conf/zsh/.oh-my-zsh/plugins/toolbox/toolbox.plugin.zsh	/^function toolbox_prompt_info() {$/;"	f
toolbox_prompt_name	conf/zsh/.oh-my-zsh/plugins/toolbox/toolbox.plugin.zsh	/^function toolbox_prompt_name() {$/;"	f
top	conf/vim/.vim/plugged/vim-go/test/parse.go	/^func (p *parser) top() *Node {$/;"	f
tpm_path	conf/tmux/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^tpm_path() {$/;"	f
tpm_path_set	conf/tmux/.tmux/plugins/tpm/tpm	/^tpm_path_set() {$/;"	f
tpm_plugins_list_helper	conf/tmux/.tmux/plugins/tpm/scripts/helpers/plugin_functions.sh	/^tpm_plugins_list_helper() {$/;"	f
transfer	conf/zsh/.oh-my-zsh/plugins/transfer/transfer.plugin.zsh	/^transfer() {$/;"	f
transform	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^def transform(a, cmds):$/;"	f
translate-packages	conf/emacs/.emacs.d/layers/+tools/translate/packages.el	/^(defconst translate-packages$/;"	f
translate/init-go-translate	conf/emacs/.emacs.d/layers/+tools/translate/packages.el	/^(defun translate\/init-go-translate ()$/;"	f
translate/init-translate-mode	conf/emacs/.emacs.d/layers/+tools/translate/packages.el	/^(defun translate\/init-translate-mode ()$/;"	f
translate/paragraph-render	conf/emacs/.emacs.d/layers/+tools/translate/config.el	/^(defvar translate\/paragraph-render 'posframe$/;"	f
translate/pre-init-posframe	conf/emacs/.emacs.d/layers/+tools/translate/packages.el	/^(defun translate\/pre-init-posframe ()$/;"	f
translate/word-render	conf/emacs/.emacs.d/layers/+tools/translate/config.el	/^(defvar translate\/word-render 'posframe$/;"	f
transmission-auto-refresh-all	conf/emacs/.emacs.d/layers/+tools/transmission/config.el	/^(defvar transmission-auto-refresh-all nil$/;"	f
transmission/init-transmission	conf/emacs/.emacs.d/layers/+tools/transmission/packages.el	/^(defun transmission\/init-transmission ()$/;"	f
tree	conf/zsh/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^  function tree() {$/;"	f
tree-sitter-fold-enable	conf/emacs/.emacs.d/layers/+tools/tree-sitter/config.el	/^(defvar tree-sitter-fold-enable nil$/;"	f
tree-sitter-fold-indicators-enable	conf/emacs/.emacs.d/layers/+tools/tree-sitter/config.el	/^(defvar tree-sitter-fold-indicators-enable t$/;"	f
tree-sitter-indent-enable	conf/emacs/.emacs.d/layers/+tools/tree-sitter/config.el	/^(defvar tree-sitter-indent-enable nil$/;"	f
tree-sitter-packages	conf/emacs/.emacs.d/layers/+tools/tree-sitter/packages.el	/^(defconst tree-sitter-packages$/;"	f
tree-sitter-syntax-highlight-enable	conf/emacs/.emacs.d/layers/+tools/tree-sitter/config.el	/^(defvar tree-sitter-syntax-highlight-enable t$/;"	f
tree-sitter/init-tree-sitter	conf/emacs/.emacs.d/layers/+tools/tree-sitter/packages.el	/^(defun tree-sitter\/init-tree-sitter ()$/;"	f
tree-sitter/init-tree-sitter-indent	conf/emacs/.emacs.d/layers/+tools/tree-sitter/packages.el	/^(defun tree-sitter\/init-tree-sitter-indent ()$/;"	f
tree-sitter/init-tree-sitter-langs	conf/emacs/.emacs.d/layers/+tools/tree-sitter/packages.el	/^(defun tree-sitter\/init-tree-sitter-langs ()$/;"	f
tree-sitter/init-ts-fold	conf/emacs/.emacs.d/layers/+tools/tree-sitter/packages.el	/^(defun tree-sitter\/init-ts-fold ()$/;"	f
treemacs-lock-width	conf/emacs/.emacs.d/layers/+filetree/treemacs/config.el	/^(defvar treemacs-lock-width nil$/;"	f
treemacs-packages	conf/emacs/.emacs.d/layers/+filetree/treemacs/packages.el	/^(defconst treemacs-packages$/;"	f
treemacs-use-all-the-icons-theme	conf/emacs/.emacs.d/layers/+filetree/treemacs/config.el	/^(defvar treemacs-use-all-the-icons-theme nil$/;"	f
treemacs-use-filewatch-mode	conf/emacs/.emacs.d/layers/+filetree/treemacs/config.el	/^(defvar treemacs-use-filewatch-mode t$/;"	f
treemacs-use-follow-mode	conf/emacs/.emacs.d/layers/+filetree/treemacs/config.el	/^(defvar treemacs-use-follow-mode t$/;"	f
treemacs-use-git-mode	conf/emacs/.emacs.d/layers/+filetree/treemacs/config.el	/^(defvar treemacs-use-git-mode nil$/;"	f
treemacs-use-icons-dired	conf/emacs/.emacs.d/layers/+filetree/treemacs/config.el	/^(defvar treemacs-use-icons-dired t$/;"	f
treemacs-use-scope-type	conf/emacs/.emacs.d/layers/+filetree/treemacs/config.el	/^(defvar treemacs-use-scope-type 'Frames$/;"	f
treemacs/init-treemacs	conf/emacs/.emacs.d/layers/+filetree/treemacs/packages.el	/^(defun treemacs\/init-treemacs ()$/;"	f
treemacs/init-treemacs-all-the-icons	conf/emacs/.emacs.d/layers/+filetree/treemacs/packages.el	/^(defun treemacs\/init-treemacs-all-the-icons ()$/;"	f
treemacs/init-treemacs-evil	conf/emacs/.emacs.d/layers/+filetree/treemacs/packages.el	/^(defun treemacs\/init-treemacs-evil ()$/;"	f
treemacs/init-treemacs-icons-dired	conf/emacs/.emacs.d/layers/+filetree/treemacs/packages.el	/^(defun treemacs\/init-treemacs-icons-dired ()$/;"	f
treemacs/init-treemacs-magit	conf/emacs/.emacs.d/layers/+filetree/treemacs/packages.el	/^(defun treemacs\/init-treemacs-magit ()$/;"	f
treemacs/init-treemacs-persp	conf/emacs/.emacs.d/layers/+filetree/treemacs/packages.el	/^(defun treemacs\/init-treemacs-persp ()$/;"	f
treemacs/init-treemacs-projectile	conf/emacs/.emacs.d/layers/+filetree/treemacs/packages.el	/^(defun treemacs\/init-treemacs-projectile ()$/;"	f
treemacs/pre-init-golden-ratio	conf/emacs/.emacs.d/layers/+filetree/treemacs/packages.el	/^(defun treemacs\/pre-init-golden-ratio ()$/;"	f
treemacs/pre-init-winum	conf/emacs/.emacs.d/layers/+filetree/treemacs/packages.el	/^(defun treemacs\/pre-init-winum ()$/;"	f
trigger	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/definition/base.py	/^    def trigger(self):$/;"	m	class:SnippetDefinition
trigger_gitgutter	conf/vim/.vim/plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:trigger_gitgutter()$/;"	f
trim	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^def trim(s):$/;"	f
trim	conf/tmux/.tmux/plugins/tmux-themepack/bin/build-theme	/^trim() {$/;"	f
trim	conf/vim/.vim/autoload/plug.vim	/^function! s:trim(str)$/;"	f
true-color-p	conf/emacs/.emacs.d/core/libs/spacemacs-theme/spacemacs-theme.el	/^(defun true-color-p ()$/;"	f
truncate	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def truncate(string: str, max_width: int) -> str:$/;"	f
truncate_skipping	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def truncate_skipping(string: str, max_width: int,$/;"	f
try_alias_value	conf/zsh/.oh-my-zsh/lib/functions.zsh	/^function try_alias_value() {$/;"	f
tt	conf/zsh/.oh-my-zsh/plugins/textastic/textastic.plugin.zsh	/^function tt() {$/;"	f
tuple	workflows/Ariafred/src/workflow/update.py	/^    def tuple(self):$/;"	m	class:Version
twitch-packages	conf/emacs/.emacs.d/layers/+web-services/twitch/packages.el	/^(defconst twitch-packages$/;"	f
twitch/init-helm-twitch	conf/emacs/.emacs.d/layers/+web-services/twitch/packages.el	/^(defun twitch\/init-helm-twitch ()$/;"	f
twitch/init-twitch-api	conf/emacs/.emacs.d/layers/+web-services/twitch/packages.el	/^(defun twitch\/init-twitch-api ()$/;"	f
twitter-packages	conf/emacs/.emacs.d/layers/+web-services/twitter/packages.el	/^(defconst twitter-packages$/;"	f
twitter/init-twittering-mode	conf/emacs/.emacs.d/layers/+web-services/twitter/packages.el	/^(defun twitter\/init-twittering-mode ()$/;"	f
type	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^        type="str",$/;"	v
typeDefinitionHandler	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:typeDefinitionHandler(next, msg) abort dict$/;"	f
typeHighlightGroup	conf/vim/.vim/plugged/vim-go/autoload/go/highlight_test.vim	/^function! s:typeHighlightGroup(testname, value)$/;"	f
typescript-backend	conf/emacs/.emacs.d/layers/+lang/typescript/config.el	/^(defvar typescript-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'tide)$/;"	f
typescript-fmt-on-save	conf/emacs/.emacs.d/layers/+lang/typescript/config.el	/^(defvar typescript-fmt-on-save nil$/;"	f
typescript-fmt-tool	conf/emacs/.emacs.d/layers/+lang/typescript/config.el	/^(defvar typescript-fmt-tool 'tide$/;"	f
typescript-linter	conf/emacs/.emacs.d/layers/+lang/typescript/config.el	/^(defvar typescript-linter 'eslint$/;"	f
typescript-lsp-linter	conf/emacs/.emacs.d/layers/+lang/typescript/config.el	/^(defvar typescript-lsp-linter t$/;"	f
typescript/init-typescript-mode	conf/emacs/.emacs.d/layers/+lang/typescript/packages.el	/^(defun typescript\/init-typescript-mode ()$/;"	f
typescript/post-init-add-node-modules-path	conf/emacs/.emacs.d/layers/+lang/typescript/packages.el	/^(defun typescript\/post-init-add-node-modules-path ()$/;"	f
typescript/post-init-company	conf/emacs/.emacs.d/layers/+lang/typescript/packages.el	/^(defun typescript\/post-init-company ()$/;"	f
typescript/post-init-eldoc	conf/emacs/.emacs.d/layers/+lang/typescript/packages.el	/^(defun typescript\/post-init-eldoc ()$/;"	f
typescript/post-init-emmet-mode	conf/emacs/.emacs.d/layers/+lang/typescript/packages.el	/^(defun typescript\/post-init-emmet-mode ()$/;"	f
typescript/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/typescript/packages.el	/^(defun typescript\/post-init-flycheck ()$/;"	f
typescript/post-init-npm-mode	conf/emacs/.emacs.d/layers/+lang/typescript/packages.el	/^(defun typescript\/post-init-npm-mode ()$/;"	f
typescript/post-init-smartparens	conf/emacs/.emacs.d/layers/+lang/typescript/packages.el	/^(defun typescript\/post-init-smartparens ()$/;"	f
typescript/post-init-web-mode	conf/emacs/.emacs.d/layers/+lang/typescript/packages.el	/^(defun typescript\/post-init-web-mode ()$/;"	f
typescript/post-init-yasnippet	conf/emacs/.emacs.d/layers/+lang/typescript/packages.el	/^(defun typescript\/post-init-yasnippet ()$/;"	f
typescript/pre-init-import-js	conf/emacs/.emacs.d/layers/+lang/typescript/packages.el	/^(defun typescript\/pre-init-import-js ()$/;"	f
typescript/set-linter	conf/emacs/.emacs.d/layers/+lang/typescript/packages.el	/^(defun typescript\/set-linter ()$/;"	f
typescript/set-lsp-linter	conf/emacs/.emacs.d/layers/+lang/typescript/packages.el	/^(defun typescript\/set-lsp-linter ()$/;"	f
typescript/set-tide-linter	conf/emacs/.emacs.d/layers/+lang/typescript/packages.el	/^(defun typescript\/set-tide-linter ()$/;"	f
typeset_p	conf/zsh/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/tests/test-highlighting.zsh	/^typeset_p() {$/;"	f
typeset_p	conf/zsh/.oh-my-zsh/custom/zsh-syntax-highlighting/tests/test-highlighting.zsh	/^typeset_p() {$/;"	f
typography-enable-typographic-editing	conf/emacs/.emacs.d/layers/+emacs/typography/config.el	/^(defvar typography-enable-typographic-editing nil$/;"	f
typography/init-tildify	conf/emacs/.emacs.d/layers/+emacs/typography/packages.el	/^(defun typography\/init-tildify ()$/;"	f
typography/init-typo	conf/emacs/.emacs.d/layers/+emacs/typography/packages.el	/^(defun typography\/init-typo ()$/;"	f
u32	sh/restore_mac_trash.pl	/^sub u32($$) { unpack('N', substr($_[0], $_[1], 4)) }$/;"	s
ua	conf/zsh/.oh-my-zsh/plugins/universalarchive/universalarchive.plugin.zsh	/^function ua() {$/;"	f
ultisnips_snippets	conf/vim/.vim/plugged/ultisnips/ftplugin/snippets.vim	/^augroup ultisnips_snippets.vim$/;"	a
undo	conf/tmux/.tmux/plugins/tpm/lib/tmux-test/setup	/^undo() {$/;"	f
undo	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:undo(hunk_diff)$/;"	f
unescape	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text.py	/^def unescape(text):$/;"	f
unhex-region	conf/emacs/.spacemacs.d/load.d/functions.el	/^(defun unhex-region (start end)$/;"	f
unicode-fonts-packages	conf/emacs/.emacs.d/layers/+fonts/unicode-fonts/packages.el	/^(defconst unicode-fonts-packages$/;"	f
unicode-fonts//setup-fonts	conf/emacs/.emacs.d/layers/+fonts/unicode-fonts/funcs.el	/^(defun unicode-fonts\/\/setup-fonts (frame)$/;"	f
unicode-fonts/init-ligature	conf/emacs/.emacs.d/layers/+fonts/unicode-fonts/packages.el	/^(defun unicode-fonts\/init-ligature ()$/;"	f
unicode-fonts/init-unicode-fonts	conf/emacs/.emacs.d/layers/+fonts/unicode-fonts/packages.el	/^(defun unicode-fonts\/init-unicode-fonts ()$/;"	f
unicodify	workflows/Ariafred/src/workflow/util.py	/^def unicodify(s, encoding='utf-8', norm=None):$/;"	f
uninstall_kcptun	sh/kcptun.sh	/^uninstall_kcptun() {$/;"	f
uninstall_oh_my_zsh	conf/zsh/.oh-my-zsh/lib/functions.zsh	/^function uninstall_oh_my_zsh() {$/;"	f
uninstall_shadowsocks	sh/shadowsocks-all.sh	/^uninstall_shadowsocks() {$/;"	f
uninstall_shadowsocks	sh/shadowsocks.sh	/^uninstall_shadowsocks(){$/;"	f
uninstall_shadowsocks_go	sh/shadowsocks-all.sh	/^uninstall_shadowsocks_go() {$/;"	f
uninstall_shadowsocks_libev	sh/shadowsocks-all.sh	/^uninstall_shadowsocks_libev() {$/;"	f
uninstall_shadowsocks_python	sh/shadowsocks-all.sh	/^uninstall_shadowsocks_python() {$/;"	f
uninstall_shadowsocks_r	sh/shadowsocks-all.sh	/^uninstall_shadowsocks_r() {$/;"	f
uninterruptible	workflows/Ariafred/src/workflow/util.py	/^class uninterruptible(object):$/;"	c
uniq	conf/vim/.vim/plugged/vim-go/autoload/go/impl.vim	/^  function! s:uniq(list)$/;"	f
uniq_list_dict	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def uniq_list_dict(li: typing.List[typing.Any]) -> typing.List[typing.Any]:$/;"	f
unique_name_temp	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def unique_name_temp(self, suffix="", prefix=""):$/;"	m	class:TempFileManager
unite#sources#decls#define	conf/vim/.vim/plugged/vim-go/autoload/unite/sources/decls.vim	/^function! unite#sources#decls#define()$/;"	f
unite#sources#ultisnips#define	conf/vim/.vim/plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! unite#sources#ultisnips#define() abort$/;"	f
unite_source.action_table.expand.func	conf/vim/.vim/plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.action_table.expand.func(candidate) abort$/;"	f
unite_source.action_table.preview.func	conf/vim/.vim/plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.action_table.preview.func(candidate) abort$/;"	f
unite_source.gather_candidates	conf/vim/.vim/plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.gather_candidates(args, context) abort$/;"	f
unite_source.get_longest_snippet_len	conf/vim/.vim/plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.get_longest_snippet_len(snippet_list) abort$/;"	f
unite_source.hooks.on_syntax	conf/vim/.vim/plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.hooks.on_syntax(args, context) abort$/;"	f
unmark	conf/zsh/.oh-my-zsh/plugins/jump/jump.plugin.zsh	/^unmark() {$/;"	f
unpack_file	sh/kcptun.sh	/^unpack_file() {$/;"	f
unregister	workflows/Ariafred/src/workflow/workflow.py	/^    def unregister(self, name):$/;"	m	class:SerializerManager
unregister_snippet_source	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def unregister_snippet_source(self, name):$/;"	m	class:SnippetManager
unset	conf/vim/.vim/plugged/vim-go/autoload/go/util.vim	/^function! s:unset(name) abort$/;"	f
unshift	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def unshift(self, amount=1):$/;"	m	class:SnippetUtil
unsupported_version_message	conf/tmux/.tmux/plugins/tpm/scripts/check_tmux_version.sh	/^unsupported_version_message() {$/;"	f
upDirCurrentRootClosed	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootClosed() abort$/;"	f
upDirCurrentRootOpen	conf/vim/.vim/plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootOpen() abort$/;"	f
update	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^def update(db, urls, append=False):$/;"	f
update	conf/tmux/.tmux/plugins/tpm/scripts/update_plugin.sh	/^update() {$/;"	f
update	conf/vim/.vim/autoload/plug.vim	/^function! s:update(force, names)$/;"	f
update	workflows/Ariafred/src/workflow/web.py	/^    def update(self, other):$/;"	m	class:CaseInsensitiveDictionary
update	workflows/Ariafred/src/workflow/workflow.py	/^    def update(self, *args, **kwargs):$/;"	m	class:Settings
update-packages-alist	conf/emacs/.emacs.d/core/core-configuration-layer.el	/^(defvar update-packages-alist '()$/;"	f
update_all	conf/tmux/.tmux/plugins/tpm/scripts/update_plugin.sh	/^update_all() {$/;"	f
update_available	workflows/Ariafred/src/workflow/workflow.py	/^    def update_available(self):$/;"	m	class:Workflow
update_breakpoint	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:update_breakpoint(res) abort$/;"	f
update_current_git_vars	conf/zsh/.oh-my-zsh/plugins/git-prompt/git-prompt.plugin.zsh	/^function update_current_git_vars() {$/;"	f
update_dependency_version	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^    def update_dependency_version(path: str, version: str) -> DependencyYAML:$/;"	m	class:DependencyStore
update_extends	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/snippet/source/base.py	/^    def update_extends(self, child_ft, parent_fts):$/;"	m	class:SnippetSource
update_finish	conf/vim/.vim/autoload/plug.vim	/^function! s:update_finish()$/;"	f
update_goroutines	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:update_goroutines() abort$/;"	f
update_goroutines_state_handler	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:update_goroutines_state_handler(check_errors, res) abort$/;"	f
update_highlights_timer	conf/vim/.vim/plugged/coc.nvim/autoload/coc/highlight.vim	/^function! s:update_highlights_timer(bufnr, changedtick, key, priority, groups, idx) abort$/;"	f
update_impl	conf/vim/.vim/autoload/plug.vim	/^function! s:update_impl(pull, force, args) abort$/;"	f
update_kcptun	sh/kcptun.sh	/^update_kcptun() {$/;"	f
update_last_updated_file	conf/zsh/.oh-my-zsh/tools/check_for_upgrade.sh	/^function update_last_updated_file() {$/;"	f
update_off	workflows/Ariafred/src/workflow/workflow.py	/^        def update_off():$/;"	f	function:Workflow._register_default_magic
update_ohmyzsh	conf/zsh/.oh-my-zsh/tools/check_for_upgrade.sh	/^function update_ohmyzsh() {$/;"	f
update_on	workflows/Ariafred/src/workflow/workflow.py	/^        def update_on():$/;"	f	function:Workflow._register_default_magic
update_or_notify	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^    def update_or_notify(self):$/;"	m	class:Dependency
update_plugin_prompt	conf/tmux/.tmux/plugins/tpm/bindings/update_plugins	/^update_plugin_prompt() {$/;"	f
update_plugins	conf/tmux/.tmux/plugins/tpm/scripts/update_plugin.sh	/^update_plugins() {$/;"	f
update_python	conf/vim/.vim/autoload/plug.vim	/^function! s:update_python()$/;"	f
update_ruby	conf/vim/.vim/autoload/plug.vim	/^function! s:update_ruby()$/;"	f
update_settings	workflows/Ariafred/src/aria.py	/^    update_settings = {$/;"	v
update_stacktrace	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:update_stacktrace() abort$/;"	f
update_textobjects	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/snippet_instance.py	/^    def update_textobjects(self, buf):$/;"	m	class:SnippetInstance
update_variables	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:update_variables() abort$/;"	f
update_vim	conf/vim/.vim/autoload/plug.vim	/^function! s:update_vim()$/;"	f
update_watch_list	workflows/Ariafred/src/notifier.py	/^def update_watch_list():$/;"	f
update_windows	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:update_windows(res) abort$/;"	f
upgrade	conf/vim/.vim/autoload/plug.vim	/^function! s:upgrade()$/;"	f
upgrade	conf/zsh/.oh-my-zsh/plugins/archlinux/archlinux.plugin.zsh	/^function upgrade() {$/;"	f
upgrade_oh_my_zsh	conf/zsh/.oh-my-zsh/lib/functions.zsh	/^function upgrade_oh_my_zsh() {$/;"	f
upgrade_specs	conf/vim/.vim/autoload/plug.vim	/^function! s:upgrade_specs()$/;"	f
upsert_new_gitgutter_signs	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:upsert_new_gitgutter_signs(bufnr, modified_lines) abort$/;"	f
url-http-end-of-headers	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defvar url-http-end-of-headers)$/;"	f
url-http-response-status	conf/emacs/.emacs.d/core/libs/quelpa.el	/^(defvar url-http-response-status)$/;"	f
urldecode	conf/zsh/.oh-my-zsh/plugins/urltools/urltools.plugin.zsh	/^    function urldecode() {printf $(echo -n $@ | sed 's\/\\\\\/\\\\\\\\\/g;s\/\\(%\\)\\([0-9a-fA-F][0-9a-fA-F]\\)\/\\\\x\\2\/g')"\\n"}$/;"	f
urldecode_json	conf/zsh/.oh-my-zsh/plugins/jsontools/jsontools.plugin.zsh	/^    function urldecode_json() {$/;"	f
urlencode	conf/zsh/.oh-my-zsh/plugins/urltools/urltools.plugin.zsh	/^    function urlencode() {echo $@ | tr -d "\\n" | xxd -plain | sed "s\/\\(..\\)\/%\\1\/g"}$/;"	f
urlencode_json	conf/zsh/.oh-my-zsh/plugins/jsontools/jsontools.plugin.zsh	/^    function urlencode_json() {$/;"	f
usage	conf/zsh/.oh-my-zsh/plugins/shell-proxy/proxy.py	/^    def usage(self):$/;"	m	class:CommandSet
usage	conf/zsh/.oh-my-zsh/tools/require_tool.sh	/^usage() {$/;"	f
usage	conf/zsh/.oh-my-zsh/tools/theme_chooser.sh	/^function usage() {$/;"	f
usage	sh/kcptun.sh	/^usage() {$/;"	f
use-package-handler/:spacebind	conf/emacs/.emacs.d/core/core-use-package-ext.el	/^(defun use-package-handler\/:spacebind (name-symbol keyword args rest state)$/;"	f
use-package-handler/:spacediminish	conf/emacs/.emacs.d/core/core-use-package-ext.el	/^(defun use-package-handler\/:spacediminish (name _keyword arg rest state)$/;"	f
use-package-normalize-spacediminish	conf/emacs/.emacs.d/core/core-use-package-ext.el	/^(defun use-package-normalize-spacediminish (name label arg &optional recursed)$/;"	f
use-package-normalize/:spacebind	conf/emacs/.emacs.d/core/core-use-package-ext.el	/^(defun use-package-normalize\/:spacebind (name-symbol keyword args)$/;"	f
use-package-normalize/:spacediminish	conf/emacs/.emacs.d/core/core-use-package-ext.el	/^(defun use-package-normalize\/:spacediminish (name keyword args)$/;"	f
use_env	conf/zsh/.oh-my-zsh/plugins/autoenv/autoenv.plugin.zsh	/^use_env() {$/;"	f
use_known_shell	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:use_known_shell() abort$/;"	f
use_proxy_buffer	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^def use_proxy_buffer(snippets_stack, vstate):$/;"	f
useful_diff_colours	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:useful_diff_colours()$/;"	f
user_can_sudo	conf/zsh/.oh-my-zsh/tools/install.sh	/^user_can_sudo() {$/;"	f
ustr	workflows/Ariafred/src/workflow/notify.py	/^    def ustr(s):$/;"	f
utf8ify	workflows/Ariafred/src/workflow/util.py	/^def utf8ify(s):$/;"	f
v	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/text_objects/python_code.py	/^    def v(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
vagrant-packages	conf/emacs/.emacs.d/layers/+tools/vagrant/packages.el	/^(defconst vagrant-packages$/;"	f
vagrant/init-vagrant	conf/emacs/.emacs.d/layers/+tools/vagrant/packages.el	/^(defun vagrant\/init-vagrant ()$/;"	f
vagrant/init-vagrant-tramp	conf/emacs/.emacs.d/layers/+tools/vagrant/packages.el	/^(defun vagrant\/init-vagrant-tramp ()$/;"	f
vagrant_prompt_info	conf/zsh/.oh-my-zsh/plugins/vagrant-prompt/vagrant-prompt.plugin.zsh	/^function vagrant_prompt_info() {$/;"	f
val	conf/vim/.vim/plugged/vim-markdown/ftplugin/markdown.vim	/^        let val = matchstr(s:filetype, '[^=]*$')$/;"	v
validate--check	conf/emacs/.emacs.d/core/libs/validate.el	/^(defun validate--check (value schema)$/;"	f
validate--check-list-contents	conf/emacs/.emacs.d/core/libs/validate.el	/^(defun validate--check-list-contents (values schemas)$/;"	f
validate--indent-by-2	conf/emacs/.emacs.d/core/libs/validate.el	/^(defun validate--indent-by-2 (x)$/;"	f
validate-mark-safe-local	conf/emacs/.emacs.d/core/libs/validate.el	/^(defun validate-mark-safe-local (symbol)$/;"	f
validate-setq	conf/emacs/.emacs.d/core/libs/validate.el	/^(defmacro validate-setq (&rest svs)$/;"	f
validate-value	conf/emacs/.emacs.d/core/libs/validate.el	/^(defun validate-value (value schema &optional noerror)$/;"	f
validate-variable	conf/emacs/.emacs.d/core/libs/validate.el	/^(defun validate-variable (symbol &optional noerror)$/;"	f
validate_buffer	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def validate_buffer(self):$/;"	m	class:VimBufferProxy
validate_paths	sh/monitor_rsync_multi.sh	/^validate_paths() {$/;"	f
validate_paths	sh/monitor_rsync_multi.sh.orig	/^validate_paths() {$/;"	f
validate_sound	workflows/Ariafred/src/workflow/notify.py	/^def validate_sound(sound):$/;"	f
values	workflows/Ariafred/src/workflow/web.py	/^    def values(self):$/;"	m	class:CaseInsensitiveDictionary
variable_set	sh/spf13-vim.sh	/^variable_set() {$/;"	f
vd	conf/vim/.vim/plugged/vim-operator-user/t/example-d-motion-type.vim	/^map vd  <Plug>(operator-void-delete)$/;"	m
vendordirs	conf/vim/.vim/plugged/vim-go/autoload/go/package.vim	/^function! s:vendordirs() abort$/;"	f
verify_command	conf/vim/.vim/plugged/vim-clang-format/autoload/clang_format.vim	/^function! s:verify_command() abort$/;"	f
verify_tpm_path_permissions	conf/tmux/.tmux/plugins/tpm/scripts/install_plugins.sh	/^verify_tpm_path_permissions() {$/;"	f
version	conf/vim/.vim/plugged/ultisnips/test/vim_test_case.py	/^    version = None  # Will be set to vim --version output$/;"	v	class:VimTestCase
version	workflows/Ariafred/src/workflow/workflow.py	/^    def version(self):$/;"	m	class:Workflow
version-control-packages	conf/emacs/.emacs.d/layers/+source-control/version-control/packages.el	/^(defconst version-control-packages$/;"	f
version-control/init-browse-at-remote	conf/emacs/.emacs.d/layers/+source-control/version-control/packages.el	/^(defun version-control\/init-browse-at-remote ()$/;"	f
version-control/init-diff-hl	conf/emacs/.emacs.d/layers/+source-control/version-control/packages.el	/^(defun version-control\/init-diff-hl ()$/;"	f
version-control/init-diff-mode	conf/emacs/.emacs.d/layers/+source-control/version-control/packages.el	/^(defun version-control\/init-diff-mode ()$/;"	f
version-control/init-git-gutter	conf/emacs/.emacs.d/layers/+source-control/version-control/packages.el	/^(defun version-control\/init-git-gutter ()$/;"	f
version-control/init-git-gutter-fringe	conf/emacs/.emacs.d/layers/+source-control/version-control/packages.el	/^(defun version-control\/init-git-gutter-fringe ()$/;"	f
version-control/init-smerge-mode	conf/emacs/.emacs.d/layers/+source-control/version-control/packages.el	/^(defun version-control\/init-smerge-mode ()$/;"	f
version-control/init-vc	conf/emacs/.emacs.d/layers/+source-control/version-control/packages.el	/^(defun version-control\/init-vc ()$/;"	f
version-control/post-init-evil-unimpaired	conf/emacs/.emacs.d/layers/+source-control/version-control/packages.el	/^(defun version-control\/post-init-evil-unimpaired ()$/;"	f
version_requirement	conf/vim/.vim/autoload/plug.vim	/^function! s:version_requirement(val, min)$/;"	f
version_requirement	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:version_requirement(val, min)$/;"	f
vi_mode_prompt_info	conf/zsh/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh	/^function vi_mode_prompt_info() {$/;"	f
vim	conf/vim/.vim/plugged/vim-go/ftplugin/asm.vim	/^augroup vim-go-asm-buffer$/;"	a
vim	conf/vim/.vim/plugged/vim-go/ftplugin/go.vim	/^augroup vim-go-buffer$/;"	a
vim	conf/vim/.vim/plugged/vim-go/ftplugin/gomod.vim	/^augroup vim-go-gomod-buffer$/;"	a
vim	conf/vim/.vim/plugged/vim-go/plugin/go.vim	/^augroup vim-go$/;"	a
vim	conf/vim/.vim/plugged/vim-go/syntax/go.vim	/^augroup vim-go-hi$/;"	a
vim-empty-lines/init-vim-empty-lines-mode	conf/emacs/.emacs.d/layers/+vim/vim-empty-lines/packages.el	/^(defun vim-empty-lines\/init-vim-empty-lines-mode ()$/;"	f
vim-style-enable-undo-region	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/config.el	/^(defvar vim-style-enable-undo-region nil$/;"	f
vim-style-ex-substitute-global	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/config.el	/^(defvar vim-style-ex-substitute-global$/;"	f
vim-style-remap-Y-to-y$	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/config.el	/^(defvar vim-style-remap-Y-to-y\$$/;"	f
vim-style-retain-visual-state-on-shift	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/config.el	/^(defvar vim-style-retain-visual-state-on-shift$/;"	f
vim-style-visual-feedback	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-evil/config.el	/^(defvar vim-style-visual-feedback nil$/;"	f
vim-style-visual-line-move-text	conf/emacs/.emacs.d/layers/+distributions/spacemacs-bootstrap/config.el	/^(defvar vim-style-visual-line-move-text$/;"	f
vim_executable	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def vim_executable(self):$/;"	m	class:VimInterface
vim_flavor	conf/vim/.vim/plugged/ultisnips/test/vim_test_case.py	/^    vim_flavor = None  # will be 'vim' or 'neovim'.$/;"	v	class:VimTestCase
vim_snippets#Filename	conf/vim/.vim/plugged/vim-snippets/autoload/vim_snippets.vim	/^fun! vim_snippets#Filename(...)$/;"	f
vim_version	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:vim_version()$/;"	f
vimdir	conf/vim/.vim/plugged/vim-go/autoload/go/lint_test.vim	/^func! s:vimdir()$/;"	f
vimoption2python	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! s:vimoption2python(option) abort$/;"	f
vimscript-backend	conf/emacs/.emacs.d/layers/+lang/vimscript/config.el	/^(defvar vimscript-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'company-vimscript)$/;"	f
vimscript-packages	conf/emacs/.emacs.d/layers/+lang/vimscript/packages.el	/^(defconst vimscript-packages$/;"	f
vimscript/init-dactyl-mode	conf/emacs/.emacs.d/layers/+lang/vimscript/packages.el	/^(defun vimscript\/init-dactyl-mode ()$/;"	f
vimscript/init-vimrc-mode	conf/emacs/.emacs.d/layers/+lang/vimscript/packages.el	/^(defun vimscript\/init-vimrc-mode ()$/;"	f
vimscript/post-init-company	conf/emacs/.emacs.d/layers/+lang/vimscript/packages.el	/^(defun vimscript\/post-init-company ()$/;"	f
vimscript/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/vimscript/packages.el	/^(defun vimscript\/post-init-counsel-gtags nil)$/;"	f
vimscript/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/vimscript/packages.el	/^(defun vimscript\/post-init-flycheck ()$/;"	f
vimscript/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/vimscript/packages.el	/^(defun vimscript\/post-init-ggtags ()$/;"	f
vinegar-dired-hide-details	conf/emacs/.emacs.d/layers/+vim/vinegar/config.el	/^(defvar vinegar-dired-hide-details t$/;"	f
vinegar-reuse-dired-buffer	conf/emacs/.emacs.d/layers/+vim/vinegar/config.el	/^(defvar vinegar-reuse-dired-buffer nil$/;"	f
vinegar/back-to-top	conf/emacs/.emacs.d/layers/+vim/vinegar/funcs.el	/^(defun vinegar\/back-to-top ()$/;"	f
vinegar/dired-diff	conf/emacs/.emacs.d/layers/+vim/vinegar/funcs.el	/^(defun vinegar\/dired-diff ()$/;"	f
vinegar/dired-mouse-click	conf/emacs/.emacs.d/layers/+vim/vinegar/funcs.el	/^(defun vinegar\/dired-mouse-click (event)$/;"	f
vinegar/dired-mouse-click-3	conf/emacs/.emacs.d/layers/+vim/vinegar/funcs.el	/^(defun vinegar\/dired-mouse-click-3 (event)$/;"	f
vinegar/dired-setup	conf/emacs/.emacs.d/layers/+vim/vinegar/funcs.el	/^(defun vinegar\/dired-setup ()$/;"	f
vinegar/dotfiles-toggle	conf/emacs/.emacs.d/layers/+vim/vinegar/funcs.el	/^(defun vinegar\/dotfiles-toggle ()$/;"	f
vinegar/init-dired+	conf/emacs/.emacs.d/layers/+vim/vinegar/packages.el	/^(defun vinegar\/init-dired+ ()$/;"	f
vinegar/jump-to-bottom	conf/emacs/.emacs.d/layers/+vim/vinegar/funcs.el	/^(defun vinegar\/jump-to-bottom ()$/;"	f
vinegar/move-down	conf/emacs/.emacs.d/layers/+vim/vinegar/funcs.el	/^(defun vinegar\/move-down ()$/;"	f
vinegar/move-up	conf/emacs/.emacs.d/layers/+vim/vinegar/funcs.el	/^(defun vinegar\/move-up ()$/;"	f
vinegar/post-init-diff-hl	conf/emacs/.emacs.d/layers/+vim/vinegar/packages.el	/^(defun vinegar\/post-init-diff-hl ()$/;"	f
vinegar/post-init-dired	conf/emacs/.emacs.d/layers/+vim/vinegar/packages.el	/^(defun vinegar\/post-init-dired ()$/;"	f
vinegar/up-directory	conf/emacs/.emacs.d/layers/+vim/vinegar/funcs.el	/^(defun vinegar\/up-directory (&optional other-window)$/;"	f
virtual_position	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/vim_helper.py	/^def virtual_position(line, col):$/;"	f
virtualenv_prompt_info	conf/zsh/.oh-my-zsh/plugins/virtualenv/virtualenv.plugin.zsh	/^function virtualenv_prompt_info(){$/;"	f
visible_popup	conf/vim/.vim/plugged/coc.nvim/autoload/coc/window.vim	/^function! s:visible_popup(winid) abort$/;"	f
visible_ranges	conf/vim/.vim/plugged/coc.nvim/autoload/coc/util.vim	/^function! s:visible_ranges(winid) abort$/;"	f
visitpage20	conf/zsh/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function visitpage20() {$/;"	f
vjL	conf/vim/.vim/plugged/vim-operator-user/t/example-a-basic.vim	/^    normal vjL$/;"	m
vncviewer	conf/zsh/.oh-my-zsh/plugins/macos/macos.plugin.zsh	/^function vncviewer() {$/;"	f
vrun	conf/zsh/.oh-my-zsh/plugins/python/python.plugin.zsh	/^function vrun() {$/;"	f
vsc	conf/zsh/.oh-my-zsh/plugins/vscode/vscode.plugin.zsh	/^function vsc {$/;"	f
vsplit_tab	conf/zsh/.oh-my-zsh/plugins/macos/macos.plugin.zsh	/^function vsplit_tab() {$/;"	f
vue-packages	conf/emacs/.emacs.d/layers/+frameworks/vue/packages.el	/^(defconst vue-packages$/;"	f
vue/post-init-add-node-modules-path	conf/emacs/.emacs.d/layers/+frameworks/vue/packages.el	/^(defun vue\/post-init-add-node-modules-path ()$/;"	f
vue/post-init-company	conf/emacs/.emacs.d/layers/+frameworks/vue/packages.el	/^(defun vue\/post-init-company ()$/;"	f
vue/post-init-evil-matchit	conf/emacs/.emacs.d/layers/+frameworks/vue/packages.el	/^(defun vue\/post-init-evil-matchit ()$/;"	f
vue/post-init-flycheck	conf/emacs/.emacs.d/layers/+frameworks/vue/packages.el	/^(defun vue\/post-init-flycheck ()$/;"	f
vue/post-init-smartparens	conf/emacs/.emacs.d/layers/+frameworks/vue/packages.el	/^(defun vue\/post-init-smartparens ()$/;"	f
vue/post-init-web-mode	conf/emacs/.emacs.d/layers/+frameworks/vue/packages.el	/^(defun vue\/post-init-web-mode ()$/;"	f
vue/post-init-yasnippet	conf/emacs/.emacs.d/layers/+frameworks/vue/packages.el	/^(defun vue\/post-init-yasnippet ()$/;"	f
vue/pre-init-prettier-js	conf/emacs/.emacs.d/layers/+frameworks/vue/packages.el	/^(defun vue\/pre-init-prettier-js ()$/;"	f
vundle	conf/zsh/.oh-my-zsh/plugins/vundle/vundle.plugin.zsh	/^function vundle () {$/;"	f
vundle	conf/zsh/.oh-my-zsh/plugins/vundle/vundle.plugin.zsh	/^function vundle-clean () {$/;"	f
vundle	conf/zsh/.oh-my-zsh/plugins/vundle/vundle.plugin.zsh	/^function vundle-init () {$/;"	f
vundle	conf/zsh/.oh-my-zsh/plugins/vundle/vundle.plugin.zsh	/^function vundle-update () {$/;"	f
wait_until_file_exists	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^def wait_until_file_exists(file_path, times=None, interval=0.01):$/;"	f
wakatime/init-wakatime-mode	conf/emacs/.emacs.d/layers/+web-services/wakatime/packages.el	/^(defun wakatime\/init-wakatime-mode ()$/;"	f
wake	conf/zsh/.oh-my-zsh/plugins/wakeonlan/wakeonlan.plugin.zsh	/^function wake() {$/;"	f
wanted	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:MultiLine
wanted	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestLotsaNewlines
wanted	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestWithNewline
wanted	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 0, "abc"), ("I", 0, 0, "def"))$/;"	v	class:TestNoSubstring
wanted	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 1, "asomelongertextb"), ("I", 0, 1, "o"))$/;"	v	class:TestCommonCharacters
wanted	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 1, "tdin.h"),)$/;"	v	class:MatchIsTooCheap
wanted	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 10, "Beginning"), ("I", 0, 10, "t"))$/;"	v	class:TestRealLife
wanted	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 11, "this is it"), ("I", 0, 11, "a"))$/;"	v	class:TestUltiSnipsProblem
wanted	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 5, " "),)$/;"	v	class:TestGuessing_DeleteOneChar
wanted	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 5, " hallo"),)$/;"	v	class:TestCheapDelete
wanted	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 0, 6, " "),)$/;"	v	class:TestGuessing_BackspaceOneChar
wanted	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("D", 1, 6, "kjsdhfjksdhfkjhsdfkh"), ("I", 1, 6, "b"))$/;"	v	class:TestCrash
wanted	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("I", 0, 11, " "),)$/;"	v	class:TestRealLife1
wanted	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("I", 0, 6, " "),)$/;"	v	class:TestGuessing_InsertOneChar
wanted	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = (("I", 0, 7, " "),)$/;"	v	class:TestGuessing_InsertOneChar1
wanted	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestAllMatch
wanted	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestEmptyString
wanted	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestGuessing_Noop0
wanted	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = " :latex:`Hello`World"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
wanted	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "123 simple 123 expand 123 456"$/;"	v	class:Anon_Trigger_Multi
wanted	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = ":latex:`Hello`World"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
wanted	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "abc simple expand"$/;"	v	class:Anon_NoTrigger_AfterSpace
wanted	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "abcsimple 123 expand 123 456"$/;"	v	class:Anon_NoTrigger_Multi
wanted	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "abcsimple expand"$/;"	v	class:Anon_NoTrigger_Simple
wanted	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "simple expand"$/;"	v	class:Anon_Trigger_Opts
wanted	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "simple expand"$/;"	v	class:Anon_Trigger_Simple
wanted	conf/vim/.vim/plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = "simple expand\\nabc" + EX$/;"	v	class:Anon_Trigger_Twice
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Autocommands.py	/^    wanted = "[ [ bar ] ] done M1U1"$/;"	v	class:Autocommands
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "a"$/;"	v	class:Autotrigger_GlobalDisable
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "a\\nautotriggered"$/;"	v	class:Autotrigger_GlobalDisableThenToggle
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "autotriggered"$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "autotriggered"$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "autotriggered\\na"$/;"	v	class:Autotrigger_CanMatchContext
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = "autotriggered\\na\\nautotriggered"$/;"	v	class:Autotrigger_CanToggle
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand me'!"$/;"	v	class:Snippet_With_SingleQuote
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand me'!"$/;"	v	class:Snippet_With_SingleQuote_List
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand meü!"$/;"	v	class:Snippet_With_Umlauts
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand meü!"$/;"	v	class:Snippet_With_Umlauts_List
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    wanted = "oouu success b"$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü hello üü hello"$/;"	v	class:Snippet_With_Umlauts_Mirrors
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü hüüll üü aaaaa"$/;"	v	class:Snippet_With_Umlauts_Python
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü more text üü helloßß\\nüüüüend"$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü world üü helloßß\\nüüüüend"$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üü world üü more textßß\\nüüüüend"$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    wanted = "te üüüüüßßßßmore text"$/;"	v	class:Snippet_With_Umlauts_TypeOn
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    wanted = "ööuu success b"$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    wanted = 'Expand me"!'$/;"	v	class:Snippet_With_DoubleQuote
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Chars.py	/^    wanted = 'Expand me"!'$/;"	v	class:Snippet_With_DoubleQuote_List
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    wanted = "1 is a char"$/;"	v	class:Choices_MoreThan9Candidates_ShouldWaitForInputs
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    wanted = "1.a|2.c"$/;"	v	class:Choices_EmptyChoiceWillBeDiscarded
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    wanted = "1.red|2.gray"$/;"	v	class:Choices_WillBeExpandedToInlineSelection
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    wanted = "1.Русский язык|2.中文|3.한국어|4.öääö"$/;"	v	class:Choices_CanTakeNonAsciiCharacters
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    wanted = "3"$/;"	v	class:Choices_WillAbandonSelection_If_InputIsGreaterThanMaxSelectionIndex
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    wanted = "a is a char"$/;"	v	class:Choices_MoreThan9Candidates_ShouldTerminateWithSpace
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    wanted = "char"$/;"	v	class:Choices_WillAbandonSelection_If_CharTyped
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    wanted = "cyan is a color, mirror: cyan is a color"$/;"	v	class:Choices_With_Mirror_ContinueMirroring_EvenAfterSelectionDone
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    wanted = "cyan, mirror: cyan"$/;"	v	class:Choices_With_Mirror
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    wanted = "fun2(param1, param_end) result: fun2(param1, "$/;"	v	class:Choices_CanEscapeCommaInsideChoiceItem
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    wanted = "gray is color\\nline 2"$/;"	v	class:Choices_WilNotMessWithTabstopsAfterIt
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    wanted = "gray"$/;"	v	class:Choices_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    wanted = "input"$/;"	v	class:Choices_AsNestedElement_ShallNotTakeActionIfParentInput
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    wanted = "outer 1.foo|2.blah input"$/;"	v	class:Choices_AsNestedElement_CanBeTabbedThrough
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    wanted = "outer 1.foo|2.blah"$/;"	v	class:Choices_AsNestedElement_ShouldOverwriteDefaultText
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    wanted = "outer foo"$/;"	v	class:Choices_AsNestedElement_CanBeTabbedInto
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Choices.py	/^    wanted = "||"$/;"	v	class:Choices_WillNotExpand_If_ChoiceListIsEmpty
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Completion.py	/^    wanted = ($/;"	v	class:Completion_SimpleExample_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Completion.py	/^    wanted = COMPLETION_OPTIONS + "completion1 foo"$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Completion.py	/^    wanted = COMPLETION_OPTIONS + "foo completion1"$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "(2, 1)"$/;"	v	class:ContextSnippets_CursorIsZeroBased
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "1 1"$/;"	v	class:ContextSnippets_ContextIsClearedBeforeExpand
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "Yes No"$/;"	v	class:ContextSnippets_ContextHasAccessToVisual
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "abc"$/;"	v	class:ContextSnippets_ExpandOnTrue
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "abc"$/;"	v	class:ContextSnippets_Header_ExpandOnTrue
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "abc"$/;"	v	class:ContextSnippets_SimpleSnippet
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "adup" + EX + "\\n" + word + "[" + word + "]"$/;"	v	class:ContextSnippets_Before
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "b"$/;"	v	class:ContextSnippets_PriorityKeyword
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "e" + EX$/;"	v	class:ContextSnippets_ReportError
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "e" + EX$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "{ < a > }"$/;"	v	class:ContextSnippets_UseContext
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = keys$/;"	v	class:ContextSnippets_DoNotExpandOnFalse
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = keys$/;"	v	class:ContextSnippets_Header_DoNotExpandOnFalse
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = negative + EX + "HERE"$/;"	v	class:ContextSnippets_ContextHasAccessToReMatch
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    wanted = ""$/;"	v	class:Undo_CompletelyUndoSnippet
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    wanted = "AA BBB"$/;"	v	class:Backspace_TabStop_NotZero
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    wanted = "AA BBB"$/;"	v	class:Backspace_TabStop_Zero
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    wanted = "a b c\\na\\nb\\nc\\n\\nshallnot"$/;"	v	class:JumpForward_DefSnippet
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    wanted = "aaaaa()3333"$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    wanted = "end"$/;"	v	class:DeleteCurrentTabStop1_JumpBack
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    wanted = "first line\\n\\n\\ntest\\n\\n\\nthird line"$/;"	v	class:Undo_RemoveWholeSnippet
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    wanted = "hello upsi Hello\\naaa upsi bbb\\nWorld"$/;"	v	class:Undo_RemoveEditInTabstop
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    wanted = "hello"$/;"	v	class:DeleteLastTwoLinesInSnippet
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    wanted = "hello\\nend"$/;"	v	class:DeleteCurrentTabStop2_JumpBack
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    wanted = "hello\\nendworld"$/;"	v	class:DeleteCurrentTabStop3_JumpAround
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    wanted = "if :\\n\\t"$/;"	v	class:Undo_ChangesInPlaceholder
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    wanted = "if a: test"$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    wanted = "if:\\n\\t"$/;"	v	class:Undo_RemoveOneSnippetByTime2
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    wanted = "if:\\n\\ti"$/;"	v	class:Undo_RemoveOneSnippetByTime
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    wanted = "test"$/;"	v	class:DeleteSnippetInsertion1
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    wanted = "test"$/;"	v	class:Undo_RemoveMultilineSnippet
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Editing.py	/^    wanted = "world"$/;"	v	class:DeleteSnippetInsertion0
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!"$/;"	v	class:SimpleExpandExpandOrJump_Expand
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!"$/;"	v	class:SimpleExpandJumpOrExpand_Expand
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!"$/;"	v	class:SimpleExpand_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!\\nHallo We"$/;"	v	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!\\nHallo Welt!"$/;"	v	class:SimpleExpandTwice_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt!and again"$/;"	v	class:SimpleExpandTypeAfterExpand_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo Welt\\n\\nAnd more"$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    wanted = "Hallo \\n"$/;"	v	class:SimpleExpand_DoNotClobberDefaultRegister
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    wanted = "SimpleText" + EX$/;"	v	class:ExitSnippetModeAfterTabstopZero
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    wanted = "Wie Hallo Welt! gehts"$/;"	v	class:ExpandInTheMiddleOfLine_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    wanted = "Wie Hallo Welt!\\nUnd Wie gehts gehts"$/;"	v	class:MultilineExpand_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    wanted = "Wie Hallo Welt!\\nUnd Wie gehtsHuiui! gehts"$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    wanted = "hallo " + EX$/;"	v	class:DoNotExpandAfterSpace_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    wanted = "na du Hallo Welt!and blub"$/;"	v	class:SimpleExpandTypeAndDelete_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    wanted = "test foofoo"$/;"	v	class:SimpleExpandJumpOrExpand_Ambiguity
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    wanted = "testfoo foo foo"$/;"	v	class:SimpleExpandExpandOrJump_Ambiguity
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Expand.py	/^    wanted = r"\\Safe\\foo"$/;"	v	class:SimpleExpand_Issue1343
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    wanted = "  world hello;blub"$/;"	v	class:Bug1251994
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    wanted = "\\nblah\\nhello world "$/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    wanted = "\\t\\t\\tpadding: 2px"$/;"	v	class:VirtualEdit
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    wanted = "\\tfoo"$/;"	v	class:ShiftWidthZero
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    wanted = "foobar \\x00Expand me!"$/;"	v	class:NullByte_ExpandAfter
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    wanted = "foobar\\x00\\n"$/;"	v	class:NullByte_ListSnippets
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    wanted = "hello"$/;"	v	class:NonUnicodeDataInUnnamedRegister
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    wanted = "tex" + EX + "more\\nExpand me!"$/;"	v	class:PassThroughNonexecutedTrigger
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Fixes.py	/^    wanted = "yank HELLO world yank"$/;"	v	class:RetainsTheUnnamedRegister
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Folding.py	/^    wanted = "# hi  {{{\\n\\n# End: hi  }}}"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Folding.py	/^    wanted = "package c03;\\nsub junk {}\\n1;"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    wanted = "    for\\n        blahHui"$/;"	v	class:ProperIndenting_SimpleCase_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    wanted = "    hui\\n    blah"$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    wanted = "    huiblah"$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    wanted = "   Blaahblah \\t\\t  "$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    wanted = "   Something\\n        Hallo"$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    wanted = "#include <cstdlib>"$/;"	v	class:ProperIndenting_FirstLineInFileComplete_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    wanted = "#include <foo>"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Format.py	/^    wanted = ($/;"	v	class:FOSimple_Break_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "    hi 4 End"$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "    start b isbigger a end"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "##########\\nHallo Welt"$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "##########\\nHallo Welt"$/;"	v	class:PythonCode_ReferencePlaceholderBefore
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "$hi"$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "5"$/;"	v	class:Python_SnipRvCanBeNonText
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "Hallo now Hallo Welt endand more"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "Hallo now fromecho endand more"$/;"	v	class:TabStop_Shell_InDefValue_Leave
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "Hallo overwrite endand more"$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "OKAYhokayoOKAY"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "aaa"$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "bl-\\n\\tah, bah"$/;"	v	class:PythonCode_CanOverwriteTabstop
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "blah"$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "egal Hallo End"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hVhello\\nnice\\nworld\\nb"$/;"	v	class:PythonVisual_LineSelect_Simple
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hbabc"$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi Hallo End"$/;"	v	class:PythonCodeOld_SimpleExample
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi Hallo End"$/;"	v	class:PythonCode_SimpleExample
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi Hallo1\\nHallo2 End"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi Hallo1\\nHallo2\\nHallo3 End"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi New End"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi hallo you!and more"$/;"	v	class:TabStop_Shell_SimpleExample
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi hallo\\nWeiterand more"$/;"	v	class:TabStop_Shell_TextInNextLine
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi höüäh you!and more"$/;"	v	class:TabStop_Shell_WithUmlauts
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi" + 100 * "a" + "endups"$/;"	v	class:PythonCode_LongerTextThanSource_Chars
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hi" + 100 * "a" + 100 * "\\n" + 100 * "a" + "endups"$/;"	v	class:PythonCode_LongerTextThanSource_MultiLine
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hiEnd"$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "ho ho.blah End"$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "ho ho.blah End"$/;"	v	class:PythonCode_ReferencePlaceholder
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "hvblablubb"$/;"	v	class:PythonVisual_SelectOneWord
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "ups egal hi hi"$/;"	v	class:PythonCode_TrickyReferences
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = " BLAAH"$/;"	v	class:ListAllAvailable_SpaceInFront_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "BLAAH"$/;"	v	class:ListAllAvailable_NothingTyped_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "hallo BLAAH"$/;"	v	class:ListAllAvailable_testtyped_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "hallo TEST ONE"$/;"	v	class:ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "hallo qualleHi"$/;"	v	class:ListAllAvailable_NonDefined_NoExpectionShouldBeRaised
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "hallo test" + LS + "2\\n"$/;"	v	class:ListAllAvailable_Disabled_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = "} BLAAH"$/;"	v	class:ListAllAvailable_BraceInFront_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "    hallo\\nhallo\\nahallob\\nhallo\\ntest hallo mich"$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ObenVorne hallo welt ObenHinten\\nVorne hallo welt Hinten"$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "Vorne hallo test Hinten\\nhallo test"$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "Vorne hallo\\nhallo"$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "a a a"$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha blah hi hulla end hu hi hub hulla"$/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha blub blub"$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha blub blub.h"$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha defa\\ndefa"$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha default value default value\\nanother: default value mirror"$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin do snap stdin.h do snap"$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin overwritten"$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin snip stdin.h snip"$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin stdin.h stdin.c\\ntest stdin"$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha stdin stdinend"$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha world world\\nanother: world mirror"$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ha world\\nworld"$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hal\\nhal"$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "halhups\\nhalhups"$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo Du\\nAch Blah\\nhallo Du\\nAch Blah\\nhallo Du\\nAch Blah"$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo Du\\nHi\\n\\nhallo Du\\nHi\\n\\nhallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo Du\\nHi\\nhallo Du\\nHi\\nhallo Du\\nHi"$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo Hinten\\nhallo"$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo du hallo du hallo du hallo du"$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo foo hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo foo hallo foo"$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo hallo"$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo noauch ahiuch_end"$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo noauch auchih_end"$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo noauch hinoauch_end"$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo noauch noauchab_end"$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo welt\\nVorne hallo welt Hinten"$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo weltelt "$/;"	v	class:Mirror_TestKillTabstop_Kill
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo\\nVorne hallo"$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo\\nagain\\nhallo\\nagain"$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo\\nhallo Hinten"$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallo\\nhallo"$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallohallo "$/;"	v	class:SimpleMirrorSameLineNoSpaceInsideOtherSpaceAfter_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallohallo "$/;"	v	class:SimpleMirrorSameLineNoSpaceSpaceAfter_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallohallo"$/;"	v	class:SimpleMirrorSameLineNoSpaceInsideOther_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "hallohallo"$/;"	v	class:SimpleMirrorSameLineNoSpace_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "this is it this is it this is it"$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = "ups hallo hallo blah"$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Mirror.py	/^    wanted = ($/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    wanted = "<tr>\\n\\t<th>blah<\/th>\\n<\/tr>\\nend"$/;"	v	class:CursorMovement_BS_InEditMode
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab blub tab " + JF + "hallothis"$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab hallo tab this"$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab hallo tab this"$/;"	v	class:IMMoving_NoExiting_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab hallo this"$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello tab\\nblub this\\n" + JF + "testhallo"$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    wanted = "hello" + JF + "hallo tab blub this"$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    wanted = "text"$/;"	v	class:IMMoving_CursorsKeys_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    wanted = "thhallo\\nweltis thhallo\\nweltis"$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    wanted = ($/;"	v	class:CursorMovement_Multiline_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Movement.py	/^    wanted = JF + "hallo\\nhello tab\\nblub this"$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "Case1"$/;"	v	class:Multiple_SimpleCaseSelectFirst_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "Case2"$/;"	v	class:Multiple_SimpleCaseSelectSecond_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "Case2"$/;"	v	class:Multiple_SimpleCaseSelectTooHigh_ESelectLast
wanted	conf/vim/.vim/plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "testhi"$/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "testhi"$/;"	v	class:Multiple_SimpleCaseEscapeOut_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = "testhi"$/;"	v	class:Multiple_SimpleCaseSelectZero_EEscape
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is a test snippet!"$/;"	v	class:ParseSnippets_SimpleSnippet
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is a test."$/;"	v	class:ParseSnippets_MultiWord_Quotes
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is a test."$/;"	v	class:ParseSnippets_MultiWord_Simple
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is a test."$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is another test."$/;"	v	class:ParseSnippets_MultiWord_Description
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "This is yet another test."$/;"	v	class:ParseSnippets_MultiWord_Description_Option
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "abc az test"$/;"	v	class:ParseSnippets_MultiWord_RE1
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "foo-bar test bar\\t\\nfoo-bar test"$/;"	v	class:ParseSnippets_MultiWord_RE2
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "re-test"$/;"	v	class:ParseSnippets_MultiWord_RE3
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_ClearAll
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine1
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_MissingEndSnippet
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "testsnip" + EX$/;"	v	class:ParseSnippets_UnknownDirective
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "toclear" + EX + "\\n" + "This is a test."$/;"	v	class:ParseSnippets_ClearOne
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "toclear" + EX + "\\n" + "testsnip" + EX$/;"	v	class:ParseSnippets_ClearTwo
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "x a bob b y\\nx a jon b y"$/;"	v	class:ParseSnippets_Global_Python
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "x a bob b y\\nx a jon b y"$/;"	v	class:ParseSnippets_Global_Python_After
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = "x first a bob b y"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_MultiWord_NoContainer
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippet
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintPythonStacktrace
wanted	conf/vim/.vim/plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Plugin.py	/^    wanted = "longtextlongtext\\nlongtextlongtext\\nHello"$/;"	v	class:Plugin_SuperTab_SimpleTest
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A A AB B C CD D DE E B hi"$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A A C CD D DE E B again B hi"$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A C CD D DE E B hi"$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A C CD D DE E B"$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "A C CD D DE E B"$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\n    M START\\n        hi\\n    M END -> hallo\\n" "M END -> end"$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\n    M START\\n        hi\\n    M END\\nM END"$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\n    M START\\n    hi\\n    M END\\nM END"$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\n    hallo M START\\n    hi\\n    M END\\nM END"$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "M START\\nM START\\n\\nM END\\nM END"$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ ASnip Hallo ASnip Hi ASnipendone two ] ASnip Hallo ASnip Hi ASnipendonetotalend"$/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ JST  JSThi ]end"$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ JST JSThi  two ]end"$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ Just some Texthi  two ]end"$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ [ a sec ] hallo ]ups world ]end"$/;"	v	class:RecTabStops_LeavingInnerInner_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ [ a sec ] sec ] hallo ]end"$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ a hallo ]ups world ]end"$/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ a sec ] hallo ]world"$/;"	v	class:RecTabStops_LeavingInner_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ hello  sec ]  world ]end"$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ hello  world ]  sec ]end"$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ hello  world ]ups  end ]"$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ one three three two ] four ]end"$/;"	v	class:RecTabStops_MirroredZeroTS_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ [ one three two ] four ]end"$/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ hello [ hi  two ]ups  three ]end"$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ hello\\n[ hi  two ]ups  three ]end"$/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = "[ hello\\nhello again [ hi  two ]ups  three ]end"$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = ($/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = r"\\vec{\\frac{a}\\frac{aa}cc{two}{b}}hello \\frac{one}world{two}"$/;"	v	class:RecTabsStops_TypeInZero_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = r"_hello _world _end"$/;"	v	class:RecTabsStops_TypeInZero2_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Recursive.py	/^    wanted = r"oneoneexplicit zerotwotwo"$/;"	v	class:RecTabsStops_BackspaceZero_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    wanted = "Hello"$/;"	v	class:SelectModeMappings_BufferLocalMappings_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    wanted = "Hello"$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    wanted = "Hello"$/;"	v	class:SelectModeMappings_RemoveBeforeSelecting_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    wanted = "Hello"$/;"	v	class:_SelectModeMappings
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    wanted = "huiw ui"$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    wanted = "huiw ui"$/;"	v	class:OldSelection_SimpleTabstop_Test
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    wanted = "xello"$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    wanted = "xello"$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Selection.py	/^    wanted = "xello"$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "This is a stand alone snippet\\nThis is two stand alone snippet\\nThree"$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "This is a test snippet"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "This is a test snippet\\n# With a comment"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "blah"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "blub is blah"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "blub is blub, blah is blah"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "blub\\n\\nblah\\n"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "for (j; j < blub; blub++) {\\n\\thi\\n}"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "h$${2:blub}$$hi"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "hblablubb"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "hello" + EX + "\\nworked"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "hello" + EX$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "lac03lu"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "laöäülu"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "os.\\tfoo\\nself."$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "two"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = "ultisnips"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnipMate.py	/^    wanted = r"$\\frac{num}{denom} blub"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "1: 1\\n2"$/;"	v	class:SnippetActions_PostActionModifiesLineAfterSnippet
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "[(1)2"$/;"	v	class:SnippetActions_PostActionModifiesCharAfterSnippet
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "\\nabc"$/;"	v	class:SnippetActions_PreActionModifiesBuffer
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "abc\\n"$/;"	v	class:SnippetActions_PostActionModifiesBuffer
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = "def123"$/;"	v	class:SnippetActions_DoNotBreakCursorOnSingleLikeChange
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "   Expand me!"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "   Expand me!"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "  Expand me!"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "  Expand me!"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "  \\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET_Leading_Spaces
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "  \\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_Leading_Spaces
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = " .a" + EX$/;"	v	class:SnippetOptions_Regex_Self_TextAfter
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = " self."$/;"	v	class:SnippetOptions_Regex_Self_Space
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "$Expand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "-Expand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWordSnippet_Simple
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_NormalExpand
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_Expand
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_Multiple
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "Expand me!"$/;"	v	class:SnippetOptions_Regex_WithSpace
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "[[Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix3
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET_SW
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_ET_SW_TS
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_No_TS
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_Simple
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "\\t\\t\\tExpand\\tme!\\t"$/;"	v	class:No_Tab_Expand_Leading_Tabs
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a not at beginning"$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a not at beginning"$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a test it" + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a test" + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a(Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix2
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a-Expand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a-Expand me!"$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "a." + EX$/;"	v	class:SnippetOptions_Regex_Self_TextBefore
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "aExpand me!"$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "aExpand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "abc test Expand me!"$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "atest it" + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "atest" + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NoExpand
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "self."$/;"	v	class:SnippetOptions_Regex_Self_Start
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "test No match"$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "test fedcab"$/;"	v
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = "ßßExpand me!"$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "Hallo"$/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "Should only expand in p.\\ntest" + EX$/;"	v	class:SnippetPriorities_ClearedByChild
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "This is a test snippet"$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "This is a test snippet"$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "We overwrite"$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "We overwrite"$/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "We overwrite"$/;"	v	class:SnippetPriorities_OverwriteExisting
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "We overwrite\\nNo overwrite"$/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "again"$/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "test" + EX$/;"	v	class:SnippetPriorities_ClearedByParent
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "test" + EX$/;"	v	class:SnippetPriorities_SimpleClear
wanted	conf/vim/.vim/plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = "test" + EX$/;"	v	class:SnippetPriorities_SimpleClear2
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "${1:literal}"$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "'Hallo': 'Hallo' Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "'Hallo': 'Hallo' Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = ":latex:`Hello`World"$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Hallo haselnhipsut upsend"$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Hallo: Hallo "$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Test: blub\\nTrailing texthello"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Test: snippet start\\nNested tabstop: hello\\nsnippet end\\nTrailing text"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "This \\\\ is a backslash!"$/;"	v	class:TabStop_EscapingChars_Backslash
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "[ HelloWorld ] Hello"$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "\\n${1:literal}"$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "a${1:literal}"$/;"	v	class:TabStop_EscapingCharsDollars1
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "each_byte { |byte| Blah }"$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "echo Hallo"$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Blah Lets replace it again" + JB * 2 + JF$/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Blah mitteLets replace it again" + JB * 2 + JF$/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Du Nase na"$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Hi" + 2 * JF + "du Test"$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Nase a small feed"$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Nase a small feed"$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Test Hi"$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo Test mitte BeginningHi"$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hallo na Du Nase"$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi  Nothing  Nothing world"$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi Blah Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi Hallo "$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi Nothing Nothing world"$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi Nothing world"$/;"	v	class:TabStop_Multiline_Overwrite
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi first line\\nsecond line first line\\nsecond line world"$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi first line\\nsecond line world"$/;"	v	class:TabStop_Multiline_Leave
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi this Hallo Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi this Hallo Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi this second Hallo Ende"$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hi this second second"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hisnip "$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hisnip default"$/;"	v	class:TabStopEscapingWhenSelected_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "hisnip i"$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "ia(1, 2) after: 3"$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "ia(1, 2) after: 3"$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "nothing ship hups"$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "snip $0 $hi end"$/;"	v	class:TabStop_EscapingCharsDollars
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "snip ` literal"$/;"	v	class:TabStop_EscapingCharsBackticks
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "test run"$/;"	v	class:TabStop_Exit_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "tt\\nt{\\n\\tt\\n}"$/;"	v	class:TabStop_CROnlyOnSelectedNear
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = "usage: `basename $0` [ -u -v -d ]"$/;"	v	class:TabStop_EscapingChars_RealLife
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = ($/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = r"These are two backslashes \\\\ done"$/;"	v	class:TabStop_EscapingChars_Backslash3
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = r"This is a backslash \\ done"$/;"	v	class:TabStop_EscapingChars_Backslash2
wanted	conf/vim/.vim/plugged/ultisnips/test/test_TabStop.py	/^    wanted = r"\\hello{world}"$/;"	v	class:TabStop_EscapingChars_Backslash4
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "* test\\n* test\\n* test"$/;"	v	class:Transformation_OptionMultiline_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "HALLO hallo"$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "Hallo hallo"$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "SomE tExt SOME TEXT \\nsome text "$/;"	v	class:Transformation_MultipleTransformations_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "TEST blah"$/;"	v	class:Transformation_OptionIgnoreCase_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a b  c d e f ghhh h oha a b  c d e f ghhh h..."$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a some more text began with an a"$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a some yes"$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a, nice,   building a, nice, building"$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "a, nice, building a-nice-building"$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "aa yes:no)"$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "aa yes\\\\"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "ab no\\\\"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "b some no"$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "dead parrot this parrot is a bit dead"$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "foo boo aoo foo bull aoo"$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo "$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo "$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo .\\nhallo- >\\nhallo-> "$/;"	v	class:Transformation_ConditionalInConditional_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo HALLO"$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo Hallo"$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo batzl hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo batzl hallo foo"$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo foo boy hallo batzl boy"$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo hallo"$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo is somethingb"$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo is somethingmore"$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo noAUCH ahiuchauch_end"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo noAUCH auchauchih_end"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo noAUCH hinoauchnoauch_end"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "hallo noAUCH noauchnoauchab_end"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "snip  "$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "snip  m2  hi"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "snip m1  hi "$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "snip matched hallo"$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "sometext defined sometext"$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "sometext overwrite"$/;"	v	class:Transformation_InsideTabOvertype_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "test, hallo test\\nhallo"$/;"	v	class:Transformation_CINewlines_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "test, hallo test\\thallo"$/;"	v	class:Transformation_CITabstop_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "test, halul test, ha(ul)"$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "éèàçôïÉÈÀÇÔÏ€ eeacoiEEACOIEUR"$/;"	v	class:Transformation_SimpleCaseAsciiResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Transformation.py	/^    wanted = "éèàçôïÉÈÀÇÔÏ€ eeacoieeacoieur"$/;"	v	class:Transformation_LowerCaseAsciiResult
wanted	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "abc simple expand"$/;"	v	class:AddFunc_Simple
wanted	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "blumba" + EX + "\\n" + "this is a dynamic snippet" + "\\n" + "blumba" + EX$/;"	v	class:AddNewSnippetSource
wanted	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "simple expand"$/;"	v	class:AddFunc_Opt
wanted	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "te'123êabc"$/;"	v	class:VerifyVimDict3
wanted	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "test41123'êabc0"$/;"	v	class:VerifyVimDict1
wanted	conf/vim/.vim/plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = 'te"123êabc'$/;"	v	class:VerifyVimDict2
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "\\tbhlablbub"$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "beg\\n\\t    hello\\n\\t    nice\\n\\t\\tworld\\nend"$/;"	v	class:Visual_LineSelect_CheckIndentTwice
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "beg\\n\\thello\\n\\tnice\\n\\tworld\\n\\tsuper\\nenddone"$/;"	v	class:Visual_LineSelect_WithTabStop
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "beg\\n\\thello\\n\\tnice\\n\\tworld\\nend"$/;"	v	class:Visual_LineSelect_CheckIndentSimple
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "beg\\n\\thello\\n\\tnice\\n\\tworld\\nend"$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "bhlablubb"$/;"	v	class:Visual_SelectOneWord_Inword
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "bla hblub\\n  hellobi"$/;"	v	class:Visual_CrossOneLine
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hBLABLUBb"$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hBLABLUBb"$/;"	v	class:VisualTransformation_SelectOneWord
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hHELLO\\n NICE\\n WORLDb"$/;"	v	class:VisualTransformation_LineSelect_Simple
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hWORLDbhi"$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "h\/\/ bodybhi"$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbabc"$/;"	v	class:Visual_NoVisualSelection_Ignore
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbefHELLO\\n    NICE\\n    WORLDaftbhi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbefhello\\n    nice\\n    worldaftbhi"$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbeforeaaahello\\n\\t  nice\\n\\t  worldaftbhi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hbeforeahello\\n\\tnice\\n\\tworldaftbhi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablub\\nb"$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubb"$/;"	v	class:VisualWithDefault_ExpandWithVisual
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubb"$/;"	v	class:Visual_SelectOneWord
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubb\\nhb"$/;"	v	class:Visual_ExpandTwice
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubbblabluba"$/;"	v	class:Visual_SelectOneWord_TwiceVisual
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hblablubbhello"$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hello\\n\\t hello\\n\\t nice\\n\\t world\\nendhi"$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hhello\\n nice\\n worldb"$/;"	v	class:Visual_LineSelect_Simple
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hhellob"$/;"	v	class:Visual_InDefaultText_SelectOneWord
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hjupbhi"$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hjupbhi"$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hnblablub\\nmmmbdone"$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hupsbhi"$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "hworldbhi"$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "if {\\n\\tif {\\n\\t\\tone\\n\\t\\ttwo\\n\\t}\\n\\tthree\\n}"$/;"	v	class:Visual_LineSelect_DedentLine
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "xxxhyyybyxxx"$/;"	v	class:Visual_SelectOneWordExclusive
wanted	conf/vim/.vim/plugged/ultisnips/test/test_Visual.py	/^    wanted = "xxxhyyyybxxx"$/;"	v	class:Visual_SelectOneWordInclusive
wanted	conf/vim/.vim/plugged/ultisnips/test/vim_test_case.py	/^    wanted = ""$/;"	v	class:VimTestCase
warn	conf/vim/.vim/autoload/plug.vim	/^function! s:warn(cmd, msg)$/;"	f
warn	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    warn = warning$/;"	v	class:LoggingMixin
warn	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:warn(message)$/;"	f
warn	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim/ipc.vim	/^function! s:warn(message)$/;"	f
warn_empty	workflows/Ariafred/src/workflow/workflow3.py	/^    def warn_empty(self, title, subtitle=u'', icon=None):$/;"	m	class:Workflow3
warn_stale	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:warn_stale(filename) abort$/;"	f
warn_when_stale	conf/vim/.vim/plugged/vim-go/autoload/go/debug.vim	/^function! s:warn_when_stale(filename) abort$/;"	f
warning	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def warning(self, msg: str,$/;"	m	class:LoggingMixin
watch_list	workflows/Ariafred/src/notifier.py	/^    watch_list = []$/;"	v
wd_add	conf/zsh/.oh-my-zsh/plugins/wd/wd.sh	/^wd_add()$/;"	f
wd_addcd	conf/zsh/.oh-my-zsh/plugins/wd/wd.sh	/^wd_addcd() {$/;"	f
wd_browse	conf/zsh/.oh-my-zsh/plugins/wd/wd.sh	/^wd_browse() {$/;"	f
wd_browse_widget	conf/zsh/.oh-my-zsh/plugins/wd/wd.sh	/^wd_browse_widget() {$/;"	f
wd_clean	conf/zsh/.oh-my-zsh/plugins/wd/wd.sh	/^wd_clean() {$/;"	f
wd_exit_fail	conf/zsh/.oh-my-zsh/plugins/wd/wd.sh	/^wd_exit_fail()$/;"	f
wd_exit_warn	conf/zsh/.oh-my-zsh/plugins/wd/wd.sh	/^wd_exit_warn()$/;"	f
wd_export_static_named_directories	conf/zsh/.oh-my-zsh/plugins/wd/wd.sh	/^wd_export_static_named_directories() {$/;"	f
wd_getdir	conf/zsh/.oh-my-zsh/plugins/wd/wd.sh	/^wd_getdir()$/;"	f
wd_list_all	conf/zsh/.oh-my-zsh/plugins/wd/wd.sh	/^wd_list_all()$/;"	f
wd_ls	conf/zsh/.oh-my-zsh/plugins/wd/wd.sh	/^wd_ls()$/;"	f
wd_path	conf/zsh/.oh-my-zsh/plugins/wd/wd.sh	/^wd_path()$/;"	f
wd_print_msg	conf/zsh/.oh-my-zsh/plugins/wd/wd.sh	/^wd_print_msg()$/;"	f
wd_print_usage	conf/zsh/.oh-my-zsh/plugins/wd/wd.sh	/^wd_print_usage()$/;"	f
wd_remove	conf/zsh/.oh-my-zsh/plugins/wd/wd.sh	/^wd_remove()$/;"	f
wd_restore_buffer	conf/zsh/.oh-my-zsh/plugins/wd/wd.sh	/^wd_restore_buffer() {$/;"	f
wd_show	conf/zsh/.oh-my-zsh/plugins/wd/wd.sh	/^wd_show()$/;"	f
wd_warp	conf/zsh/.oh-my-zsh/plugins/wd/wd.sh	/^wd_warp()$/;"	f
wd_yesorno	conf/zsh/.oh-my-zsh/plugins/wd/wd.sh	/^wd_yesorno()$/;"	f
web-beautify/init-web-beautify	conf/emacs/.emacs.d/layers/+tools/web-beautify/packages.el	/^(defun web-beautify\/init-web-beautify ()$/;"	f
web-fmt-tool	conf/emacs/.emacs.d/layers/+lang/html/config.el	/^(defvar web-fmt-tool 'web-beautify$/;"	f
web_search	conf/zsh/.oh-my-zsh/plugins/web-search/web-search.plugin.zsh	/^function web_search() {$/;"	f
webtraffic	conf/zsh/.oh-my-zsh/plugins/systemadmin/systemadmin.plugin.zsh	/^function webtraffic() {$/;"	f
wf	workflows/Ariafred/src/aria.py	/^    wf = Workflow3(default_settings=defaults, update_settings=update_settings)$/;"	v
wf	workflows/Ariafred/src/aria_actions.py	/^    wf = Workflow3()$/;"	v
wf	workflows/Ariafred/src/notifier.py	/^    wf = Workflow3()$/;"	v
wf	workflows/Ariafred/src/workflow/background.py	/^def wf():$/;"	f
wf	workflows/Ariafred/src/workflow/notify.py	/^def wf():$/;"	f
wf	workflows/Ariafred/src/workflow/update.py	/^def wf():$/;"	f
wfilter	conf/zsh/.oh-my-zsh/plugins/aliases/cheatsheet.py	/^    wfilter = " ".join(args.filter) or None$/;"	v
whisper-packages	conf/emacs/.emacs.d/layers/+web-services/whisper/packages.el	/^(defconst whisper-packages$/;"	f
whisper/init-whisper	conf/emacs/.emacs.d/layers/+web-services/whisper/packages.el	/^(defun whisper\/init-whisper ()$/;"	f
whitespace	conf/vim/.vim/plugged/vim-go/test/parse.go	/^const whitespace = " \\t\\r\\n\\f"$/;"	c
whitespaceOrNUL	conf/vim/.vim/plugged/vim-go/test/parse.go	/^const whitespaceOrNUL = whitespace + "\\x00"$/;"	c
wikipedia	conf/emacs/.emacs.d/layers/+tools/eaf/funcs.el	/^(defun wikipedia ()$/;"	f
win_execute	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:win_execute(winid, cmd, ...) abort$/;"	f
win_setview	conf/vim/.vim/plugged/coc.nvim/autoload/coc/float.vim	/^function! s:win_setview(winid, topline, lnum) abort$/;"	f
win_tabnr	conf/vim/.vim/plugged/coc.nvim/autoload/coc/api.vim	/^function! s:win_tabnr(winid) abort$/;"	f
window-coords	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-fns.el	/^(defun window-coords (&optional position)$/;"	f
window-mgr-title-bar-pixel-height	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/frame-cmds.el	/^(defcustom window-mgr-title-bar-pixel-height (cond ((eq window-system 'mac) 22)$/;"	f
window-purpose--dedicated-windows	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-purpose/config.el	/^(defvar window-purpose--dedicated-windows nil)$/;"	f
windows-scripts-packages	conf/emacs/.emacs.d/layers/+lang/windows-scripts/packages.el	/^(defconst windows-scripts-packages$/;"	f
windows-scripts/bat-outline	conf/emacs/.emacs.d/layers/+lang/windows-scripts/funcs.el	/^(defun windows-scripts\/bat-outline ()$/;"	f
windows-scripts/init-bat-mode	conf/emacs/.emacs.d/layers/+lang/windows-scripts/packages.el	/^(defun windows-scripts\/init-bat-mode()$/;"	f
windows-scripts/init-bmx-mode	conf/emacs/.emacs.d/layers/+lang/windows-scripts/packages.el	/^(defun windows-scripts\/init-bmx-mode()$/;"	f
windows-scripts/init-powershell	conf/emacs/.emacs.d/layers/+lang/windows-scripts/packages.el	/^(defun windows-scripts\/init-powershell ()$/;"	f
windows-scripts/post-init-company	conf/emacs/.emacs.d/layers/+lang/windows-scripts/packages.el	/^(defun windows-scripts\/post-init-company ()$/;"	f
windows-scripts/post-init-counsel-gtags	conf/emacs/.emacs.d/layers/+lang/windows-scripts/packages.el	/^(defun windows-scripts\/post-init-counsel-gtags nil)$/;"	f
windows-scripts/post-init-ggtags	conf/emacs/.emacs.d/layers/+lang/windows-scripts/packages.el	/^(defun windows-scripts\/post-init-ggtags ()$/;"	f
windows_sink	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:windows_sink(line)$/;"	f
winjobarg	conf/vim/.vim/plugged/vim-go/autoload/go/job.vim	/^function! s:winjobarg(idx, val) abort$/;"	f
winner-mode-map	conf/emacs/.spacemacs.d/load.d/keybindings.el	/^(define-key winner-mode-map [remap magit-diff-visit-file] 'magit-diff-visit-file-other-window)$/;"	f
winner-mode-map	conf/emacs/.spacemacs.d/load.d/keybindings.el	/^(define-key winner-mode-map [remap magit-diff-visit-worktree-file] 'magit-diff-visit-worktree-file-other-window)$/;"	f
winpath	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:winpath(path)$/;"	f
winshell	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:winshell()$/;"	f
with_cd	conf/vim/.vim/autoload/plug.vim	/^function! s:with_cd(cmd, dir, ...)$/;"	f
with_history	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/spec/spec_helper.rb	/^  def with_history(*commands, &block)$/;"	f
with_history	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/spec/spec_helper.rb	/^  def with_history(*commands, &block)$/;"	f
within	conf/vim/.vim/plugged/vim-go/autoload/go/lsp.vim	/^function! s:within(range, line, character) abort$/;"	f
wjst	conf/zsh/.oh-my-zsh/plugins/juju/juju.plugin.zsh	/^wjst() {$/;"	f
word	conf/vim/.vim/plugged/ultisnips/test/test_ContextSnippets.py	/^    word = "Süßölgefäß"$/;"	v	class:ContextSnippets_Before
work	conf/vim/.vim/plugged/vim-go/autoload/go/promise_test.vim	/^func! s:work(val, timer)$/;"	f
work_in_progress	conf/zsh/.oh-my-zsh/plugins/git/git.plugin.zsh	/^function work_in_progress() {$/;"	f
workflowdir	workflows/Ariafred/src/workflow/workflow.py	/^    def workflowdir(self):$/;"	m	class:Workflow
workflowfile	workflows/Ariafred/src/workflow/workflow.py	/^    def workflowfile(self, filename):$/;"	m	class:Workflow
workon_cwd	conf/zsh/.oh-my-zsh/plugins/virtualenvwrapper/virtualenvwrapper.plugin.zsh	/^  function workon_cwd {$/;"	f
workspaceFolder	conf/vim/.vim/plugged/vim-go/autoload/go/lsp/message.vim	/^function! s:workspaceFolder(key, val) abort$/;"	f
wrap	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:wrap(name, opts, bang)$/;"	f
wrap	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^def wrap(func):$/;"	f
wrap_clipboard_widgets	conf/zsh/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh	/^function wrap_clipboard_widgets() {$/;"	f
wrap_cmds	conf/vim/.vim/autoload/plug.vim	/^  function! s:wrap_cmds(cmds)$/;"	f
wrapped	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^  let wrapped['sink*'] = remove(wrapped, 'newsink')$/;"	v
wrapper	conf/vim/.vim/plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def wrapper(self,  # type: ignore$/;"	f	function:logmethod
wrapper	conf/vim/.vim/plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^    def wrapper(self, *args, **kwds):$/;"	f	function:wrap
wrapper	conf/vim/.vim/plugged/vim-go/autoload/go/promise.vim	/^function! s:wrapper(fn, default, ...) dict$/;"	f
wrapper	workflows/Ariafred/src/workflow/workflow.py	/^            def wrapper():$/;"	f	function:Workflow._register_default_magic.callback
write	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/_main.py	/^    def write(self, line):$/;"	m	class:RedirectStream
write_buffer	conf/vim/.vim/plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:write_buffer(bufnr, file)$/;"	f
write_out	conf/vim/.vim/plugged/vim-go/autoload/go/tags.vim	/^func s:write_out(out) abort$/;"	f
write_store	conf/zsh/.oh-my-zsh/.github/workflows/dependencies/updater.py	/^    def write_store(file: str, data: DependencyYAML):$/;"	m	class:DependencyStore
write_temp	conf/vim/.vim/plugged/ultisnips/test/vim_interface.py	/^    def write_temp(self, file_path, content):$/;"	m	class:TempFileManager
writelines	conf/vim/.vim/plugged/deoplete.nvim/autoload/deoplete/_main.py	/^    def writelines(self, lines):$/;"	m	class:RedirectStream
writer	conf/emacs/.emacs.d/layers/+lang/python/local/pylookup/pylookup.py	/^        def writer(e):$/;"	f	function:update
wvdiw	conf/vim/.vim/plugged/vim-operator-user/t/example-d-motion-type.vim	/^    normal wvdiw$/;"	m
wvdj	conf/vim/.vim/plugged/vim-operator-user/t/example-d-motion-type.vim	/^    normal wvdj$/;"	m
x	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        map x <Plug>(operator-clang-format)$/;"	m
xa{	conf/vim/.vim/plugged/vim-clang-format/test/t/clang_format_spec.vim	/^        normal xa{$/;"	m
xc	conf/zsh/.oh-my-zsh/plugins/xcode/xcode.plugin.zsh	/^function xc {$/;"	f
xclipboard-copy-command	conf/emacs/.emacs.d/layers/+tools/xclipboard/config.el	/^(defvar xclipboard-copy-command nil$/;"	f
xclipboard-enable-cliphist	conf/emacs/.emacs.d/layers/+tools/xclipboard/config.el	/^(defvar xclipboard-enable-cliphist nil$/;"	f
xclipboard-packages	conf/emacs/.emacs.d/layers/+tools/xclipboard/packages.el	/^(defconst xclipboard-packages$/;"	f
xclipboard-paste-command	conf/emacs/.emacs.d/layers/+tools/xclipboard/config.el	/^(defvar xclipboard-paste-command nil$/;"	f
xclipboard/init-cliphist	conf/emacs/.emacs.d/layers/+tools/xclipboard/packages.el	/^(defun xclipboard\/init-cliphist ()$/;"	f
xclipboard/init-spacemacs-xclipboard	conf/emacs/.emacs.d/layers/+tools/xclipboard/packages.el	/^(defun xclipboard\/init-spacemacs-xclipboard ()$/;"	f
xcselv	conf/zsh/.oh-my-zsh/plugins/xcode/xcode.plugin.zsh	/^function xcselv {$/;"	f
xkcd/init-xkcd	conf/emacs/.emacs.d/layers/+fun/xkcd/packages.el	/^(defun xkcd\/init-xkcd ()$/;"	f
xx	conf/zsh/.oh-my-zsh/plugins/xcode/xcode.plugin.zsh	/^function xx {$/;"	f
yaml-enable-lsp	conf/emacs/.emacs.d/layers/+lang/yaml/config.el	/^(defvar yaml-enable-lsp nil$/;"	f
yaml-packages	conf/emacs/.emacs.d/layers/+lang/yaml/packages.el	/^(defconst yaml-packages '(company$/;"	f
yaml/init-yaml-mode	conf/emacs/.emacs.d/layers/+lang/yaml/packages.el	/^(defun yaml\/init-yaml-mode ()$/;"	f
yaml/post-init-company	conf/emacs/.emacs.d/layers/+lang/yaml/packages.el	/^(defun yaml\/post-init-company ()$/;"	f
yaml/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/yaml/packages.el	/^(defun yaml\/post-init-flycheck ()$/;"	f
yang-pyang-extra-args	conf/emacs/.emacs.d/layers/+lang/yang/config.el	/^(defvar yang-pyang-extra-args nil$/;"	f
yang-pyang-rules	conf/emacs/.emacs.d/layers/+lang/yang/config.el	/^(defvar yang-pyang-rules "lint"$/;"	f
yang/init-yang-mode	conf/emacs/.emacs.d/layers/+lang/yang/packages.el	/^(defun yang\/init-yang-mode ()$/;"	f
yang/post-init-company	conf/emacs/.emacs.d/layers/+lang/yang/packages.el	/^(defun yang\/post-init-company ()$/;"	f
yang/post-init-flycheck	conf/emacs/.emacs.d/layers/+lang/yang/packages.el	/^(defun yang\/post-init-flycheck ()$/;"	f
yank_to_register	conf/vim/.vim/plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:yank_to_register(data)$/;"	f
youtube	conf/emacs/.emacs.d/layers/+tools/eaf/funcs.el	/^(defun youtube ()$/;"	f
zbell_begin	conf/zsh/.oh-my-zsh/plugins/zbell/zbell.plugin.zsh	/^zbell_begin() {$/;"	f
zbell_end	conf/zsh/.oh-my-zsh/plugins/zbell/zbell.plugin.zsh	/^zbell_end() {$/;"	f
zbell_notify	conf/zsh/.oh-my-zsh/plugins/zbell/zbell.plugin.zsh	/^zbell_notify() {$/;"	f
zbell_ui_notify	conf/zsh/.oh-my-zsh/plugins/zbell/zbell.plugin.zsh	/^zbell_ui_notify() {$/;"	f
zemacs--links	conf/emacs/.emacs.d/core/aprilfool/zemacs.el	/^(defvar zemacs--links '(("this one" "http:\/\/neovim.io")$/;"	f
zemacs-buffer-mode	conf/emacs/.emacs.d/core/aprilfool/zemacs.el	/^(define-minor-mode zemacs-buffer-mode$/;"	f
zemacs//insert-links	conf/emacs/.emacs.d/core/aprilfool/zemacs.el	/^(defun zemacs\/\/insert-links ()$/;"	f
zig-backend	conf/emacs/.emacs.d/layers/+lang/zig/config.el	/^(defvar zig-backend (if (configuration-layer\/layer-used-p 'lsp) 'lsp 'zig-mode)$/;"	f
zig-packages	conf/emacs/.emacs.d/layers/+lang/zig/packages.el	/^(defconst zig-packages$/;"	f
zig/init-zig-mode	conf/emacs/.emacs.d/layers/+lang/zig/packages.el	/^(defun zig\/init-zig-mode ()$/;"	f
zle	conf/zsh/.oh-my-zsh/lib/key-bindings.zsh	/^  function zle-line-finish() {$/;"	f
zle	conf/zsh/.oh-my-zsh/lib/key-bindings.zsh	/^  function zle-line-init() {$/;"	f
zle	conf/zsh/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh	/^function zle-keymap-select() {$/;"	f
zle	conf/zsh/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh	/^function zle-line-finish() {$/;"	f
zle	conf/zsh/.oh-my-zsh/plugins/vi-mode/vi-mode.plugin.zsh	/^function zle-line-init() {$/;"	f
zoom	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/zoom-frm.el	/^(defgroup zoom nil$/;"	f
zoom-all-frames-in	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/zoom-frm.el	/^(defun zoom-all-frames-in (&optional flip)$/;"	f
zoom-all-frames-out	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/zoom-frm.el	/^(defun zoom-all-frames-out (&optional flip)$/;"	f
zoom-frame/buffer	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/zoom-frm.el	/^(defvar zoom-frame\/buffer) ;; Defined here for Emacs 22+.$/;"	f
zoom-frm-in	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/zoom-frm.el	/^(defun zoom-frm-in (&optional frame flip)$/;"	f
zoom-frm-out	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/zoom-frm.el	/^(defun zoom-frm-out (&optional frame flip)$/;"	f
zoom-frm-unzoom	conf/emacs/.emacs.d/layers/+spacemacs/spacemacs-visual/local/zoom-frm/zoom-frm.el	/^(defun zoom-frm-unzoom (&optional frame)$/;"	f
zsh_stats	conf/zsh/.oh-my-zsh/lib/functions.zsh	/^function zsh_stats() {$/;"	f
zsh_version	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/spec/terminal_session.rb	/^  def zsh_version$/;"	f	class:TerminalSession
zsh_version	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/spec/terminal_session.rb	/^  def zsh_version$/;"	f	class:TerminalSession
zshexit	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/src/strategies/completion.zsh	/^		zshexit() {$/;"	f
zshexit	conf/zsh/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh	/^		zshexit() {$/;"	f
zshexit	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/src/strategies/completion.zsh	/^		zshexit() {$/;"	f
zshexit	conf/zsh/.oh-my-zsh/custom/zsh-autosuggestions/zsh-autosuggestions.zsh	/^		zshexit() {$/;"	f
zshz	conf/zsh/.oh-my-zsh/plugins/z/z.plugin.zsh	/^zshz() {$/;"	f
zshz_cd	conf/zsh/.oh-my-zsh/plugins/z/z.plugin.zsh	/^  zshz_cd() {$/;"	f
